<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>感 | 理性, 试论善恶</title>
      <link href="/posts/440b3fc6/"/>
      <url>/posts/440b3fc6/</url>
      
        <content type="html"><![CDATA[<blockquote><p>秋天第一道月光 / 射在窗上 / 震颤玻璃。 第一阵秋风袭来 / 一大群叶子 / 逃进我房间里避难。 —— 阿巴斯 from MONO 海报</p></blockquote><ol type="1"><li>何以为恶: 我相信, 世间可悲之事多非本着恶的意愿所为, 大逆不道者亦有其道.</li><li>何以分善恶? 结果论之外, 善恶本质何在, 行动的动机, 思维的起源?</li><li>善的意愿/本能: 乃至罪大恶极者, 估计也有着善的意愿; 但意愿不等于结果 (论断的结果, 大概多是妥协的合理性).</li><li>边界: 至少, 起初的善的意愿有其边界, 所谓「差序格局」, 对于遥远不可设想世界的同理心的天然缺失.</li><li>多样性: 所以边界仅在一念. 模糊性是天然存在的, 评价的权利不等于事实的边界. 善的多样性塑造了恶的多样性.</li><li>伪善: 既然善的共识和善的评价本身存疑, 何来「伪善」? 真诚可贵, 身心合一, 善恶存乎己. 欲念与行动的分离, 纲常对常识的规训, 是为伪善.</li><li>动机: 善的动机何在? 支撑前行的动力. 合理化, 自我合理化. 虽然不可否认受道德的约束, 但规训一定是自我的.</li><li>计算: 规训, 这样严肃的表达, 不能掩盖人性天然顺服的合理与自然. 直面善恶的模糊性, 也不必羞于谈论善恶的计算.</li><li>偏执: 执迷其道, 乃至有违伦理, 抑或成为超人. 偏执本身不为恶, 观念也不等同于行动. 欲望被执行或被掩埋, 善意被理解或被扭曲. 偏执有其偶然性.</li><li>视角主义: 计算有高下, 行为的方式有别. 但在善恶的辩证下, 底线是什么? 求诸理性? 理性之下的人性是什么?</li><li>宽容: 相信善的意愿同在, 并承认动机的脆弱和结果的模糊性. 是以, 宽容尤其必要.</li></ol><p>尾: 中途看到豆瓣上谌洪果老师的《善的脆弱性》十五讲. 不甚了了担又心向往之, 心乱脑空, 姑且望文生义闭门漫游. 没有终点的路径, 但行走本身有意义.</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂感 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感 | 负债, 又回高中</title>
      <link href="/posts/b40421d0/"/>
      <url>/posts/b40421d0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>有太多太多魔力 太少道理 / 太多太多游戏 只是为了好奇 / 还有什么值得 歇斯底里 / 对什么东西 死心塌地 / 一个一个偶像 都不外如此 / 沉迷过的偶像 一个个消失 / 谁曾伤天害理 谁又是上帝 / 我们在等待 什么奇迹 / 最后剩下自己 舍不得挑剔 / 最后对着自己 也不大看得起 / 谁给我全世界 我都会怀疑 / 心花怒放 却开到荼蘼 —— 林夕 Faye Wang 《开到荼靡》</p></blockquote><ol type="1"><li>做题生活: 梦回高中, 又逃不开应试教育的话题, 作为最基本的道路. 不说「小镇做题家」, 考试与成绩确也是多数人的共同经验, 量化分数成为多数人的度量指标.</li><li>我感: 是庆幸的, 因为成绩还不错所以有特立独行的权力; 虽说反抗也是小心翼翼的内心独白, 大概在死板智商上寻求得某种优越感. (当然, 叛逆也是青春期的帅气与资本).</li><li>感他: 感慨那重读三四年的勇气, 但转念通情却也并非不可理解; 一念差池, 切不要全以个体经验揣度他人处境. 成本收益的核算永无法放在个体的决断上. 应当设想, 西绪福斯是幸福的.</li><li>正反馈: 做题生活的快乐在于其 (相对及时可靠的) 正反馈. 应试教育的可数知识点可以放进 list, 而考试成绩是最及时的衡量指标. 应试阶段的内容因其基础对绝大数多人没有智识上的难度, 差异最多在时间效率上.</li><li>做题春药: 于是单一指标干涉生活乃至自我价值, 在忙碌与疲惫中驯化. 可数的题目是必要迈过的坎, 增长的题量是最好的兴奋剂.</li><li>纯粹之美: 极权之诱惑, 是否也有这种确信呢? 规则的刚性有时大过其公平性. 纯粹是极端之没, 中道难矣; 如何甘于平庸?</li><li>大学之阶越: 较直观的体验是「正反馈的消失」 (当然因学校专业而定). 根本的, 是人工构建的价值体系变成了更为现实更为多元的衡量标准. 原本若沉浸在纯粹的世界设定下对大学生活抱有「樱花色」的想象, 总会有落差感.</li><li>心欲静难: 一下子要接受各方面的事务, 千头万绪无从抓手. 更重要的冲击来自价值观, 上帝死得干脆, 一下子浮游在波涛中, 再难放下那张书桌了.</li><li>诱惑难逃: 入学的另一重冲击来自自天南海北的同学, 地区差异大过内部的奇装异服甚矣. 或许是第一次自我管理乃至初次离家, 诱惑是来自方方面面的. 基础教育的美好与局限都来自封闭的建构, 而世界之大大于食堂寝室.</li><li>自律: 是以, 坚持自律是值得尊敬的. (只是尊敬, 作为无神论者对后天影响抱有虚妄的自信.) 敬佩则已, 求诸己身是难上加难; 最后或许接受了并非自己要的那条道路, 岔路渐分.</li><li>复杂性: 据说大学更是被建筑的「象牙塔」, 只是选择多了而秩序依旧井然; 而步入社会是进入更大的复杂性, 乃至混沌与荒芜. 何以面对这种复杂乃至荒凉?</li><li>权衡: 选择越来越重要. 并接受了自己某方面的无能, 通识下真正深入所需的天赋不再 (或者, 历史环境成为沉重负担). 时间不得已成为天平上需要斟酌的砝码, (更难以接受的, 码上天平的还有金钱) 收缩起那些无畏伸展的好奇, 逐渐接受社会的细分. (或许成熟的标志)</li><li>规划: 选择困难的从来不是打勾, 而是那被放弃的可能性. 贪欲总想要那最优解, 但人生哪里来的最好状态. 放弃多是件好事, 从核心出发的延展是更为正确的道路; 生而有涯, 而无端无畏好奇无涯.</li><li>何以? 原本自居理性, 长大才发现感性居多, 并沉湎在自我的积极性中. 素没什么规划, 但也在与自我纠缠中意识现实方向的重要性. 放下「四叠半神话大系」, 在月光璀璨中漫步吧.</li></ol><p>尾: 又谈到高中生涯, 往后一切初见端倪, 而多不自知. 但总体下来, 又太多决定论的意味; 还是要承认自我的怯懦与虚弱, 循路前行.</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂感 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感 | 欲望, 或论躺平</title>
      <link href="/posts/2430d599/"/>
      <url>/posts/2430d599/</url>
      
        <content type="html"><![CDATA[<blockquote><p>日々私たちが过ごしている日常というのは、実は奇迹の连続なのかもしれん。 我们每天度过的称之为日常的生活，其实是一个个奇迹的连续也说不定。 —— あらゐけいいち 《日常》</p></blockquote><ol type="1"><li>何谓欲望? 个体的选择, 但更多是环境的塑造. (本就是个后天决定论者, 因此私以为后者之影响更深. )</li><li>欲望之不自主: 可悲在于不明白欲念的来源, 本真藏在努力、忙碌与焦虑的面具下; 消费社会的灯红酒绿更艳, 权钱掩映下的美色愈加.</li><li>欲望的螺旋: 牵扯在其中, 并且因为环境的选择性激励强化自身的信念 (又见回音壁); 或许也是沉没成本, 很多的人生选择的常态是没有退路.</li><li>周折: 一方面是直面世俗的勇气, 另一方面又缺少圈地自娱的勇气; 于是怯懦在夹缝中周折.</li><li>躺平的勇气: 对世俗的抗争, 所有的压力的根本不来自自身; 当然「抗争」并非躺平的起点和终点, 看开说到底是撇清身心外物, 或曰「与自我和解」.</li><li>躺平的条件: 然看清何其困难, 往来多歧路, 身累心不停; 更多也非个人的决断, 机遇与环境同样作为因素, 而觅得同行者又何其珍贵.</li><li>常识: 「躺」本身就不在我的词汇表中 (过于现代且形象的比喻缺乏灵动), 在此借用不过权且; 只是在流光魅影的社会常识何其飘摇, 反倒是「不日常」成为了日常.</li><li>日常的暴戾: 也正因这种高压锅的状态, 生活成为自设置的战场; 如憋气快要溺水的边界, 胸腔充斥郁闷的惰性气体; 或而爆炸, 或而渗透, 内吸收.</li><li>平庸之善: 所以日常是重要的, 扎实的生活, 善并不困难; 并不难, 若撇开欲望世俗的成见, 若赤条条坦诚见, 若非包裹在夹心阶层中.</li><li>何以自由? 解脱, 撇开乃至不负责任? 索性世俗到底, 化欲望为本能? 停留在夹缝中周折, 高低错位中寻安生? 入世而出世, 冷观红尘烟火?</li><li>都是, 都尊重. 只希望不要忘记善之平庸.</li></ol><p>又: 没有回答的诘问, 但提出问题总是标记; 即使知非原意也无端去蹭「恶的平庸性」, 大概出自对日常闪光的尊重.</p>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂感 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>感 | 沉浮, 或论封装</title>
      <link href="/posts/be128d74/"/>
      <url>/posts/be128d74/</url>
      
        <content type="html"><![CDATA[<p>沉浮在使用封装的「舒适性」与对底层理解的「通透感」之间. (又是欲望与能力的纠缠)</p><blockquote><p>有感于近日体验, 也不免受到一些相关讨论的影响 (但更多是个人呓语).</p></blockquote><ol type="1"><li>封装的必要性: 功能上的复用, 逻辑上的完整, 学习上的层次.</li><li>封装的问题: 对于底层的遮盖 (较好的例子可能是 keras); 解封装的困难.</li><li>(个人) 被封装的问题: 对于底层的忽略; 习惯了「黑盒」之后对于「被封装」的忽略乃至麻木.</li><li>解封装的难度: 生啃基本原理/底层代码的困难; 时间和精力上的不允许 (成本收益).</li><li>封装的普遍性: 不独代码上的, 电子元器件的封装, 工业化标准件的归一化, 乃至社会服务的封装.</li><li>封装的不可靠性: 功能层面, 隐私层面; 对于接口的误解, 乃至设计上本身的忽略...</li><li>封装之美与美的丧失: 封装本身的「优雅」, 好的封装的秩序感; 但一定也会有个性化的丧失, 对人性的忽略.</li><li>封装的层级: 高度层级化在兼容不同层级功能的和理性, 以及在认知上的一定合理性; 扁平化对于学习和使用上的简化, 但也可能带来 API功能上的丧失.</li><li>解封装的诱惑: 剥洋葱的层级式快感, 智识上的愉悦; 但要注意「解封装」本身的程式化的枯燥, 没有全局视角带来的局限性...</li><li>对封装物的反思: 封装的必要性? 合理性? 如何进行基于基本功能的简化?</li><li>如何应对: 对于被封装物的「俯瞰」 (当然有赖于文档与信息的透明度); 快速的决断与选择.</li></ol><p>相关链接</p><ul><li>晚点谈 Late Talk ep13 <a href="https://podcast.latepost.com/13">是否在现代社会过非技术式生活：和李如一聊聊封装与日本</a></li><li><a href="https://masterpa.mirror.xyz/S1Lq2DaSTe9o2wr5PxWsh_1sGNWrrKR8hceuxAXVGTU">一个被封装的未来</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Misc </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂感 </tag>
            
            <tag> code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博漫谈 | git 作为方法</title>
      <link href="/posts/92983cd0/"/>
      <url>/posts/92983cd0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我已经不再知道些什么, 也不在乎, 而且不认为这有什么要紧的, 而突然间, 我感到了真正的自由. —— 杰克凯鲁亚克, from MONO 0817日签</p></blockquote><p>仍然相关过分伸展的欲望...</p><p>文笔颓唐, 但我还要说自己是个无可救药的乐天派.</p><h2 id="记录的欲望">记录的欲望</h2><p>纯然的秩序是美, 如置景规范的相片, 如烟雨纷纷的飞雪. 所以秩序存在着一定的吸引力, 整理是一种天然的欲望.</p><p>没有打理卫生的决心, 但能鸠占鹊巢还是向往整洁的环境的. 适度的强迫症或洁癖值得钦佩, 虽然对个人而言行动的决心抵不过身体的惰性.</p><figure><img src="https://raw.githubusercontent.com/Lightblues/BlogImg/master/uPic/2022-08-26-22-59-11.png?token=AJXWMIHBUJJ7GY2YHGSWUELDDOBSO" alt="2022-08-26-22-59-11" /><figcaption>2022-08-26-22-59-11</figcaption></figure><center>from 隐入尘烟</center><p>惰性人人有之, 据说还是生产力进步的原动力, 似乎还没那么糟糕. 如何借工具来填补惰性? 所谓科学方法论.</p><p>缺乏实在的行动力, 但川水东流若留不下些许印记总还是过分虚无了; 是以, 退而求之于记录的欲望. 「记录」, 是秦皇汉武的丰功伟绩, 是传道授业的细水长流, 是私密阴幽的私人日记.</p><p>诉诸记录, 因为个体性没有那么坚强; 用数量作标尺, 给自己交上答卷; 来掩盖眼睛里的空洞, 走在那阳关大道抵御寒冷.</p><p>诉诸记录, 也因记忆的淡薄. 一方面是回忆的不可靠, 另一方面是脑容量的有限. 这里的目的是个人的了, 但记录不等于记忆, 哪怕一手的记录也不一定可靠, 更何况记录有被置之高阁的无限可能性.</p><h2 id="git-作为方法">git 作为方法</h2><p>与自己试图诚实的对谈总陷入悲观的论断; 那还是回归现实, 从熟悉的技术谈起.</p><p>所谓git, 也即 存档、同步、修改、筛选、记录. 之所以称之「方法」, 因为有了一套切实可行的技术方案, 并且行之有效.</p><p>「方法」的标准如何? 冗杂如wechat可以是工具但绝非方法, 盛赞如Notion若仅仅是编辑和视觉上的优秀也仅仅是做好了一个合格的工具 (虽然也很难值得尊敬).</p><p>成其方法, 因为坚持了基本功能的必要性和成熟型, 因为在实现功能的同时保守了基本的克制, 因为在对工具的使用者保持了起码的尊重.</p><p>当然, 所谓方法, 更多是个人层面的感受. 一个阶段的觉醒, 恰好遇到了合适的对象.</p><p>作为方法, 保持一种「归档」的态度. 其一, 对于记录抱有对得起自己的尊重, 文字上简练, 态度上的真挚; 其二, 对于任务阶段性的划分, 对过去的时间负责, 对现下的目标和执行的决策负责. 每个repo都看作一个作品.</p><p>作为方法, 学会对于内容的「选择」. 筛选是一道永恒的难题, 内容的选择是价值上的权衡, 如何评估和预测其在 历史、当下、未来 的价值, 在容量有限的背包中装下对于个体价值最优的物品? 价值观上的幼稚, 心态上的孤僻与软弱, 容易抱着陈芝麻烂谷活在现在和过去的夹缝中. 把遗传学上来自遥远祖先的第三只眼看向未来, 对于一切物品作新的评估, 尝试走出历史的迷宫.</p><h2 id="不作为目的">不作为目的</h2><p>「工具论」的诱惑, 在于给你指明了一条清晰的路径, 在这路的起点有笑容甜美的向导; 然而, 它难以给你描绘这条路的通向何方, 跟着面容模糊的导游一路走下去, 有着心智上的无比轻松, 并容易忘记那方向上的不确定 (多么像应试教育).</p><p>千万人有着千万差异的需求; 尽管其他多数是不成熟乃至不成立的需求, 但差异性是客观的存在; 而草创的那些创作者们容易扮演先知的角色, 规训普罗大众那才是康庄大道 (尽管可能并非有意); 悲哀在于, 由于需求或智识上的不成熟, 在不加审视的基础上丢掉那个性化的光点, 接受形形色色的宗教宣传完成自我规训.</p><p>所以, 近期越来越喜欢纯文本的编辑, 抛弃那些成熟单一的工业预制品, 尝试探索合乎个性需求的创作版图.</p><p>警惕工具或方法上的新颖, 尝试更为底层的自由的方式, 也是因为感知到了流行的产品形态对于个性的扼杀, 不谈审查, 言语的匮乏和工具上的单调, 连创作都是可悲的同质.</p><p>当然, 这些离自己有些遥远. 自己的问题, 在于尝试新事物之后的「兴奋」无法持续, 迅速转化为功能上习得之后的空虚与「倦怠」. 工具上的创新往往屈指可数, 因此这些微的助力无法弥补源泉上的枯竭; 方法层面的熟悉需要较长时间的消化, 但也不能沉迷流程上的规范与整饬, 无法代替底层的反思; 亦即, 目的还需要自己去寻找呐.</p><p>「土地」最为公正, 无论贫富, 种下一斤麦子, 都能收获十斤二十斤麦子.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Less is More | 写在 Guardian 之后</title>
      <link href="/posts/536b7142/"/>
      <url>/posts/536b7142/</url>
      
        <content type="html"><![CDATA[<p>翻了下LC <a href="https://leetcode.cn/u/easonshi/">主页</a>, 居然也参加了33场周赛, 到现在基本稳定在2300左右 (还记得大概第300场周赛拿到Guardian的些许兴奋). 主要开始刷LC是去年12月到今年2月, 中间停了两个月, 然后是5月到8月在家集中刷题, 题量达到780左右. 除了瓜店的徽章, 还打卡了2月份的周日一题全勤. 基本目标达成, 进入低欲望.</p><p>算迈过了第一阶段, 也算是陷入了瓶颈期. 简单些的周赛基本可AK, 但遇到难题直接当机, 而解法上的「优雅」始终无法达成 (层云叠嶂), 并且深陷对于能力的不自信.</p><p>小小题量难谈「小镇做题家」, 也自知训练方式上的不科学; 一开始快速发展迟滞, 并深见山峰之陡峭.</p><p>其实也没有太多的期许, 而刷题本身所带来的「乐趣」其实也无非「付出可以看到较为确定收获」的确定性, 但在底层能力上的提升是值得怀疑的; 说到底, 有种自欺欺人的无奈. 当然, 自己是无可救药的乐天派, 快速兑现的快乐总好过漫漫征途不见星月.</p><p>更为困难的, 反倒是克制攀登的欲望; 峰巅本身的诱惑毋庸置疑, 而登山者的传说确也动人; 一方面是山高路远无枝可依, 另一方面却是幽幽险径不见天月. 漫漫长征催人老.</p><p>上帝已死, 世界铺展开无限的可能. 生有涯而宇宙无垠, 独欲望更无涯.</p><p>所以旅行者啊, 带上罗盘, 独行路上祝有派蒙相伴.</p><p>何以武侠? 「侠之大者为国为民」固然不错, 「问世间情问何物直教人生死相许」在当今或许更为动人; 更为私人的理由, 则无外乎其简单纯粹 —— 纵使勾心斗角生死以搏, 纵使国仇家恨怒火焦心, 却有着一条忽隐忽现的准绳牵引着武侠世界的快意恩仇. 孩童较于成人的快乐, 难道不就是那种简单纯粹吗? 恶也恶得纯粹, 所以总有可爱之处. 因此, 虽早知结局也还要读下去, 虽万死也不辞.</p><p>不独武侠, 不独小说, 那些艺术性的共创, 乃至政治、科学理论化的建构, 一切描绘此般美好途径的解答不都有着这海洛因般的诱惑吗? 听闻《现代性与大屠杀》, 总有种似曾相识.</p><p>作为资深阿宅, 对于一般的宏大叙事自然有种本能的不关切; 而受限自身的阅读经验, 对于任何试图宣扬此种美好图景 (甚至没有任何副作用) 的传教也有着天然的抵触. 真是可悲可敬的无神论者呢.</p><p>问题太多, 而答案更多, 痛苦由是生. 有部《九阴真经》该多好.</p><p>收敛起无节制蔓延的欲望吧, 闭目塞听 (必要的时候); 快乐在有选择, 痛苦在有太多选择, 悲哀在不知选择; 我许你远大前程, 我许你平安喜乐 —— 听, 又是那神在传教</p><p>LESS IS MORE.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
            <tag> 欲望 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintosh+Windows+Arch 新体验</title>
      <link href="/posts/185494e9/"/>
      <url>/posts/185494e9/</url>
      
        <content type="html"><![CDATA[<p>回家复归台式机, 重新配置一下. 尝试在 Windows 环境下写代码, 终归是哪儿都觉得不太顺; 而 Arch 美则美矣一些常用软件还是有些不方便; 故, 半年之后终又折腾起了黑苹果, 从 Clover 转到 OC; 在调整硬盘划分的过程中将 Arch 转到了新的分区. 总结一下.</p><p>硬件列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">技嘉Z390 AORUS PRO WIFI</span><br><span class="line">I5 9600K</span><br><span class="line">金士顿 Fury 2666 *2</span><br><span class="line">西数SN750 + 三星 970EVO</span><br><span class="line">fenvi T919 网卡</span><br></pre></td></tr></table></figure><p>分区记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">(base) ➜  ~ diskutil list</span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *500.1 GB   disk0</span><br><span class="line">   1:                 Apple_APFS Container disk3         214.7 GB   disk0s1 <span class="comment"># Time Macktime</span></span><br><span class="line">   2:       Microsoft Basic Data disk0s2                 285.4 GB   disk0s2 <span class="comment"># 待定</span></span><br><span class="line"></span><br><span class="line">/dev/disk1 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *500.1 GB   disk1</span><br><span class="line">   1:           Windows Recovery                         523.2 MB   disk1s1 <span class="comment"># EFI 分区</span></span><br><span class="line">   2:                        EFI NO NAME                 104.9 MB   disk1s2</span><br><span class="line">   3:         Microsoft Reserved                         16.8 MB    disk1s3</span><br><span class="line">   4:                 Apple_APFS Container disk2         184.9 GB   disk1s4 <span class="comment"># macOS</span></span><br><span class="line">   5:           Linux Filesystem                         157.3 GB   disk1s5 <span class="comment"># Arch</span></span><br><span class="line">   6:           Linux Filesystem                         52.4 GB    disk1s6 <span class="comment"># Ubuntu, 基本不用了</span></span><br><span class="line">   7:       Microsoft Basic Data Win11                   104.9 GB   disk1s7 <span class="comment"># Windows</span></span><br><span class="line"></span><br><span class="line">/dev/disk2 (synthesized):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +184.9 GB   disk2</span><br><span class="line">                                 Physical Store disk1s4</span><br><span class="line">   1:                APFS Volume Macintosh - Data        36.0 GB    disk2s1</span><br><span class="line">   2:                APFS Volume Preboot                 338.8 MB   disk2s2</span><br><span class="line">   3:                APFS Volume Recovery                1.1 GB     disk2s3</span><br><span class="line">   4:                APFS Volume VM                      1.1 MB     disk2s4</span><br><span class="line">   5:                APFS Volume Macintosh               15.8 GB    disk2s5</span><br><span class="line">   6:              APFS Snapshot com.apple.os.update-... 15.8 GB    disk2s5s1</span><br><span class="line"></span><br><span class="line">/dev/disk3 (synthesized):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +214.7 GB   disk3</span><br><span class="line">                                 Physical Store disk0s1</span><br><span class="line">   1:                APFS Volume TimeMachime             27.2 GB    disk3s2</span><br></pre></td></tr></table></figure><h2 id="mackintosh">Mackintosh</h2><h3 id="opencore-安装">OpenCore 安装</h3><ul><li>主教程 | <strong>国光的黑苹果安装教程</strong> <a href="https://apple.sqlsec.com/">https://apple.sqlsec.com/</a></li><li>官方教程 <a href="https://dortania.github.io/OpenCore-Install-Guide/">https://dortania.github.io/OpenCore-Install-Guide/</a></li><li>OC 编辑器<ul><li><a href="https://github.com/corpnewt/ProperTree">ProperTree</a></li><li><a href="https://mackie100projects.altervista.org/download-opencore-configurator/">OpenCore Configurator</a></li></ul></li><li>可以先找一个类似的配置好的 EFI 参考，例如 <a href="https://github.com/timche/hackintosh-opencore-z390-aorus-pro-wifi">hackintosh-opencore-z390-aorus-pro-wifi</a>; 我的放在了 <a href="https://github.com/Lightblues/EFI-Aorus-Z390">here</a></li></ul><h4 id="debug">Debug</h4><ul><li>蓝牙<ul><li>原本以为不能用是网卡的问题, 尝试 <a href="https://github.com/acidanthera/BrcmPatchRAM">BrcmPatchRAM</a> 无果; 结果还是 USB 的问题</li></ul></li><li>有线网卡<ul><li>IntelMausi</li></ul></li><li>多引导<ul><li>Fight Windows 引导: 还是直接看国光的 <a href="https://apple.sqlsec.com/5-%E5%AE%9E%E6%88%98%E6%BC%94%E7%A4%BA/5-6.html">教程6.6</a> 吧, 就是用 <a href="https://sqlsec.lanzouw.com/iDaQ1ubeg6h">EasyUEFI</a> 配置</li><li>详见 <a href="https://dortania.github.io/OpenCore-Multiboot/empty/diffdisk.html">教程</a></li></ul></li><li>HDMI 睡眠后显示器无法唤醒: 启动参数添加 <code>igfxonln=1</code>; from <a href="https://macoshome.com/hackintosh/hcourse/5449.html">here</a><ul><li>休眠的问题比较复杂, <a href="https://dortania.github.io/OpenCore-Post-Install/universal/sleep.html">教程</a></li><li>尝试过 <a href="https://github.com/acidanthera/HibernationFixup">HibernationFixup</a> 没作用</li><li>关于 macOS 的睡眠种类参见 <a href="https://heipg.cn/tutorial/enable-sleep-mode-for-hackintosh.html#%E9%80%89%E6%8B%A9%E4%BC%91%E7%9C%A0%E6%A8%A1%E5%BC%8F">here</a></li></ul></li><li>USB 映射<ul><li>遇到的: 要么是 USB3.0 失效, 要么 USB2.0 失效: 需要用到 <a href="https://github.com/Sniki/OS-X-USB-Inject-All/releases">USBInjectAll</a> 和 <a href="https://github.com/corpnewt/USBMap">USBMap</a>.</li><li>具体的 USB map 参见 <a href="https://dortania.github.io/OpenCore-Post-Install/usb/intel-mapping/intel.html">教程</a></li><li>另外司波图也有一个自己定制的 <a href="https://www.bilibili.com/video/BV1Aa4y1j7CL">教程</a></li></ul></li><li>关于 NTFS 挂载<ul><li>同一张硬盘上的分区会被自动只读形式挂载, 看着有点难受</li><li>尝试配置了 fstab 但好像不太行; 参见 <a href="https://gist.github.com/CharlesThierry/7305166b208d6f6cdd37962761d5ac23">here</a>; 另外参见 <a href="https://juejin.cn/post/6897075697849171975">解决Linux无法读写U盘中的NTFS问题</a></li><li>看到有用 ntfs-3g <a href="https://www.bilibili.com/read/cv13273551">实现</a> 的, 有需求尝试吧</li></ul></li><li>关于更新<ul><li>看到小红点没忍住, 尝试从 Monterey 10.1 更新到 10.2, 果然失败了; 然后发现 OC 好像回归到了很早的一个版本, 无论怎样修改 plist 都没用, 最后 <strong>重置 NVRAM</strong> 解决了</li><li>No zuo, no die</li></ul></li><li>添加其他系统的引导<ul><li>参见 <a href="https://blog.csdn.net/qlpdong/article/details/118572750">OpenCore添加ubuntu引导，引导三系统（Macos+Windows+Linux）</a> 其实就是在 OC 的配置项中添加了一列</li></ul></li></ul><h3 id="回顾-clover-安装">回顾 Clover 安装</h3><p>总结一下之前写的 Clover 安装过程, 以资比较.</p><ul><li>安装主要参考了 Sleele 大佬的 <a href="https://sleele.com/2019/07/14/gettingstartedtutorial/">黑苹果入门教程</a></li><li>资源来自 <a href="https://blog.daliansky.net/">黑果小兵的部落格</a></li><li>选购指南 <a href="https://www.tonymacx86.com/">TonyMacX86</a></li></ul><p>安装流程</p><ul><li>下载, 制作安装 U盘<ul><li>这里用的是 App Store 下载的方式, <code>sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</code> 即可</li><li>找到的对应机型的 EFI 文件复制到启动盘的 EFI 分区下, 参见 <a href="https://github.com/daliansky/Hackintosh">Hackintosh 黑苹果长期维护机型 EFI 及安装教程整理</a></li></ul></li><li>U盘 启动, 安装系统</li><li>配置 EFI<ul><li>第一次很顺利, 直接用了他人配置好的 EFI 就上车了, 因此没有太多研究</li><li>用 <code>sudo diskutil mount disk0s1</code> 挂载替换 EFI 即可; 或者用 Clover Configurator 挂载</li></ul></li></ul><p>定制 USB</p><ul><li>用了 sleele 的 <a href="https://sleele.com/2019/06/07/%E4%BD%BF%E7%94%A8hackintool%E5%AE%9A%E5%88%B6%E9%BB%91%E8%8B%B9%E6%9E%9Cusb%E9%A9%B1%E5%8A%A8/">使用Hackintool定制黑苹果USB驱动</a></li><li>关于 WiFi 等问题, 由于用了 PCIE 网卡, 需要禁用主板 WiFi</li></ul><h3 id="macos-软件栈">macOS 软件栈</h3><ul><li>Hackintosh<ul><li>Hackintool</li><li>OpenCore Configurator: OC配置; EFI挂载</li></ul></li><li>软件管理<ul><li><a href="https://brew.sh/">brew</a>:<ul><li><a href="https://formulae.brew.sh/cask/visual-studio-code">VS Code</a>: 官方下载安装包好慢来着</li><li>uTools: 启动管理</li><li>其他列表见下</li></ul></li></ul></li><li>工具<ul><li>阿里云盘 aDriver: 文件下载</li><li><a href="https://www.notion.so/">Notion</a>: 跨平台笔记同步</li><li>效率<ul><li>PopClip</li><li>Magnet 窗口管理</li><li>MacCleaner 系统清理/管理</li></ul></li></ul></li><li>常用<ul><li>PDF Expert</li><li>MWeb</li><li>Transmit SFTP工具, 同步配置</li><li>MagNet 窗口管理</li></ul></li><li>Code<ul><li>git: <code>ssh-keygen</code></li><li>其他的直接看下面代码吧</li><li>EasyConnect 学校 VPN</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew</span></span><br><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim 复制已有的配置文件</span></span><br><span class="line">cp code/00-config/configs/shell/.vimrc ~/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 zsh</span></span><br><span class="line">brew install --cask iterm2</span><br><span class="line"><span class="comment"># Install Oh My Zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh) <span class="comment"># 似乎  Monterey 默认就是 zsh?</span></span><br><span class="line"><span class="comment"># ! 因为备份了配置, 直接复制过来</span></span><br><span class="line">cp code/00-config/configs/shell/.zshrc ~/</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">brew install autojump <span class="comment"># j</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"><span class="comment"># 基本软件</span></span><br><span class="line">brew install tree</span><br><span class="line">brew install trash <span class="comment"># 用 trash 替换 rm</span></span><br><span class="line">brew install carlocab/personal/unrar <span class="comment"># x=extract 解压 rar 文件调用</span></span><br><span class="line">brew install bat <span class="comment"># 增强 cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VS Code; Sublime</span></span><br><span class="line">brew install --cask visual-studio-code</span><br><span class="line">brew install --cask sublime-text</span><br><span class="line"></span><br><span class="line"><span class="comment"># conda</span></span><br><span class="line">brew install --cask miniconda</span><br><span class="line">conda init zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># go</span></span><br><span class="line">brew install go <span class="comment"># VS Code 可以自动识别安装相关调试工具</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Applications</span></span><br><span class="line">brew install --cask neteasemusic <span class="comment"># 网易云音乐</span></span><br><span class="line">brew install --cask iina <span class="comment"># IINA</span></span><br><span class="line">brew install --cask wechat qq <span class="comment"># WeChat QQ</span></span><br><span class="line">brew install --cask keka <span class="comment"># 压缩软件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tools</span></span><br><span class="line">brew install --cask utools <span class="comment"># uTools</span></span><br><span class="line">brew install --cask eudic <span class="comment"># 欧路词典</span></span><br><span class="line">brew install --cask karabiner-elements <span class="comment"># 改键</span></span><br></pre></td></tr></table></figure><p>记录一下目前安装列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) ➜  code brew list</span><br><span class="line">==&gt; Formulae</span><br><span class="line">autojump gdbm  mpdecimal python@3.10 sqlite  tree</span><br><span class="line">ca-certificates go  openssl@1.1 readline trash  xz</span><br><span class="line"></span><br><span class="line">==&gt; Casks</span><br><span class="line">eudic   miniconda  qq   visual-studio-code</span><br><span class="line">iina   neteasemusic  sublime-text  wechat</span><br><span class="line">iterm2   popclip</span><br></pre></td></tr></table></figure><h2 id="arch-linux">Arch Linux</h2><h3 id="将系统转移到新的分区">将系统转移到新的分区</h3><p>出于两张硬盘分区比较混乱, 试图重新整理一下, 这里将西数盘上安装的 Arch 系统转移到三星那张的一个分区下, EFI 统一管理.</p><p>在此过程中重新看了一点点 Arch 的教程, 真的极为全面; 接受其一定门槛和投入时间的前提下收获也是很多的. 所以下面附了很多官方的教程</p><ul><li>主教程<ul><li>Arch 迁移到另外的硬盘 <a href="https://wiki.archlinux.org/title/Migrate_installation_to_new_hardware_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">migrate installation</a></li><li>Arch 安装教程 <a href="https://wiki.archlinux.org/title/installation_guide">Install</a></li><li><a href="https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">UEFI</a> 统一可扩展固件界面. 例如其中提到使用 <code>efibootmgr</code> 来操作 UEFI 固件启动管理器设置, 似乎很赞!</li><li>另外参见 <a href="https://juejin.cn/post/6990623175906164772">Arch Linux 系统迁移</a></li></ul></li><li>具体包括<ul><li><a href="https://wiki.archlinux.org/title/Rsync">Rsync</a> 带有权限全盘拷贝</li><li>分区, <a href="https://wiki.archlinux.org/title/Partitioning_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">partition</a></li><li>文件系统 <a href="https://wiki.archlinux.org/title/File_systems_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">file system</a></li><li><a href="https://wiki.archlinux.org/title/fstab">fstab</a></li><li><a href="https://wiki.archlinux.org/title/GRUB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">GRUB</a></li></ul></li><li>其他的<ul><li>引导过程 <a href="https://wiki.archlinux.org/title/Arch_boot_process_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Arch Boot Process</a></li><li>包管理 <a href="https://wiki.archlinux.org/title/Pacman_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Pacman</a></li><li>编辑器 <a href="https://wiki.archlinux.org/title/Vim_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Vim</a></li><li>软件列表 <a href="https://wiki.archlinux.org/title/List_of_applications">List of Applications</a></li></ul></li></ul><p>简单记录相关命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 将系统复制到新驱动器</span></span><br><span class="line"><span class="comment"># 分区，构建文件系统</span></span><br><span class="line">sudo fdisk /dev/nvme1n1</span><br><span class="line">lsblk -f <span class="comment"># --fs 输出文件系统信息</span></span><br><span class="line">sudo mkfs.ext4 /dev/nvme1n1p5</span><br><span class="line"><span class="comment"># 用 rsync 将全盘复制到新分区</span></span><br><span class="line">sudo pacman -Syy rsync</span><br><span class="line">rsync -aAXHv --exclude=&#123;<span class="string">&quot;/dev/*&quot;</span>,<span class="string">&quot;/proc/*&quot;</span>,<span class="string">&quot;/sys/*&quot;</span>,<span class="string">&quot;/tmp/*&quot;</span>,<span class="string">&quot;/run/*&quot;</span>,<span class="string">&quot;/mnt/*&quot;</span>,<span class="string">&quot;/media/*&quot;</span>,<span class="string">&quot;/lost+found&quot;</span>&#125; / /mnt</span><br><span class="line">lsblk -f <span class="comment"># 检查一下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 更新fstab</span></span><br><span class="line">sudo mount /dev/nvme1n1p5 /mnt</span><br><span class="line">sudo arch-chroot /mnt</span><br><span class="line"><span class="comment"># 这里进了新系统的环境，生成新的 fstab, 因此需要根据新系统下的挂载情况挂载相应的磁盘</span></span><br><span class="line">mount /dev/nvme1n1p2 /efi <span class="comment"># 这块磁盘上的 EFI 分区</span></span><br><span class="line">sudo pacman -S --needed arch-install-scripts <span class="comment"># 包括 arch-chroot, genfstab 等</span></span><br><span class="line">genfstab -U / &gt;&gt; /etc/fstab <span class="comment"># 如果是直接 mount 的话应该是 genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 重新安装引导加载程序 grub</span></span><br><span class="line"><span class="comment"># 安装，这里的 esp 即EFI系统分区，例如上面 mount /dev/nvme1n1p2 /efi 就是用 /efi</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=[esp] --bootloader-id=GRUB</span><br><span class="line"><span class="comment"># 下面配置 grub，采用 grub-mkconfig 自动生成 (也可以手动写)</span></span><br><span class="line"><span class="comment"># 多系统引导，采用 os-prober </span></span><br><span class="line">sudo pacman -S os-prober </span><br><span class="line"><span class="comment"># 挂载其他系统所在分区; 经测试 Windows 也可以识别</span></span><br><span class="line">sudo mount /dev/nvme1n1p6 /root/sysA</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成!</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h3 id="软件配置更新">软件配置更新</h3><p>包管理基本语法; 安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacman</span></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">pacman -Qs gold <span class="comment"># 查询相关软件</span></span><br><span class="line">sudo pacman -Rs goldendict <span class="comment"># 卸载包及用不到的依赖</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yay</span></span><br><span class="line"><span class="comment"># 注意 yay 不要用 sudo</span></span><br><span class="line">yay -S google-chrome</span><br><span class="line">yay -S eudic        <span class="comment"># 欧陆词典</span></span><br><span class="line">yay -S notion-app   <span class="comment"># Notion</span></span><br></pre></td></tr></table></figure><h3 id="相关命令记录">相关命令记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分区</span></span><br><span class="line">fdisk -l <span class="comment"># 查看</span></span><br><span class="line">fdisk <span class="comment"># m 帮助; w 写入</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件系统</span></span><br><span class="line"><span class="comment"># 查看现有文件系统</span></span><br><span class="line">lsblk -f</span><br><span class="line">mkfs.ext4 /dev/partition <span class="comment"># 比如 ext4 格式</span></span><br><span class="line">mount /dev/sda1 /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 fstab, 其实可以自己写，这里用了 arch-install-scripts 包里的 genfstab</span></span><br><span class="line">sudo pacman -S --needed arch-install-scripts <span class="comment"># 包括 arch-chroot, genfstab 等命令</span></span><br><span class="line"><span class="comment"># 生成前将所需的目录都挂载好</span></span><br><span class="line">genfstab -U -p / | less <span class="comment"># 检查一下</span></span><br><span class="line">genfstab -U -p / &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>GRUB</p><ul><li>Arch <a href="https://wiki.archlinux.org/title/GRUB">GRUB</a>; 例如用到了其中的 rescue<ul><li>参见 <a href="https://www.cnblogs.com/peach-blossoms/p/15228957.html">linux 开机如何进入grub 命令行模式，并通过grub命令进入系统</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rescue</span></span><br><span class="line">grub rescue&gt; <span class="built_in">set</span> prefix=(hdX,Y)/boot/grub <span class="comment"># ls 找到系统分区</span></span><br><span class="line">grub rescue&gt; insmod (hdX,Y)/boot/grub/i386-pc/normal.mod <span class="comment"># 可能是 /boot/grub/x86_64-efi/normal.mod</span></span><br><span class="line">rescue:grub&gt; normal</span><br></pre></td></tr></table></figure><h2 id="windows">Windows</h2><p>简单记录一些常用软件</p><ul><li>系统相关<ul><li>鲁大师?</li><li>refus, balenaEtcher</li><li>CPU-Z， GPU-Z</li><li>DiskGenius 磁盘管理</li><li>CrystalDisk</li><li>EasyUEFI 直接配置 BIOS, 类似 <code>efibootmgr</code></li></ul></li><li>效率<ul><li>SpaceSniffer 空间管理</li></ul></li><li>工作<ul><li>Office 系列?</li><li>IDM 下载</li><li>PotPlayer</li><li>Everything</li><li>Wox?</li></ul></li><li>Code<ul><li>Xftp, Xshell</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2021 终</title>
      <link href="/posts/37970cd1/"/>
      <url>/posts/37970cd1/</url>
      
        <content type="html"><![CDATA[<p>尝试了种种方式开头, 总找不到合适的总结, 删改修剪之下不免又沦为流水; 索性放弃自我逼供, 随波逐流去也.</p><p>从某次的供词开始吧:</p><ul><li>心如荒原 对万物保持着门外汉式的好奇与好感 而多不得入其门</li><li>不会日语不看漫画的伪动漫迷 二次元考古爱好者 EVA启蒙 万事屋入教 今敏渡边信徒</li><li>阿城读者 性杂食 也读江南 也读王小波 也读点科幻</li><li>卫兰听众 五音不全乐器白痴 Bob Dylan听众 菅野洋子宇多田光听众</li><li>播客迷 欲望大于能力 自暴自弃的拖延症晚期</li><li>社恐患者 深度语言障碍 阿尔兹海默症预备役</li><li>日常失眠 爱好发呆 喜落日 看悲剧 但实际是个无可救药的乐天派</li><li>出身渔村 数次溺水但屡教不改的旱鸭子</li><li>科技圈外围 半个果粉 却也是粘连科技观众 半个米粉</li><li>无知无畏无神论者 跑题跑掉跑者</li></ul><h2 id="门外汉式的好奇">门外汉式的好奇</h2><p>好听点叫好奇心, 难听点叫没定性?</p><p>2021年, 仍然有着各种的尝试和放弃, 欲望与冷感. 辗转, 却总有外围人士不得其门而入的挫败感.</p><p>不仅是过去的这一年, 整个本科四年, 再回溯到更久远的时间, 这种「门外汉」的感觉始终存在着.</p><p>原因, 一在泛滥的好奇心, 沉迷表面光彩; 二在常识和专业素养的缺失, 缺乏理解的基础.</p><p>「专业素养」, 居然用了如此严肃且冠冕堂皇的词; 然而大意确是如此, 对于全局而非碎片的理解, 对于历史脉络的理清, 体系的共识和讨论的起点.</p><p>那么对于新年的第一条期许, 便是寻那条道, 入其门. 何以寻路? 常识的汲取和世界观的构建.</p><p>2021, 值得庆幸的一点改变, 或许是更容易放弃了. 不再硬着头皮看半知不解的文字, 看到一半的漫丢下便也丢下, 流行的电影也学着去认真欣赏. 少些固执尝试妥协, 也多些坚持.</p><h2 id="关键词-信息素养">关键词: 信息素养</h2><p>或言之, 互联网生存能力. 信息茧房, 回音壁, 太多的词汇和理论, 总而言之就是生存在这样的时代下如何与外界进行信息交互, 包括有意识的筛选, 过滤, 处理, 反馈.</p><p>这不是网络时代所特有的问题, 泛而言之上面讨论的内容也属于此; 然而, 技术的出现无疑让这一问题更为尖锐, 尤其是最为直接的表现, 如屏幕使用时间、内容获取渠道、观点言说方式等.</p><p>所以对待信息的方式成为了当下时代更 Meta 的话题, 在写的「赛博漫谈」系列算是一种尝试, 另外今年的阅读和播客收听也更多偏向这一话题.</p><p>张驰原 在 <a href="https://freemind.pluskid.org/misc/2021-summary/">今年的年终总结</a> 中统计了使用手机的时间和次数, 平均每天一小时的手机屏幕时间, 30次 pickup, 可做参考.</p><p>2021, 社交媒体见证了太多明星大V的起起伏伏, 毫无感冒的自己也被迫接受着讯息, 时常怀疑着种种事件的无聊和荒谬.</p><p>互联网时代自然是诸神退位, 我们早不是「慕强」一代; 然而公众偶像不存在的同时, 又有太多的芸芸众生被以各种理由推上神坛又被剥下遮羞布; 权力成为无聊的游戏, 平台独裁的同时放任着多数暴政, 注意力成为了不知是被大众还是资本玩弄的对象 (方可成老师在《2021年全球传媒业热点报告》中多次提到的话题).</p><p>所以, 期许之二, 继续培养自己的媒介素养, 做减法, 做加法.</p><h2 id="日常">日常</h2><p>不觉疫情已两年, 「不正常」真的成为常态, 时光在封锁中呼啸而过.</p><p>就像李如一经常提到的一句话, 冷眼观网络, 时常不是惊叹技术的进步又多块, 而是感叹世界的变化太慢. 2021, 日常生活似乎没有太多的变数, 每天仍「平安」打着卡, 尤其大四以来工作日与周末的界限模糊了, 四年老咸鱼换了个身份在这文秘职业技术学院又续费三年, 懒散捧着肚皮晒冬日暖阳.</p><p>或许是疫情, 或许是专业压力, 或许更多源于自己, 迷失在这古井无波的日常中.</p><p>当然, 实际上这一年来也发生了太多惊喜之事; 多藏在了阿尔兹海默症预备役的记忆黑洞中, 时不时散发出点霍金辐射, 撞击到生活日常我, 欣喜满怀.</p><h2 id="来点真正的总结吧">来点真正的总结吧</h2><p>写给自己的文字不知为何总感觉有点丧气, 但正如自己所言「实际是个无可救药的乐天派」; 大概思考不够, 故作惆怅罢.</p><p>那就转向他者, 从年度列表中找点能量:</p><ul><li>年度书籍, 就给《神经漫游者》, 一敬其科幻史上的地位, 二是由于今年元宇宙等概念的火热, 三在威廉吉布森笔下世界的自由狂想.</li><li>年度动漫就给《漂流少年》, 说实话还没看完, 看到一半画风、叙事、音乐都很对胃口 (看到音乐顾问是渡边).</li><li>年度监督, 汤浅政明, 才追的《四叠半神话大系》和《春宵苦短，少女前进吧！》, 让人又爱又恨的强烈个人风格.</li><li>年度应用不得不给 VS Code, 也是今年才算慢慢得把各种代码和文字写作搬到 Code 上来, 远离各种臃肿的软件; 开源性, 自由度, 高性能.</li><li>手机上的年度 App 则是 小宇宙, 从固执许久的 Pocket Cast 搬过来, 确实有着一定的本土优势; 另外惊喜的是 微信阅读, 相较于前两个字的软件给人的感觉要好很多; 问题在自己今年也没看什么书, 希望能预定明年的年度App?</li><li>年度网站就留给 GitHub, 事实上也是用得较多, 获取信息完整性较高的平台; 一直说「漫游」网络, 这种感觉比较显著的是Wiki, 是个人博客, GitHub 居然也能给到这种愉快浏览体验.</li><li>歌手就是 宇多田光 了, 《终》前后循环好多天的 One Last Kiss 和 Beautiful World.</li></ul><p>2021, 运动方面有了更多的尝试, 算是学会了简单的扑腾, 羽毛球方面有所加强; 科研方面算是正式入门, 在各种方法上有些尝试, 但态度和状态上有待改进; 睡眠规律了些, 尽量在 12点之前闭眼, 但绝对时间还是比较少, 健康管理可以规划起来.</p><p>新的一年, 新的身份, 还是那句 ——</p><blockquote><p>且将新火试新茶.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>十光 | 故都</title>
      <link href="/posts/db8a6271/"/>
      <url>/posts/db8a6271/</url>
      
        <content type="html"><![CDATA[<blockquote><p>蔷薇皇帝建立胤朝的时候，草原上可有几百个部落，大家你抢我的牛羊，我抢你的女人。每到春天没有了粮食，羊群饿得最瘦的时候，就要开战，几百几千个牧民赶着马上阵，到处都死人。——《九州·缥缈录Ⅰ：蛮荒》</p><p>易水流，汴水流，更年易过又休休。两家都好住，前后总成留。——《金史·五行志》 from 周思成《隳三都》</p></blockquote><p>草原, 裸露着直陈, 沉默着摧残, 是故事的起点和终点.</p><p>小武是滚在禾草上生长的, 手心积着泥土的腥味, 头发蓬松如蛛网, 走姿介于站立与骑乘之间, 目光涣散, 神游. 草原的天空低沉又遥远, 夜布着点点的星, 偶尔传来幽幽嚎叫, 不辨是否为草原狼的眼; 昼间则是滴水的蓝, 朵朵云稀疏挂着, 闲散, 随着风流; 傍晚, 红霞翻腾如奔马, 一次次颜色的冲锋, 终为苍穹漆上一层黑.</p><h2 id="小灰">小灰</h2><p>小武有一匹只有他能驾的马, 名灰, 一色, 健壮, 所向披靡. 倘回到征伐年代, 想必是将军座下骑. 小武时常想, 那时候的自己, 是将军、士卒、王侯, 抑或流民、早夭的孩童? 都是, 都不是, 小武灰着眼, 不知今夕何夕.</p><p>武是灰命定的主人, 没有道理, 如人类对于糖分的天然渴求. 在马上厮磨的人大抵不会太沉, 负上一人的重量不痛不痒, 马与人的关系是亘古流传的规律. 何谓亘古? 历史总有一个尽头, 想象中的无边无际远, 往往不过几代轮回. 小灰似记得过去每一代的主人, 但记得又如何, 马的生命一眼望到了头, 沉浸在日常的欢愉中.</p><p>草民自然有双火眼, 小武眼球灰混, 但极目望得比谁都远. 他时常望着天地交接, 恍惚间日夜流转, 耳边响起隆隆战马, 草木新生而荣枯; 原来, 小武的眼中从藏着太多历史, 自古的剧目在这双眸中轮回.</p><p>小灰重复着千古来的职责, 而每天都是新的一生. 他避开过去每一个蹄迹, 每一脚都踏上新的土地. 奔跑, 饮食, 草原上的人与生物早已达成默契; 小灰记得武每一晚的住宿, 小武也放任灰在基本路线之外的踱步, 沉默是草原的底色. 记得又如何? 忘却是最好的快乐良方. 每一口是新鲜的甘草, 每一朵云都独一无二.</p><p>他独行, 但从不寂寞, 草原上有无尽生灵, 每一片土地都在呼吸. 他信步, 偶尔遇见同类, 或相逢一笑, 或拥吻交媾, 或怒目而视. 恋人在遥遥草原的另一侧, 偶尔随着风传来几声低沉呼唤, 一切都在风的媒介中.</p><p>在草原, 人是马的附庸.</p><h2 id="故城">故城</h2><p>除了禾草, 石头是草原唯一的幸存者. 无边际的绿之间, 故都遗骸伫着点点灰色. 城没有门, 房没有顶, 只剩这一颗颗顽石倔强着, 抗衡着.</p><p>故都是草原的遗迹, 乱石间, 草是最后的居民. 还有风在迷宫中游荡, 无止尽的风, 仔细听, 风中藏着千百年前的人声. 摸过荒草下的每一块石头, 小武有时免不了神游故国, 新建都时的旺盛与残酷, 开城门时的涌动与欲望, 遭围城时的绝望与顽强. 抚着风吹砂石的痕, 小武了然每一块石的脾性. 喝酒, 烧烤, 这方城池被刻上这一届主人的气味.</p><p>来客有言, 此城是某朝某部故都, 烽火连天, 某年某月限于围城, 烧杀屠戮几许.</p><p>来客有言, 此地战马血统悠久, 披坚执锐, 铁蹄之下所向披靡.</p><p>来客有言, 旱涝经年, 饿莩遍野, 天地不仁, 此草是鲜血的浸染.</p><p>小武只是听着, 也不辩驳这些妄言, 指点江山的意气消磨后, 来客自然尽兴而去. 历史哪有这么简单的规律, 小武载着千万人的记忆, 每一个陈述都彼此矛盾. 所谓历史, 任人乔装, 巧合成为定律, 凡人成为英雄.</p><p>草原荒芜, 除了和小灰说话, 对羊群倾诉, 故城自然也是小武的沟通对象. 多时候, 小武只是听, 听着亿万幽灵的声音从石缝中飘出来, 重重叠叠不辨彼此. 大多听不真切, 听久了, 却多少能猜个大半 —— 灵魄说自说, 小武听自听, 至于猜对猜错多少, 估计也只有风知道.</p><p>小武的灰眸载着万千记忆, 重压下肉体也变得迟缓. 马背上睡, 马背上饮酒, 有时涣散着远天, 突然便扑通栽到草土中. 小武是个好骑手, 酣醉之下也能勾卧马腹, 但这种事情, 谁也说不好. 栽倒了, 灰也不管, 静静站着, 看天, 马眼如小武的灰眸, 似代替他看着.</p><p>小武也说, 对着草原上的每一块石头. 替相隔天涯的情人传递情愫, 替世世代代的仇家宣战鸣鼓. 死去的灵魂还能沟通, 但时间似静止了, 只剩下残存的欲望喧嚣. 说的太多, 忘的太多, 小武自己的魂魄蜷缩在角落, 注视着魂灵们的剧目; 大概是有意为之, 空出自己的躯壳, 让亿万灵魂在身体里轮转.</p><p>要说什么是永恒, 欲望大抵是少数其一.</p><h2 id="牧羊">牧羊</h2><p>小武谁人? 草原的子民天职自然是牧羊. 小武也有自己的羊群, 少时几十, 多时数千. 春时多些, 秋冬也不知都跑到哪去了. 但不打紧, 水木丰盛的世界, 它们自然会回来.</p><p>羊群是地上的朵朵白云, 小武拿彩笔为每朵云画上符号. 它们是小武的孩童, 欢聚又四散, 跳跃在草原的角角落落, 奔跑在小武没有去到的碑界. 小武有时放任着羊群的奔散, 时而又为自己的放浪而沮丧. 欲望淹没了城市的高楼, 在这漫无边际的草原更是肆无忌惮地弥散开来; 羊群多时没有节制, 竭泽, 蝗虫, 小武也厌恶自己的毫无规划; 好奇心呈圆形拓展, 又如同泡沫, 触之即碎, 又从原点开始.</p><p>羊儿是秋衣, 也是棉被, 是符节, 也是堡垒.</p><p>当然, 我们也知道, 小武的自我小得可怜, 所以沮丧也是一时的; 更多时候是没心没肺, 高兴也好无聊也罢, 任欲望拓展开去, 放任自流</p><h2 id="火车">火车</h2><p>小武何人? 你若问一个真正在草原生活的人, 大概不会有答案. 他是迷失在草原的游者, 牵着细瘦稗马, 不知哪一天消散在草原的风中; 他妄想着草原的主人, 妄想着史诗的征战与落幕. 要说他有什么特别, 他同历史画卷里千千万万的游着并无二样, 飘荡在茫茫草原, 对着瘦马与牛羊细语; 忽而咆哮, 忽而诧于惊雷; 最后的最后, 只不过添了禾草下的一副骸骨, 夜穹上的一颗星.</p><p>火车隆隆而来, 两根坚硬钢轨笔直刺过低矮的草原, 蒸腾起朵朵灰云. 镜头来了又去, 烟酒燃烧沉积, 夜升月挂, 牛羊披着星斗散在无声的风中.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 十光 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>十光 | 新隅</title>
      <link href="/posts/e8dd01b4/"/>
      <url>/posts/e8dd01b4/</url>
      
        <content type="html"><![CDATA[<blockquote><p>总之，重点在于不要错失良机，良机是只好机会，你懂吗？良机这种东西很难掌握，你必须要掌握那个良机不可。否则的话就再也没有机会。 —— 《四叠半神话大系》</p></blockquote><h2 id="新隅">新隅</h2><p>小镇直突突挂在柏油路上, 东西约二里, 南北数百步; 光溜溜的黑体招牌吊在统一的蓝色水平木栏, 直陈店内的功用; 小镇无名, 为着故事的进行, 不妨称之「新隅」.</p><p>小津生、长于此, 走路, 从东到西, 从西到东. 平淡如水的生活, 用脚步度量地球母亲的脸颊, 家在一头, 学校在另一头, 踱步一趟大概一千五百多步, 数不了几分钟, 便是尽头, 没有标志, 人气断然止住了.</p><p>最多的大概是食品店, 理发店, 烟酒, 五金、装潢、水电, 对了, 还有小小的诊所和公安局. 菜市场、超市、银行、邮递局, 半现代的文明还是蔓延到了小镇. 在远处, 小学, 寥寥的乡镇企业, 尽头. 所以虽小, 却也是五脏俱全, 生老病死, 婚丧酒宴, 来去也梦一场.</p><p>对了, 不能少的有麻将馆, 无标牌, 窄窄门栏幽幽通向二层, 烟雾缭绕. 麻将、棋牌, 小津怀疑这是传统社会仅有的智力活动. 或紧张, 或松弛, 牌场是少数有着明晰规则的地方. 就像这些幽幽的雀馆, 是刻着的不成文法典, 规则在小镇都是隐晦、暧昧的. 镇民却有神性, 昏昏愚昧却洞悉着所有法条. 小津身体里缺了这份法典, 迷眼望着人来车往, 如同幼时踟蹰雀馆外, 怀疑内里居住着妖怪, 闭上眼, 还有阴阴的风.</p><p>新隅太小, 甚至没有声色犬马, 绯色新闻. 或许有, 在小津的视域外; 通常是男人, 一条半透明的猩红的线, 遥遥牵到一个女人手里; 但过了边界, 隐了踪迹, 断了, 小镇有其疆域.</p><h2 id="小津">小津</h2><p>小津是个好孩子, 听话, 父母言即为戒律, 曾经. 饭前要洗手, 放学后回家, 用完东西物归原地.</p><p>听话, 但止不住脑子乱转. 好孩子口中有太多想问不敢问的. 睡前和起床刷牙有何区别, 为什么金桂落了又开, 抄青菜放半勺油还是更多 —— 当然, 问题都没有答案. 不懂, 生记着世界运作的规律, 严格; 但也愈发患得患失, 煮饭应该多少粒米, 祭祖拜叩几次, 一年见一次的长辈该叫什么, 颤抖着手, 迟疑着嘴, 伏地不起.</p><p>只好沉默, 沉默久了, 倒也真成了哑巴.</p><p>小津成绩好, 父母长辈向外总少不了说两句. 学校用着另一种语言, 这个世界小津如鱼得水, 浅水, 浮泛. 哑巴有坏, 从小自不是受人偏爱的; 也好, 安静些 —— 世界依然如迷雾, 但言语隔绝着, 目睹外边的刀光剑影, 倒也安全.</p><p>父母也像小镇来客, 邻里熟稔, 但总不是一样的. 像落寞的贵族, 像流亡的遗族, 小镇如楚门的世界. 小津不懂新隅的脉搏, 人来客往, 加密了的对话, 随机的脸庞.</p><p>奇怪, 幼时, 尚未上学, 总也跑不到新隅尽头; 如今不过千步, 却也记不得尽头之外景致.</p><h2 id="暗涌">暗涌</h2><p>倒也非一尘不变, 长久间, 小镇迎来送往不少人, 新陈代谢. 招牌旧了, 新了.</p><p>平静如水下涌着暗潮. 故事通常在冬季, 是南方沁骨的寒, 夜色透过皮肉冲撞. 某某进了局子, 吸毒, 嫖娼, 传言总在冬天发酵. 主人公面目模糊, 是镇民许久的故人, 却总有长久一段的不往来, 相熟, 陌生. 对一个被代谢掉的人的故事, 划清界限, 添油加醋, 传到小津耳中, 早光怪陆离.</p><p>公安局是小镇的外来者, 飞地, 伫着结结实实的钢筋水泥, 国徽, 旗帜, 只存在于这些乡野故事中. 小津只路过, 半闭眼, 似看到远古的巨人在牢笼安睡, 吞云吐雾, 守卫瘦小如纸片, 铭刻着符文在风中飘.</p><p>小镇在睡梦中苏醒, 张开饕餮大口啸两声, 音波在可听范围外. 镇民是巨兽毛发间的寄居者 (大概也分原生、外来, 小津自属后者), 巨兽醒来是所有人入眠的时刻, 吃着孩子的梦, 闭上眼, 在天亮起前收缩成原来模样.</p><p>小津不多懂的, 是镇上的傻子. 游荡, 守卫着镇子安宁, 笑, 无意义的笑声, 钓鱼, 那他少有手脚消停的时刻. 小津听傻子讲的故事, 和其他版本都不一样, 简单, 灰白, 可靠, 低低吟唱着. 傻子垂钓着总无动静的钩, 冷笑着万事万物来去, 倒像个哲人.</p><p>镇民一天天老去, 死去, 傻子却总没变, 小津怀疑自己也没长大.</p><h2 id="扑通">扑通</h2><p>记忆中, 小津总落水, 幽幽明明, 水贴着耳廓流动, 声直连到心脏, 扑通, 咕咚. 下沉无比漫长, 水浑浊、暧昧, 泥土的气味, 似有游鱼撞上脚, 黑了.</p><p>记忆总是片段, 被巨兽吃剩的残羹, 轮播着. 半闭眼, 小津能看到远古战场, 厮杀着, 吟唱着, 在小镇寂寥的生活下; 自然, 镇民熟视无睹, 只有小津能看到月球背面. 有个黑影知道小津, 眼神直直盯着他, 穿越远古, 奔涌过来, 跑, 小津只能跑, 嘶哑着发不出声音, 无声叫喊, 很快就没气了; 摔了一觉, 头破血流, 睁开眼, 黑影又消失, 只留一阵肃杀, 仅心脏的跳动留下些许证明.</p><p>小津想, 长大些自然能懂小镇的事, 然而怎么也长不大. 密码毫无音讯, 体内没有神性复苏的可能性. 只在一次次的扑通入水, 在溺亡的恐惧、清净中, 重复着时光片段.</p><p>小镇少有新鲜事, 反刍着陈年旧事, 真相一代代传播, 一代代异化.</p><p>小镇是老年人的小镇, 缓慢、沉默, 相熟到知根知底的无话可说.</p><p>小镇也是普通孩子的小镇, 但不属青年, 永不是小津的小镇.</p><p>小津现在还徘徊在新隅的路上, 问着无人解答的问, 吟着无人聆听的诗, 疑心沉睡小镇的兽, 不辨小镇居民的脸. 如果你来到新隅, 记得听他逃亡的故事, 夜色下万物的变形. 他当然会老, 生理上. 问他, 他大概会告诉你, 世界在不停回退, 早晚蜷缩进子宫, 温暖.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 十光 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博漫谈 | 媒介视角下的元宇宙冷思考</title>
      <link href="/posts/70447ef0/"/>
      <url>/posts/70447ef0/</url>
      
        <content type="html"><![CDATA[<p>「元宇宙」概念早已烂熟于大街小巷, 然而关于它究竟是什么, 却少有人真正说得清; 作为一个八字还没一撇的未来幻想, 可以说一千个人里就有一千种的 Metaverse. 那么为何要再去谈它? 首先, 自然是因其火热, 因其模糊性. 然而, 激发我兴趣的更在于公众讨论这一现象本身.</p><p>正如一档播客中所言, 细想互联网时代 (或者更准确地说, 移动互联网时代) 以来, 我们很少再有全民对于未来世界进行的公众讨论了. 反思现在的社会生活, 我们几乎不得不承认, 当前世界的生活样态是完全围绕互联网展开的. 在互联网作为甚至比水电更为重要的基础设施的当下, 我们似乎无法想象一个没有「网」的世界; 而伴随着对于不久远过去的记忆的丧失, 我们似乎也丧失对于未来世界的想象, 历史终结于互联网.</p><p>从这一点来看, 「元宇宙」这一概念破圈成为街头巷尾热议的话题, 激发了普罗大众对于未来的广泛讨论和想象, 这一文化现象本身就值得讨论.</p><p>回望互联网刚刚兴起的那段时间, 那时候瀛海威时空广告词中用的还是「信息高速公路」, 那时候的人们形容访问互联网的行为是「网上冲浪」, 从这些埋进历史的故纸堆的词汇当中, 我们还是能够瞥见那时的人们对于方兴的互联网有着多少的想象. 关于 Meatverse, 不论说是未来科技前夜, 还是说资本炒作下的泡沫, 至少从对其的广泛讨论这一现象来看, 我觉得倒和那个时候有某种类似之处.</p><p>因此, 讨论这一话题是成立的. 那么, 如何谈起? 未来尚未到来, 那么只好泛泛而谈; 结合自身兴趣, 以下就从元宇宙的概念/定义出发, 结合麦克卢汉的游戏延伸理论, 来谈谈元宇宙作为一种媒介对于个体和社会的意义和影响, 以及我们当如何看待和理解元宇宙.</p><h2 id="元宇宙何谓">元宇宙何谓</h2><p>如前所述, 元宇宙的一切还处于混沌, 由于技术和概念上的模糊性, 由于风口浪尖众说纷纭; 即然对于它的精准描述几乎不可能, 以下就简要从基础技术、个体经验、概念发展史三个视角来看它的不同面向.</p><blockquote><p>The metaverse is a hypothesized iteration of the Internet, supporting persistent online 3-D virtual environments through conventional personal computing, as well as virtual and augmented reality headsets.</p><p>一个持久化和去中心化的在线三维虚拟环境, 可以通过虚拟现实眼镜、增强现实眼镜、手机、个人电脑和电子游戏机等进入人造的虚拟世界. -- wiki</p></blockquote><p>以上 wiki 的定义出于技术视角. 例如, 这里的一个重点是 3-D virtual environments, 所以从交互形式上就有别于当今的互联网. 定义中还有「持久化」「去中心化」等关键词, 这些就提出了大规模实时在线、分布式计算推流、去中心化网络等技术层面的要求. 当然, 这里提到的仅仅是一小部分, 美国一个很早开始就关注元宇宙的风险投资人 Matthew Ball 在他的网站上给出了更为全面的 <a href="https://www.matthewball.vc/the-metaverse-primer">描述</a>, 有兴趣可以去看看.</p><p>除了技术层面, 从个体经验出发来看元宇宙无疑是更为直观的. 还是回到 1992年, 来看看尼尔·斯蒂芬森在小说《雪崩》中对于 Metaverse 最初的构想:</p><blockquote><p>只要带上耳机和目镜, 找到一个终端, 就可以通过连接进入由计算机模拟的另一个三维现实. 每个人, 都可以在这个与真实世界平行的虚拟空间中拥有自己的分身.</p><p>这条大街与真实世界唯一的差别就是, 它并不真正存在. 它只是一份电脑绘图协议, 写在一张纸上, 放在某个地方. 大街, 连同这些东西, 没有一样被真正赋予物质形态. 更确切地说, 它们不过是一些软件, 通过遍及全球的光纤网络供大众使用. 当阿弘进入超元域, 纵览大街, 当他看着楼宇和电子标志牌延伸到黑暗之中, 消失在星球弯曲的地平线之外, 他实际上正盯着一幕幕电脑图形表象, 即一个个用户界面, 出自各大公司设计的无数各不相同的软件.</p></blockquote><p>耳机和目镜是交互形式, 这一点和现今的 RV设备或游戏舱有类似之处; avatar 的概念有社交互动属性, 其实也和 MMO 游戏类似. 比较有特点的, 或许就是地图的玩家/用户自建属性, 并且虚拟世界是构建在去中心化的协议之上的, 而非集权于某家游戏公司. 综合来看, 这里的元宇宙想象有点类似 VR技术、MMO游戏设定、去中心化协议等的融合, 只不过在交互方式、拟真水平、自由程度上更高罢了. 直观来看, 其初级形态可以参考现在的一些电子或 VR游戏, 终极形态可以想象《黑客帝国》《攻壳机动队》等.</p><p>当然, 稍微看点科幻作品、动漫, 乃至网络小说, 对于这样的描述就不会感到新奇. 元宇宙概念的突然兴起, 自然是和资本炒作以及互联网巨头的概念宣传有关. 因此, 下面就概览这一概念的发展/泡沫史 (from 百科):</p><ul><li>2021年初, Soul App 在行业内首次提出构建“社交元宇宙”；</li><li>3月, 被称为元宇宙第一股的罗布乐思（Roblox）正式在纽约证券交易所上市；</li><li>5月, 微软首席执行官萨蒂亚·纳德拉表示公司正在努力打造一个“企业元宇宙”；</li><li>8月, 英伟达宣布推出全球首个为元宇宙建立提供基础的模拟和协作平台 Omniverse；</li><li>8月, 字节跳动斥巨资收购VR创业公司Pico；</li><li>10月, 美国社交媒体巨头 Facebook 宣布更名为 Meta；</li><li>11月, 虚拟世界平台 Decentraland 公司发布消息, 巴巴多斯将在元宇宙设立全球首个大使馆, 暂定2022年1月启用. (巴巴多斯是加勒比海上的一个岛国)</li></ul><p>社交、游戏、企业、技术平台, 无外乎这些. 就不去翻更古早的旧账了, 这里破圈的重要节点, 大概 Facebook 改名事件 —— 作为一家将近 30亿月活的社交媒体公司, 其任何动向自然会引发热议, 更不用提改头换面了 (脸都不要了). (当然, 机缘巧合之下, 更早进入我视野的是 Nvidia 的 Omniverse; 作为科技圈外围人士, 技术相关的新闻自然是更戳 xp.)</p><p>尽管无法切实描绘元宇宙的一个图景, 从相关技术、相关公司的宣传运营, 乃至小说电影作品中的想象中, 我们还是能够瞥见一枝半叶. 而以上的几个视角, 或多或少都和游戏有一定的关联; 于此同时, 其核心的 3D交互数字社会又有着强烈的媒介特性. 因此, 以下就围绕麦克卢汉的游戏媒介理论, 先对该理论进行简单介绍, 再从媒介视角来对元宇宙进行一些探讨.</p><h2 id="游戏作为媒介-游戏-人的延伸">游戏作为媒介 | 游戏 —— 人的延伸</h2><p>这里简要介绍麦克卢汉《理解媒介》一书中的游戏媒介理论, 并补充我的一些看法. 在书中, 他认为游戏是「人的延伸」, 这和他的核心论述「媒介是人的延伸」相一致. 在麦氏的概念中, 媒介包括了丰富的内涵, 不仅是传播信息的物理介质, 还包括信息乃至人的行为本身. 游戏作为很多人共同参与的行为, 自然就可以理解为一种媒介; 由此出发, 就可以自然地将他的媒介延伸理论应用到游戏行为上.</p><p>简言之, 游戏作为「人的延伸」, 在个人层面上包括了三层意义: 首先, 媒介是人的感官的延伸, 帮助人们扩大信息传播活动; 而随着感官的延伸, 人的思想和情感得以延伸; 最后, 感官和思想情感的延伸进一步改变了人的思维、情感和生活方式, 改变了媒介环境和客观环境在人们心目中的比例.</p><h3 id="游戏是感官的延伸">游戏是感官的延伸</h3><p>任何媒介都不外乎是人的感觉和感官的扩展或延伸：文字和印刷媒介是人的视觉能力的延伸, 广播是人的听觉能力的延伸, 电视则是人的视觉、听觉能力的综合延伸. 通过这样的一些媒介, 人能够超脱超过物理距离的限制进行信息交换, 构建连接.</p><p>所谓感官延伸, 我认为不仅是单纯物理上的知觉延伸, 更是整体性社会的虚拟化构建. 正如 Roblox 的 CEO Dave Baszucki 所说, 「元宇宙至少包括以下要素：身份、朋友、沉浸感、低延迟、多元化、随地、经济系统和文明」; 可以看到, 这里元宇宙定义首先蕴含了对于现实世界的模拟, 人们在其中延续了现实世界中的社交关系、身份认证, 乃至构成经济和文化. 也就是说, 元宇宙世界是对于现实生活的延续, 个体进入这个数字世界的同时, 与这一世界的其他人构成了连接和信息交换的能力/权力.</p><p>现在的 VR 技术可以在感官上可以带来很高的拟真性, 然而它并没有满足我们对于「元宇宙」的想象, 我认为一个原因就在于, 现在的 VR游戏无法构成上述意义的数字世界, 在提供感官刺激的同时没有带来感官上的「延伸」, 也即, 人与人之间的连接.</p><h3 id="游戏是人们的思想情感欲望想象的延伸">游戏是人们的思想、情感、欲望、想象的延伸</h3><p>游戏很重要的一个特点在于「虚拟性」. 荷兰语言学家和历史学家赫伊津哈在《游戏的人 —— 文化的游戏要素研究》中提到, 「游戏并非“平常的”或“真实的”生活, 它步出了“真实的”生活, 进入一个暂时的活动领域, 带有它自己的倾向」. 这本书出版于 1940年代, 显然, 这里说的游戏是现实生活中的传统游戏; 然而这一论断放在如今的电子游戏上, 无疑更为自然和贴切.</p><p>不单游戏如此, 传统媒介中的很多非现实题材作品, 比如说小说、电影, 它们也是提供了一个虚拟的世界, 也致力于给人以虚拟化的感受; 只不过相较于这些传统的媒介, 视听语言的电子游戏在这一方面无疑带有天然的优势, 而这里的元宇宙, 其所能给人带来的虚拟体验显然是更为强烈的.</p><p>尽管是虚拟性的, 但着并不妨碍我们在其中投注私人的情感和欲望. 实际上, 或许正是游戏的虚拟性给我们的情感投入提供了相较现实生活更为简便的通道. 这一点, 从传统的文艺作品中即可见一斑; 正因为与现实世界的差异, 才能更方便地代入私人的偏好和想象, 而人们也通过这种虚拟的情感投注获得某种程度的满足.</p><p>因此, 我们说「游戏化」, 必然是要参与一个混杂了现实与想象的于此同时又与现实有一定区隔的环境/空间, 这一空间可能是语言文字所虚构的, 也可能是游戏或虚拟现实技术为我们创设的; 我们在参与游戏的过程中获得了情感释放和欲望满足.</p><p>在 2006年末和 2007年初有一款非常热的游戏《第二人生》, 算是对于斯蒂芬森《雪崩》中所构想的 Metaverse 的初步实践. 当然, 《第二人生》中所提供的「未来」还是非常原始的, 它从画面上来说拟真程度不高, 也不是 3D的. 然而, 或许出乎我们的意料, 这个游戏现在还活着并且维持在 80万左右的月活用户. 参见 <a href="https://www.theatlantic.com/magazine/archive/2017/12/second-life-leslie-jamison/544149/">这里</a> 的一篇报道, 那些现在还在坚守的游戏玩家, 或者说「居民」, 他们在其中投注了太多了时间、精力、情感和欲望, 他们在这一虚拟世界中社交、经营、交易、生活, 几乎已经无法离开这个游戏/世界. 仅从这一点即可见, 游戏在作为我们感官延伸的同时, 也承担着我们情感延伸的载体.</p><p>总而言之, 媒介是我们感官的延伸, 扩展人获取信息的能力, 参与构建人际连接; 而在这一过程中, 自然也包含了人们的思想、情感、欲望、想象. 可以想象, 若是未来在一个高度拟真的、高度自由的元宇宙中生活, 身处其中的我们一定会对这一世界产生更强的情感连接.</p><h3 id="游戏塑造认知">游戏塑造认知</h3><p>媒介所带来的感官、情感、想象的延伸, 反过来会改变人的交互方式, 改变媒介环境, 乃至塑造我们的认知.</p><p>还是麦克卢汉那句著名的「媒介即信息」, 媒介形态本身即带有其天然属性, 因此他认为不同媒介所能承载的内容从本质上来讲是存在差异的. 尼尔·波兹曼在 1985年出版《娱乐至死》中也提到, 「为我们提供纯粹的娱乐是电视最大的好处, 它最糟糕的用处是它企图涉足严肃的话语模式 —— 新闻、政治、科学、教育、商业和宗教 —— 然后给它们换上娱乐的包装」.</p><p>我们知道, 波兹曼是明确反对电视企图占据严肃讨论空间所造成的万物娱乐化的, 图像媒介和文字媒介所传递的信息是截然不同的, 图像文化侵占生活中所有讨论空间, 必然会影响人的言说、思维方式, 乃至影响整个社会的经济和文化形态. 如今, 尼尔·波兹曼所警惕的电视已经无法吸引很多人的注意力; 如果在他那个年代, 他所担忧的是电视为代表的图像化媒介对于文字媒介的侵占, 那么现在, 影响和塑造我们的媒介无疑更为丰富和直接了, 它是移动设备、社交网络, 是购物软件、短视频应用, 是电子游戏、网红博主.</p><p>10年代之前, 可以听到家长把游戏称为「电子鸦片」「电子海洛因」, 如今好像少有人再提了 (心智健全的); 讽刺的是, 玩游戏的那些孩子或许进入了大学成为了社畜, 而当年视电子游戏为洪水猛兽的家长们很多却成了网络团购和短视频最忠实的用户/消费者. 时代的车轮无可遏制, 媒介形态也在不断更迭, 不难设想抵制游戏的和消费短视频的人在认知层面上一定发生了很大的转变.</p><p>无意对于媒介分个高低, 这里想要强调的只是, 我们所消费的媒介一定会在某种程度上塑造我们的认识, 乃至于影响社会形态和社会共识; 这一点我们从现今的互联网上已经得到了充分的验证, 并且电子游戏的发展也必然会产生很多深远的影响; 这里我们要提的元宇宙, 如果真能像未来学家们所宣扬的一样到来, 那么一定会从根本上改变我们的认知, 改变我们的行为模型.</p><h3 id="游戏是社会生活的延伸">游戏是社会生活的延伸</h3><p>以上分三点介绍了游戏作为一种媒介作为「人的延伸」的意义, 其扩展了人的感官, 承载了人思想情感欲望想象的投注, 并在潜移默化中所造我们的认知. 其实从上面的论述中也可以看出来这一过程必然是社会化的. 这里就简单强调一下, 游戏作为一种媒介一定是带有社会属性的,而作为未来畅想的元宇宙更是如此.</p><p>这里给一个旧时代的例子. 约翰·W·道尔在《拥抱战败 —— 第二次世界大战后的日本》中提到, 1946年, 美国占领军控制下的战后日本, 在城市里的儿童们之间, 流行着三种游戏：“黑市游戏”、“潘潘游戏”和“民主游戏”, 内容分别是为模仿黑市交易、假扮妓女拉客以及模仿左翼示威活动. 孩童是社会的一面纯真/残酷的镜子, 而流行在孩童之间的游戏, 就表达了孩童的观察、想象和欲望. 从这些儿童游戏当中, 我们可以看到当时日本社会的经济和文化状态, 看到日本对于美国人和美国统治的复杂态度.</p><p>旧时代的孩童游戏如此, 现今的 (严肃) 电子游戏如此, 而未来的元宇宙作为游戏更是如此. 我们可以看到, 尽管游戏是虚拟性的, 但任何的虚拟不会是纯然空中楼阁, 必然能在某一定程度上找到现实的投射. 用麦克卢汉《理解媒介》中的一句话作结: 「游戏是对日常压力的大众反应的延伸, 因而成为忠实反映文化的模式. 它们把全民的行为和反应熔于一炉, 使之成为一个动态的形象.」</p><h2 id="元宇宙作为游戏-游戏化的社会">元宇宙作为游戏 | 游戏化的社会</h2><p>以上借助媒介延伸理论探讨了游戏作为一种媒介, 其对于个体和社会的意义和影响, 并在与游戏的比较中考察了元宇宙和游戏相类似的一些特质. 然后元宇宙是 (电子)游戏吗? 如何看待其潜在的成瘾性危险? 现在的我们又当如何看待它?</p><h3 id="元宇宙不是游戏">元宇宙(不)是游戏</h3><p>首先, 我认为至少短期内元宇宙的实现方式是游戏. 这里的「游戏」, 还不是上面论述中广义的游戏, 而是狭义上如今的电子游戏. 尽管很多投资人都宣扬着「元宇宙不是游戏」, 但悖谬的是他们所能举出的例子多能被现在的电子游戏所包含. 因此, 更为准确的说法, 应该是「元宇宙不只是电子游戏」.</p><p>不止如此, 几度起落的虚拟现实 (VR) 技术, 其目前主要的应用场景也是电子游戏. 我觉得这是非常合理的, 如一些历史学家所言, 人类区分于其他物种的一项能力就在于拥有想象/虚构的能力, 也因此我们的很大一部分欲望都是需要在虚构中得到满足的. 相较于小说、音乐等相对间接的媒介, 直接实时交互的, 图像和声音的电子游戏是更为直观的, 能够带来更高的感官刺激的虚拟媒介. 因此, 可以更直接简单地满足人的这一需求的媒介理所当然会吸引到更多人, 也必然会是未来发展的趋势.</p><p>那些投资人宣扬游戏不是电子游戏大概可以圈到更多注目, 然而实际上, 一项技术在电子游戏的发展过程中成熟完全不是一个问题或污点; 一个直接的例子或许是显卡技术的发展 (参见下一节). 目前的元宇宙构想远远没有成熟, 而相关的技术必然会围绕着电子游戏的发展而进步, 不妨拭目以待.</p><h3 id="社会生活的游戏化">社会生活的游戏化</h3><p>上面讲的是狭义上的电子游戏, 而从更广泛的定义来看, 我觉得「游戏化」是一个非常普遍的社会现象. 技术的进步给我们带来了更多对于现实世界拟真、建模的能力, 并且相较于原本的物理世界, 人们更乐于幻想这样一个被数字化、中介化的社会. 这一过程其实就是广义上的游戏化过程.</p><p>一个比较明显的例子就是微博上的明星打榜现象. 我们喜欢一个明星不再是单纯去看 TA 的作品, 而需要通过实际的亲身行为来提升 TA 的知名度. 我们知道游戏的一些重要特性就是其明确的规则, 高度的建模能力, 以及实时、清晰的反馈; 在这里, 实时更新的排行榜, 数字化的明星指数不就是提供了这些吗? 打榜行为是数字化、娱乐化、游戏化了的人的行为. 此外现在的饭圈文化, 也把粉丝和明星之间的关系, 从原本明星到粉丝的单向传递, 转化为了双向的养成关系. 偶像不再如昔日巨星靠个人魅力一呼百应, 而更多是小心翼翼回应了粉丝群众的某些期待; 而粉丝也从虚拟的对于偶像的养成、陪伴, 或者说游戏过程中得到的高度的正向反馈, 得到了虚拟的满足.</p><p>再举个例子, 拿元宇宙学家经常举的游戏《堡垒之夜》来说, 官方放出的一些彩蛋, 例如致敬《2001太空漫游》的一个黑色石碑, 一个突然出现欲将发射的火箭, 这些突发性的事件都足够引起全体游戏玩家的狂欢; 这种狂欢不是一个人的而是所有玩家所共同参与的. 这里的狂欢过程取消了原本的固定游戏规则, 而将玩家吸引到了一场新的集体无意识游戏中去 —— 这和现实社会中的某些公众议题何其相似 —— 实际上, 现在对于「元宇宙」的普遍讨论本身何尝不是一场游戏.</p><p>更广泛地设想, 我们来看社交网络上的建构、朋友圈的经营、微博上的论战, 它们和传统的现实接触相比, 无不增加了更强的互动性、反馈性、娱乐性, 都可以说是「游戏化」的体验.</p><h3 id="何以元宇宙">何以元宇宙</h3><p>我们说元宇宙的实现形式就是电子游戏, 并且认为现如今的很多社会生活都是被游戏化了的, 听起来似乎有点危言耸听. 那么最后, 就在从媒介的角度来谈谈我们当如何对待元宇宙.</p><p>首先, 我们不必过程恐慌. 现在对于它的描绘很容易让我们联想到一些科幻作品中的世界, 然而, 正如复旦中文系教授严锋所言, 科幻作品更多是会对于未来世界唱衰的 —— 它们在提供给我们未来世界想象的同时, 也在这个世界危险的边缘架构了一个刺激的故事. 一方面, 请放心, 技术上还有很长一段路要走, 我们还远没有到要去选择红药丸还是蓝药丸的地步. 另一方面, 也请放心, 现实世界没有那么脆弱, 它不会那么轻易就退位, 毕竟我们还是以物理的方式存在着.</p><p>因此, 与其无目的地去跟着科幻作品的视角去想象元宇宙世界, 不如更为切实地, 把元宇宙看作是一项新的技术, 一种新媒介. 不如去思考, 这种媒介相较于传统媒介或传统电子游戏有怎样的特性, 社会关系如何在这一世界中构建.</p><p>不过分期待也不极端抵制, 一个新媒介/技术产生的同时必然会有很多的热望与担忧, 然而到最后我们似乎总能找到一个合适的方式与其共处, 融汇到我们的日常生活中不咸也不淡. 就拿「成瘾」或者「沉迷」这一话题来说, 中国政法大学的教授孟庆延说「沉迷是一个人的普遍状态」, 他认为刻意去对抗人的基本需求几乎是不可能, 然而, 在一个健全的多元化的自由的社会中, 我们必然可以在其他途径找到各种机制去对抗单一媒体所带来的沉迷.</p><p>确实, 每天打十个小时的游戏也会让人厌倦, 连续看五六部电影中的日日夜夜也止不了我们想在现实的阳光下散散步的心情. 不同的媒介有着其独特的性质, 一定能够满足我们某个特定方面的需求, 正如三维动画无法取代乃至二维作画的魅力, 电子阅读器无法替代实体书籍带来的物理经验. 我们期待一个满足我们所有需求的媒介是不现实的, 游戏不能, 我想元宇宙大概也不能. 从更本上来说, 这根植于人内心的多样性, 生物的本能让我们一定会厌倦单调重复的媒介, 吃着山珍海味总想尝尝低分辨率的小米粥.</p><p>麦克卢汉对于游戏是乐观的. 他认为, 「游戏是我们心灵生活的戏剧模式, 给各种具体的紧张情绪提供发泄的机会.」「游戏是像迪斯尼乐园的一种人为的天堂, 或者是一种乌托邦似的幻景, 我们借助这种幻景去阐释和补足日常生活的意义.」 游戏化的各种经验均如此, 不特电子游戏或虚拟现实.</p><p>那么, 就以他的这段话作结:</p><blockquote><p>难道我们喜欢的游戏, 不正是给自己提供了一种超乎社会机器垄断暴政的一种解脱吗? 一句话, 亚里斯多德的戏剧思想——既是模拟表演又是持续压力的解脱——不正是完美地解释了各种游戏、舞蹈和欢乐吗? 嬉耍和游戏要受人欢迎, 就必须传达日常生活的回声.</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 漫游 </tag>
            
            <tag> 媒介 </tag>
            
            <tag> 元宇宙 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博漫谈 | What a wonderful world</title>
      <link href="/posts/8cedf62b/"/>
      <url>/posts/8cedf62b/</url>
      
        <content type="html"><![CDATA[<blockquote><p>您那小小的歌唱着的鸟儿，即将飞向远方了。夜莺请一直往南走吧，到暖和的地方去生活。——《扬名立万》</p></blockquote><p>于是今年大概是所谓「播客元年」, 即使每一年是太多事物的元年也见证了多少泡沫的破碎; 但当看到网易云和QQ音乐不惜在底部栏新增一个「播客」页面, 终于意识到播客成了互联网流量巨头新的宠儿.</p><p>实际上, 播客这一形式早已不新鲜, 不鸟万先生的《IT公论》开播自2013年11月, 而 Apple Podcast 从 iTunes 独立出来则是 2012年, 更不用提英文世界中的媒介尝试和发展历史.</p><p>那么何为播客, 为何又要谈播客?</p><h2 id="播客何为">播客何为</h2><p>Wiki 告诉我, 播客 「是一种数字媒体，指一系列的音频、视频、在线电台或文字以列表形式经互联网发布，听众可下载或串流当中的文件以欣赏」「播客创作者将音频或视频上传至RSS或在线播客平台，听众或观众则通过软件获取节目更新」.</p><p>播客为何? 数字音频, 支持下载或者流播, 从媒介上看几乎和音乐或脱口秀节目差不了多少; 而从内容和交互形式来看, 又何传统电台神似, 无非媒介从无线电波转为网络. 那是什么赋予了「播客」区分于音乐、广播、视频等其他媒介的特性?</p><p>恐怕还要追溯到这一声音形式的起点 —— 根据 wiki, Tristan Louis 于2000年10于在一个 draft 中提出了在 RSS feed 中附加音视频文件的概念, Dave Winer, 也是 RSS 格式的创作者完成了实现. 是的, 这大概是播客原生区别于其他声音媒介的地方了; subscribe 行为在播客收听过程中起着重要的角色, 而 RSS技术使得任何人在「第一时间收听播客」更新成为了可能.</p><p>在这里, 信息的传播是相对单向的: 主播作为内容生产者, 而听众多是纯粹的信息接受者, 在平台出现前的很长一段时间内, 观众反馈是相对薄弱和落后的, 但也正因为此, 主播的生产又了更多「创作」的属性; 类似平台化之前的网络小说, 相较于强反馈下的「共同创作」, 古早年代弱反馈的创作形式给予了作品更多生产者的个人特质; 当然, 空山自语显得太孤独且难以持续, 反馈总归是有的, 最浪漫的大概还是邮箱或者是网站留言, 沟通的「成本」自然能够天然起到过滤作用, 身为主播偶然间收到听众反馈大概是意外之意.</p><p>当然, 现在时刻再去宣传所谓的「泛用型播客客户端」似乎显得古板且不合时宜, 事实上自己的收听入口也已从单纯的 Pocket Casts 转为 小宇宙 平台; 尽管如此, 这里的收听逻辑大概还是和传统音乐推流有着某些微妙差别, 至少可以体现在算法推荐和主动关注这一行为上(当然, 小宇宙也是靠每日三档推荐起家的, 但毕竟还是人工筛选). 所谓泛用, 即在自由收听的权利, 在于主动关注行为, 在于可免除无关信息的自由; 而与之相对的, 则是平台的流量垄断, 信息轰炸的不胜其烦, 竞价搜索与关键词屏蔽.</p><p>未免有些庸人自扰, 然而内容获取方式的开放性越来越成为考虑信息媒介的重要因素; 所以在承认平台的诸多方便的同时, 自己算是「反平台」的, 带着对于所谓「互联网精神」的期待, 妄想着内容生产者的绝对主权, 平台作为内容托管和集成方的「可替代性」(即使对于Google相对信任的同时警惕着平台为恶的可能性).</p><p>平台带来的便捷是需要肯定的, 事实播客形式走向大众自然是和收听方式的平民化有着重要关系, 与此同时也共同促进了播客生产的繁荣(事实上, 自己作为消费者也受益); 但也正因为此, 坚持独立运营才显得珍贵, 这里的浪漫, 大概是和独立电影独立网站给人带来的感受类似.</p><p>自己也不是最早一批的听众, 事实上入坑不算早, 18年《一天世界》算起, 却也多多少少听了各种类型的播客. 然, 不得不承认早先的第一印象对于媒介观念的塑造作用, 最早的收听体验也一定程度上塑造了自己对于播客内容的期待. 前说播客是主播的创作, 确实, 但真正意义上的单口却也不多, 更多的还是对话为主, 半私密半公开性质的对话; 然而对话太多了却也有些疲惫, 平和中正之间竟有点期待一个人的独断与专横. (事实上也非常欣赏对话节目, 近期听到《科技吱声》ep1 请到夏笳和李永乐老师, 碰撞在一起也极为有趣)</p><p>好吧, 我所怀念与期待的根本不在单口或对话, 不在题材与形式; 不过偶尔回顾风口吹起之前的试水者们, 想到技术形式对于内容创作赋予的可能性, 发一点牢骚与感慨.</p><h2 id="海盗电台">海盗电台</h2><blockquote><p>当我们在关注新媒体艺术的时候，会发现它与黑客文化、创客和DIY文化中有若干的交际，比如说它们都崇尚非商业的运作；会和反主流文化紧密结合并为小众群体发声；会涉及到对技术元素创造性的，突破其原有功能的利用；并且相比其他类型的艺术创作，技术爱好者们在这一领域扮演了更加重要的角色。</p></blockquote><p>Dr.Quest 先生在关于科技、独立媒体与艺术的一次 <a href="https://zhuanlan.zhihu.com/p/267865163">演讲</a> 中这样说到. 是的, 在新的媒介出现或创新的同时, 免不了艺术特质的关照, 这里的关照者可能是媒体艺术家也可能正是技术爱好者. 在一项技术的诞生之初, 可能没有人能够想到其经过长时间发展后的主流应用场景, 而萌发之初总是热望多于警惕的, 艺术的关照赋予了技术/媒介更多的可能性, 对待艺术和生活的敏锐感受力. 我们在使用媒介的同时, 也无时无刻不在接受着媒介的驯化, 从使用习惯到对媒介内容的想象. 偶然跳出来反观, 或者回顾媒介发展的历史, 或许能得到意料之外的收获.</p><p>所谓 Pirate Radio, 简言之主要是二战之后, 特别是1960年的英国的那些无执照非商业的广播电台. 那部 2009年的电影《海盗电台》的原型 Radio Caroline, 即是 Ronan O'Rahilly 为了更为自由地播出摇滚乐, 在领海之外的船上架设电台进行广播, 从而规避无线电法规的限制.</p><p>现在的播客似乎与当年的海盗电台有某种类似性, 不过 60年代反抗的可能是英国政府的媒介管控, 而在所有人乃至机器都可以内容生产的年代, 我们应该警惕的或许是赫胥黎所描述的无聊烦琐的世事. 那个狂妄单纯又似乎孕育着无穷可能性的60年代, 虽然不一定让人怀念或期待, 却也放任着一点妄想.</p><p>最后的最后, 想到的无非是内容创作的自由与边界, 独立托管所要求的耐心与勇气, 又落窠臼, 暂且搁笔; 见谅文字的跳脱, 鸡飞狗跳兵荒马乱, What a wonderful world.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 漫游 </tag>
            
            <tag> 播客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博漫谈 | 媒介即隐喻 媒介即认知</title>
      <link href="/posts/511ce731/"/>
      <url>/posts/511ce731/</url>
      
        <content type="html"><![CDATA[<blockquote><p>But remenber, please, the Law by which we live, wer are not built to comprehend a lie. 但是, 请记住我们存活的法则, 我们被造出来, 可不能理解谎言. ——The Secret of the Machines, BY RUDYARD KIPLING, 摘自《我这样的机器》</p></blockquote><p>于是, 免不了谈到「媒介」 —— 作为形式, 作为技术, 作为手段; 作为包围着现代生活的方方面面, 作为人际沟通的方式, 作为我们对于世界的想象.</p><h2 id="媒介即信息">媒介即信息</h2><p>逃不掉麦克卢汉那句「媒介及信息」(The medium is the message, Understanding Media: The Extensions of Man, 1964). 简言之, 传播内容受到传播形式的影响. 自然, 这里的媒介无非是六十年代的那几样, 文字、电报、图片、电影 —— 作为前互联网时代的观察, 当时的媒介形态相较于今还算简单; 然而从媒介的物理形态而言, 却也覆盖了生物的多数感官.</p><p>最近才读那本畅销书《娱乐至死》, 波兹曼进一步补充「媒介即隐喻」 —— 单纯从信息论角度来理解是显然的: 信息有着单一明确的属性, 而人类日常的会话、新闻的扩散、观念的传教怎么可能有单一明确的理解呢? 再不解风雅一点, 不同媒介承载的信息量有别 (从文字和图片影响的存储空间即可看出来), 又如何通过不同的媒介所无损转换?</p><p>举例: 即使是 (文学领域的?) 常规理解追求写实的翻译, 准确也只占「信达雅」其一; 而即使是专业领域, 对于某个词汇寻找到合适的译名也是难之又难; 这还只是新词, 倘若牵涉伦理政治领域, 原生概念与外来译名之间的关系几乎难以下手. 仅仅是翻译即如此, 更不用提不同媒介之前的转换, 小说和电影, 动漫和游戏的的改编几乎是另一种创作.</p><p>所谓「隐喻」, 大抵是以一物理解另一物. 这几乎是人类认知的基础, 也无可厚非. 书中举的一个例子, 前影像时代, 人们对于历史人物/政治家的第一联想是其言论/政治思想, 而当下我们一提到公众人物, 乃至爱因斯坦, 首先进入脑海的大概会是一个图像 —— 照片上的脸也好, 电视电影中的片段也罢. 图像作为人类感官的一等公民, 具有天然的侵略性, 几乎是生物的生存本能.</p><p>波氏颇为悲观「这就是思维方法在以文字为中心的文化和以图像为中心的文化中的不同体现」. 在图像颠覆文字占据媒介统治地位的今天, 倒也不必消沉如此. —— 用他自己的话来说, 毕竟「这本书是对20世纪后半叶美国文化中最重大变化的探究和哀悼」, 那还是「印刷术时代步入没落，而电视时代蒸蒸日上」. 而在媒介形式极大丰富的当下, 网络早已颠覆一切旧的成为无论何种意义上的头等媒介, 游戏也早已不是家长口中的洪水猛兽, 电子化的浪潮覆盖了生活的方方面面; 网络时代原住民, 有必要对于图像世界抱有这样的警惕吗?</p><p>或许不必, 媒介不复八十年代的媒介, 世界也不复八零年代的世界. 波兹曼所批判的「电视」几乎沉没在互联网的海洋 (或者以各种身份复活着), 而被他寄予厚望的计算机也远不在他的想象. 我们如今再读, 这些警句真正有价值的, 或许在于对媒介特质的反思, 在于对媒介霸权的警惕.</p><h2 id="媒介即认识论">媒介即认识论</h2><p>波氏进一步指出「媒介即认识论」, 而今看来也不是新鲜的论题了. 以个人的话来理解, 所谓隐喻, 即人的感知必须借助各种形态的物理物的中介, 而信息在这一传播过程中必然受到干扰和损失, 乃至误解和争端; 既然媒介即信息, 而信息塑造了我们对于世界的认知, 所谓「媒介生态」, 这几乎就是废话了.</p><p>私以为, 媒介不仅决定认识论, 不同媒介的特性、接触媒介的时间和成分、使用媒介的方式, 都对认知有着深远影响.</p><p>首先, 不同媒介有着各自的特性: 设想同样的一段文字, 在屏幕上快速划过, 在纸质媒介上阅读, 听他人口述, 乃至配合上影像, 所带来的体验自然是截然不同的. 波氏也多次在文中提到, 「为我们提供纯粹的娱乐是电视最大的好处，它最糟糕的用处是它企图涉足严肃的话语模式 —— 新闻、政治、科学、教育、商业和宗教——然后给它们换上娱乐的包装」. 他所反对的不是影像媒介本身, 而是影响侵占公共空间乃至辐射社会的总总话题所造成的「严肃」性的丧失. 公众图像文化是娱乐化的文化, 而一切被公众图像化所带来的必然是一切被被娱乐所边缘、颠覆、重塑.</p><p>媒介有其特异性. 单论文字和影像, 对于类似的一段场景可以给人带来全然不同的体验. 影像的信息量过于密集, 以至于一下子占满了想象空间; 所以才会对那么多的改编影视作品怨声载道, 对于文字的想象各异, 而影像所能呈现的可能性过于单一了.</p><p>和其他的很多体验一样, 首次接触的影响是深远的, 若没有外部影响要自发对于一面印象的改变大概要付出很多的努力. 媒介亦如此, 遥想八九十年代第一次接触到「电脑」正襟危坐学着命令行的那些人, 和现今笨重主机被丢弃在书房不带有丝毫好奇随手点亮图形化界面的孩童, 他们对于这种机器的想象自然是截然不同的 —— 不过是一个笨重的固定版本笔记本电脑, 甚至没有平板或手机那样的交互方式, 这又有什么神奇的呢?</p><p>在媒介极大丰富信息极大过载的时代, 信息有筛选的必要, 媒介也必须有所取舍. 在不得不承认媒介的特异性的基础上, 什么是你/妳接收/生产信息最有效的媒介? 如何通过不同媒介构建对于世界的想象? 如何协调媒介认知培养媒介习惯?</p><h2 id="作为技术的媒介">作为技术的媒介</h2><p>还记得本科阶段旁听过小半学期《新闻学导论》, 谈到传播学视角下媒介的三个层次: 技术/生产方式、内容/体裁、媒介习惯/实践. 这里就仅关注作为技术的媒介. 媒介终究是和技术高度挂钩的, 媒介与人类记录生活和自然的技术的发展相同步, 并反过来塑造人的沟通和认知方式.</p><p>「复制」成为媒介发展过程中一个重要的衡量指标, 留声机对于声音的复制、摄影术对于光影的复制、纪录片对于图像和声音的复制. 然而这绝不意味着「真实」, 而是如上所述这种被中介了的虚拟了的真实; 更何况真实并未信息生产者/传播者的本意, 一切的传播无非是种宣传. 实际上, 真实并非构成媒介好坏的指标, 有些媒介有这天然的妄想属性, 例如 Paprika 在我的动漫观影体验中所确立的某种「动画性」.</p><p>关于教育, 波氏指出或许有些东西可以复制, 但复制过程中会丢失什么这样问题, 答案可能是「一切赋予教育重要性的东西」. 衍生一下, 媒介在复刻现实世界的同时丢掉了什么? 虽然没读过, 但大体听说波兹曼另一本《童年的消逝》提到电视的出现让文字不再是成年人的专属空间, 解除了言语的黑箱于是童年不复存在. 「真正的危险不在于宗教已经成为电视节目的内容，而在于电视节目可能会成为宗教的内容」; 科学替代上帝成为世界的规则, 尼采喊着「上帝死了」的时候大概人类的童年也消逝了. 不再有神秘的黑箱也没有所谓神性, 世界清清朗朗恍如计算机设计.</p><p>原本还想的是具体媒介形式, 如播客作为沉寂又复兴的媒介, 互联网大旗下不同交互形式所构成的细分媒介形式; 细想来居然无话可说也了无兴致, 姑且如此, 就以这段著名断言作结:</p><blockquote><p>奥威尔害怕的是那些强行禁书的人，赫胥黎担心的是失去任何禁书的理由，因为再也没有人愿意读书；奥威尔害怕的是那些剥夺我们信息的人，赫胥黎担心的是人们在汪洋如海的信息中日益变得被动和自私；奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中；奥威尔害怕的是我们的文化成为受制文化，赫胥黎担心的是我们的文化成为充满感官刺激、欲望和无规则游戏的庸俗文化。正如赫胥黎在《重访美丽新世界》里提到的，那些随时准备反抗独裁的自由意志论者和唯理论者“完全忽视了人们对于娱乐的无尽欲望”。在《一九八四》中，人们受制于痛苦，而在《美丽新世界》中，人们由于享乐失去了自由。简而言之，奥威尔担心我们憎恨的东西会毁掉我们，而赫胥黎担心的是，我们将毁于我们热爱的东西。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 漫游 </tag>
            
            <tag> 媒介 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博漫谈｜不要问科技给了什么，问它拿走了什么</title>
      <link href="/posts/88153aab/"/>
      <url>/posts/88153aab/</url>
      
        <content type="html"><![CDATA[<blockquote><p>我不能去憎恨别人，因为我没时间。 ——《生之欲》</p></blockquote><p>无主题漫谈第一期</p><h2 id="关于在线生活">关于在线生活</h2><p>题源《一天世界》ep79。那便顺着这一期播客的主题，关于 social distance 或者「在线生活」对于人生活方式的影响开始吧。</p><p>其中提到，我们大概已经「无法想象没有互联网的生活」。是的，技术所带来的社会发展往往是不可逆的，接受某种生活方式的同时意味着对于过去所习以为常的作息的诀别，再回首已是积重难返。电力、燃油、通讯、屏幕……当一项技术成为「基础设施」浇筑在日常生活中，过去的被替代者成为真正或美好或不的昨日世界。能够取代的，或许只能是时代浪潮的下一次变革。</p><p>当然，我不是否认「独身自好」的可能性，在哪一个年代我们都不能忽视那些「至今不用手机」「不接触互联网」的人们 —— 或是时代淘沙，或是思想家，或是行为艺术；同样不可否认的是这种诀别所带来的可能的快乐与满足。然而，这样的生活方式终归只是少数派，这里涉及的是总体论上对于社会心理的影响。</p><p>那么，作为现今生活底层结构的「互联网」，对于我们的世界产生了怎样的改变？这自然是大之又大的话题，联网是 Tim Berners-Lee 那一代人的想象还是现今璀璨着的「移动互联网」？是互联互通所带来的信息生产和流程的极大变革，乃至对于全球化及其所带来的各式后遗症？</p><p>还是从小出发吧，如播客中提到的，「后疫情」时代，对于口罩、洗手的观念、乃至「洁癖」的定义都会产生持久的变化，而「911」所带来的公众隐私领域的缩减也是几乎不可逆的；公众事件的影响如此，而塑造了生活方式的互联生活，对于社会状态和心理的影响同样是巨大且不可悖逆的。</p><p>正如「线上生活」，九十年代关于互联网的想象绝对不会如现在这般；无所谓悲哀或庆幸，那个电脑上可爱企鹅的滴滴滴声变成了桌面上呜呜的震动，坐在案前构思着邮件内容的身影变成了一块四五寸屏幕上翻飞的手指，下载一张图片还要几分钟的等待变成了4K直播无延迟。不仅是疫情隔离所带来的被迫线上生活，我们逐渐习惯了 online 的生活，接入网络的价值甚至和加入世贸类似，与世界建立起了连接；如今，大概断水断电所带来的焦虑都赶不上断网。</p><p>起了这样一个大而泛的题，自知没有能力驾驭，尝试去探讨，大抵是希望给后续的话题画个界限，警醒不要再拘泥于技术的细枝末节中，更要去反思互联网/技术的多面性，反观当下的生活。无法也无意拒绝互联生活的，但意识到「在线上生活的同时存在着线下的可能性」这一点就有其意义。</p><p>昨夜风雨，银杏一地落黄。</p><h2 id="关于科技带来的">关于科技带来的</h2><p>自诩算是个科技圈编外人员 —— 汲汲于科技带来的可能性，对于「未来生活方式」的热望，而所谓「编外」，自然是尚不得其门而入，游离徘徊而已。因此，总归是技术乐观主义的。然而，在宣告着「技术无罪论」的同时，也不得不承认着其可能的影响 —— 现实层面，无论是父母辈对于手机乃至游戏的反向依恋，还是微博或「朋友圈」所带来的社交压力乃至厌倦，或图像、音视频伪造技术所可能带来的社会隐患，对了，还有已成为社会热议的人工智能伦理、自动驾驶伦理等。</p><p>所以，更准确的表述/期待，应该是：在理解技术基本原理的前提下，信仰技术所能带来的改变。是以，对自己的期待是在「沉迷」某一技术之前，先对其实现细节有一定的认知基础。当然，这样的期待切实去实现的几乎不可能 —— 在学科严重细分、「博学家」早已不复的年代。毕竟技术的底层是难以穷尽的，完全个人维护的软件几乎是神话，芯片和计算机的制造早已不是一家公司可以实现的，更不必说自己早知与物理无缘。</p><p>这种期待的可能性在于开放的文档体系，在于自由的开源社区，在于互联网作为资源网络本身。技术在商用、商品化的过程中，必然是满足了人的某种惰性，提供便利的同时必然做了大量的简化；但这样高层封装掩盖了大量的实现细节；这种细节或许大多无关紧要，但总有少数的核心思想是无可逃脱的。沉沦水面之上的功用纵然简单，但不能忽视盲目 addict 技术的危险性，底层原理的认知缺失，很容易让人相信那些神奇黑箱，甚至忽视基本常识，无知者最无畏。</p><p>有「圈外」人员提到对于「科技圈」的印象，会有圈地自萌的厌恶感。这样的反感自有其原因 —— 直接观感，或许是论坛社区三句不离「01编程」「徒手造芯片」的段子手，或许是诚心发问被一句「linux大法好」、询问IDE配置却被推荐 Vim Emacs 的憋屈。然而，这些绝非我所想象的疆界，大抵不过如我这般编外人员的叫嚣。另一方面，却不得不承认「入圈」的门槛，确实存在着一定的 threshold —— 又来了，首先要过的一堆的专业名词。然而，所谓「圈」总有其入圈代价，而技术圈层的优势在于其无与伦比的开放性，互联网之处本身就有着先天的技术属性，在合理搜索的情况下你几乎可以零成本得到所有问题的答案，所需要的只有时间和精力。</p><p>自然，编外无权为其代言，把技术作为手段而非目的，在有着基础认知的前提下勇于去拥抱技术创新，是目前的期许 —— 非但计算机相关，生活的一切领域又何尝不是如此？</p><h2 id="关于信息与奴役">关于信息与奴役</h2><p>再谈谈技术所带来的观念上的转变。节目中提到，一个显见的概念是「对于孤独的忍耐力」，诚然，和一个十八世纪的人比起来，现代人对于孤独的忍耐大概总是要差很多的。</p><p>不谈「孤独」，直接看更为具体的「信息」吧。除去人作为生物的基本需求，我们的一切娱乐形式几乎能够在数字世界上找到替代品。图像、音频、视频，乃至感官、虚拟、增强现实或是近期火热的「Metaverse」…… 技术革新也好炒作也罢，未来的方向，人类似乎可以在虚拟世界作为全然精神体存在。如果虚拟的感官和生物性的神经反应无限接近乃至等价实现，诱惑于人工构造的虚拟世界的无穷可能性（毕竟据说国族/民族的概念也是虚构的），我们有多大的把握抵抗这魅？</p><p>我想是悲观的，小说、电影、游戏无不是刺激着我们的神经，而网络/虚拟世界所带来的快感无疑是更为多元的。近期学游泳，在水中跳动的自由已经让二十年陆地生物无比兴奋，第二人生中御剑飞行太空漫游的可能性足够让人高潮。</p><p>扯远了，总言之，一切皆为信息，我们在与世界交互的过程中吞吐着信息。作为信息的消费者，我们似乎有选取信息源的「自由」，如我们冲浪过程中漫游在这一切实的网络中；作为信息的生产者，除了有意识的信息生产，正如那句「隐私不上网，上网无隐私」我们在这一虚拟网络中时时刻刻留下自身足迹。兴奋于交互媒介所带来的可能性的同时，我们对于这现世还有何眷恋？</p><p>对于技术的想象大多是幻想，人与人国与国的冲突无时无刻不彰显着人作为一个自然生物的复杂性。扯下「技术无国界」的遮羞布，技术专利的占有、盈利为目的的产品远高于理想主义的构建；这些尚不可怕，让人恐惧的是技术作为「权力」的可能性 —— 当使用微信成为乘坐地铁的前提条件的时候，我们真的有去选择红色药丸的可能吗？</p><p>所以，我们在痛骂着苹果或微信生态的封闭与独断的同时不得不用着它们的设备与服务，带着镣铐的舞蹈（然而，固执良久之后，我终于还是承认 Apple 是一家「伟大」的公司）。</p><p>大体，恐惧有二：对于隐私的恐惧，大概是所谓「监控资本主义」；对于推送的恐惧，「信息茧房」或者是经典的「兔子洞」比喻。</p><p>所以无论是对于推荐算法的投喂，互联网巨头对于隐私的态度，还是各种 App 使用人数/时间优先的指标，乃至各种平台「数据为王」的现状，都让人产生警惕并引发讨论。这种恐惧是切实的，隐私为代价的精准推荐、切合生物本能的信息推流，自己也多在与其的抗衡中忽上忽下沉沦不定。有时，感觉自己是信息流水线上的一颗处理器，被动接收机械输出。</p><p>克服奴役之路在哪里？似乎又回到了之前的答案：用技术对抗技术。例如对抗推流，如何拿回信息的控制权？有着复兴趋势的 RSS 技术仍有热度 —— 订阅的意义在于，将信息的来源从平台/团队重归个人；此外，对于公众号等封闭生态的突破提供了点对点的可控信息流动。</p><p>似乎又有圈内人士的清高与自傲了？还是那句「技术只是手段」，fancy 的信息流绝非唯一的出路，「折腾」所带来的便利性要与日常的使用与反思所协调。互联网将我们获取信息的困难程度减小到了最低，但并不意味着我们获取信息的质量有保障，更不意味着互联网是信息的唯一途径。</p><p>—— 不要问科技给了什么，问它拿走了什么。</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 隐私 </tag>
            
            <tag> 漫游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛博空间生存指南 | 写给准大学生的碎碎谈</title>
      <link href="/posts/70cc675f/"/>
      <url>/posts/70cc675f/</url>
      
        <content type="html"><![CDATA[<p>引: 这样的话题对我来说过于庞大了些, 也与自己日常所思考的方向不一致; 作为一名准研究生, 确实也有些话想对过去的自己说, 算是一个小小的总结; 姑且就大言不惭了.</p><p>关于信息时代的基本素养, 关于高中到大学/成人的思维态度上的转变, 关于信息和工具的使用方法论杂谈.</p><blockquote><p>warning 某次机缘下的计划, 但分了好多次断断续续写, 也没能成体系, 暂且作笑谈.</p></blockquote><h2 id="basic-skillstopics">Basic Skills/Topics</h2><p>个人以为的一些基本素养.</p><h3 id="接入互联网">接入「互联网」</h3><ul><li>必要性: Google, Wikipedia, Google scholar, Github...;<ul><li>当然要走学术的话, 绝对是必要条件</li></ul></li><li>标准: <a href="https://www.youtube.com/channel/UCZVThl_MRppEdGUPGjXSSdg">AK</a> 曾有过一个系列还不错, 自己技术不精无脑选机场; 要掌握到什么程度因人而异, 自己的需求是Google随时能用, Terminal简单配置代理</li><li>工具论: macOS+Linux+Windows+iOS+Android 可以全系 Clash 了, iOS下还用过 ShadowRocket</li></ul><h3 id="如何提问沟通">如何提问/沟通</h3><blockquote><p>你觉得问身边有智慧阅读量丰富的人和上网查找哪个好？</p></blockquote><p>有合适的人选的话自然前者更好, 但我个人可能更习惯后者.</p><ul><li>程序员领域很有名的那篇 <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a> , 当然对于非 CS 相关人员有阅读门槛, 但逻辑完全适用于所有领域; 总而言之, 无非</li></ul><ol type="1"><li>做好功课: 提问前充分搜索, Google first;</li><li>明确问题: 实际上是第一步的前提, 而在搜索的过程中最好是能对问题有更明确的认知;</li><li>学会提问: 把遇到的问题说清楚也很重要. 提纲挈领地说出问题是什么、上下文/语境、自己做的准备、期望的回答内容……</li></ol><h3 id="学会搜索">学会搜索</h3><ul><li>入口<ul><li>网页端 Google, 注重隐私的话可以试试 DuckDuckGo（自己没咋用）</li><li>前移动时代或许这些就够了, 但现在的话还有平台的问题: 微信、微博; 知乎; 豆瓣; 京东、淘宝、闲鱼</li><li>再比如, 学术搜索的话还有另一套, 如 Google Scholar, dblp… 当然这就分学科了</li></ul></li><li>wiki (pedia)<ul><li>个人对于百度百科是否是 wiki 存疑 (仅针对词条的平均水准而言), 可靠性、倾向性、丰富性 等角度. 所以下述 wiki 均指 Wikipedia</li><li>另外还有很多领域性的开放wiki, 或者官方技术手册也属我所说的wiki范畴</li></ul></li><li>如何搜索<ul><li>这样的问题也是一搜一大把, 例如 <a href="https://www.zhihu.com/question/28013848">如何高效地使用搜索引擎？</a></li><li>搜索关键词: 似乎还有人直接扔一个问题给搜索引擎的, 现在的AI还没那么智能…… 推荐手动分割, 例如 <code>心理学 入门 书</code> 酱紫</li><li>准则: 够用就行. 不乏很多高级的用法, 要掌握多少因人而异. 以下介绍自己常用的, Google 语法, 参见 Google 官方的<a href="https://support.google.com/websearch/answer/2466433">优化网页搜索结果</a><ul><li><code>+-</code> 语法</li><li>站内搜索 <code>site:zhihu.com</code></li><li>模糊搜索, 例如 <code>巴*罗那</code></li></ul></li></ul></li></ul><h2 id="input">Input</h2><h3 id="阅读-vs-冲浪">阅读 vs 冲浪</h3><blockquote><p>关于相对系统性（但也更独裁）的书籍和相对自由开放更多可能性（也因此良莠不齐）的网页材料</p></blockquote><p>自己的高中年代, 书籍还是作为主要的内容来源（当然也与高中生的「任务」性质有关）; 进入大学后, 冲浪才成为越来越主要的信息来源. 然而, 不可否认, 书籍的系统性是很多网上材料所无法比的; 另外, 不同学科的特点也不能一概而论（例如CS相关自然更偏向电子媒介）. 以下姑且谈谈书面与网页形式的信息传递方式.</p><ul><li>书籍的优势在于, 首先是系统性. 大多数「教材」或专著性质的书籍都有这一特点, 自成一体; 相反网页信息有时会支离破碎.</li><li>媒介特点. 包括<ul><li>感官上的体验: 纸质版的手感; 视力友好</li><li><strong>非线性</strong>: 李如一老师在 <a href="https://yitianshijie.net/">一天世界</a> 播客中提到作为「瀑布流」的网页/APP 信息呈现方式; 书籍「可翻阅」的特性; 阅读过程中某一段话在书中的位置作为索引</li></ul></li><li>然而, 其也有缺点<ul><li>虽然也有参考文献等, 但其「连接能力」逊色电子材料</li><li>一言堂: 至少在一本书的体系内缺少他人的评论, 一般也没有如wiki般多人编辑的可能性（当然不去论「真理掌握在少数人手中」的情况）</li><li>实效性: 无法实时更新; 如Ai领域的更新迭代速度.</li></ul></li><li>而网页信息的优势在, 媒介形式丰富, 成本.</li><li>媒介特点<ul><li><strong>搜索</strong>: 相较前述书籍的「非线性」, 电子媒介的「可搜索」价值非常高</li><li><strong>链接</strong>. 包括 1) 内部跳转: 内容上的关联和组织; TOC 的价值. 2) 更重要的是外部链接的能力; <a href="https://en.wikipedia.org/wiki/World_Wide_Web">万维网</a> 的核心在其互连能力, 此所以诸多科技人对于公众号为典型的平台生态深恶痛绝之由</li><li>便于整理输出, 复制粘贴成本低（关联下面的笔记一节）</li></ul></li></ul><p>以上. 就个人而言, 也可能是专业原因, 更倾向于网页材料; 但这只是相对的, 具体实践上</p><ul><li>专业以外性质的书籍, 若同时有纸质和电子版, 个人优先后者, 留存性和搜索复制体验更好</li><li>教材等, 随时翻阅、便携、阅读体验 等因素, 也会考虑入纸质书</li><li>再如想了解一个领域, 甚至不知道应该搜什么关键词有什么优质的网站资源, 入手教材/经典文献以构建知识体系就很重要</li></ul><h3 id="相关推荐-暴论">相关推荐 (暴论)</h3><blockquote><p>私人向的讯息获取渠道整理. 纯属个人态度, 毫无参考价值</p></blockquote><p>讨论一下信息承载的不同媒介, 首要考虑的是电子化媒介.</p><p>从内容的形式来看, 文本还是最为重要的内容记录方式; 然而音视频正成为越来越重要的信源, 且高质量内容也越来越多.</p><ul><li>文本: 浏览、搜索、回顾、内容密度、传输代价（bytes） 等方面均有着很大的优势</li><li>图片: 形象、直观、美</li><li>视频: 信息的传达更亲切, 人声、配合可视化, 有时候传输效率要更高（不然为什么要教师呢？）</li><li>音频: 亲切感、陪伴性, 相较于前三者不需要眼睛, 所以更放松</li></ul><h4 id="传统图文">传统图文</h4><ul><li>信赖传统媒介<ul><li>例如, 传统新闻行业生产的内容平均质量肯定考虑互联网平均水准</li><li>一定程度上的「新闻专业主义」</li></ul></li><li>平台/渠道 有一定的相关性, 但追究下去可靠的还是背后的内容生产者</li><li>但平台的特质/氛围的重要性也不可忽略</li></ul><p>几个常用的内容平台</p><ul><li>公众号, 无可奈何的订阅渠道, 注意筛选</li><li>邮箱, 邮件订阅 Newsletter 逐渐成为了我获取新闻的重要途径; 邮件作为最古老的互联网服务的可靠性<ul><li>例如, <a href="https://www.getrevue.co/profile/qingmang">轻芒封面</a>, 作为消失了的「轻芒杂志」软件的延续; 轻芒团队的各种尝试都值得关注</li></ul></li><li>网页/Blog, 互联网最为本真的价值所在<ul><li>于是不可避免的提到 <a href="https://en.wikipedia.org/wiki/RSS">RSS</a>, 又是一个前移动时代的没落遗族, 一言以蔽之, 生成网络世界上任何内容的订阅</li><li>刚接触推荐 <a href="https://docs.rsshub.app/">RSSHub</a>; 软件的话 RSS 服务商我在用 <a href="https://www.inoreader.com/">Inoreader</a>, 软件是 Apple 生态的 Reeder</li></ul></li><li>知乎/豆瓣, 相对领域的搜索和浏览工具</li><li>Telegram<ul><li>是一款通讯（公开社区/个人日志/网盘/文件传输/Bot……）软件</li><li>通讯软件应该有的模样, 向所有人推荐的产品</li><li>VE老师曾专门做过 <a href="https://www.xiaoyuzhoufm.com/episode/6012e4ba34c8b9c2450d34f8?s=eyJ1IjogIjVlODFhMTg1MWJmYmJjM2RhZDg0YjA3MCJ9">一期播客</a> 介绍; 另外 Telegram 的理念、CEO Pavel Durov 的故事都值得八卦</li></ul></li><li>更为垂直领域的, 兴趣相关<ul><li>科技领域的 少数派</li><li>游戏相关的 机核</li><li>动漫相关的 Bangumi</li><li>文艺倾向的, 比如 三联中读、单读、MONO</li></ul></li></ul><h4 id="视频mooc">视频/MOOC</h4><p>视频平台的话, Bilibili+YouTube, 偶尔翻翻 <a href="https://admin.yixi.tv/">一席</a>; 最近在戒视频.</p><p>或许还有 MOOC（<a href="https://en.wikipedia.org/wiki/Massive_open_online_course">Massive open online course</a>）, 高三时候开始接触, 可惜自己没有利用好; 但确实是接触体系化知识的很好渠道</p><ul><li>中国大学MOOC <a href="https://www.icourse163.org/" class="uri">https://www.icourse163.org/</a> 高中时候先修课推荐过, 总体上内容挺全</li><li>Coursera <a href="https://www.coursera.org/" class="uri">https://www.coursera.org/</a> 声名赫赫就无需多言了, 记得还看过知乎上的这个问题 <a href="https://www.zhihu.com/question/22436320">Coursera 上有哪些课程值得推荐? - 知乎</a></li></ul><h4 id="播客">播客</h4><ul><li>2020年以来热度在不断上升, 但仍是相对小众的领域</li><li>监管的暂时性缺失; 其中的 海盗电台 特质（参见 蓬岸 Dr.Quest 的<a href="https://zhuanlan.zhihu.com/p/267865163">这篇</a> 讲稿）</li><li>也正因为其自发性、商业性的暂时性缺位, 而成为独立内容的自由空间</li><li>所以只推荐「泛用型播客」, 拒绝一切依托平台的内容;<ul><li>未免有些理想化了, 姑且算作期许; 此前用的一直是 Pocket Cast, 近期转了火热的小宇宙客户端</li></ul></li></ul><p>那就随便推荐几个</p><ul><li>李如一老师的 《<a href="https://yitianshijie.net/">一天世界</a>》 播客, 关于 艺术、生活、科技, 「精神与肉体上的强健」一语中的; 在播客中频繁被Q 的中文播客先驱, 也在某种程度上塑造了我对于这些方面的认知</li></ul><blockquote><p>用整体性的视角观察当代社会、技术文化以及商业风景, 对抗消费主义导向的论述, 强调对技术与艺术的敏锐感受力、以及精神与肉体上的强健. 我们的口号是:</p><p>What need have I for this, what need have I for that, I’m dancing at the feet of my lord, all is bliss, all is bliss.</p></blockquote><ul><li>程衍樑 的《忽左忽右》, <a href="https://justpodmedia.com/">JustPod</a> 应该是中文播客 Top1 的公司; 程老板是真正意义上的「和什么人都能聊」, 媒体人的趣味性和严肃性; 记得他说过有网页存档的习惯</li><li>方可成老师的《新闻实验》, 可以看做是那个消失了的 <a href="https://github.com/Newslab2020/Collection">新闻实验室</a> 的延续; 一直是邮件订阅的 Newsletter, 最近尝试的播客也值得期待;</li><li>哲学相关的 《翻转电台 FlipRadio》 和 《维生素E》</li><li>宝婷的《不可理论》, 私人化叙述播客的极佳写照</li></ul><h3 id="问题-信息茧房-信息过载">问题: 信息茧房 &amp; 信息过载?</h3><p>计划讨论久, 然终究无从谈起; 正身处困顿其中, 每个人自觉不自觉都发展出了一套方法论; 曾以为有所高低, 然越经历则越屈服于「存在即合理」; 求诸己则容易陷于「超我」与本能欲望的纠缠, 求诸客观性则容易跌落门外汉的新闻与传播理论.</p><p>那就问自己吧! 何为价值? 何为新闻? 自己身处何处? 欲前往何方?</p><h2 id="output">Output?</h2><p>不善网络社交/评论, 自己在这方面也毫无发言权; 以下仅针对 个人笔记和博客 性质的输出.</p><h3 id="为何输出">为何输出</h3><p>定时输出有很多切实上的好处. 例如</p><ul><li>阶段性的知识整理, 正如教别人是非常好的固化方式.</li><li>总结自己所思, 书写时更好的整理思维的方式, 明确自己的态度.</li><li>传教, 在网络上的传播.</li></ul><p>但总有些模糊, 或者, 换一个问题, 我为什么会选择维护这样一个网站? 回答其实是非常个人的, 因为在其中的体验, 收获, 所感, 所烦... 书写是一种烙印, 确证自己的生存.</p><h3 id="如何写笔记">如何写笔记</h3><p>从内容上来看各学科各异, 但总有些方法共性</p><ul><li>形式上的整洁和观看上的轻松 (就像字丑如我只好选择电子化);</li><li>「索引」或者说「整体框架」的重要, 观其概要;</li><li>对于观点的反思, 自己的倾向性;</li></ul><p>正如据说课堂上记笔记其实是非常低效的, 更好的方式或许是 课前/课后印发讲义, 在交互过程中才能更加专注于授者的思路与立场. 笔记并非目的, 更多是监督你去总结和反思的工具.</p><h3 id="笔记软件漫谈">笔记软件漫谈</h3><p>工具论警告. 只能说给出一个 guideline, 仅个人意见; 尤其是2020年以来笔记软件出现了很多新的选择.</p><p>下面零零总总提到了很多的软件/服务, 不妨简单尝试; 但不必过程追求大而全的方案, 选最顺手的那一款即可; 毕竟, 最重要的, 只是坚持记录.</p><ul><li>新手友好, 也是自己早期常用的<ul><li>Evernote 知名度非常高, 本土化的 印象笔记 也做出了很多优化, 但有着 臃肿、闭源、非纯文本 等不足, 而自己对于这些需求有着较大</li><li>Onenote 体验非常接近纸质笔记本; 但16版之后全部转为在线, 而对于换设备/多端用户, 其同步速度堪忧; 同样也存在格式原因导出困难的问题</li></ul></li><li>Markdown 软件<ul><li>Typora 仍然是各个平台预览编辑最优秀的软件之一; 文件管理和图片处理能力一般</li><li>MWeb「Pro Markdown writing, note taking and static blog generator App」<ul><li>如这句简介所言, 可以说是 Markdown 书写、管理、输出 的全链条;</li><li>优势在于 文件管理（利用数据库）、图片管理（包括图床）、输出（静态网页、外部网站）; 并且保障了一定的编辑和预览体验; 因此对于有一定输出需求的人来说很友好</li><li>缺点在于仅支持 Apple 生态</li><li>个人开发, 开发者在 TG 有问必回, 好得过分了</li></ul></li><li>Obsidian</li></ul></li><li>在线文档<ul><li>编辑体验: 此前是无法信任在线编辑的体验的, 但目前用飞书转变了态度; 在 响应速度、可靠性、快捷键支持 方面都足够优秀<ul><li>细节上的处理: 例如左侧的 TOC 对于「文档」性质的写作乃至普通文章书写都很有帮助</li></ul></li><li>另一个关联的其实是企业内部的文档系统, 很多大公司的轮子其实都大差不差; 相较于主流的toC服务如腾讯文档、石墨笔记 等, 其「文档」的属性更重些, 但作为个人知识库来用也没差</li></ul></li><li>其他<ul><li>Notion 在早期使用过, 其 block 等特性现在也被很多软件像素级抄袭; 但其在线性质和网络质量劝退</li><li>Zettelkasten 卡片盒、双链笔记 这些概念也有所了解, 但似乎并不适合自己, <strong>基于自身经验的类目+搜索</strong> 这样原始的方案目前来看也挺好用;</li><li>参见 yuchen_lea ｜ <a href="https://sspai.com/post/65273">请不要神化双链笔记</a></li></ul></li></ul><h2 id="misc">Misc</h2><h3 id="工具论">工具论</h3><p>曾经想过, 如果高中阶段看过中科大罗昭锋老师的 <a href="https://www.icourse163.org/course/USTC-9002">文献管理与信息分析</a> , 估计会少走很多弯路.</p><p>但现在想来, 更多是参考而非全盘接受; 习惯了自己的工作流 (并跌了很多跟头) 之后, 对于那些看似光鲜的方案的警惕性也越来越高; 重要的还是适合自己.</p><p>几个可考虑的维度</p><ul><li><strong>功能上的健全</strong>: 基本功能的可靠好用 (不比大而全, 90%的常用功能的优异; 特殊的需求交给更细分的工具)</li><li><strong>服务上的可靠</strong>: 云服务的不至于跑路, 需要迭代的不至于断更.</li><li><strong>格式上的通用</strong>: 尽量采用开源可迁移的方案 (对于工具本身的警惕/及时跑路)</li><li><strong>学习上的成本</strong>: 功能上的专业性和实际需求的迫切性上的权衡.</li></ul><h3 id="所谓基本技能">所谓「基本技能」</h3><ul><li>Office 全家桶<ul><li>CS相关人员或多或少应该有对其的沉重与封闭的鄙夷, 但不得不说其在大多数工作岗位上的重要性</li><li>自己不怎么用所以无法提建议, 但也经受过入学测试的考验, 基本使用还是没问题的</li><li>个人经验: 笔记工具显然有很多Word的替代方案; 相较于Excel简单情况在线文档即可替代较复杂的交给软件或数据库处理</li></ul></li><li>Adobe 全家桶<ul><li>或者说是图片和音视频处理能力, 多次尝试入门但无疾而终; 只能说需要付出较大的学习成本, 当然审美也是必须的</li><li>大学社团很多都有相关需求乃至培训, 反正掌握一手还是很有帮助的</li></ul></li></ul><h3 id="云服务杂谈-同步">云服务杂谈 &amp; 同步</h3><ul><li>「云」的诱惑是显见的, 多端同步, 不同尺寸的交互屏幕的天然适配, 相对稳定的服务体验...</li><li>一些隐患也是公认的: 不用说内容上的零隐私性, 由于审查甚至你上传也无法拥有它.</li><li>即使排除在隐私上的顾虑, 云服务本身的质量也难以让人满意. 1) 网络环境的不可靠性; 2) 使用上的卡顿 (对我来说文本编辑体验的毫秒级别卡顿也难以忍受); 3) 使用体验上的不足, 功能上的不健全...</li></ul><p>态度: 「不反感, 但谨慎选择, 非必要不使用」.</p><ul><li>既然很多东西选择了本地化, 那么对于多设备党需要考虑的就是「同步」方案. (但身边的多设备用户其实不多, 必要性值得怀疑)</li><li>需求: 可靠性; 速度; 上手难度. 当然会有「不可能三角」, 所以需求是分层级的.</li><li>可参考的方案: TailScale + Syncthing + GoogleDrive + GitHub. (Synology 弃用了)</li></ul><h2 id="总">总</h2><p>极端工具论不值得倡导, 但客观上总有一些相对比较成熟的「工作流」可供参考. 所以上面很多时候会从「工具」的角度来谈自己的看法, 但实非自己所愿 (也缺乏推介的欲望); 如果能从中反思相关的话题, 偶有所感才是我想达成的目标.</p>]]></content>
      
      
      <categories>
          
          <category> Meta </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 赛博 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>建站记录 1.0｜Hexo+Butterfly</title>
      <link href="/posts/672e8040/"/>
      <url>/posts/672e8040/</url>
      
        <content type="html"><![CDATA[<h2 id="start">Start</h2><p>总体方案：采用 Hexo+Butterfly 的静态博客方案；VS Code + Typora 编辑预览，git 版本管理 + GitHub Action 部署。</p><ul><li>doc <a href="https://hexo.io/zh-cn/docs/" class="uri">https://hexo.io/zh-cn/docs/</a></li><li>群晖下运行：需要套件 <code>Git Server</code> 和 <code>Node.js</code></li></ul><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  //安装Hexo</span><br><span class="line"></span><br><span class="line">hexo -v  //查看Hexo的安装是否正常</span><br><span class="line">hexo init hexo  //初始化Hexo</span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">npm install  //安装依赖包</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo s // 启动本地服务器</span><br><span class="line">hexo s -p 8082 // 设置端口，默认的端口是 4000</span><br><span class="line">hexo clean // 清除本地缓存</span><br><span class="line">hexo generator // 初始化文件</span><br><span class="line">hexo deploy // 提交文件到服务器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地调试</span></span><br><span class="line">hexo clean &amp;&amp; hexo server --draft --debug</span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate </span><br><span class="line">hexo douban  <span class="comment"># 用了douban插件</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="需求todo">需求/TODO</h3><ul><li>[ ] 一些基本需求<ul><li>[x] 配置发布到不同的 git，参见 <a href="https://www.voidking.com/dev-hexo-multi-git/">Hexo配置多个git仓库</a></li><li>[x] 保存目前的配置（主题配置+美化很耗时间）</li><li>[x] 自动部署 <a href="https://juejin.cn/post/6943895271751286821">如何使用 GitHub Actions 自动部署 Hexo 博客</a>；还可以 <a href="https://juejin.cn/post/6943628312933564452">使用 Travis CI 自动部署</a></li><li>[x] 备份 直接用 git 就好</li></ul></li><li>[ ] 功能项<ul><li>[x] Timeline/说说 <a href="https://github.com/ArtitalkJS/Artitalk">Artitalk.js</a> 头像不显示😭</li></ul></li><li>[ ] 优化<ul><li>[x] 网站性能测试 <code>lighthouse</code></li><li>[ ] 图片压缩<ul><li>[ ] 参见 <a href="https://blog.happyhack.io/2020/06/28/blog-day5/">博客优化：Hexo支持webp格式&amp;&amp;迁移到香港云主机</a> 202006 ⭐️</li><li>[x] 之前尝试了 <a href="https://www.npmjs.com/package/gulp-imagemin">gulp</a> 失败</li></ul></li><li>[ ] 国内访问速度优化；在dnspod上针对不同的线路配置不同的A记录</li></ul></li><li>[ ] fancy<ul><li>[x] 在线编辑体验 <a href="https://github.com/gethexon/hexon" class="uri">https://github.com/gethexon/hexon</a> 很fancy，但实际上可能没啥用😭（Code 赛高）。注意 <code>node install.js</code> 时候不要不要选择 <code>npm run prd</code> 直接pm2，因为安装的时候需要配置账号密码。之后可以 <code>yarn start</code> 启动；也可 <code>npm run prd</code> 用 pm2 启动（需要安装 <a href="https://pm2.keymetrics.io/docs/usage/quick-start/">pm2</a>；关闭 <code>pm2 stop hexon</code>）。</li><li>[ ] 有时间看看 <a href="https://www.cnblogs.com/yyhh/p/11058985.html">Hexo主题开发</a></li></ul></li></ul><h3 id="主题">主题</h3><ul><li><a href="https://github.com/theme-next/hexo-theme-next">NexT</a> 7.3k<ul><li>是基于原来的 <a href="https://github.com/iissnan/hexo-theme-next">NexT 项目</a> (15.7k)的社区维护版本；</li><li>中文教程 <a href="http://theme-next.iissnan.com/" class="uri">http://theme-next.iissnan.com/</a>；</li><li>推荐的 <a href="https://github.com/theme-next/awesome-next">插件列表</a> ⭐️</li></ul></li><li><a href="https://github.com/sanonz/hexo-theme-concise">Concise</a></li><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 2.9k<ul><li>Card UI Design; Two Column design;</li><li>主页 <a href="https://butterfly.js.org/">教程</a>；</li><li><a href="https://butterfly.js.org/posts/7670b080/">美化/魔改方案</a> 合集</li></ul></li><li><a href="https://github.com/volantis-x/hexo-theme-volantis/">Volantis</a><ul><li><a href="https://volantis.js.org/v5/getting-started/">文档</a> 写得超赞 ⭐️</li></ul></li><li><a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a><ul><li>Material Design</li><li><a href="https://hexo.fluid-dev.com/">主页</a> 和文档也不错子</li></ul></li></ul><h3 id="插件汇总">插件汇总</h3><ul><li>压缩混淆生成的 HTML、CSS、JS 文件 <a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> 插件</li><li>跨平台环境变量 <a href="https://github.com/kentcdodds/cross-env">cross-env</a> 跨平台环境变量设置脚本</li></ul><p>评论</p><ul><li><a href="https://github.com/gitalk/gitalk">GiTalk</a></li></ul><p>实用</p><ul><li><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 生成短链接</li><li><a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a> 字符统计</li><li><a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 本地搜索</li><li><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 生成 RSS</li><li><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a> 生成 sitemap</li><li><a href="https://github.com/hexojs/hexo-generator-index">hexo-generator-index</a> 文章置顶</li></ul><p>需求</p><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a> 索引豆瓣列表</li></ul><p>Math</p><ul><li><a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 基于pandoc 的渲染？<ul><li>Latex支持比较好，参见 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/MATH.md">Next 的说明文档</a>。替换默认的 <code>hexo-renderer-marked</code></li><li>并不推荐 <a href="https://github.com/sun11/hexo-renderer-kramed">hexo-renderer-kramed</a> ，实测也出了点问题</li></ul></li></ul><p>测试中</p><ul><li><a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a> PWA？</li></ul><p>主题相关</p><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a> 豆瓣索引</li><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-artitalk">hexo-butterfly-artitalk</a> 基于 ArtiTalk 的说说页面，Butterfly 主题自带了</li></ul><h2 id="功能项配置-butterfly">功能项配置｜ Butterfly</h2><blockquote><p>也算尝试了好几个博客方案了；其中方案的入门难度、配置难度、定制化程度各有差别，但找到一个好用的，然后深入了解才是正道。</p><p>这次详细看了 Buttery 的配置说明，也正好明确了个人博客的各种需求：从网页排版（页面设置、代码、图片、Math）、交互形式（评论、聊天室、分享）到增值（sitemap、广告、赞助、版权信息、复制行为）、网页性能相关（图片管理压缩、PWA等）。</p></blockquote><p>以下框架主要摘录自 <a href="https://github.com/ArtitalkJS/Artitalk">Butterfly</a> 的配置说明。</p><h3 id="开始">开始</h3><ul><li><a href="https://butterfly.js.org/posts/21cfbf15/">快速开始</a><ul><li>安装</li><li>应用主题</li><li>安装插件 <code>hexo-renderer-pug hexo-renderer-stylus</code></li><li>升级建议</li></ul></li></ul><h3 id="页面">页面</h3><ul><li><a href="https://butterfly.js.org/posts/dc584b87/">主题页面</a><ul><li>Front-matter</li><li>标签页 <code>hexo new page tags</code></li><li>分类页</li><li>友情链接 <code>hexo new page link</code><ul><li>链接在 <code>source/_data</code> 中的 <code>link.yml</code> 编辑</li></ul></li><li>图库<ul><li>子页面</li></ul></li><li>404页面</li></ul></li></ul><h4 id="front-matter">Front-matter</h4><p>以下分别是 post 和 page 的 Front-matter 配置选项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">updated:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">Software</span></span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"><span class="attr">cover:</span>      <span class="comment"># 文档页的小图，可以和 top_img 不同</span></span><br><span class="line"><span class="attr">sticky:</span> <span class="number">2</span>   <span class="comment"># 文章置顶，数字越大优先级越高</span></span><br><span class="line"><span class="attr">mathjax:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下是可调选项，自己一般用不上</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">toc_number:</span></span><br><span class="line"><span class="attr">copyright:</span></span><br><span class="line"><span class="attr">copyright_author:</span></span><br><span class="line"><span class="attr">copyright_author_href:</span></span><br><span class="line"><span class="attr">copyright_url:</span></span><br><span class="line"><span class="attr">copyright_info:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">highlight_shrink:</span></span><br><span class="line"><span class="attr">aside:</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">updated:</span> &#123;&#123; <span class="string">data</span> &#125;&#125;</span><br><span class="line"><span class="attr">aside:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选项</span></span><br><span class="line"><span class="attr">type:</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">mathjax:</span>        <span class="comment"># 显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">katex:</span>          <span class="comment"># 显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aplayer:</span>        <span class="comment"># 在需要的页面加载aplayer的js和css,请参考文章下面的 音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment"># 配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span></span><br></pre></td></tr></table></figure><h3 id="主题配置">主题配置</h3><p>参见 <a href="https://butterfly.js.org/posts/4aa8abbe/">主题配置1</a>；<a href="https://butterfly.js.org/posts/ceeb73f/">主题配置2</a>；</p><ul><li>语言</li><li>网站资料</li><li>导航菜单<ul><li>标签、分类、友情链接</li></ul></li><li>代码<ul><li>高亮主题</li><li>复制、代码框展开/关闭、换行、高度限制</li></ul></li><li>社交图标<ul><li>支持 <a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">font-awesome v5</a></li></ul></li><li>主页文章节选<ul><li>基于 <code>description</code> 字段或者自动生成</li></ul></li><li>顶部图<ul><li>分别设置 主页、默认；归档页；标签、类别的默认和各自的 顶部图。其他page的可以在 <code>top_img</code> 中设置</li><li>配置的值支持：留空、链接、颜色、透明 transparent、不显示 false</li></ul></li><li>文章置顶<ul><li>在文章中设置 <code>sticky: 1</code> 。数值越大，置顶的优先级越大。</li></ul></li><li>文章封面<ul><li><code>cover</code> 属性定义。可分别设置 index, aside, archives 中是否显示、显示的位置；默认图；放多张图片可以随机选择。自由度很高</li></ul></li><li>文章页相关配置<ul><li>文章meta显示：创建、更新日期；相对日期；分类；标签；描述文字description</li><li>文章版权</li><li>文章打赏</li><li>TOC：可用 <code>toc_number</code> 和 <code>toc</code> 在文章中单独控制</li><li>相关文章：根据文章tags的比重来推荐</li><li>文章锚点 anchor：随着页面滚动根据标题ID替换文章链接</li><li>文章过期提醒</li><li>文章编辑按钮</li><li>文章分页按钮</li></ul></li><li>头像 avatar</li><li>图片描述</li><li>复制相关配置｜字数超过一定有最后加上版权信息</li><li>Footer设置｜博客年份、自定义文本</li><li>右下角按钮<ul><li>简繁、夜间模式、阅读模式、字体大小</li></ul></li><li>侧边栏设置<ul><li>侧边排版 aside</li><li>访问人数｜<a href="http://busuanzi.ibruce.info/">busuanzi</a></li><li>运行时间</li><li>最新评论</li><li>自定义添加栏目</li></ul></li><li>Tag Plugins<ul><li>Note (Bootstrap Callout) 介绍了两种语法；第二种可自定义 icon</li><li>Gallery相册图库。这里写了一个 <code>&lt;div class="gallery-group-main"&gt;</code> 来放 <code>galleryGroup</code> ，似乎只是为了方便计算分割线位置</li><li><code>tag-hide</code> 隐藏一部分</li><li>mermaid</li><li>Tabs</li><li>Button</li><li>inlineImg</li><li>label 高亮词句 <code>&#123;% label text color %&#125;</code> ，可选 <code>default/blue/pink/red/purple/orange/green</code></li></ul></li><li>聊天区</li><li>Math<ul><li>还是MathJax方便些</li></ul></li><li>美化/特效<ul><li>自定义主题色</li><li>网站背景</li><li>footer 背景</li><li>打字效果 用了 <a href="https://github.com/disjukr/activate-power-mode">activate-power-mode</a></li><li>背景特效</li><li>鼠标点击效果</li><li>页面美化｜改变ol、ul、h1-h5的样式</li><li>自定义字体和字体大小</li><li>网站副标题（打字机效果）</li><li>主页top_img显示大小</li><li>页面加载动画preloader（加载速度）</li></ul></li><li>PWA<ul><li>需要插件 <a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a></li><li>可以尝试用 Google 的 <code>Lighthouse</code> 来检查网页性能</li></ul></li><li>字数统计，需要 <code>hexo-wordcount</code> 插件</li><li>图片大图查看模式｜但张图全屏；图片组合</li><li>Snackbar 弹窗</li><li>其他配置<ul><li>CSS 前缀。有些 CSS 并不是所有浏览器都支持，需要增加对应的前缀才会生效。（增加20%体积）</li><li>Open Graph。在 <code>head</code> 里增加一些 meta 资料，例如缩略图、标题、时间等等。当你分享网页到一些平台时，平台会读取 Open Graph 的内容，展示缩略图，标题等等信息。</li><li>Instantpage。当鼠标悬停到链接上超过 65 毫秒时，Instantpage 会对该链接进行预加载，可以提升访问速度。</li><li><code>Pangu</code>。在网页中所有的中文字和半形的英文、数字、符号之间插入空白。</li></ul></li><li>Pjax｜点击链接，通过ajax更新页面需要变化的部分，然后使用HTML5的pushState修改浏览器的URL地址；不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。<ul><li>对于一些第三方插件，有些并不支持 pjax 。可以把网页加入到 <code>exclude</code> 里</li></ul></li><li>Inject ｜添加额外的 js/css/meta 等等东西</li><li>CDN<ul><li>这里用的是 <a href="https://www.jsdelivr.com/">jsdelivr</a></li></ul></li></ul><h4 id="评论">评论</h4><ul><li><a href="https://disqus.com/">disqus</a></li><li><a href="https://github.com/giscus/giscus/blob/main/README.zh-CN.md">giscus</a> 一个新的基于 <a href="https://docs.github.com/en/discussions">GitHub Discussions</a> 驱动的评论系统；<a href="https://giscus.app/zh-CN">主页</a>；</li></ul><h3 id="进阶">进阶</h3><ul><li><a href="https://lilu.org.cn/2021/01/31/butterfly/">进阶教程</a><ul><li>音乐</li><li>电影，用 <a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a></li><li>自定义代码配色</li><li>自定义侧边栏</li><li>jQuery 加载<ul><li>主题已于 3.4.0 去除 jQuery 的引用，但是部分功能仍需要加载 jQuery（Justified Gallery和 fancybox)。</li><li>如果你仍需要使用 jQuery，可以调用主题提供的 function，防止 jQuery 多次加载。</li></ul></li><li>Gulp压缩<ul><li><a href="https://www.gulpjs.com.cn/">Gulp</a> 是一款自动化构建的工具，拥有众多的插件。而我们只需要使用到几个插件来压缩Html/css/js。</li></ul></li><li>PWA<ul><li>渐进式网络应用程式（英语：Progressive Web Apps，简称：PWA）是一种普通网页或网站架构起来的网络应用程式，但它可以以传统应用程式或原生移动应用程式形式展示给用户。</li><li>此方法是使用 Service Worker。我们使用 Workbox 这个工具生成 sw.js 以快速实现 Service Worker ，并实现页面的预缓存和页面更新后的提醒功能。</li></ul></li></ul></li></ul><h2 id="math">Math</h2><p>Butterfly 的说明文档用的 hexo-renderer-kramed 有些小问题，还是 参见 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/MATH.md">Next</a>，使用 <a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 渲染。</p><ul><li>注意卸载默认的 <code>hexo-renderer-marked</code> ；而 <code>hexo-renderer-kramed</code> 不会冲突但装了也没啥用。</li><li>但主题的配置文件还是要打开的，Next 主题的参见上链接；Butterfly 则是在主题配置中设置 mathjax 下的 <code>enable: true</code>。</li></ul><h3 id="latex-补课">Latex 补课</h3><h4 id="latex-math-mode">Latex math mode</h4><p>以下是（单行）公式的语法，内部排版就是用 math mode。f rom <a href="https://www1.cmc.edu/pages/faculty/aaksoy/latex/latexthree.html#">here</a>.</p><table><colgroup><col style="width: 31%" /><col style="width: 46%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: left;">Method</th><th style="text-align: left;">Special Characteristics</th><th style="text-align: left;">Usage</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>$....$</code></td><td style="text-align: left;">None</td><td style="text-align: left;">In-line math</td></tr><tr class="even"><td style="text-align: left;"><code>\begin&#123;equation&#125; \end&#123;equation&#125;</code></td><td style="text-align: left;">Goes to a newline and center equation with label</td><td style="text-align: left;">Equations</td></tr><tr class="odd"><td style="text-align: left;"><code>\[ ....\]</code> or <code>$$...$$</code></td><td style="text-align: left;">Goes to a newline and center equation</td><td style="text-align: left;">Equations with no label</td></tr></tbody></table><h4 id="latex-多行公式">Latex 多行公式</h4><ul><li>在 Typora 和 Code 中，<code>$$</code> 包裹的直接可用 <code>\\</code> 分行，但不符合 Latex 语法；</li></ul><p>以下 from <a href="https://zhuanlan.zhihu.com/p/24502400">知乎</a></p><ul><li>单行公式<ul><li>可以用 <code>\[ \]</code> 包裹，不编号；或者 <code>equation</code> 环境，编号。</li></ul></li><li>多行公式<ul><li>简单的多个公式的堆积，我们可以用 gather 和 align 环境。gather 环境中，所有的公式都是居中的；而 align 环境可以用 &amp; 符号指定位置对齐（比如按等号对齐）。<ul><li>两个环境都默认编号可以用 <code>\notag \nonumber</code> 指定不编号！ 【在 Typora 中不编号】</li></ul></li><li>如果我们是要把一个公式拆分成多行来书写，并给出一个单独的编号，那么上面的两个环境就不那么适用了。在这里为大家介绍 split 环境。split 环境需要嵌套在 equation 环境中使用，也支持像 align 环境中那样的对齐方式（但不能多列对齐）【而在 Typora 下不在 equation 下也可以，但本身就支持 <code>\\</code> 换行也不需要】</li><li>想把多个公式组合成一个大的公式，需要用到 cases 环境（也需要在 equation 环境中）；注意在每个 case 中，公式都会被变成行内公式。可以用 <code>\dfrac</code> 命令来强制让分式变成行间公式。（如果我们想简单地解决这个问题，就需要使用 mathtools 宏包定义的 dcases 环境，用法和 cases 完全相同，但是可以以行间公式的形式来排版每个 case。）</li></ul></li></ul><h5 id="区分-align-和-aligned">区分 <code>align*</code> 和 <code>aligned</code></h5><ul><li><code>aligned</code> 必须在 <code>$$</code> 或 <code>equation</code> 即单公式中使用，可以认为是对于单公式的拓展；</li><li>而 <code>align*</code> 则是 <code>align</code> 的不加编号的版本，多公式。</li><li>两者区别可体现在行距上。</li></ul><h3 id="codetypora-实践">Code/Typora 实践</h3><ul><li>在 Code 中预览/编辑<ul><li>使用插件 <code>Markdown Preview Enhanced</code> 可以预览 <code>gather</code> 等多公式环境；</li><li>而默认的不可预览多公式环境，但支持 <code>aligned</code>（可以理解为仅支持 Latex 中的 <code>$$</code> 环境而未引入 <code>amsmath</code> 包）；</li><li>需要注意的是，尽管在这两个环境中均支持直接 <code>\\</code> 换行，<strong>但是 <code>hexo-renderer-pandoc</code> 渲染结果是不会换行的</strong>，因此还是需要用 1. <code>split, cases, aligned, gather</code> 等环境实现单公式的换行（不需要在 <code>equation</code> 包裹，可理解为 Markdown 中的 <code>$$</code> 内部默认为 Latex 的 <code>$$</code> 语法）；2. 使用 <code>align, gather</code> 等多公式环境</li></ul></li><li>最佳实践<ul><li>在 Typora 或 Code 中使用 <code>Markdown Preview Enhanced</code> 预览编辑；需要注意的是单公式的换行；</li><li>关于公式编号， <code>Markdown Preview Enhanced</code> 和 pandoc 渲染结果是一致的，而 Typora 中则无；</li><li>还有之前一些语法问题<ul><li><code>Markdown Preview Enhanced</code> 默认用的是 <code>KaTex</code> 引擎，不支持 <code>E_\hat&#123;F&#125;</code> 等结果；之前用 <code>hexo-renderer-kramed</code> 会报错，而 pandoc 不会。不支持的包括<ul><li><code>E_\hat&#123;F&#125;</code> 等上下标复杂的情况，必须用 <code>E_&#123;\hat&#123;F&#125;&#125;</code>；</li></ul></li><li>很奇怪 pandoc 默认不支持 <code>\sqrt&#123;&#123;1\over B-1&#125;&#125;</code> 这样的语法，还是用 <code>\frac&#123;&#125;&#123;&#125;</code> 比较好</li></ul></li><li>不太清楚不同渲染引擎对于（不规范）语法的处理，总而言之，使用更为规范的 Latex 可以避免很多问题！</li></ul></li></ul><h3 id="公式引用">公式引用</h3><ul><li>Next 主题中添加了公式引用的功能，需要放在 <code>equation</code> （直接放在 <code>$$</code> 中无效！）或 <code>align</code> 等环境中<ul><li>给公式一个 <code>\label&#123;&#125;</code> 标记（tag）</li><li>采用 <code>\eqref&#123;&#125;</code> 进行引用（相较于 <code>ref</code> 引用两边有括号）。</li><li>实测在 <code>Butterfly</code> 主题中也能用！</li></ul></li><li>在 Typora 中不支持；Code 的 <code>Markdown Preview Enhanced</code> 中 <code>Math Rendering Option</code> 中也只有 <code>Katex</code> 可选，无法渲染引用；</li></ul>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 建站 </tag>
            
            <tag> Latex </tag>
            
            <tag> butterfly </tag>
            
            <tag> VS Code </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次 brew 权限错误</title>
      <link href="/posts/7c4c230b/"/>
      <url>/posts/7c4c230b/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述">问题描述</h3><p>在执行 <code>brew cleanup</code> 的时候因为权限问题报错， <code>Error: Permission denied @ apply2files</code>，具体的文件是 <code>ghostscript/9.27/Resource/CIDFSubst/paexg.ttf</code>，查看了一下是一个软连接指向 <code>/Library/TeX/Root/texmf-dist/fonts/truetype/public/ipaex/ipaexg.ttf</code>。（另外，好像没有这个文件） 而那个软链的所有者是 wheel 用户组下的 root 用户，因此出现了权限问题？（用下文中的 <code>cat /etc/group | grep wheel</code> 命令看了下这个组中只有 root 一个用户）。</p><p>于是搜到了这个问题 <a href="https://github.com/Homebrew/homebrew-core/issues/45009" class="uri">https://github.com/Homebrew/homebrew-core/issues/45009</a></p><p>看到有人的解决方案非常粗暴：直接重装 brew 【注意：会卸载所有通过 brew 安装的软件，慎用！】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)</span>&quot;</span></span><br><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解决方案修改-usrlocal-权限">解决方案：修改 <code>/usr/local</code> 权限</h3><p>另一个方案是修改整个文件夹的权限（不知道是否会带来后续隐患）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami):admin /usr/<span class="built_in">local</span>/* \</span><br><span class="line">&amp;&amp; sudo chmod -R g+rwx /usr/<span class="built_in">local</span>/*</span><br></pre></td></tr></table></figure><p>然后在执行 <code>brew cleanup</code> 就没问题了。</p><h4 id="后续zsh-警告">后续：zsh 警告</h4><p>果然，新开一个终端之后，zsh 警告</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">zsh compinit: insecure directories, run compaudit for list.</span><br><span class="line">Ignore insecure directories and continue [y] or abort compinit [n]? ncompinit: initialization aborted</span><br><span class="line">complete:13: command not found: compdef</span><br><span class="line">[oh-my-zsh] Insecure completion-dependent directories detected:</span><br><span class="line">drwxrwxr-x  3 frankshi  admin  96 Oct 25 12:03 /usr/local/share/zsh</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] For safety, we will not load completions from these directories until</span><br><span class="line">[oh-my-zsh] you fix their permissions and ownership and restart zsh.</span><br><span class="line">[oh-my-zsh] See the above list for directories with group or other writability.</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] To fix your permissions you can do so by disabling</span><br><span class="line">[oh-my-zsh] the write permission of &quot;group&quot; and &quot;others&quot; and making sure that the</span><br><span class="line">[oh-my-zsh] owner of these directories is either root or your current user.</span><br><span class="line">[oh-my-zsh] The following command may help:</span><br><span class="line">[oh-my-zsh]     compaudit | xargs chmod g-w,o-w</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] If the above didn&#x27;t help or you want to skip the verification of</span><br><span class="line">[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to</span><br><span class="line">[oh-my-zsh] &quot;true&quot; before oh-my-zsh is sourced in your zshrc file.</span><br></pre></td></tr></table></figure><p>里面写的很详细了！并且提到了 <code>compaudit</code> 来查看是那个目录有安全隐患。 （下面的那几条信息好像是我输入了 n 之后出现的？）</p><p>总之，就是要改某些文件夹的所有者和权限。 利用 <code>compaudit</code> 发现目录为 <code>/usr/local/share/zsh</code>。 我是直接将该目录的权限修改为 755，即 <code>sudo chmod -R 755 zsh</code>，再启动一个终端（或者 <code>source ~/.zshrc</code> ）显示正常。</p><p>参见 <a href="https://github.com/zsh-users/zsh-completions/issues/433" class="uri">https://github.com/zsh-users/zsh-completions/issues/433</a>；对于 zsh 报的权限问题，通用思路是</p><ol type="1"><li>run <code>compaudit</code> and it will give you a list of directories it thinks are unsecure</li><li>run <code>sudo chown -R username:root target_directory</code></li><li>run <code>sudo chmod -R 755 target_directory</code></li></ol><h3 id="补充关于-wheel-用户组">补充：关于 wheel 用户组</h3><p>参见 <a href="https://www.cnblogs.com/kerrycode/p/7053118.html">Linux下Wheel用户组介绍</a></p><blockquote><p>在Linux中为了更进一步加强系统的安全性，很有必要建立了一个管理员的组，只允许这个组的用户来执行“su -”命令登录为root用户，而让其他组的用户即使执行“su -”、输入了正确的root密码，也无法登录为root用户。在UNIX和Linux下，这个组的名称通常为“wheel”。而这个是在配置文件/etc/pam.d/su里面配置的。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> brew </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记mongo高占用 &amp; launchd 与 brew 初探</title>
      <link href="/posts/6f882ecb/"/>
      <url>/posts/6f882ecb/</url>
      
        <content type="html"><![CDATA[<p>问题描述：很长时间的问题是可以看到一个 <code>mongo</code> 进程高占用，CPU占用率 始终接近 100（即使通过 <code>brew services stop mongodb-community</code> 关闭服务后也是如此。</p><h3 id="临时解决">（临时）解决</h3><p>从 monitor 中看到该名为 <code>mongo</code> 的进程的父进程是 <code>launchd</code> ，也就是开机启动？（存疑）【因为，实际上，通过 <code>brew services run mongodb-community</code> 启动的服务是 <code>mongod</code>，并不会出现占用高的问题。】</p><p>将该进程手动结束后即可。</p><p>补充：通过 iTerm 连接 mongo 也会生成名为 <code>mongo</code> 的进程，但其父进程为 <code>zsh</code> 也不会出现高占用的问题。</p><h2 id="launchd-与启动管理">launchd 与启动管理</h2><h3 id="关于-launchd-进程">关于 launchd 进程</h3><p>参见 <a href="https://www.cnblogs.com/timelyxyz/p/3586136.html">Mac系统的launchd、守护进程daemon</a></p><p>Mac的守护进程目录有以下几处：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~/Library/LaunchAgents  <span class="comment"># 用户的进程</span></span><br><span class="line">/Library/LaunchAgents   <span class="comment"># 管理员设置的用户进程</span></span><br><span class="line">/Library/LaunchDaemons  <span class="comment"># 管理员提供的系统守护进程</span></span><br><span class="line">/System/Library/LaunchAgents    <span class="comment"># Mac操作系统提供的用户进程</span></span><br><span class="line">/System/Library/LaunchDaemons   <span class="comment"># Mac操作系统提供的系统守护进程</span></span><br></pre></td></tr></table></figure><p>另：<code>/Library/StartupItems</code> 这个目录下也有可能存在开机启动项目的配置 以上是launchd的相关配置的存放目录，可以看到，一般我们个人编写的守护进程，都应该放到~/Library/LaunchAgents目录里面。</p><h3 id="launchctl-启动进程控制">launchctl 启动进程控制</h3><p>参见 <a href="https://www.jianshu.com/p/eee8a7de179c">控制macOS的开机启动</a></p><p>上一节几个目录下存放的是各项服务的配置文件，而如何管理启动服务？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有自启动项</span></span><br><span class="line">launchctl list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自启动项</span></span><br><span class="line">//launchctl工具提供了一系列接口方便使用launchd程序</span><br><span class="line">launchctl load ~/Library/LaunchAgents/aria2.plist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动自启动项</span></span><br><span class="line">launchctl start aria2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除自启动项</span></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/aria2.plist</span><br></pre></td></tr></table></figure><h3 id="librarylaunchagents-文件夹"><code>~/Library/LaunchAgents/</code> 文件夹？</h3><p>之前看到 Github 上有通过删除 <code>~/Library/LaunchAgents/</code> 文件夹下相应文件来删除自启动项的。但按照上文的说法，似乎这里仅仅是个配置文件？</p><p>以 ElasticSearch 为例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ cat homebrew.mxcl.elasticsearch.plist</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="meta-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>homebrew.mxcl.elasticsearch<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/opt/elasticsearch/bin/elasticsearch<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>EnvironmentVariables<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>WorkingDirectory<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var/log/elasticsearch.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var/log/elasticsearch.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>正确的使用，似乎应该通过上面的 <code>launchctl load</code> 来进行注册？ 【当然，删除应该也是可以的；另外，<code>brew services start</code> 有所不一样。 我好像将该文件夹下的 <code>homebrew.mxcl.mongodb-community</code> 删除了，但通过 <code>brew services start</code> 仍然会生成自启动项 —— 应该是直接关联了模板文件，见下。】</p><h4 id="添加自启动项">添加自启动项</h4><p>看到这个问题 <a href="https://stackoverflow.com/questions/8014500/macosx-autostart-mysql-on-boot" class="uri">https://stackoverflow.com/questions/8014500/macosx-autostart-mysql-on-boot</a> 里面提到了如何配置 mysql 的自动启 —— 对于 brew 安装的应该是不用的，<strong>因此也适用于下载包来进行安装的软件</strong>？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchAgents</span><br><span class="line">cp `brew --prefix mysql`/*mysql*.plist ~/Library/LaunchAgents/</span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/*mysql*.plist</span><br></pre></td></tr></table></figure><p>可见，就是将 mysql 本身的自启动项配置文件复制到了 <code>~/Library/LaunchAgents</code> 下，然后使用 <code>launchctl load</code> 添加配置。</p><h4 id="brew---prefix-查看安装位置">brew --prefix 查看安装位置</h4><p>注意到，上面用到了 <code>brew --prefix</code> 查看命令 <code>brew --prefix --help</code>：「Display Homebrew's install path.」</p><p>例如 <code>brew --prefix mongodb-community</code> 的结果就是 <code>/usr/local/opt/mongodb-community</code>。</p><h3 id="查看搜索自启动项">查看/搜索自启动项</h3><p>用 <code>launchctl list</code> 命令来查看。例如，可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl list | grep mongo</span><br></pre></td></tr></table></figure><p>来搜索 mongo 启动项。</p><p>返回的一个结果 <code>33814 0 homebrew.mxcl.mongodb-community</code> 的配置文件在 <code>~/Library/LaunchAgents</code> 目录下。</p><h3 id="补充">补充</h3><p>这个关于 <a href="https://medium.com/@petehouston/install-and-config-redis-on-mac-os-x-via-homebrew-eb8df9a4f298">brew 管理 Redis</a> 的教程也列出了一些相关命令，包括 <code>launchctl</code> 的使用，redis 的配置文件 <code>/usr/local/etc/redis.conf</code> 等。</p><h2 id="brew-使用">brew 使用</h2><h3 id="brew-services">brew services</h3><p>以下是 <code>brew services -h</code> 的结果，可知</p><ul><li><code>brew services start</code> 会启动服务<strong>并且设置开机自启</strong></li><li><code>brew services run</code> 则单纯启动，而不会设置开机自启</li><li><code>brew services stop</code> 会关闭服务并且取消开机自启</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ brew services -h</span><br><span class="line">Usage: brew services [subcommand]</span><br><span class="line"></span><br><span class="line">Manage background services with macOS&#x27; launchctl(1) daemon manager.</span><br><span class="line"></span><br><span class="line">If sudo is passed, operate on /Library/LaunchDaemons (started at boot).</span><br><span class="line">Otherwise, operate on ~/Library/LaunchAgents (started at login).</span><br><span class="line"></span><br><span class="line">[sudo] brew services [list]:</span><br><span class="line">    List all managed services for the current user (or root).</span><br><span class="line"></span><br><span class="line">[sudo] brew services run (formula|--all):</span><br><span class="line">    Run the service formula without registering to launch at login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services start (formula|--all):</span><br><span class="line">    Start the service formula immediately and register it to launch at login</span><br><span class="line">(or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services stop (formula|--all):</span><br><span class="line">    Stop the service formula immediately and unregister it from launching at</span><br><span class="line">login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services restart (formula|--all):</span><br><span class="line">    Stop (if necessary) and start the service formula immediately and register</span><br><span class="line">it to launch at login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services cleanup:</span><br><span class="line">    Remove all unused services.</span><br><span class="line"></span><br><span class="line">      --all                        Run subcommand on all services.</span><br><span class="line">  -d, --debug                      Display any debugging information.</span><br><span class="line">  -q, --quiet                      Make some output more quiet.</span><br><span class="line">  -v, --verbose                    Make some output more verbose.</span><br><span class="line">  -h, --help                       Show this message.</span><br></pre></td></tr></table></figure><h3 id="brew-info">brew info</h3><p>描述是 「Display brief statistics for your Homebrew installation.」非常有用！ 例如下面 <code>brew info mongodb-community</code> 显示了启动 mongo 服务的命令； 另外，对于如未安装的 musql 服务也可显示相关信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ brew info mongodb-community</span><br><span class="line">mongodb/brew/mongodb-community: stable 4.4.4</span><br><span class="line">High-performance, schema-free, document-oriented database</span><br><span class="line">https://www.mongodb.com/</span><br><span class="line">/usr/local/Cellar/mongodb-community/4.4.3 (11 files, 156.8MB) *</span><br><span class="line">  Built from source on 2021-03-18 at 14:34:09</span><br><span class="line">From: https://github.com/mongodb/homebrew-brew/blob/HEAD/Formula/mongodb-community.rb</span><br><span class="line">==&gt; Dependencies</span><br><span class="line">Recommended: mongodb-database-tools ✘</span><br><span class="line">==&gt; Options</span><br><span class="line">--without-mongodb-database-tools</span><br><span class="line"> Build without mongodb-database-tools support</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start mongodb/brew/mongodb-community now and restart at login:</span><br><span class="line">  brew services start mongodb/brew/mongodb-community</span><br><span class="line">Or, if you don&#x27;t want/need a background service you can just run:</span><br><span class="line">  mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ brew info mysql</span><br><span class="line">mysql: stable 8.0.23 (bottled)</span><br><span class="line">Open source relational database management system</span><br><span class="line">https://dev.mysql.com/doc/refman/8.0/en/</span><br><span class="line">Conflicts with:</span><br><span class="line">  mariadb (because mysql, mariadb, and percona install the same binaries)</span><br><span class="line">  percona-server (because mysql, mariadb, and percona install the same binaries)</span><br><span class="line">Not installed</span><br><span class="line">From: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/mysql.rb</span><br><span class="line">License: GPL-2.0-only</span><br><span class="line">==&gt; Dependencies</span><br><span class="line">Build: cmake ✘</span><br><span class="line">Required: openssl@1.1 ✘, protobuf ✘</span><br><span class="line">==&gt; Caveats</span><br><span class="line">We&#x27;ve installed your MySQL database without a root password. To secure it run:</span><br><span class="line">    mysql_secure_installation</span><br><span class="line"></span><br><span class="line">MySQL is configured to only allow connections from localhost by default</span><br><span class="line"></span><br><span class="line">To connect run:</span><br><span class="line">    mysql -uroot</span><br><span class="line"></span><br><span class="line">To have launchd start mysql now and restart at login:</span><br><span class="line">  brew services start mysql</span><br><span class="line">Or, if you don&#x27;t want/need a background service you can just run:</span><br><span class="line">  mysql.server start</span><br></pre></td></tr></table></figure><h2 id="mongo-任务管理">mongo 任务管理</h2><p><code>db.currentOp()</code> 可查看在执行的任务？而 <code>db.killOp(290014)</code> 的参数为 <code>opid</code> 的值。 与本次问题无关。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> brew </tag>
            
            <tag> launchctl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>「隐私」议题 + Apple 原生软件新体验</title>
      <link href="/posts/e9637c65/"/>
      <url>/posts/e9637c65/</url>
      
        <content type="html"><![CDATA[<p>鉴于最近的一些事件（包括 跨平台商品推荐、对软件隐私条例的阅读、邮箱被盗用 等），对于「隐私」进行了一定反思和实践。 想来之前对其没有太多的关注，因此可能在各个场景下泄露了很多信息而不自知，之后会对这一议题进行更多的关注和实践。</p><span id="more"></span><h2 id="关于隐私问题">关于隐私问题</h2><p>当然，如何去定义「隐私安全」也是一个很难且模糊的问题；而对于自己一个小白来说更是如此。 对于自己来说，对于这一问题的关注出发于个体对于「被窥探」的本能厌恶和恐惧，理想的是非常朦胧的「保有个体自由」，期待：</p><ol type="1"><li>平台之间的数据独立：能够在不同的平台呈现/扮演个性中不同分量，而不被跨平台追踪；</li><li>和现实的隔离：关乎个人物理信息的方方面面，不完全罗列 —— <strong>身份证、手机号、居住地（包括定位）、照片（抵制人脸识别）、教育和工作信息</strong> 等；</li><li>建立在上述两点之上的「虚拟性」：套用一句话，「对方不知道这个账号之下是人是狗」；</li></ol><p>目前的总体实践原则：基于对 Apple 和 Google 的相对信任，减少其他平台的账号注册和信息泄露。</p><p>因此，以下所讨论的多是从一些更「便捷」的软件转为 Apple 原生，去选择某种「不方便」；当然，不涉及任何道德判断，仅做个人反思与实践记录。</p><h3 id="相关讨论引">相关讨论（引）</h3><h4 id="手机隐私实践">手机隐私实践</h4><p>少数派 <a href="https://sspai.com/post/65277">如何更好地保护手机数据隐私？这 10 款 App 你可能用得上</a> 介绍了</p><ul><li>图片<ul><li>删除照片的 EXIF 信息：EXIF Viewer &amp; Photo EXIF Editor</li><li>隐私信息打码：归空 &amp; 纯纯打码</li></ul></li><li>上网<ul><li>保护网络浏览、搜索信息：DuckDuckGo</li><li>屏蔽网页追踪：AdGuard</li></ul></li><li>信息安全<ul><li>保护真实号码：运营商小号 &amp; 阿里小号 &amp; Google Voice</li><li>加密邮箱：ProtonMail</li></ul></li></ul><h4 id="数字生活入门指南">数字生活（入门）指南</h4><p>还有这篇 <a href="https://sspai.com/post/62123">写给大学新生的数字指南</a> 谈了数字生活的几个方面</p><ul><li>手机号</li><li>邮箱</li><li>ID - 网名</li><li>域名</li><li>密码管理</li></ul><h4 id="关于密码管理的讨论">关于密码管理的讨论</h4><p><a href="https://sspai.com/post/35519">如何设置密码才更安全高效？我的密码管理方法</a> 其实讲得有点细碎不够体系，但还是有很多可呼应的地方</p><ul><li>密码管理<ul><li>尽量减少同一密码的多次使用</li><li>大平台一定要有独立的密码</li><li>尽量选择第三方登录而不是注册新账号</li></ul></li><li>密码分类<ul><li>最重要的账号：支付、社交、第三方</li><li>可以第三方登录的</li><li>需要独立注册的</li><li>注册一次就不会再回来用的</li></ul></li></ul><h2 id="apple-原生软件尝试替换">Apple 原生软件尝试/替换</h2><h3 id="地图">地图</h3><p>继上周从同学那儿发现 iOS 原生的 maps 也「堪用」之后，今天下载尝试了 maps，本地化还不错。</p><ul><li>缺点<ul><li>一个问题是 maps 无法单独切换软件语言（只能在设置中切换地图标记的语言，但是软件的界面仍然是英文的）；然而由于地图还是显示中文的，所以实际上对于使用体验的影响也不大（况且，最近常想到的一点：<strong>现今时代，有时需刻意制造一种「不方便」</strong>）</li></ul></li><li>优点<ul><li>时间预估也还可以，定位和导航也都堪用；</li><li>最满意的一点，是和原生系统的交互非常好，例如可以和 Contacts 中保存的地址交互；</li></ul></li></ul><h3 id="输入法">输入法</h3><p>iOS 输入法换成原生 inputs 之后，也尝试逃离「搜狗输入法」。初步体验之后，发现中文「简体输入法」的体验其实还不错。</p><ul><li>转换/技巧<ul><li>中英文切换，相较于搜狗好用的 Shift 键，设置中可配置为「中/英」（长按则为大写锁定，而想要暂时输入大写符号可按住 <code>Shift</code> 键的同时键入）；</li><li>对于 <code>「」</code> 可采用组合键 <code>Shift+[]</code> ；测试过在 Chrome 地址栏和 MWeb 中，单直角引号环境下重复上述组合键可输入 <code>『』</code>，但是在一些第三方环境例如 iCity 网页版中就无法成立；</li><li>比较困难的是代码符号，现有两种方案：1. 切换为英文；2. 自定义文本替换，比如定义 <code>co</code> 和 <code>code</code>。目前都在使用。<ul><li>另外，有人回复说「用 karabiner 把左 ctrl 或者右 shift 改成 ` 符号」，考虑到兼容性和 less 原则，暂不尝试</li></ul></li><li>其他一些不方便之处配合 <code>Control+Command+Space</code> <strong>唤出符号键</strong> 来解决吧～</li></ul></li><li>讨论<ul><li>关于是否要在中文中使用英文标点，配置中也可设置，但考虑到习惯问题暂时放弃。1. 事实上，仅仅是「半角/全角」的切换，因此像是英文下的 <code>\</code> 和代码符号仍然无法使用；2. 还有我经常使用的 <code>【】</code> 标点；</li><li>关于中英文之间自动加空格，V2EX 上 <a href="https://www.v2ex.com/t/476875">有过讨论</a>，其中提到不应该自动化处理，想来也有道理，「形成肌肉记忆」之后自主去添加更为合理；</li></ul></li><li>好用的地方<ul><li>输入中文的 emoji 名字后可直接选择 😁；其实只有一小部分，emoji 的中英文名字对照参见 <a href="https://www.emojiall.com/zh-hans/all-emojis" class="uri">https://www.emojiall.com/zh-hans/all-emojis</a>；（当然自己日常使用也不会用到很多）</li></ul></li><li>几个可吐槽的地方：<ul><li>词汇学习非常之糟糕，输了一遍之后第二遍仍然找不到姓名/词汇（应该是要反复很多次才可）；另外，如果不重复的非常「健忘」</li><li>还有除了「文本替换」之外，设备之间似乎不会同步（存疑，或者说同步周期很慢）</li></ul></li></ul><p>参 V2EX 上的讨论 <a href="https://www.v2ex.com/t/502453">Apple 各设备之间的输入法会同步词库吗</a> 当然，这些特性在一定程度上保护了个人隐私 —— 还是选择问题，在于你是否要是否愿意去接受这种「不方便」。</p><p>附一篇 <a href="https://sspai.com/post/31525">技巧：Mac 里的文字输入效率</a> 但「不折腾」为原则，目前不想细看……</p><h2 id="邮箱">邮箱</h2><p>【其实邮箱的实践才关乎这里的「隐私」议题。目前总体就是从「网易邮箱大师」转为原生 Mail 和网页版。 又是一个折腾了很久的问题，以下摘录自己的一些思考/实践（原文涉及隐私就不放了，主要是自己懒得重新写了）。 自己也用不来邮箱，正在摸索中……】</p><h3 id="todo-list">TODO list</h3><ul><li>[x] 清空邮箱</li><li>[x] Gmail 使用学习<ul><li>官方帮助 <a href="https://support.google.com/mail" class="uri">https://support.google.com/mail</a></li><li>Google Workspace 的教程，例如这一篇 <a href="https://support.google.com/a/users/answer/9260550?hl=zh-Hans&amp;ref_topic=9259942">管理收件箱</a> 很赞</li></ul></li><li>用哪些邮箱<ul><li>Gmail 主邮箱<ul><li>需不需要副邮箱？</li></ul></li><li>参 macOS 设置中 「Internet Accounts」中的列表：iCloud, Microsoft Exchange, Google, yahoo, 163, 126, QQ</li></ul></li><li>解决 Gmail 的使用问题<ul><li>[ ] 学点 Surge？</li><li>[ ] 常规解决：用 Proxifier？【失败】参见 <a href="https://www.xiebruce.top/1061.html">这一篇</a></li><li>[x] 替代方案：采用 Chrome 程序的方式，启用「桌面通知」（在 Gmail 的配置 - 常规 - 桌面通知 中）参见 <a href="https://support.google.com/mail/answer/1075549?hl=zh-Hans">这里</a></li></ul></li><li>邮箱软件的选择问题<ul><li>原生邮箱的隐私性是主要因素<ul><li>和系统的集成度非常高</li><li>「window - connect doctor」非常好用！可以监测网络情况（考虑到邮件的特殊性，之前折腾了很久，在 global 和 rules 之间反复横跳，失败太多次了）</li></ul></li><li>缺点：配置相对比较复杂</li></ul></li></ul><h3 id="当前实践">当前实践</h3><p>总结一下目前的配置情况：</p><ul><li>Internet Accounts<ul><li>在 macOS 的「Internet Accounts」中配置了 iCloud, Outlook(Microsoft Exchange), Google, Yahoo 和 FDU 邮箱</li><li>毕竟这些账户和 Mail, Contacts, Calendars, Notes 等的集成度较高；</li><li>但实际上点选了 「Mail」 的也只有 iCloud 和 FDU 邮箱，主要是网络问题；</li></ul></li><li>Mail<ul><li>就「Mail」应用来说，Gmail 暂不去折腾了；</li><li>另外几个国外账号的稳定性也不是很好；另外 iCloud 邮箱居然在全局模式下网络无法连接；</li><li>less 原则：iCloud 本身就不常用，但是 Apple 自家所以先挂着；FDU 邮箱是需要接收信息；FDU</li></ul></li><li>Chrome APP<ul><li>转 Chrome APP 居然也很好用，包括 Gmail, Outlook，另外 iCloud mail, FDU 也设置了权且作为冗余吧</li><li>其中 Gmail, Outlook 是支持桌面通知的，但 Gmail 配置好了居然无效，可能仍然不是通过 HTTP 接收的？</li></ul></li><li>配合手机端「Gmail」使用<ul><li>首先自然是为了解决 Gmail 的通知问题；还有点很重要的好处是 Google 账号的管理（见下）</li></ul></li></ul><h3 id="邮件管理">邮件管理</h3><p>Gmail 复杂但也好用，可翻阅其文档。</p><ul><li>[ ] to be added...</li></ul><h4 id="转邮件的层级管理">【转】邮件的层级管理</h4><p>来自知乎上关于 <a href="https://www.zhihu.com/question/21361411">如何管理多个邮箱</a></p><p>根据你的情况，我建议你可以分层级来管理自己的邮箱/账号。</p><ul><li>第一层：你有一个单独用来注册账户的邮箱，那么不重要的网站全部用其注册即可。然后你就可以完全不用管这个邮箱了，放那长草就行了。不要在客户端（尤其是移动端）里添加它，定期（比如两个星期）去网页端看一下就可以了。</li><li>第二层：银行、亚马逊等网站，用另一个邮箱注册，然后想办法退订或屏蔽广告、优惠信息等无用的邮件，或者把账单等有用的邮件自动转发到第三层。这一层的邮箱可以添加到你电脑上的客户端，但是未必需要添加到移动端，因为基本不需要处理。</li><li>第三层：也就是你的私人或工作邮箱，真正用来通讯的邮箱，不要用来注册任何账号，把它添加到你的电脑和移动客户端并设置提醒和推送。这些是真正需要及时处理的。可以根据自己的情况灵活地增减层级。</li></ul><h4 id="域名邮箱">域名邮箱？</h4><p>起因是看到知乎上一篇介绍利用微信企业邮箱来给自购的域名配置邮件服务的 <a href="https://zhuanlan.zhihu.com/p/22421809">文章</a>，但这个以「个性化」为目的的折腾也过于无趣…… 或许有精力可折腾自建个邮箱服务器</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> 隐私 </tag>
            
            <tag> 邮箱 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + 反向代理服务设置及其他</title>
      <link href="/posts/e8011b29/"/>
      <url>/posts/e8011b29/</url>
      
        <content type="html"><![CDATA[<p>IOIOX 上有一系列完整的教程……</p><ul><li>IOIOX Synology 专栏 <a href="https://www.ioiox.com/synology.html" class="uri">https://www.ioiox.com/synology.html</a></li><li>IOIOX FRP 内网穿透 专栏 <a href="https://www.ioiox.com/frp.html" class="uri">https://www.ioiox.com/frp.html</a></li><li>大佬专门的 FRP 网站的教程页 <a href="https://freefrp.net/docs.html" class="uri">https://freefrp.net/docs.html</a>；<ul><li>FRP 的官网在 <a href="https://gofrp.org/" class="uri">https://gofrp.org/</a> TODO</li></ul></li></ul><h3 id="关于-ssl-证书">关于 SSL 证书</h3><p>原理有待学习。 IOIOX 上有 <a href="https://www.ioiox.com/archives/12.html">腾讯云的免费申请教程</a>；当然直接进其后台有更为简洁的方案。 问题是腾讯云只支持 单域名的证书；而泛域名（例如所有的二级有域名 <code>*.example.com</code>）都是要收费的；网站上另外的 <a href="https://www.ioiox.com/archives/13.html">免费申请Let's Encrypt泛域名SSL证书教程</a> 教程好像失效了。</p><h2 id="反向代理内网穿透-实现无端口访问">反向代理+内网穿透 实现无端口访问</h2><p>主要参考：<a href="https://www.ioiox.com/archives/85.html">群晖NAS反向代理 + 内网穿透 = 无需端口访问内网所有服务无需端口</a></p><h3 id="基本原理">基本原理</h3><p><code>http</code>协议标准端口为<code>80</code>,<code>https</code>协议标准端口为<code>443</code>. 一个网站或者 web 服务是<code>同时支持</code> http 和 https 两种协议,目前已经慢慢普及 https 的加密协议,本文不再详细介绍,请自行搜索研究.</p><h4 id="反向代理">反向代理</h4><p><strong>群晖反向代理服务器</strong> 首先占用群晖NAS的<code>80/443</code>端口,使用任何域名无端口访问(上面提到过无端口即是用 <strong>80/443</strong> 端口),都会访问到反向代理服务器,由它根据来访域名再次转发给本机或者内网其他的服务. 例如普遍的VPS服务器安装的 <strong>nginx</strong> 就是反向代理服务器,所以一个服务器是可以配置多个网站同时使用 <strong>80/443</strong> 端口的,群晖中的 <strong>Web Station</strong> 和 <strong>反向代理服务器</strong> 都是使用的 <strong>nginx</strong>.</p><h4 id="内网穿透">内网穿透</h4><p>前言已经明确家庭宽带是没有<code>80/443</code>端口的,那么上文提到反向代理服务器是使用<code>80/443</code>端口,外网是无法访问到的,那么就需要配合内网穿透服务来使外网能够访问到群晖的反向代理服务器的<code>80/443</code>端口.<br />内网穿透需要一台拥有 <code>公网IP</code> 和 <code>80/443</code> 端口的服务器,一般云服务商提供的VPS服务都可以满足需求,并部署 frps 服务器端.下文简称为<code>frp服务器</code>.所以当你想访问内网的网站,实际上是先访问到 <code>frp服务器的80/443端口</code>, 在由<code>frp 服务器</code>转发到内网的<code>群晖反向代理服务器</code> 的 <code>80/443</code> 端口, 在由<code>群晖反向代理服务器</code> 转发给 <code>5000/5001/3001/80</code>等端口.</p><p>由此可见,其实内网穿透 <code>frp 服务器</code> 本身也是一个反向代理服务器,高级用户完全可以无需使用群晖的反向代理服务器,直接在<code>frpc.ini</code> 中配置各个域名和内网端口即可实现.</p><p>但是我发现很多新手用户对 <code>frpc</code> 的使用并不熟悉,而且部分服务例如本文提到的<code>人人影视</code>以及本站推荐的<code>Bitwarden</code>密码管理服务都没有原生提供<code>https</code>支持, 虽然<code>frpc</code>是可以配置证书的, 但对于新手来说更加复杂, 所以才有了本文这种以群晖反向代理为核心的方案:</p><ul><li>内网穿透<code>frp服务器</code>提供<code>80/443</code>端口穿透.</li><li>群晖反向代理服务器提供<code>https</code>及<code>SSL 证书</code>支持,并提供反向代理到内网各设备和服务.</li></ul><h3 id="基本配置">基本配置</h3><p>准备<code>frp 服务器信息</code>,本站已提供免费服务.详情参考:<a href="https://www.ioiox.com/frp.html">FRP内网穿透专栏</a>.<br />获取<code>服务器地址</code>,<code>端口</code>,<code>Token</code>.</p><ul><li>服务器地址: free.frp.ioiox.com</li><li>端口: 7007</li><li>Token: www.ioiox.com</li></ul><p>配置例如<code>*.ioiox.com</code>的泛域名,<code>CNAME</code>指向<code>frp 服务器地址</code>.其含义是指访问任何二级域名都是访问到<code>frp 服务器</code>, 由<code>frp 服务器</code>转发到内网<strong>群晖反向代理服务器</strong>.</p><h4 id="配置内网穿透">配置内网穿透</h4><p>内网穿透客户端<code>frpc</code>的安装参考<a href="https://www.ioiox.com/frp.html">FRP内网穿透专栏</a>一文中的<strong>客户端 frpc 安装教程汇总</strong>, 推荐使用<code>docker</code>方式安装. 【下文有摘录】</p><p>配置<code>frpc.ini</code>如下:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = free.frp.ioiox.com</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7007</span></span><br><span class="line"><span class="attr">token</span> = www.ioiox.com</span><br><span class="line"></span><br><span class="line"><span class="section">[http_xxxxxxx]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.4</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.ioiox.com</span><br><span class="line"></span><br><span class="line"><span class="section">[https_xxxxxxx]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.4</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.ioiox.com</span><br></pre></td></tr></table></figure><h4 id="配置群晖反向代理">配置群晖反向代理</h4><p>控制面板 - 应用程序门户 - 反向代理服务器</p><p>你可以根据需求自行在此配置更多反向代理设置,可以代理内网的任何设备,例如群晖NAS,路由器,虚拟机,树莓派等等.同时反向代理服务器还可以为不提供 https 支持的服务提供<code>https</code>及<code>SSL 证书</code>. 【注意】可直接对于 https 的地址配置为本地的 http 地址，这一点非常方便。</p><h4 id="配置证书">配置证书</h4><p>配置完成后在 <strong>安全性 - 证书</strong> 中把新增的反向代理配置相应的证书.</p><h2 id="synology-用-docker-安装-frpc-内网穿透">Synology 用 Docker 安装 frpc 内网穿透</h2><p>参考 <a href="https://www.ioiox.com/archives/26.html">群晖NAS使用Docker安装配置frpc内网穿透教程</a></p><h3 id="配置域名解析">配置域名解析</h3><p>首先将需要使用的域名在域名解析服务商控制台设置CNAME指向 frp 服务器地址. 例如，按照下面的配置，可设置一条类型为 <code>CNAME</code> 的主机记录为 <code>nas.ioiox.com</code> 记录为 <code>frp.freefrp.net</code> 的解析条目。</p><h3 id="配置-docker">配置 Docker</h3><p>在 Docker 中搜索下载 <code>stilleshan/frpc</code></p><p>配置 <code>frpc.ini</code> 。上面一节中，是将整个泛域名都交给群晖自带的反向代理服务去执行了；下例中直接在这个文件中进行配置，例如这里是 DSM。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = frp.freefrp.net     <span class="comment"># 服务器IP或者地址</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span>                <span class="comment"># 服务器提供的端口号</span></span><br><span class="line"><span class="attr">token</span> = freefrp.net               <span class="comment"># 服务器提供的token</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web1_xxxxxx]</span>                     <span class="comment"># 为避免错误,一定需更改为比较特殊的名称,不能和服务器端其他配置重名.</span></span><br><span class="line"><span class="attr">type</span> = http                       <span class="comment"># http协议</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.5</span>            <span class="comment"># 填写群晖内网IP.</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span>                 <span class="comment"># 群晖内网HTTP端口,默认为5000.</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.ioiox.com    <span class="comment"># 填写你的域名</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web2_xxxxxx]</span>                     <span class="comment"># 为避免错误,一定需更改为比较特殊的名称,不能和服务器端其他配置重名.</span></span><br><span class="line"><span class="attr">type</span> = https                      <span class="comment"># https协议</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.5</span>            <span class="comment"># 填写群晖内网IP.</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5001</span>                 <span class="comment"># 群晖内网HTTPS端口,默认为5001.</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.ioiox.com    <span class="comment"># 填写你的域名</span></span><br></pre></td></tr></table></figure><p>「勾选使用高权限执行容器」 在高级设置中： 【文件映射】装载路径为 <code>/frp/frpc.ini</code> 【网络】「勾选使用与Docker Host相同的网络」</p><h2 id="群晖nas内网穿透各套件独立门户">群晖NAS内网穿透各套件独立门户</h2><p>参见 <a href="https://www.ioiox.com/archives/55.html">群晖NAS内网穿透各套件独立门户</a>。</p><p>有了上面两节的基础之后，就很简单了。 事实上，仅需要在 「控制面板-应用程序门户-File Station」 中进行简单配置即可。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 反向代理 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + Synology exFAT 支持</title>
      <link href="/posts/b21504b8/"/>
      <url>/posts/b21504b8/</url>
      
        <content type="html"><![CDATA[<p>若是官方渠道的话，需要购买 <a href="https://www.synology.cn/zh-cn/dsm/packages/exFAT">exFAT Access 加值套件</a> $3.99。</p><p>当然，自己也不会用到几次，自然可以找到一些旁路，比如这一篇 <a href="https://blog.yaozhihao.com/2019/11/11/Nas191111-群晖实现对exfat格式的识别/">群晖实现对exfat格式的识别</a></p><blockquote><p>但是群晖本身就是一个Linux系统，Ubuntu可以支持exfat格式，原理应该类似。借用Ubuntu的deb安装包exfat-fuse是可以实现的。网上有网友在DSM 5.0系统DSM 6.0系统上都能实现。以下为方法。</p></blockquote><ul><li>激活 root 用户</li></ul><p>【方式 1】事实上，群晖官方推荐的 root 登录方式在 <a href="https://www.synology.com/en-global/knowledgebase/DSM/tutorial/General_Setup/How_to_login_to_DSM_with_root_permission_via_SSH_Telnet">How to login to DSM with root permission via SSH/Telnet</a>，也就是看 SSH 登录用输入 <code>sudo -i</code> 切换为 root 用户，密码好像就是当前 admin 用户密码？</p><p>【方式 2】先用管理员账户登陆ssh，激活root用户，退出后切换成root用户。【事实上这里好像只是重设了 root 用户的密码，为什么叫激活？】</p><p>关于 synouser 等命令，可查看 <a href="https://global.download.synology.com/download/Document/Software/DeveloperGuide/Firmware/DSM/All/enu/Synology_DiskStation_Administration_CLI_Guide.pdf">here</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo su -</span><br><span class="line"><span class="comment"># sudo -i # 一样的</span></span><br><span class="line">synouser --setpw root your_new_root_password</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li>下载对应的 exfat-fuse</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># DSM 6.0</span></span><br><span class="line">wget -P /tmp/ http://mirrors.kernel.org/ubuntu/pool/universe/f/fuse-exfat/exfat-fuse_1.2.3-1_amd64.deb</span><br><span class="line">dpkg -x /tmp/exfat-fuse_1.2.3-1_amd64.deb /tmp/exfat-fuse/</span><br><span class="line">cp /tmp/exfat-fuse/sbin/mount.exfat-fuse /usr/bin/</span><br><span class="line"></span><br><span class="line"><span class="comment">#DSM 5.0</span></span><br><span class="line">wget -P /tmp/ http://mirrors.kernel.org/ubuntu/pool/universe/f/fuse-exfat/exfat-fuse_1.2.3-1_i386.deb</span><br><span class="line">dpkg -x /tmp/exfat-fuse_1.2.3-1_i386.deb /tmp/exfat-fuse/</span><br><span class="line">cp /tmp/exfat-fuse/sbin/mount.exfat-fuse /usr/bin/</span><br></pre></td></tr></table></figure><ul><li>建立共享文件夹</li></ul><p>例如，叫 usbexfat</p><ul><li>查看磁盘信息，手动挂载，卸载，弹出</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看磁盘信息</span></span><br><span class="line">fdisk -l</span><br><span class="line"></span><br><span class="line"><span class="comment"># Device Boot Start End Sectors Size Id Type</span></span><br><span class="line"><span class="comment"># /dev/sdu1 256 7823654 7823399 3.7G 7 HPFS/NTFS/exFAT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载，例如</span></span><br><span class="line">mount.exfat-fuse /dev/sdq2 /volume1/usbexfat -o nonempty</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">umount /volume1/usbexfat</span><br><span class="line"></span><br><span class="line"><span class="comment"># 弹出</span></span><br><span class="line">eject -F /dev/sdu1</span><br></pre></td></tr></table></figure><p>复制的话，可用 cp 命令，防止出现从硬盘传输到电脑再到 NAS 的惨剧。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -r /volume1/useexfat/file /volume1/directory</span><br></pre></td></tr></table></figure><p>另外注意</p><ul><li>读取exfat格式支持度较好，但<strong>不建议写入</strong>！</li><li>写入后，再插到电脑上用，会提示卡有错误，需要扫描一次来修复。</li><li>使用exfat主要是备份存储卡的数据，所以尽量不要在NAS里面写入数据。</li><li>需要手工挂载和卸载exfat分区，略显麻烦，不过这个也是有解决办法的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS Chrome 安装非官方拓展</title>
      <link href="/posts/68f91fb3/"/>
      <url>/posts/68f91fb3/</url>
      
        <content type="html"><![CDATA[<p>起因是发现了 <a href="https://github.com/ronggang/PT-Plugin-Plus">PT-Plugin-Plus</a> 这样一个非常强的 PT 插件（可惜只支持 Chromium 内核的浏览器 Safari 没法用），但由于非官方可能出现「该扩展程序未列在 Chrome 网上应用店中，并可能是在您不知情的情况下添加的」的警告无法使用，因此需要添加白名单。</p><p>插件说明中给出了 Windows 下添加白名单的方式，但是并没有 macOS 下的方案。</p><p>于是找到了 <a href="https://hencolle.com/2016/10/16/baidu_exporter/">Guide on Packaging and Import Baidu Exporter to Chrome</a> 这篇 Guide，找到了这一份 config 文件：<a href="https://gist.github.com/Explorare/be3dd598289252698cd37bca04abd0fe" class="uri">https://gist.github.com/Explorare/be3dd598289252698cd37bca04abd0fe</a>。</p><p>使用方式：</p><ul><li>下载下来之后，将中间的 <code>&lt;string&gt;value01&lt;/string&gt;</code> 中 value 替换为 <a href="chrome://extensions" class="uri">chrome://extensions</a> 中所安装的 Extension 中的 id；</li><li>注意，安装配置文件需要在系统设置中进行选定，会在最后新出现一个选项，确认安装即可；</li><li>然后重启浏览器即可使用插件。</li></ul><p>另外，关于 PT Plugin Plus 的使用，有一个简明教程 <a href="https://post.smzdm.com/p/a99ve5ve/pic_7/">如此简单的pt plugin plus插件你竟然不会用？不懂这个，要饭你都要不到</a> 不过事实上看官方的 wiki 即可。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
            <tag> PT </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NUC8 Clover 转 OpenCore，升级 Big Sur</title>
      <link href="/posts/9e20d5fa/"/>
      <url>/posts/9e20d5fa/</url>
      
        <content type="html"><![CDATA[<p>参考了 <a href="https://post.smzdm.com/p/andr9030/">玩机技巧 篇十六：NUC8 x 黑苹果抄作业续集，快速迁移 OpenCore + 升级 Big Sur</a>，才发现（有了大神的帮助后）还是比较简单的。</p><p>然后从维奇的 QQ 群中找到了 OC 的 EFI 资源，发现里面的 readme 写得非常全，完全照抄即可。</p><h2 id="clover-转-opencore">Clover 转 OpenCore</h2><blockquote><p>OpenCore 引导更新方法 / Clover 迁移 OpenCore 方法： 1、备份出 EFI 分区中的旧版引导文件夹 2、EFI 分区内的文件全部删除（双系统的保留 /EFI/Microsoft 文件夹），将解压出的 EFI 文件夹放入 EFI 分区 3、迁移三码。请参考“手动迁移三码方法”或直接使用豪客开发的“三码迁移工具”。 4、清空NVRAM：打开 Hackintool 软件，点击顶部“NVRAM”页面，选中中间列表中的一项，点击下方的“减号”删除（首次需要输入登录密码），一项项全部删除，直至清空。 5、重建缓存并修复权限：打开 Hackintool 软件，点击顶部“工具”页面，点击最下面一排图标的最后一个（鼠标悬浮在上面显示“重建缓存并修复权限”的便是）。此操作大约需要等待半分钟执行完毕。 6、重启电脑。 7、如果重启提示未找到启动项（No bootable device），请使用 PE 系统，修复 OpenCore 引导（可搜索“修复 Windows 系统引导”的教程作为参考）。</p></blockquote><p>这里再介绍另外一个“清空nvram”的方法</p><blockquote><p>开机后，连续点击 ESC 键进入 OC 引导界面，按空格显示隐藏选项，执行最后一项“Reset NVRAM”，重启进入系统即可正常使用。</p></blockquote><p>总结：更新引导的方法需要 1. 替换引导文件；2. 迁移三码；3. 建议清空 NVRAM（我漏掉了 Orz 但没发现啥 bug）；4. 重建缓存那一步在上面的那个链接中也没用。</p><h2 id="升级-big-sur">升级 Big Sur</h2><p>都到现在了也没啥好说的，之前在 Clover 阶段始终无法进入安装页面，重启后直接进入了系统；转到 OC 之后直接解决了问题。</p><p>另外，在「维护教程」中扒到这条说明：</p><blockquote><p>为什么10.15每次更新重启后还是原来的系统？</p><p>CLover不支持自动从Data分区检测自动更新 需要你手动选择 install XXX from XXX-Data 分区 升级过程中只要有install就选install 升级完后该启动分区消失</p></blockquote><h2 id="相关链接">相关链接</h2><p><a href="https://zhuanlan.zhihu.com/p/165596210">NUC8（豆子峡谷）黑苹果新手指南Q&amp;A</a> 知乎上维护的一个 QA 贴。 之前有「菜单栏里像一个卡槽的图标是什么？是读卡器吗？」这样一个问题，我也是在评论区知道了 Big Sur 下没法像之前那样隐藏，维奇推荐了免费的「hidden bar」软件，我直接用了 Bartender 4 同样可解决问题。</p><p>另外贴上维奇大佬的 <a href="https://www.jianshu.com/p/78510cfa4a64">《NUC8在线安装macOS，这才是OpenCore正确的打开方式》</a></p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> NUC </tag>
            
            <tag> EFI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apple Watch 上手体验</title>
      <link href="/posts/46d1f363/"/>
      <url>/posts/46d1f363/</url>
      
        <content type="html"><![CDATA[<p>终于还是忍不住入手了 Apple Watch SE 44mm 款，今天早上收到，到现在记录一下开箱体验。 首先夸一下包装设计，那个经典的礼盒设计，全程无需其他工具即可轻松打开，像蝴蝶形状的外壳中放了本体和表带两个盒子，总之非常精致。</p><p>具体到使用，我想谈谈 Watch 的使用/设计逻辑。虽然可以单品销售/佩戴，但感觉还是要和 iPhone 结合才能获得更好的使用体验。虽然我开机之后就直接连上了 iPhone 其实并不了解单体手表的实际体验；但基于后续的操作，可以明显感到苹果非常注重手表和手机之间的融合程度（或者说 野心？）。</p><p>仔细想来，一台智能手表的交互逻辑还是比较复杂的：</p><ul><li>表盘的尺寸决定了其不可能容纳过多的操作，那么如何在有限的空间下容纳必要的内容，而不损失使用的体验就显得尤为重要；</li><li>交互形式上：<ol type="1"><li>自动感知的息屏功能做的非常好（对比之前用的小米手环 hhh）；</li><li>主要的还是这一块小小屏幕上的点击操作，需要不同应用之间的切换、应用内部的操作等（这些似乎更多关乎应用开发者）；另外，在应用内部长按上下方可分别唤醒通知和控制面板；</li><li>还有就是两个实体按键，均可按压，上面的「表冠」承担了返回的功能，同时设计了旋钮支持流式的操控，下面的按键进入后台，长按关机；可以看到，考虑到手表和手机之间的区别，事实上苹果将 iPhone 上的 Home 键和电源按键的逻辑重新进行了组合：手机上保留的一个 Home 键是最重要的交互按键并且比较容易双击进入后台；而在手表上双击则是一个比较别扭的操作，因此将其分化到两个实体按键上，在此基础上附加了双击、长按的不同效果。</li></ol></li><li>输入方式上，采用了语音、手写两种模式，也是无奈之举；</li><li>大概是考虑到了单用手表的需求，Watch 上有单独的 App Store；虽然配合手机使用是更好的选择，参见 <a href="https://support.apple.com/zh-cn/guide/watch/apd99e3c6a68/watchos">手册：在 Apple Watch 上获取更多 App</a>；</li><li>交互模式上，和手机还是有区别，当然这可能是和手表的属性决定的。正因于此，也提供了更多的便捷实用体验。例如，相较于手机上的 Siri，Watch 抬腕靠近直接交互的形式无疑更符合直觉。</li><li>其实说到底，就是<strong>手表这一硬件形态相较于手机的优势</strong>。例如网上提到的减少手机通知、远离手机（而不错过电话等通知）、更适合运动等。</li><li>另外，还是要夸一下 APP 视图中的 Grid 模式，操作上非常顺滑；</li><li>还要提一下密码，离开手腕拿去充电之后要求重新输入密码（虽然我把它关了……）；</li><li>（大概和其他的智能手表类似）手机上有个叫「Watch」的 APP 配合使用，可进行系统设置、软件安装、表盘设置、使用手册等功能；苹果整个生态的结合使用起来还是有很大提升的。</li></ul><p>又零碎讲了这么多，其实这次比较大的收获，大概是重新发现了苹果的使用手册，例如 Watch 的使用手册 <a href="https://support.apple.com/zh-cn/guide/watch/apdf1ebf8704/watchos">基础部分</a>，写得非常清楚详尽。</p><p>另外，再推荐一篇 <a href="https://sspai.com/post/54032">Apple Watch 购买及使用指南 | 果核指南</a>，2019 年 4 月的了有点过时，但文本的逻辑还是非常赞的，另外其中推荐的 APP 都可一试~</p><ul><li>解锁逻辑：<a href="https://support.apple.com/zh-sg/guide/watch/apd0e1e73b6f/watchos">锁定或解锁 Apple Watch</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> 手表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac 空间清理：Time Machine 清理 + 清理软件推荐 + 特殊软件卸载</title>
      <link href="/posts/e5232432/"/>
      <url>/posts/e5232432/</url>
      
        <content type="html"><![CDATA[<p>先说下自己的设备吧：在用 128G 的 MacBook Pro，当时购入这么小硬盘的原因是，寝室还有台式机（目前是个 NUC）所以笔记本的定位是便携性为主，不承担重量级和大文件的存储处理工作；存储的问题的话，寝室还有台 Synology 使用，因此存档的内容和一些大文件都放在上面，笔记本上仅储存课程相关文件和程序。 因为之前装过乱七八糟的各种软件折腾，还有很多课程需要的软件，存储空间一直有些紧张，一般能够剩下 25G 左右；软件删删减减，有时候遇到系统更新还是重新清理，所以还是很麻烦的。反思一下，问题在于</p><ul><li>自己混乱的文件管理方案，以及电脑里的部分冗余软件和残留文件；</li><li>使用过一些系统管理软件如 Tencent Lemon 或者是 AppCleaner，但缺少一般的方法论；</li><li>另外最近用 Time Machine 备份了系统（防止升级到 Big Sur 出问题），快照也占用了挺大空间；</li></ul><p>因此，今天又花了很长时间折腾了下 macOS 系统清理的方案，总结如下。 当然，这种时候的清理总归不是很好的手段，要从根本上解决问题，还是需要养成良好的文件管理习惯，精简软件使用（事实上，这反倒是用一台硬盘空间比较小的电脑的好处）；极简主义，做减法。这一部分，关联 <a href="mweblib://16057754500538">谈谈时间与信息管理</a>。</p><h2 id="time-machine-清理">Time Machine 清理</h2><p>参考知乎 <a href="https://zhuanlan.zhihu.com/p/39689057">清理 TimeMachine 本地快照的方法</a>。关闭 TM 之后，这面的指令可以查看和删除本地的 snapshot 系统快照（其中所谓「认证码」就是对应的快照名字中数字部分）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tmutil listlocalsnapshots /</span><br><span class="line">tmutil deletelocalsnapshots 认证码</span><br></pre></td></tr></table></figure><p>另外提到 Catalina 下还有更方便的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmutil thinlocalsnapshots / 999999999999999 4</span><br></pre></td></tr></table></figure><p>注意，这里要区分 快照 snapshot 和备份 backup 的概念，我是将备份放到 NAS 上的，但是系统中还是会有快照占空间，上面的方法就是手动删除本地快照。对于 tmutil 的详细用法，参见 <a href="https://zhuanlan.zhihu.com/p/89735168">和时间机器的再次斗争（释放 TimeMachine 占用的空间）</a>。 我在删除的时候不知道为什么有一个主要的 snapshot 删不掉？重启系统后清除。</p><p>另外，关于 Time Machine 的使用方法，可参看少数派上的一个 <a href="https://sspai.com/post/30550">系列教程</a>；都是基础使用方式，入门级。</p><h2 id="清理软件">清理软件</h2><h3 id="tencent-lemon">Tencent Lemon</h3><p>轻量级的系统优化软件，我用到的功能是</p><ul><li>MenuBar 上的资源监控（轻量级，另外把 iStat 放在了 Today 页面）</li><li>软件卸载（似乎 App Cleaner &amp; Uninstaller 更棒）</li><li>启动项管理</li></ul><p>优势在于界面简洁，功能不算强大但也到位，稳定性不错。</p><h3 id="app-cleaner-uninstaller">App Cleaner &amp; Uninstaller【###】</h3><p>新发现的宝藏软件</p><ul><li>软件卸载似乎要比 Tencent Lemon 更加干净；</li><li>启动项/启动代理 的管理要比前者更为直观；</li><li>插件管理也超级好用；</li><li>残留文件非常厉害，可能因为之前是用 Tencent Lemon 的没删干净，刚安装好发现有很多的残留项；</li><li>默认软件的功能没在用，不做介绍；</li></ul><h3 id="ncdu">NCDU</h3><p>原本的命令行管理用 <code>du</code> 指令完成，我在配置中设置了默认 <code>alias du='du -h -d 1'</code>；配合另一个命令行工具 <code>tree</code> 使用，可以显示文件夹的目录树结构。今天发现了一个 du 命令的升级版 <code>ncdu</code> ，采用 <code>brew install ncdu</code> 安装即可。</p><p>简单的教程 <a href="https://liguoqinjim.com/post/mac/mac%E7%A3%81%E7%9B%98%E6%B8%85%E7%90%86%E5%B7%A5%E5%85%B7-ncdu/">MAC磁盘清理工具 NCDU</a>。其实使用起来非常直观，安装之后 <code>ncdu .</code> 即可，等待检索完成后，使用方向键和 Enter 进行导航，需要删除则用 <code>d</code> 键，其他的基本上不需要。</p><h3 id="daisy-disk">Daisy Disk</h3><p>除了命令行工具，还有个可视化的磁盘空间管理工具 <a href="https://daisydiskapp.com/">DaisyDisk</a>，界面非常好看，可以直观地看到自己电脑上的文件占用空间，以便你更好地管理自己的 Mac 硬盘空间。</p><p>例如，我发现在系统更新还是更改用户文件夹名字（用户管理高级选项中的 Home Directory，非常作死的行为千万不要去尝试）后，会出现的 <code>Previously Relocated Items</code> 文件夹，在 <code>/Users/Shared</code>，看了下发现有 1G 所有，主要是交换文件，我直接把它删了。在文件夹下附有一个说明 PDF，另外关于该文件夹参看 <a href="https://news.tongbu.com/97964.html">升级macOS Catalina：桌面出现的Relocated Items文件夹是什么？</a>。</p><p>另外，目前没有共享的需求，发现在 <code>/Users/Shared</code> 目录下会有一些软件的文件都比较小，强迫症的原因，我直接把这个文件夹清空了，好像也没什么大问题……</p><h2 id="个别软件">个别软件</h2><h3 id="tex">Tex</h3><p>参考 <a href="https://changkun.us/archives/2014/03/149/">MacTeX 卸载方法</a>，事实上软件如 TeXShop 的卸载是很方便的，随便找个写在软件或者直接删除 <code>/Applications</code> 中的文件即可。 但这个软件一般不会很大，不超过一个 G，关键还是要卸载 Tex，一般安装目录在 <code>/usr/local/texlive/</code> 下，直接删除即可，大概有 6G 大。</p><h3 id="java">JAVA</h3><p>参考 <a href="https://www.chuchur.com/article/mac-install-and-uninstall-java-jdk">Mac 上安装和卸载Java JDK</a>，事实上就是官方给出的方案，分别用来卸载 JAVA 和 jdk。</p><p>卸载 JAVA，官方有 <a href="https://www.java.com/zh-CN/download/help/mac_uninstall_java.html">教程</a>，就是三个文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -fr /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin</span><br><span class="line">sudo rm -fr /Library/PreferencesPanes/JavaControlPanel.prefPane</span><br><span class="line">sudo rm -fr ~/Library/Application\ Support/Java</span><br></pre></td></tr></table></figure><p>卸载 jdk，<a href="https://docs.oracle.com/javase/8/docs/technotes/guides/install/mac_jdk.html#A1096903">官方教程</a>，地址在 <code>/Library/Java/JavaVirtualMachines</code> ，下面是中文教程中的代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查找当前版本</span></span><br><span class="line"><span class="comment">#输入：</span></span><br><span class="line">ls /Library/Java/JavaVirtualMachines/</span><br><span class="line"><span class="comment">#输出：jdk-9.0.1.jdk</span></span><br><span class="line">sudo rm -rf /Library/Java/JavaVirtualMachines/jdk-9.0.1.jdk</span><br></pre></td></tr></table></figure><p>当然，如果不想再用的话，直接把 <code>/Library/JAVA</code> 文件夹删掉也是可以的。</p><h3 id="adobe">Adobe</h3><ul><li><p>才发现 Adobe 居然这么难卸载……官方提供了卸载工具 <a href="https://helpx.adobe.com/cn/creative-cloud/kb/cc-cleaner-tool-installation-problems.html">Creative Cloud Cleaner Tool 的使用方法及使用场合 | 高级步骤</a>，下载之后使用即可。</p></li><li><p>然而，这样卸载之后，还是会有残余，例如 <code>/Library/Application Support/Adobe</code> 文件夹（这是我在删除 Tex 的时候发现的，还挺大有一个 G 左右）。另外，在一篇文章中还提到了以下这些文件夹，删除即可。</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">~/Library/Application Support/Adobe</span><br><span class="line">~/Library/Preferences/Adobe</span><br><span class="line">~/Library/Caches/Adobe</span><br></pre></td></tr></table></figure><ul><li>除此之外，在 <a href="https://www.macappbox.com/a/remove-adobe-from-your-mac.html">彻底删除 mac 上的 Adobe 相关文件</a> 一文，给出了比较全的文件地址：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf ~/Library/Application\ Support/Adobe* ~/Library/Application\ Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.adobe* ~/Library/Application\ Support/CrashReporter/Adobe* ~/Library/Caches/Adobe ~/Library/Caches/com.Adobe.* ~/Library/Caches/com.adobe.* ~/Library/Cookies/com.adobe.* ~/Library/Logs/Adobe* ~/Library/PhotoshopCrashes ~/Library/Preferences/Adobe* ~/Library/Preferences/com.adobe.* ~/Library/Preferences/Macromedia* ~/Library/Saved\ Application\ State/com.adobe.*</span><br><span class="line">sudo rm -rf /Applications/Adobe* /Applications/Utilities/Adobe* /Library/Application\ Support/Adobe /Library/Preferences/com.adobe.* /Library/PrivilegedHelperTools/com.adobe.* /private/var/db/receipts/com.adobe.*</span><br></pre></td></tr></table></figure><ul><li><p>另外，在 <a href="https://zhuanlan.zhihu.com/p/131591089">2020 MAC如何彻底卸载ADOBE/PHOTOSHOP</a> 一文中，还提到了登录相关组件，位置在 <code>/Library/LaunchAgents</code> ，看到带 adobe 的一律删除……</p></li><li><p>再有，发现用 App Cleaner &amp; Uninstaller 可以扫描到一个插件，位置在 <code>/Library/Internet Plug-Ins/AdobePDFViewerNPAPI.plugin</code> 也被我删去了。</p></li></ul><p>【这样折腾了一遍之后，其实还是会有残留……上述过程，起源于自己用 Spotlight 总会有 Adobe 更新这种软件出现很心烦，上述步骤可以把这些显示的 app 文件清除，可以说是眼不见为净。我最后用 App Cleaner &amp; Uninstaller 看了下，还有一些残留文件，虽然体积不大但是对于强迫症来说还是必要的。所以终极的解决方案还是这个软件（只是我不清楚能否直接从这个软件上卸载 Adobe 全系）】</p><h3 id="joplin">Joplin</h3><p>是之前非常喜欢的一款 Markdown 编辑+采集软件，作为编辑器来使用自然是没有 Typora 好用，但可以将网页内容采集为 Markdown 非常赞，替代了之前用的 Evernote。</p><p>无论是 Evernote 还是 Joplin 的采集功能或多或少还是有些问题，最近开始入手 DEVONthink，直接采集为 HTML 很好地保留了网页格式，在搜索和文件管理方面的体验也是一流，因此考虑逐渐转换到这一软件。</p><p>今天终于决定去卸载 Joplin，用不同的软件卸载 Joplin 的过程中，发现仅能找到软件本身（300M 左右），而导出备份的数据就比这大很多了，也就是说肯定有遗漏存储文件；寻找之后发现是在 <code>~/.config</code> 文件夹下，大概有几个 G 大。</p><h3 id="docker">Docker</h3><p>通过 brew <code>brew uninstall --cask docker</code>，另外下面的一些配置项；注意删除 <code>～/Library/Containers/</code> 下的文件夹，保存了存储的image还挺大的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -Rf /Applications/Docker</span><br><span class="line">sudo rm -f /usr/<span class="built_in">local</span>/bin/docker</span><br><span class="line">sudo rm -f /usr/<span class="built_in">local</span>/bin/docker-machine</span><br><span class="line">sudo rm -f /usr/<span class="built_in">local</span>/bin/docker-compose</span><br><span class="line">sudo rm -f /usr/<span class="built_in">local</span>/bin/docker-credential-osxkeychain</span><br><span class="line">sudo rm -Rf ~/.docker</span><br><span class="line">sudo rm -Rf <span class="variable">$HOME</span>/Library/Containers/com.docker.docker  <span class="comment"># here we delete stored images</span></span><br></pre></td></tr></table></figure><p>注意删除 <code>～/Library/Containers/</code> 下的文件夹，保存了存储的image还挺大的。</p><h3 id="go">go</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo rm -rf /usr/<span class="built_in">local</span>/go</span><br><span class="line">sudo rm /etc/paths.d/go</span><br></pre></td></tr></table></figure><p>以及发现 <code>～/go</code> 目录，忘记了是否是自己自建的😂</p><h3 id="safari">Safari</h3><p>在 <code>Preference/Advanced</code> 中开启开发者面板，然后选择 <code>Empty Caches</code> 可以清理挺多缓存的。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> 磁盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + Nextcloud 安装折腾记要</title>
      <link href="/posts/38cb8975/"/>
      <url>/posts/38cb8975/</url>
      
        <content type="html"><![CDATA[<p>又是一次很忐忑的折腾过程，原因在于自己没有什么 Docker 知识……最终顺利上车，记录如下。内容包括：1. 安装 Nextcloud；2. 安装相关插件；3. 设置外网访问。</p><span id="more"></span><h2 id="选择安装镜像">选择安装镜像</h2><p>【到最后才发现 nextcloud 的 <a href="https://docs.nextcloud.com/server/20/admin_manual/installation/index.html">官方安装文档</a> ，虽然对于仅仅在 群晖上安装没必要看那么仔细……放这里供参考】 【以下基于 Docker 安装，事实上还可以采用伪静态的方式安装，参见 <a href="https://wp.madjack.info/nas/synology-nas-nextcloud-13-0-1.html">Synology NextCloud 13.0.1 安裝教學</a> 】</p><p>【20201124 补充：事实上，<strong>最后还是用回了下面最开始的那个教程</strong> <a href="https://post.smzdm.com/p/735879/">折腾NAS 篇四：群晖Docker安装nextcloud私有云，以及onlyoffice、流程图和思维导图插件</a> ，这个镜像确实对于新手比较友好；虽然折腾了整整一天时间，但至少还是有些收获的吧……至少对于 Synology 使用 Docker，已经相关的配置，用于尝试不用的 Docker 源，并精准进行文件管理；在这些方面上有了一点点的进步。（好吧你只是在自我安慰）】</p><p>另外，除了下面的使用 Docker 安装方法外，还可以直接采用伪静态方式部署，参见 <a href="https://wp.madjack.info/nas/synology-nas-nextcloud-13-0-1.html">Synology NextCloud 13.0.1 安裝教學</a>。</p><hr /><p>事实上，网上已有很多的安装教程，例如张大妈上的 <a href="https://post.smzdm.com/p/735879/">折腾NAS 篇四：群晖Docker安装nextcloud私有云，以及onlyoffice、流程图和思维导图插件</a> 。然而，这已经不是我第一次看到，明明 Docker 上有星标更多的 Image 却要去选择安装量更少的那一个了……心有不甘之下，决定去折腾那个 <code>nextcloud</code> ，于是有了下面的故事。</p><p>首先需要能够下载这个Image，国内好像会有问题，可以尝试采用本地的 mac 给 Synology 配置代理，之后进行下载。</p><p><a href="https://registry.hub.docker.com/_/nextcloud/" class="uri">https://registry.hub.docker.com/_/nextcloud/</a> 这个是官方镜像的说明文件，而上面那个教程的文档在 <a href="https://registry.hub.docker.com/r/wonderfall/nextcloud" class="uri">https://registry.hub.docker.com/r/wonderfall/nextcloud</a>。</p><p>在配置 Docker 选项的过程中，需要注意的有：</p><ol type="1"><li>端口配置，例如官方镜像端口是 <code>8080</code> ；</li><li>文件夹映射，这是我比较纠结的地方，如前述自己没有 Docker 基础，因此对于官方给出的代码不太能理解</li></ol><p>相较而言， <code>wonderfall/nextcloud</code> 就要清晰很多，里面的需要映射的文件包括</p><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/data : Nextcloud data.</span><br><span class="line">/config : config.php location.</span><br><span class="line">/apps2 : Nextcloud downloaded apps.</span><br><span class="line">/nextcloud/themes : Nextcloud themes location.</span><br><span class="line">/php/session : php session files.</span><br></pre></td></tr></table></figure></p><p>官方的 nextcloud 的说明有点长，参考上述的配置之后发现了相应的描述：</p><blockquote><p>The Nextcloud installation and all data beyond what lives in the database (file uploads, etc) is stored in the unnamed docker volume volume <code>/var/www/html</code>. The docker daemon will store that data within the docker directory <code>/var/lib/docker/volumes/....</code> That means your data is saved even if the container crashes, is stopped or deleted.</p></blockquote><p>下面还可以看到七七八八的各个子文件夹的各自功能，综合之后，我选择将 <code>/var/www/html</code> 文件夹挂载到 <code>docker/nextcloud/html</code> 下。</p><p>之后启动 Docker，进入相应的地址进行进行安装，比较简单就不介绍了。</p><h2 id="安装应用">安装应用</h2><p>在 nextcloud 页面下，可以点击头像进入「应用」菜单，包含了内置的一些应用，多默认开启。下面介绍如何安装其他的应用：</p><p>可以在 <a href="https://apps.nextcloud.com/" class="uri">https://apps.nextcloud.com/</a> 找到所有可用的 Nextcloud 软件，下载想要的软件，解压之后放在 <code>html/custom_apps/</code> 中即可。然后进入 nextcloud 到软件管理页面将该软件开启。</p><p>例如可以试试 <code>mindmap</code> 思维导图软件，其 GitHub 地址在 <a href="https://github.com/ACTom/files_mindmap" class="uri">https://github.com/ACTom/files_mindmap</a> ，有中文的说明~</p><h2 id="外网访问">外网访问</h2><p>上面介绍了如何安装 Nextcloud 及相关插件，之后发现默认只能在本地使用，而通过外网访问则需要进行相应配置；设置到端口转发后用浏览器访问，可以发现有一个错误提示，需要去修改 <code>html/config/config.php</code> 文件。</p><p>基于你的外网访问地址，例如 <code>id.synology.me:8080</code>，进行相应配置，上传即可。</p><p>不过我又遇到一个坑：我是用浏览器上传的，结果提示 nextcloud 没有读写 config.php 的权限。</p><ul><li>于是需要修改相应权限，首先需要知道 docker 文件夹所在位置，SSH 连接之后，我盲目找了半天，发现是在 <code>volume1/docker</code> 下（在 DSM 中显示为 <code>/docker</code>）；</li><li>发现通过浏览器上传的用户是你所登录的用户；而其他文件的权限和用户是 <code>-rw-r--r--  1    33 root</code>；于是可以输入 <code>chown 33:root config.php</code> 修改所有者——因此，更为方面的应该是在 SSH 连接之后 <code>sudo i</code> 切换到 root 用户之后做修改。</li></ul><p>完成之后再用外网登录 Nextcloud 可成功连接。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> NextCloud </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + 记一次 Chevereto 升级翻车事故 &amp; 关于 Synology 的代理配置</title>
      <link href="/posts/3e1ab733/"/>
      <url>/posts/3e1ab733/</url>
      
        <content type="html"><![CDATA[<p>之前一直被群晖科学浏览的问题所困扰，也因此不能升级 Chevereto 一个红色⚠️看着很难受，今天终于在网上找到了一个暂且可行的代理方案；配置是成功了但是还是未能完成升级，最后只好手动进行了一次升级结果最后还是翻车了……不过在此过程中还是学到了很多，因此记录如下。</p><span id="more"></span><h2 id="chevereto-升级之痛">Chevereto 升级之痛</h2><p>在 <a href="mweblib://16050883895541">搭建 Chevereto 图床 &amp; Typora 上传指南</a> 中我介绍了自己折腾群晖 Chevereto 的过程，顺利上车，当时的版本好像是 1.2.8，使用一段时间后提示需要更新，最新版本是 1.2.0。然而，大概是由于网络的原因，始终无法更新成功，每次打开 Chevereto 看到鲜红的提示总是很难受。</p><p>因此，在多次尝试未果之后，今天突然找到了为 Synology 配置代理的方法，然而……</p><h2 id="synology-配置代理">Synology 配置代理</h2><p>今天突然看到 <a href="https://www.youtube.com/watch?v=ixyKSvnIcuE">群晖nas和虚拟机共享翻墙网络教程</a> 这个视频，突然发现在 Synology 中可以配置整体的代理，只需要连接本地其他机器上的代理程序即可。事实上，我在 <a href="mweblib://16051543495179">【proxy】命令行 &amp; 虚拟机代理设置方案汇总</a> 这篇文章中即有提到，但居然一直没想到。</p><p>配置很简单，在 SSH 环境下也成功 <code>curl google.com</code>，然而，当我点开 Chevereto 之后才发现并没有那么简单……试了好多次仍然无法更新成功……</p><h2 id="问题-解决方式">问题 &amp; 解决方式</h2><p>【问题】上述的代理配置是没问题的，然而也有一个副作用——群晖提供的那个网址 <code>ip.synology.me</code> 会识别为代理的地址（可以通过 <code>nslookup id.synology.me</code> 查看解析结果，要查看本机地址可以用 <code>curl myip.ipip.net</code> ）。</p><p>一个很笨拙的解决方案是手动在本地计算机中配置 hosts：macOS 下 <code>sudo vim /etc/hosts</code> 即可，在最后面添加你的公网 IP 地址和对应的网址即可。</p><p>然而，这并无法解决 synology.me 地址解析错误的问题，因此只是权宜之计。 然而，在某些场景下，可以临时采用这一方案访问外网——例如在下载 Docker Image 的时候。 更好的策略，可能是直接为路由器配置代理？不过目前在学校环境下不方便操作。 考虑到其他的一些网络服务的需要，我会在平时将这一网络代理关闭，仅在需要时打开使用。</p><h2 id="手动更新-chevereto">手动更新 Chevereto</h2><p>于是折腾了半天又回到起点，心有不甘于是想到手动去更新的方法，之前一直害怕哪里出错没有尝试过，原本以为一次成功结果还是出了 BUG……</p><p>事实上 Chevereto 的文档中有手动更新的方法 <a href="https://ch.cndrew.cn/cn/Setup/Update%20guide/">更新指南</a>，只不过只针对商业版，并没有免费的 1.几的版本；像我这种小透明自然用的是免费版，只好自己折腾……</p><ul><li>首先从 <a href="https://ch.cndrew.cn/cn/Setup/Update%20guide/" class="uri">https://ch.cndrew.cn/cn/Setup/Update%20guide/</a> 下载最新版本（目前是 1.3.0）；</li><li>在开始之前请务必对于原本的文件夹进行好备份；</li></ul><p>接下来就是去比较下载到的安装文件和你的环境文件夹</p><ul><li>经过细致比较，我发现所有上传的文件会基于时间分类存放在 <code>images</code> 目录下，而原本的 images 文件夹为空；</li><li>比较明显的配置文件，我找到的一个是 <code>app/settings.php</code> ，可以看到在原始目录下并没有这个文件；</li><li>其他的文件夹中内容大同小异，我尝试的时候没有用到；</li></ul><p>于是，最终我采取的方案是，将 <code>app</code> 文件夹下的内容复制替换过去，然后把根目录下的那些零散文件也替换过去，而其他文件夹未动。</p><p>接下来重新进入 Chevereto 网址，提示需要重新安装，轻轻点一下之后一切正常，我还庆幸自己的机智……</p><p>然而，表面的正常之下，我发现上传和配置等功能完全正常，但是无法查看图片，报 PHP 500 错误，然而我上网搜了下这个错误代码几乎没什么信息量……</p><p>尝试了修改文件所有者和权限，然而并没有任何作用……大概是因为不能直接替换文件，因为依赖到外部的 PHP 和 MariaBD？留下了不学无术的泪水……</p><h2 id="mariadb-10-远程访问">MariaDB 10 远程访问</h2><p>为了测试数据库能够使用，我还在 Mac 上下载了 Navicat for MySQL…… 然后发现 MariaDB 5 好像比较老，又去下载了 MariaDB 10……</p><p>默认情况下，Maria 是禁止外网访问的，参考了 <a href="https://www.jianshu.com/p/60e92aad5ba7">群晖MariaDB添加远程访问功能</a> 修改配置，摘录如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh到Synology</span></span><br><span class="line">sudo -i  <span class="comment"># 提权</span></span><br><span class="line"><span class="built_in">cd</span> /volume1/@appstore/MariaDB10/usr/<span class="built_in">local</span>/mariadb10/bin  <span class="comment">#访问目录</span></span><br><span class="line">./mysql -u root -p  <span class="comment">#  这里有个坑，root密码和MariaDB密码是不同的，需要在套件中心各自设置</span></span><br><span class="line">use mysql  <span class="comment">#  选择数据库</span></span><br><span class="line">update user <span class="built_in">set</span> host = <span class="string">&#x27;192.168.1.%&#x27;</span> <span class="built_in">where</span> user = <span class="string">&#x27;root&#x27;</span>;  <span class="comment">#可以直接使用%，也可以用192.168.1.%来缩小范围</span></span><br><span class="line">select host, user from user;  <span class="comment">#  确认，也可以使用select User,host from mysql.user;</span></span><br><span class="line">FLUSH PRIVILEGES;  <span class="comment">#  刷新权限</span></span><br></pre></td></tr></table></figure><p>另外，<a href="https://www.mls-tech.info/linux/nas-enable-mariadb-remote-access/">允许远程访问 Synology NAS 上的 MariaDB</a> 一文介绍地比较详细，可参看。</p><h2 id="尝试-docker-安装-chevereto">尝试 Docker 安装 Chevereto</h2><p>参考 <a href="https://cloud.tencent.com/developer/article/1645239">群晖Docker安装chevereto图床</a> 。</p><p>完全按照上面来的，然而进入链接之后报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Aw, snap! Internal Server Error [debug @ `error_log`] - https://v3-docs.chevereto.com/setup/debug.html</span><br></pre></td></tr></table></figure><p>docker 文件夹下的 Chevereto 文件夹所有人和权限设置确认过是 admin 和 777，数据库也确认可以正常链接，但是无法解决该问题。最终查询无果后放弃……</p><h2 id="重新安装-chevereto">重新安装 Chevereto</h2><p>于是最后的最后，我又重新安装了一次 Chevereto……这个过程就非常简单了，随便在网上找一篇如 <a href="https://post.smzdm.com/p/a3gvxnon/">群晖搭建 chevereto 图床</a> 即可，和之前那一个不同之处在于，这次用了更新的 MariaDB 10。</p><p>其他相关的配置，参考之前那一篇 <a href="mweblib://16050883895541">【NAS】搭建 Chevereto 图床 &amp; Typora 上传指南</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 网络 </tag>
            
            <tag> Chevereto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>区块链 课程笔记</title>
      <link href="/posts/2eb3d56c/"/>
      <url>/posts/2eb3d56c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>课程笔记，主要是从 PPT 上摘录的，用的课本是刘百祥的《区块链技术基础与实践》（非常不推荐），主要介绍了区块链的基础概念、Go 语言基本语法、HyperLedger Fabric 和 Ethereum，但都是蜻蜓点水。</p></blockquote><span id="more"></span><p>资源汇总</p><ul><li>HyperLedger 中文文档 <a href="https://hyperledgercn.github.io/hyperledgerDocs/" class="uri">https://hyperledgercn.github.io/hyperledgerDocs/</a></li><li>shim 包 API <a href="https://godoc.org/github.com/hyperledger/fabric-chaincode-go/shim" class="uri">https://godoc.org/github.com/hyperledger/fabric-chaincode-go/shim</a></li><li>以太坊官网 <a href="https://ethereum.org/zh/" class="uri">https://ethereum.org/zh/</a> 提供了非常详细的教程；</li><li>奇客谷教程 <a href="https://www.qikegu.com" class="uri">https://www.qikegu.com</a> 有后端、JAVA、前端、区块链等语法的教程，比如 Go Solidity Ethereum 等，简洁有效；</li><li>C 语言中文网的区块链教程 <a href="http://c.biancheng.net/blockchain/" class="uri">http://c.biancheng.net/blockchain/</a></li><li>Remix 网页<ul><li>官方 <a href="https://remix.ethereum.org/" class="uri">https://remix.ethereum.org/</a></li><li>中文版 <a href="http://remix.hubwiz.com" class="uri">http://remix.hubwiz.com</a></li></ul></li><li>TokenView <a href="https://tokenview.com" class="uri">https://tokenview.com</a> 查看各种 token</li></ul><h2 id="概念列表">概念列表</h2><ul><li>区块链特点<ul><li>去中心化（架构层 政治层 逻辑层）</li><li>不可篡改（哈希函数 链式数据结构）</li><li>匿名性 pseudonymous 而非 anonymous</li><li>公开账本</li></ul></li><li>编码<ul><li>Base64 Base58 Base58Check</li></ul></li><li>加密<ul><li>对称加密 DES 3DES AES（密钥长度可谓 128 192 256） RC5 RC6</li><li>非对称 RSA DSA ECDH ECDSA</li><li>哈希函数 SHA MD5</li></ul></li><li>公钥密码学<ul><li>数据完整性 Hash 函数 MD5 SHA</li><li>数据真实性（不可抵赖）<ul><li>消息认证码 MAC 可理解为带密钥的 Hash，但需要解决共享密钥的问题</li><li>数字签名：私钥加密</li></ul></li><li>公钥的合法性：认证机构 CA，公钥证书 PKC</li></ul></li><li>共识机制<ul><li>工作量证明 PoW</li><li>权益证明 PoS</li><li>DPOS（EOS 首先提出）</li></ul></li><li>智能合约<ul><li>2016 年 TheDAO攻击事件</li></ul></li><li>Hyperledger Fabric<ul><li>节点架构<ul><li>客户端</li><li>Peer 节点：都是记账节点（Committer）；有时承担 背书（Endorser）节点的角色；还可能是 主节点（Leader Peer）承担和排序服务节点通信；</li><li>Orderer 节点：接收包含背书签名的交易，排序，广播，</li><li>CA 节点</li></ul></li><li>账本（子系统）<ul><li>世界状态</li><li>交易记录</li></ul></li><li>通道：一个链由1个通道 + 1个账本 + N个成员(peer)组成</li><li>成员服务提供者 MSP</li></ul></li><li>Go 语言</li><li>以太坊 Ethereum<ul><li>EVM</li><li>两类账户<ul><li>外部账户EOA</li><li>合约账户CA</li></ul></li></ul></li><li>地址类型<ul><li>存储一个 20 字节的值，表示一个以太坊地址</li><li>地址类型有成员变量 balance, transfer, send</li></ul></li><li>特殊/全局变量与函数<ul><li>区块属性</li><li>交易属性<ul><li>msg.data msg.sender msg.value（随消息发送的 wei 的数量）</li></ul></li><li>和约相关<ul><li>this 当前和约</li></ul></li></ul></li><li>ERC-20 接口规范<ul><li>常量 name symbol decimals</li><li>函数 totalSupply transfer transferFrom approve allowance</li><li>事件 Transfer Approval</li></ul></li></ul><h2 id="概论">概论</h2><ul><li><strong>分布式账本(Distributed ledger)</strong> 以分布式方式存储在多个网络节点的账本（数据库），区块链(Blockchain)是分布式账本的一种，</li><li><strong>区块链(Blockchain)</strong>互联网底层多种技术的集合体，包括P2P通信协议、分布式存储数据库技术、加密算法、共识算法等技术，通过这些技术的整合创造了一种按时间序列、按区块记录数据的模式。区块链会用到三种底层技术：点对点网络（P2P通信协议）、密码学、分布式一致性算法。区块链系统还会“免费附赠”一种被称为<strong>智能合约</strong>的功能。</li></ul><p>2008年，一位自称“中本聪”的匿名人士在一个邮件讨论组中发布了自己关于数字货币的设想：《比特币:一种点对点的电子现金系统》 “Bitcoin: A Peer-to-Peer Electronic Cash System” (<a href="https://bitcoin.org/bitcoin.pdf" class="uri">https://bitcoin.org/bitcoin.pdf</a>)</p><h3 id="一些基础研究">一些基础研究</h3><ul><li>链式存储的数据 链式存储的数据在计算机领域广泛应用，各类链表结构是非常常见的数据结构 区块链的数据结构特色在于：利用哈希函数计算出的数据块特征并利用特征进行关联的链式结构，数据利用数字签名进行保护，利用易于验证的树状数据结构组装数据块。</li><li>如何保护数字文件 《How to Time-Stamp a Digital Document》 基于哈希函数、数字签名、伪随机数生成器的链式时间戳服务设计。文中使用了指向前一份文件的链接哈希，顺序号，当前时间，用户标识，文件内容哈希进行签名，形成链式(Link)的数据证据，确保文件无法被篡改，时间戳服务真实可信。</li><li>Improving the Efficiency and Reliability of Digital Time-Stamping 定期把需要验证的数据记录组合形成树结构，而验证者只需判断少量信息(tree root)即可验证树的有效性（The root of each tree is then certified）</li><li><p>Secure names for bit-strings 这篇文章中，探讨了利用密码学来标记数字文档、URL的方法。 三篇论文都出现在中本聪关于论文《Bitcoin: A Peer-to-Peer Electronic Cash System》的引用列表中，成为比特币重要的研究基础之一。 1997年，S. Haber, W.S. Stornetta, 又于Proceedings of the 4th ACM Conference on Computer and Communications Security 发表了论文 "Secure names for bit-strings," 在这篇文章中，探讨了利用密码学来 标记数字文档、URL 的方法。</p></li><li>Hashcash（挖矿）</li><li>数字货币 b-money</li><li>数字货币 Bit Gold</li><li>Protocols for public key cryptosystems</li><li><p>An introduction to probability theory and its applications</p></li></ul><p>除了各类的数据结构研究以外，早期的一些数字货币研究也给后期的 比特币提供了基础。例如 W. Dai, 在 1998 年的邮件组中所发表的"b- money" (<a href="http://www.weidai.com/bmoney.txt" class="uri">http://www.weidai.com/bmoney.txt</a>)，就是一种匿名分布式 电子现金系统架构，从某种意义上，比特币即为该架构的一个具体项目实现。 此外，由 NickSazbo 在 1998 年发表于博客之中的比特黄金(Bit Gold)方案，也可以认为是比特币的基础之一。</p><h2 id="区块链特点能力">区块链特点（能力）</h2><h3 id="去中心化">去中心化</h3><ul><li>如 微博、BT 下载、滴滴</li><li>从 <strong>架构层、政治层、逻辑层</strong> 看是否为中心化系统</li><li>比特币在架构层去中心化，由多个用户和矿工构成；政治层去中心化，没有人可以控制区块链；逻辑层中心化，整体看上去好像一台计算机</li><li>去中心化系统的优势：<strong>容错、抵抗攻击、抵抗合谋</strong></li><li>但也有问题：同步成本、效率、规则难于统一</li></ul><h3 id="不可篡改性">不可篡改性</h3><p>区块链之所以能够在去中心化的同时解决信<strong>任问题，最本质的原因是区块链具有不可篡改的特性。 其建立在</strong>哈希函数与其特殊的链式数据结构之上。</p><p>区块是一种记录交易的数据结构。每个区块由 区块头和区块主体组成；区块主体只负责记录前一段时间内的所有交易信息；区块链的大部分功能都由区块头实现。</p><p>区块头由三组区块元数据组成：</p><ul><li>第一组引用父区块头哈希值的数据，这组元数据用于将该区块与区块链中前一区块相连接。</li><li>第二组元数据，即难度、 高度、时间戳和nonce， 与挖矿竞争相关 。</li><li>第三组 元数据是merkle树根的哈希值 ，默克尔树（Merkel tree）根为当前区块中所有交易按照树形结构生成的256位哈希值</li></ul><p>篡改的理论可能性 - <strong>51%攻击（双花攻击）</strong></p><p>区块链的一致性协议中认为：得到半数以上支持的提议将被确定为最终协议。 以比特币为例，假如一个人拥有比特币网络中50%以上的算力，并且不计成本，那么他就可以用自己的绝对算力优势篡改比特币网络中的数据，建立一条比当前主链更长的链，并将自己篡改后的区块链同步到所有对等节点中，这就是51%攻击。</p><h3 id="匿名性">匿名性</h3><p>两种主流的解释</p><ul><li><strong>anonymous</strong>，完全隐藏个人身份，即在事务处理时不使用任何身份表识；</li><li><strong>pseudonymous</strong>，相对的身份隐藏，即在事务处理时使用某种标识来代替真实身份，即创造一个“假名”或“假身份”来代替自己的真实身份，即非实名</li></ul><p>区块链的匿名性是符合第二种解释的匿名性，即通过非实名的方式来达到的相对匿名。 区块链中每一个组织或个人使用一串无意义的数字来代替自己进行交易，这串数字就是地址，并且只要用户愿意，他可以生成无数个地址。地址与真实信息是无关联的，即人们无法把地址与现实生活中的身份对应起来。</p><p>匿名的区块链应用 匿名的区块链应用在其他领域也大有作为，比如说基于区块链的匿名社交软件Telegram、WhatApp，借助匿名社交维护人民的言论自由。此外，匿名投票、艺术品拍卖等隐私需求高的场景都是区块链匿名性可以优化的方向</p><h3 id="公开账本">公开账本</h3><p>大多区块链项目均使用分布式公开账本数据库，它的数据是完全公开和透明的。 在区块链中只可以进行数据的读写而不可进行修改与删除，各节点遵循一致性共识确认进行广播的交易和交易发生的次序，从而形成了统一、唯一的全球交易总账本。</p><p>优点</p><ul><li>每一个节点本地都可以保存完整总账本<ul><li>记录着从创世区块到当前时刻的所有交易</li></ul></li><li>区块链中所有的交易都是可查询的<ul><li>大部分区块链项目都提供区块链浏览器，可以用来查询区块链系统运行状态， 比如说 blockchain.info。</li><li>每个人都知道网络的真实状态，防止了诸如双重攻击 (double-spending)之类的攻击</li></ul></li><li>数据公开解决了中心化难以监管、缺乏信任的弊端<ul><li>将数据的所有权归还给用户，使每个参与其中的用户都成为监管系统数据、维护系统真实可靠性的一员，增强了可信性 。</li></ul></li></ul><p>缺点</p><ul><li>容量问题：如何在维持长期运行的详细历史记录与扩展其未来处理日益增长的交易量的能力的需求之间取得平衡</li><li>隐私：一个永久记录每笔交易的公共账本也将方便黑客、政府或不法分子跟踪公共记录以及网络参与者的行为，这使区块链参与者的匿名性和隐私受到威胁</li><li>黑客攻击：任何基于公共账本的加密货币始终会受到黑客攻击，窃取加密货币以及黑客堵塞网络的威胁，这些问题都亟待去完善 。</li></ul><h2 id="编码与密码">编码与密码</h2><h3 id="相关编码">相关编码</h3><p>区块链常见的编码格式：将二进制转可视字符串的算法</p><ul><li>Base64编码</li><li>Base58编码</li><li>Base58Check编码</li></ul><p>Base58 在 Base64 的基础上去除了容易混淆的字符，不同应用中的字符集是不同的。Base58 没有校验机制，Base58Check 在此基础上增加了校验机制，在原数据的前面加数据类型后面加校验和，最后进行 Base58 编码。</p><h3 id="公钥密码学">公钥密码学</h3><h4 id="简单总结">简单总结</h4><p>【以下的一个部分是对于 <a href="https://www.cnblogs.com/songwenlong/p/6517165.html">加解密算法、消息摘要、消息认证技术、数字签名与公钥证书</a> 一文的总结，感觉写得很清楚】</p><ul><li><strong>数据传输的安全</strong>，即保证不被窃听或解密，在传统的<strong>对称加密</strong>中双方都需要相同的密钥安全性有问题；而<strong>非对称加密</strong>利用公私钥的区分可解决该问题。对称加密常见算法有DES 3DES AES RC5 RC6；非对称加密有 RSA 等。</li><li><strong>保证数据完整性</strong>，即查看数据是否出了差错或被篡改。即「<strong>信息摘要/信息指纹</strong>」的概念，常见的例子是网上下载的软件会提供散列值进行校验。一般用哈希函数来完成，不可逆，常见算法有 MD5 SHA。</li><li><strong>保证数据真实性</strong>，即<strong>信息认证</strong>。有一种「<strong>消息认证码</strong>（Message Authentication Code，简称MAC）」的功能类似于对称加密，问题在于无法保证发送者不否认该消息。「<strong>数字签名</strong>（Digital Signature）」可解决该问题——数字签名的重点在于发送方和接收方使用不同的密钥来进行验证，并且保证发送方密钥的唯一性，<strong>将公钥算法反过来使用</strong>可以达到此目的：A发送消息前，使用私钥对消息进行签名，B接收到消息后，使用配对的公钥对签名进行验证；如果验证通过，说明消息就是A发送的，因为只有A采用配对的私钥；第三方机构也是依据此来进行裁决，保证公正性。</li><li><strong>公钥的合法性</strong>，上面的公钥加密和数字签名都有如何保证公钥的合法性的问题。解决办法是将公钥交给一个第三方权威机构——<strong>认证机构（Certification Authority）CA</strong> 来管理。接收方将自己的公钥注册到CA，由CA提供数字签名生成<strong>公钥证书（Public-Key Certificate）PKC</strong>，简称证书。证书中有CA的签名，接收方可以通过验签来验证公钥的合法性。</li></ul><h4 id="简介">简介</h4><p>网络安全</p><ul><li>机密性 Confidentiality：仅发送方和接收方能够理解</li><li>完整性 Integrity 1. 消息来源的完整性；2. 消息内容的完整性</li><li>可用性 Availability</li></ul><p>古典密码学（ 1949年之前）：密码学是一门艺术 近代密码学（1949~1975）：密码学成为科学的分支 现代密码学（1976年之后）：密码学的新方向—公钥密码学</p><h4 id="近代密码学">近代密码学</h4><p>主要想法是分块进行加密，利用函数决定置换顺序，<strong>密钥</strong>决定了函数是如何进行置换的。</p><p><strong>对称加密</strong>：DES 3DES AES【密钥可以是128，192，256】 RC5 RC6</p><h4 id="公钥密码学-1">公钥密码学</h4><p>1976年，Diffie和Hellman在“New Directions in Cryptography”中首次给出了公钥密码学的定义，开创了现代密码学的新领域 1977年，Rivest，Shamir和Adleman提出了RSA公钥算法 90年代逐步出现了椭圆曲线等其他公钥算法， 主要特点：公钥密码使得发送端和接收端无秘钥传输的保密通信成为可能【为了确认发送方的身份，需要 数字签名】</p><ul><li>非对称加密算法<ul><li>每个用户都有一个公钥PK（可公开）和一个私钥SK（必须保密）</li><li>公钥用于加密，私钥进行解密</li><li>解决了传统密码体制的两个大难题：<strong>密钥分配和数字签名</strong></li></ul></li></ul><h5 id="数字签名">数字签名</h5><p>在使用公钥加密算法时，公钥是公开的，因此中间者可以冒充发送方给接收方发送消息，而发送方无法证明该消息不是他发送的。</p><p>如果发送方在发送消息时带上只有他自己才能生成的数据（字符串），接收者就能验证消息的来源。通常这个<strong>能证实身份的数据（字符串）就称之为数字签名</strong>。</p><p><img src="16058426625085.jpg" /></p><p>非对称加密：公钥加密、私钥解密 数字签名：私钥签名、公钥验签</p><h5 id="公钥算法">公钥算法</h5><p>具有实用性的公钥算法只有以下三类，其中区块链中常用的公钥加密算法是椭圆曲线算法。</p><p><img src="16058427386942.jpg" /></p><h4 id="其他一些数字签名">其他一些数字签名</h4><p>除了传统理解上的数字签名之外，还包括</p><ul><li>群签名：有一定的匿名性（作为群体）；但在特殊情况下管理员可以进行追踪信息源（可追追踪性）；</li><li>环签名：无条件匿名性，作为群体进行签名；一个例子，内个成员举报总统；</li><li>盲签名：签名者并不知道消息的内容；</li></ul><h3 id="哈希函数">哈希函数</h3><p>Hash函数h用于将任意长的消息（或数据）m映射为较短的、固定长度的一个值 h(m)，函数值h(m)也被称为消息的指纹或摘要。</p><p>三个特性：</p><ol type="1"><li>碰撞阻力；</li><li>隐秘性：即给出结果无法计算输入；</li><li>谜题友好性：通俗来说就是在反向求解哈希函数时，没有比随机去尝试输入的取值有更好的办法。</li></ol><h3 id="默克尔树">默克尔树</h3><p>在区块链中，使用<strong>哈希指针和默克尔树</strong>可以用来防止信息被篡改。</p><p>在默克尔树中，将数据两两分组，然后每一组建立的两个哈希指针分别指向这两个元素；像这样得到根哈希指针。</p><p>另外一个优势，利用默克尔树可以提高<strong>隶属证明</strong>的效率：要证明某个数据数据默克尔树，仅需要 <span class="math inline">\(\log(n)\)</span> 次计算。</p><h2 id="共识机制">共识机制</h2><p><strong>区块链共识机制的目标是使所有的诚实节点保存一致的区块链视图</strong>。</p><h3 id="工作量证明proof-of-workpow">工作量证明(Proof-of-Work，PoW)</h3><p>从比特币的挖矿开始说起</p><p>工作量证明算法的具体步骤归纳如下：</p><ul><li>通过 Merkle Tree 算法生成 Merkle Tree Root；</li><li>将所有区块头的相关字段组装成区块头，将80字节的区块头数据作为工作量证明的输入；</li><li>不断变更区块头中的随机数 Nonce 的值，对每次变更后的区块头做两次 SHA256 计算，即 SHA256(SHA256(Block Header))；</li><li>将结果值与当前的难度目标进行比较，如果小于难度目标，则工作量证明完成；</li></ul><p><img src="16058537988215.jpg" /></p><p>优点：</p><ul><li>安全性好</li><li>去中心化</li></ul><p>缺点</p><ul><li>高能耗</li><li>速度慢，公式时间长</li><li>弱中心化：矿场集中化</li></ul><h3 id="posproof-of-stake权益证明">PoS（Proof-of-stake，权益证明）</h3><p>PoS 机制根据每个节点拥有代币的比例和时间，依据算法等比例地降低节点的工作量证明难度，从而加快了寻找随机数的速度 任何人只要拥有电子货币，就可以参与生产区块（无门槛） PoS 类似于财产储存在银行，这种模式会根据持有货币的量和时间，分配相应的利息。 会引入一系列问题，无法确定“记账”节点的数量，无法确定“记账”节点之间的网络环境，节点越多会导致网络环境越复杂，这种不确定性会大大增加区块链分叉的概率，并且由于节点数量与网络环境的复杂性，区块链性能将会趋于低下。</p><h3 id="dpos">DPoS</h3><p>号称区块链 3.0 的 <strong>EOS 区块链</strong>，在 PoS 的基础上进行了优化，采用了 <strong>DPoS 机制（Delegated-Proof-of-Stake，代理权益证明）</strong> 解决了 PoS 的一些问题，可以事先确定“记账”节点和其数量,并让全网节点投票决定哪些节点成为“记账”节点</p><p>将区块生产者由 PoS 机制下的所有节点转换成指定节点数组成的小圈子，作为“记账”节点。这个圈子的节点数取决于区块链的设计，EOS 使用了 <strong>21</strong> “记账” 节点由全网所有节点投票得到，这一过程也叫投票选举。指定数量的节点来“记账“不代表其他节点丧失了参与共识的权利，只不过其他节点以一种间接的形式行使共识权。 由于“记账”节点的数量不多，那么可以在算法设计时规定一个固定的出块时间，并由“记账”节点轮流进行记账。</p><p>优缺点</p><p>提升确认速度：DPoS 区块生产性能非常高，这就意味着交易确认会变得更实时 EOS每生成1个区块只需要0.5秒，一笔交易大概经过6-10次确认，时间不超过1分钟。</p><p>大量降低能耗：在DPOS中生产区块的节点数量极少，大致几十或几百个，每次只授权一个生产者在给定时间生产区块，区块生产是井然有序的，这些节点之间的关系是合作而不是竞争，因此不需要消耗大量的算力去竞争记账权，这样就极大地降低了能源消耗</p><p>即使在有生产者出现恶意行为的情况下，DPoS 机制也是强健而稳定的，因为可以随时替换掉不合格的区块生产者</p><p><strong>但是 DPoS 在一定程度上违背了去中心化的思想</strong>，由于数量不多，所以区块生产节点的权力都比较大，可以认为 DPoS 是带有一定中心化思想的共识机制。</p><h3 id="拜占庭故事-byzantine-generals-problem-与-pbft-实用拜占庭式容错-practical-byzantine-fault-tolerancepbft">拜占庭故事 (Byzantine Generals Problem) 与 pBFT (实用拜占庭式容错 practical Byzantine Fault Tolerance，pBFT)</h3><p>pBFT 降低了原始的 BFT 的算法复杂度，使得 pBFT 在实际应用中具有可行性，并且做到能够同时容纳故障节点和作恶节点，提供了安全性与鲁棒性； 但是算法复杂度仍然过高，可拓展性比较差，在节点数量变多时，系统性能将会下降的很快，带来更高的延迟；</p><h3 id="分布式系统共识的意义">分布式系统共识的意义</h3><p>在区块链中，每个参与者都是一个独立的、有自治性的节点。不同节点都各自维护着一条内容相同的数据链，同时也独立地将网络中新产生的数据打包为一个区块，广播给其他节点。 最终只能有一个区块加入到主链，如何选择这个区块是区块链共识的重要任务之一。在这个过程中，如果将主链视为账本，共识算法所做的就是决定将哪个节点整理的账目写入总账，即如何分配记账权 共识机制作为区块链技术的重要组件之一，其目的是让所有诚实节点保存一致的区块链视图，并且能同时满足两个性质，这也是共识机制的目标</p><ul><li>一致性：所有诚实节点保存的区块链的前缀部分完全相同。</li><li>有效性：由某一诚实节点所发布的信息终将被其他所有的诚实节点记录到自己的区块链中去。</li></ul><h2 id="智能合约">智能合约</h2><p>早在1994年，几乎是与互联网的概念提出的同时，密码学家和数字货币研究者尼克·萨博发表了《智能合约》（Smart contracts）论文，提出“智能合约”的概念。</p><p>传统合约需要交易双方或者多方必须信任彼此，通过协议进行交易。智能合约则不同，智能合约的协议逻辑通过代码来体现，通过代码定义并强制执行，不会通过人的主观干预而发生改变。 <strong>换句话说智能合约实际就是一段编写好的代码，一旦被调用就会严格公正地去执行代码的内容。</strong></p><p>智能合约概念的提出远早于区块链概念，但为什么到了现在才开始进入大众眼中呢？这其实跟技术有关的，早期的构想是把智能合约烧写到硬件上以此来避免攻击者去攻击合约，但是因为当时的执行，安全和技术落地困难等原因就被搁置了。 2008年中本聪提出的比特币将区块链技术带入大众视野。区块链技术的不可篡改性，可追溯性及多方计算等特性与智能合约的应用需要不谋而合，这使人们开始思考着14年前提出的智能合约概念是不是可以依靠区块链技术去实现。</p><p>2014 年一位名叫 Vitalik Buterin（以下简称布特林）的俄罗斯小伙在《比特币杂志》上发表文章《以太坊：一个下一代加密货币和去中心化应用平台》，第一个将区块链与智能合约结合起来的区块链平台正式问世。</p><p>每当区块链网络中出现一个新交易，该交易会被矿工节点们捕获并在自己的 <strong>EVM</strong> 上模拟运行出结果，并将自己的结果广播至网络中等待被其他节点验证，被所有节点承认正确的结果才会成为此交易的正确执行结果，不被承认的交易结果则不会具有记录上链的资格。 这种多方计算并达成共识的机制使作弊成本大大提高，而且区块链的不可篡改性和可追溯性更可以帮助查找以往智能合约的执行记录。</p><p>优点：</p><ul><li>高效性：相比于传统合约，智能合约的执行不需要人为的第三方权威或中心化代理服务的参与，其能够在任何时候响应用户的请求，从而提升了交易进行的效率。</li><li>准确执行：智能合约的所有条款和执行过程是提前制定好的，并在计算机的绝对控制下进行计算。</li><li><strong>多方计算</strong>：区块链中是多方计算产生结果并达成共识的，如果想要作弊的话就需要最少控制51%以上的节点来帮助作弊，这极大的提高了在区块链网络中作弊的成本。</li><li>不可篡改性：区块链中智能合约一旦被部署上链则会永远存储在区块链网络中且不会被篡改（理论上可以从记录该信息的块前再生成新的一条链来重写此交易结果，但是人为分叉一条新链的成本大的超乎想象，因此可以忽略此风险）</li><li>可追溯性：所有在区块链网络中执行的智能合约结果一旦被上链后都具有能被查询到。</li><li><strong>较低的运行成本</strong>：智能合约的执行仅需要电费的支出，这相比于传统合约的人力支出真的少了很大的成本。</li></ul><p>当然，只要是人为编写的代码，肯定有出错的可能性。 <strong>2016 年，TheDAO攻击事件</strong></p><p>三个应用案例</p><ul><li>博彩交易</li><li>差价和约</li><li>遗产分配</li></ul><h2 id="fabric-架构">Fabric 架构</h2><p>Hyperledger Fabric 是一个<strong>开源的企业级分布式账本技术平台</strong>。 最初由 Digital Asset 和 IBM 贡献, 来自一场黑客松 2015年12月，Linux基金会主导发起了 Hyperledger 项目，Hyperledger Fabric 是 Hyperledger 旗下的项目之一。 目标是发展跨行业的区块链技术。该项目是一个全球协作项目，成员包括一些不同领域的先驱者们，这些先驱者们的目标是建立一个强大的、业务驱动的区块链框架</p><p>Hyperledger Fabric 特点（与其他区块链系统不同点）</p><ul><li>最大的不同：<strong>私有和许可</strong>。 Hyperledger Fabric通过成员服务提供者(Membership Service Provider)来登记 有的成员。这意味着参与者彼此都是已知的、互相信任的，而不是匿名的、 彼此完全不信任的。</li><li>最关键的不同点：是它支持<strong>可插拔的共识协议</strong>，这使得平台能够更有效地定制以适应特定的场景。</li><li>允许账本非公开，提供了<strong>建立通道(channel)</strong> 的功能，允许参与者为交易新建一个单独的账本。只有在同一个通道中的参与者，才会拥有该通道中的账本，而其他不在此通道中的参与者则看不到这个账本，实现按需共享的目的。 更符合现实生活的商业场景。</li><li>Hyperledger Fabric 的 SDK 支持多种语言，与其他区块链网络的专用语言相比，大大降低了应用开发的门槛。</li></ul><p>节点架构 账本 通道 <strong>成员服务提供者 MSP</strong> 针对背书策略的交易评估 Fabric 在实际场景中的交易流程</p><p><img src="16058560327379.jpg" /></p><h3 id="节点架构">节点架构</h3><h4 id="客户端节点">客户端节点</h4><p>客户端或者应用程序代表由最终用户操作的实体，它必须连接到某一个 Peer 节点或者排序服务节点上与区块链网络进行通信。 客户端向背书节点（Endorser）提交交易提案（Transaction Proposal），当收集到足够背书后，向排序服务广播交易，进行排序，生成区块。</p><h4 id="peer-节点">Peer 节点</h4><p>所有的Peer节点都是<strong>记账节点（Committer）</strong>，负责验证从排序服务节点发送的区块里的交易，维护状态数据和账本的副本。 部分节点会执行交易并对结果进行签名背书，充当<strong>背书（Endorser）节点</strong>的角色。背书节点是动态的角色，是与具体链码绑定的。<strong>每个链码在实例化的时候都会设置背书策略（共识）</strong>。也只有在应用程序向它发起交易背书请求的时候才是背书节点，其他时候就是普通的记账节点，只负责验证交易并记录账本。 Peer节点还有一种角色是<strong>主节点（Leader Peer）</strong>，代表的是和排序服务节点通信的节点，负责从排序服务节点处获取最新的区块并在组织内部同步。主节点可以通过强制设置产生，也可以动态选举产生。</p><h4 id="排序服务节点">排序服务节点</h4><p>接收<strong>包含背书签名的交易</strong>，对未打包的交易进行排序生成区块，广播给Peer节点。排序服务提供的是<strong>原子广播（Atomic Broadcast）</strong>，保证同一个链上的节点接收到相同的消息，并且有相同的逻辑顺序 提供交付保证的通信架构，为客户端和 Peer 节点提供共享的通信信道，为包含交易的消息提供广播服务。 排序服务的<strong>多通道（Multi-Channel）</strong>实现了了多链的数据隔离，保证只有同一个链的Peer节点才能访问链上的数据，保护用户数据的隐私。 排序服务可以采用集中式服务，也可以采用分布式协议。可以实现不同级别的容错处理。 一组排序节点形成 <strong>排序服务(ordering-service)</strong></p><h4 id="ca-节点">CA 节点</h4><p>CA节点是Fabric的<strong>证书颁发机构（Certificate Authority）</strong>，由服务器和客户端组件组成。 CA节点接收客户端的注册申请，返回注册密码用于用户登录，以便获取身份证书。在区块链网络上所有的操作都会验证用户的身份</p><p><img src="16058564293105.jpg" /></p><h3 id="账本">账本</h3><p>Hyperledger Fabric包含一个账本子系统，这个子系统包含两个组件：世界状态(world state)和交易记录。</p><ul><li><strong>世界状态</strong>组件描述了账本在特定时间点的状态，它是账本的当前快照，通过版本键值对存储(KVS)，由区块链上链码进行存取。状态s持续存储并且其更新也被记录，被存储为一个映射K -&gt; (V X N)，K是一组键，V是一组值，N是无限有序的版本号集。</li><li><strong>交易记录</strong>组件记录了产生世界状态当前值的所有交易，它是世界状态的更新历史。它包含所有的状态更改（有效交易）的记录和不成功的状态更改（无效交易）的尝试，由Order服务构建的有序的交易哈希块，并被保存在Peer节点。</li></ul><h3 id="通道">通道</h3><p><strong>客户端连接到通道（Channel）上</strong>，在通道上广播的消息会最终发送给通道内所有的Peer节点。通道支持消息的原子广播（Atomic Broadcast），通道给所有相连的Peer节点输出相同的消息，并且有相同的逻辑顺序。这种原子通信也称为全序广播（Total-order Broadcast）。 客户端连接到一个通道上，就可以发送和获取消息。客户端可以连接到多个通道，通道之间相互隔离。通道（Channel）使交易者可以创建不同的账本，达到数据隔离的目的。只有在同一个通道中的参与者，才会拥有该通道中的账本，而其他不在此通道中的参与者则看不到这个账本。 排序服务支持<strong>多通道（Multi-Channel）</strong></p><p>节点之间，节点与应用通过消息通道通信 节点间通过消息通道和排序服务联系，形成交易信息<strong>隔离</strong>的通讯链路 环境中可以并行存在多个消息通道，每个通道一个账本 Channel 配置包含 channel 的所有管理信息</p><ul><li>channel的成员属于哪个组织</li><li>包含channel级别的全局配置，比如channel访问策略、区块大小等</li></ul><p>Channel 消息通道作用：<strong>适配组织架构的多链机制</strong></p><ul><li><strong>一个链由1个通道 + 1个账本 + N个成员(peer)组成</strong></li><li>共识由Ordering Service提供，可共享</li><li>成员可加入多个链</li></ul><h3 id="成员服务提供者-msp">成员服务提供者 MSP</h3><p>成员服务提供者 MSP 是 Hyperledger Fabric 引入的一个组件，其将证书颁发、用户认证、后台的加密机制和协议都进行了抽象。每个MSP可以定义自己的规则，这些规则包括身份的认证，签名的生成和认证。 每个Fabric区块链网络可以引入一个或者多个MSP来进行网络管理，这样将成员本身和成员之间的操作、规则和流程都模块化。 Hyperledger Fabric 基于 PKI 体系，生成数字证书以标识用户的身份。每个身份和成员服务管理提供者（Membership Service Provider, MSP）的编号进行关联。</p><ul><li>成员（Member）是拥有网络唯一根证书的合法独立实体。在 Fabric 区块链中，peer 节点和 app client 这样的网络组件实际上就是一个 Member。</li><li>成员服务（Member Service）在许可的区块链网络上认证、授权和管理身份。在peer和order中运行的成员服务的代码都会认证和授权区块链操作。它是基于 PKI 的 MSP 实现。</li></ul><p>MSP 的具体功能是<strong>成员管理</strong>。包括 会员注册、身份保护、内容保密、交易审计功能；保证平台访问的安全性。</p><h3 id="针对背书策略的交易评估">针对背书策略的交易评估</h3><p>背书（Endorsement）（达成共识过程） 背书是指一个节点执行一个交易并返回交易是否通过的消息给生成交易提案的客户端应用程序的过程。 <strong>每个chaincode都具有相应的背书策略，用于指定背书节点</strong>。链码的调用交易需要经过背书策略要求的背书才会有效。正式的背书策略是以背书为基础，以及潜在的进一步评估为真假状态。 对于部署交易，获得背书的依据是系统系统范围策略（如系统链码）。背书通过被每个peer节点本地独立评估，但所有正确的peer节点以相同的方式评估背书策略。</p><p>背书策略（Endorsement policy） 背书策略是认可交易的条件。对于某一链码，背书策略可指定认可交易的最小背书节点数或者最小背书节点百分比。背书策略可以用来防止成员的不良行为。在安装和实例化 Chaincode 时需要指定背书策略。</p><p><img src="16058578111034.jpg" /></p><p>交易过程</p><p>Step1：客户端创建交易并发送给背书peer节点 Step2：验证交易事务协议请求并模拟执行 Step3：验证背书节点签名并发送给排序服务节点 Step4：排序服务节点合并交易并创建区块 Step5：排序服务节点广播给Channel的Leader节点 Step6：账本更新</p><h3 id="例题架构设计">例题：架构设计</h3><p>请阅读如下材料，完成项目的区块链架构设计，在“lianmen.docx”文件中填写完成所需步骤。 Hyperledger Fabric可以用来搭建联盟链，现有一个名为university.cn的联盟，其中有5个组织org1、org2、org3、org4和org5决定利用区块链合作传输数据，包括公共数据和秘密数据。联盟商定每个组织创建2个节点，org5额外承担排序节点工作，公共数据允许全部组织访问，秘密数据只允许org1、org3和org5访问。处理公共数据的智能合约有CCP1和CCP2；处理秘密数据的智能合约有CCS1和CCS2。</p><p>步骤一：创建节点 生成12个节点的配置文件并完成相关部署，包括10个peer节点，2个orderer节点，说明理由（例：为组织X1生成XXX）：为组织org1、org2、org3、org4和org5各生成2个peer节点，共10个；另外为组织org5生成2个orderer节点 步骤二：创建通道 生成2个消息通道的配置文件并完成相关部署，包括1个公共数据通道，1个秘密数据通道，说明理由：公共数据和秘密数据需要数据隔离，所以需要2个通道. 步骤三，通道节点操作： 分别将peer和orderer加入两通道，org1、org2、org3、org4和org5加入公共数据通道ChannelPublic，org1、org3和org5加入秘密数据通道ChannelPrivate，orderer节点为两个通道提供排序服务 步骤四，通道合约操作： 分别在两个通道部署合约，CCP1和CCP2部署在公共数据通道channelPublic，CCS1和CCS2部署在公共数据通道channelPrivate</p><h2 id="go-语言语法">Go 语言语法</h2><p>参见 <a href="mweblib://16057741036129">Go语言大纲</a>。下面对于 PPT 内容简单摘录。</p><p>程序结构 基础语法 数据类型 变量和常量 运算符 数组(Array)和切片(Slice) 结构体 逻辑控制语句 循环语句 条件语句 函数 接口</p><h3 id="相关的包">相关的包</h3><p>在chaincode的开发中，需要导入chaincode的依赖库来提供接口支持，需要导入 <code>shim</code> 库</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> ( </span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/chaincode/shim&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>shim库包含一系列chaincode依赖的API，提供和区块链环境进行交互的方法，包括访问状态数据，交易数据，链码之间调用等等。</p><h3 id="方法">方法</h3><p>一个方法就是一个包含了接受者的函数，接受者可以是命名类型或者结构体类型的一个值或者是一个指针。所有给定类型的方法属于该类型的方法集。</p><p>定义的语法如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">func (v_name v_datatype) func_name() [return_type] &#123;&#125;</span><br></pre></td></tr></table></figure><h3 id="接口">接口</h3><p>Go 语言提供了另外一种数据类型即接口，它把所有的具有共性的方法或行为定义在一起，在功能和该功能的使用者之间构建了一层薄薄的抽象层，任何其他类型只要实现了这些方法就是实现了这个接口。</p><p>Hyperledger Fabric 的 ChainCode 的每个 chaincode 程序都必须实现chaincode 接口，接口中的方法会在响应传来的交易时被调用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Chaincode <span class="keyword">interface</span> &#123;</span><br><span class="line">    Init (stub ChaincodeStubInterface) pb.Response</span><br><span class="line">    Invoke (stub ChaincodeStubInterface) pb.Response</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>Init</code>（初始化）方法会在chaincode接收到instantiate（实例化）或者upgrade(升级)交易时被调用，进而使得chaincode顺利执行必要的初始化操作，包括初始化应用的状态。 <code>Invoke</code>（调用）方法会在响应 invoke（调用）交易时被调用以执行交易。</p><h2 id="fabric的chaincode的编写与单元测试golang版">Fabric的chaincode的编写与单元测试（Golang版）</h2><h3 id="什么是链码chaincode">什么是链码（chaincode）</h3><ul><li>账本<ul><li>在Fabric中，每个通道都有其账本，每个peer节点都保存着其加入的通道的账本，包含着<strong>交易日志（账本数据库）、状态数据库以及历史数据库</strong>。</li><li><strong>账本数据库</strong>：以区块链方式存储，是一个交易记录的集合，每个区块中包含一些列有序交易，简单的说，是一系列有序的、不可篡改的状态转移记录日志。每笔交易都可以当做对世界状态的一次查询或者更新，称之为状态转移，<strong>状态转移是链码（chaincode）执行（交易）的结果</strong>，每个交易都是通过增删改操作提交一系列键值对到账本。</li><li><strong>状态数据库</strong>：维护账本当前的状态，这些中间状态的最新值是以键值对方式保存在数据库中的。他们被称为世界状态。和链上数据一同组织形成了账本，可以认为世界状态是由区块链上数据完整执行获得的最终结果。</li></ul></li><li>什么是链码<ul><li><strong>链码（chaincode）</strong>是在 Hyperledger Fabric 中所提供的智能合约。从程序的角度，链码可以认为是运行在区块链平台上的可以对外提供服务的小程序。</li><li>链码部署在平台上后，对外提供了一组可被调用的接口，应用程序（客户端）通过调用链码这些接口访问这些 world state 所存放的状态，通过状态的 key 来存，取，删除状态。</li><li>对许多的应用开发者来说，链码其实才是最重要的，链码可以使用不同的程序设计语言来编写实现，比如：java，go，typescript，JavaScript，不管是哪种语言编写的链码，链码结构和实现方式都是差不多的。</li></ul></li></ul><h3 id="链码的结构">链码的结构</h3><ul><li>引入必要的包<ul><li>对于每一个链码，它都会实现预定义的接口，包括Init和Invoke函数接口。所以我们首先为我们的链码引入必要的依赖。这里的shim层是节点与链码交互的中间层。</li><li>shim包是Fabric系统提供的主要的API，包含了链码和平台交互的接口，在链码中，执行状态修改、状态查询等功能都需要通过shim访问。</li></ul></li><li>声明一个结构体，即chaincode的主体结构体</li><li>实现一个能部署到平台中的链码，需要满足特定的约束，具体来说，就是链码都需要实现特定的接口： chaincode 接口，实现其中的 Init() 和 Invoke() 函数，在其中利用 shim.ChaincodeStubInterface 结构，实现跟账本的交互逻辑。<ul><li><strong>Init（初始化）方法</strong>：会在chaincode接收到instantiate（实例化）或者upgrade(升级)交易时被调用，进而使得chaincode顺利执行必要的初始化操作，包括初始化应用的状态。</li><li><strong>Invoke（调用） 方法</strong>：主要用于实现链码的内部业务逻辑，用户可以在该方法中实现相关的业务。用Fabric的术语就是会在响应invoke（调用）交易时被调用以执行交易<ul><li>链码初始化好之后，就能被区块链应用从外部调用。区块链平台将记录下调用的历史（交易日志），并更新worldstate中状态数据。</li><li>调用链码中的方法的统一入口为Invoke，比如，如果要调用获取字典项"a"的服务，需要调用Invoke，并带参数("get","a"),其中，"get"为函数名，"a"为参数。参数可以有多个。</li></ul></li></ul></li><li>主函数，需要调用shim.Start()方法</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Chaincode <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Init is called during Instantiate transaction after the chaincode container</span></span><br><span class="line">    <span class="comment">// has been established for the first time, allowing the chaincode to</span></span><br><span class="line">    <span class="comment">// initialize its internal data</span></span><br><span class="line">    Init(stub ChaincodeStubInterface) pb.Response</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Invoke is called to update or query the ledger in a proposal transaction.</span></span><br><span class="line">    <span class="comment">// Updated state variables are not committed to the ledger until the</span></span><br><span class="line">    <span class="comment">// transaction is committed.</span></span><br><span class="line">    Invoke(stub ChaincodeStubInterface) pb.Response</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"> <span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;github.com/hyperledger/fabric-chaincode-go/shim&quot;</span>  <span class="comment">// shim包是Fabric系统提供的上下文环境，提供了Chaincode和Fabric交互的API，在Chaincode中，执行对world state的查询、更新和删除等都需要通过shim</span></span><br><span class="line"> <span class="string">&quot;github.com/hyperledger/fabric-protos-go/peer&quot;</span>     <span class="comment">// chaincode结构体需要实现Fabric提供的接口 peer</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 该结构体需要实现Fabric提供的接口&quot;github.com/hyperledger/fabric/protos/peer&quot;，其中必须实现下面的两个方法</span></span><br><span class="line"><span class="keyword">type</span> SimpleContract <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Init 链码在初始化和升级时调用此接口，初始化相关的数据。</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *SimpleContract)</span> <span class="title">Init</span><span class="params">(stub shim.ChaincodeStubInterface)</span> <span class="title">peer</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line"> <span class="comment">//该方法中实现链码初始化或升级是的处理逻辑，</span></span><br><span class="line"> <span class="comment">//编写时可以灵活使用stub中的API</span></span><br><span class="line"> args := stub.GetStringArgs()</span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">len</span>(args) != <span class="number">2</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(<span class="string">&quot;Incorrect arguments. Expecting a key and a value&quot;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> _, err := strconv.Atoi(args[<span class="number">1</span>])</span><br><span class="line"> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(<span class="string">&quot;Expecting integer value for state&quot;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//将参数中的Key/Value更新到</span></span><br><span class="line"> err = stub.PutState(args[<span class="number">0</span>], []<span class="keyword">byte</span>(args[<span class="number">1</span>]))</span><br><span class="line"> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;Failed to create state: %s&quot;</span>, args[<span class="number">0</span>]))</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> shim.Success(<span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *SimpleContract)</span> <span class="title">get</span><span class="params">(stub shim.ChaincodeStubInterface, args []<span class="keyword">string</span>)</span> <span class="title">peer</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">len</span>(args) != <span class="number">1</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(<span class="string">&quot;Incorrect arguments. Expecting a key and a value&quot;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> key := args[<span class="number">0</span>]</span><br><span class="line"> valBytes, err := stub.GetState(key)</span><br><span class="line"> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;Fail to get state: %s&quot;</span>, key))</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span> valBytes == <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;Nil amount: %s.&quot;</span>, key))</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> shim.Success(valBytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *SimpleContract)</span> <span class="title">set</span><span class="params">(stub shim.ChaincodeStubInterface, args []<span class="keyword">string</span>)</span> <span class="title">peer</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line"> <span class="keyword">if</span> <span class="built_in">len</span>(args) != <span class="number">2</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(<span class="string">&quot;Incorrect arguments. Expecting a key and a value&quot;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"> _, err := strconv.Atoi(args[<span class="number">1</span>])</span><br><span class="line"> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(<span class="string">&quot;Expecting integer value for state&quot;</span>)</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> err = stub.PutState(args[<span class="number">0</span>], []<span class="keyword">byte</span>(args[<span class="number">1</span>]))</span><br><span class="line"> <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;Failed to set state: %s&quot;</span>, args[<span class="number">0</span>]))</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> shim.Success(<span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Invoke 来自区块链应用的调用的入口</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(t *SimpleContract)</span> <span class="title">Invoke</span><span class="params">(stub shim.ChaincodeStubInterface)</span> <span class="title">peer</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line"> function, args := stub.GetFunctionAndParameters()</span><br><span class="line"> <span class="keyword">if</span> function == <span class="string">&quot;get&quot;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> t.get(stub, args)</span><br><span class="line"> &#125; <span class="keyword">else</span> <span class="keyword">if</span> function == <span class="string">&quot;set&quot;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> t.set(stub, args)</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">return</span> shim.Error(<span class="string">&quot;Invalid invoke function name. Expecting \&quot;get\&quot; \&quot;set\&quot;&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"> <span class="keyword">if</span> err := shim.Start(<span class="built_in">new</span>(SimpleContract)); err != <span class="literal">nil</span> &#123;</span><br><span class="line">  fmt.Printf(<span class="string">&quot;Error starting SimpleContract chaincode: %s&quot;</span>, err)</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="需要应用的fabric的api">需要应用的Fabric的API</h3><p>作为参数传入的ChaincodeStubInterface接口提供了Chaincode和Fabric交互的API，一个链码最主要的功能就是根据区块链应用调用时所传递的参数，对平台中的信息，特别是账本信息，进行访问和修改。 着重介绍示例代码用到的API GetState/PutState/DelState /GetStateByRange GetFunctionAndParameters GetStringArgs</p><p>Fabric区块链的应用中，一个核心的需求就是获取和保存交易的状态信息也就是在worldstate中的状态数据，而其存储都是用键值对（key-value)的方式。 key-value是最简单，同时也是最高效的存储方式。在区块链的应用中，由于平台性能的约束，通常应用的业务逻辑比较简单，key-value足够使用。</p><ul><li>API：PutState<ul><li><code>func (s *ChaincodeStub) PutState(key string, value []byte) error</code></li></ul></li><li>API：GetState<ul><li><code>func (s *ChaincodeStub) PutState(key string, value []byte) error</code></li></ul></li><li>API：DelState<ul><li><code>func (stub *ChaincodeStub) DelState(key string) error</code></li></ul></li><li>API：GetStateByRange<ul><li><code>func (stub *ChaincodeStub) GetStateByRange(startKey, endKey string) (StateQueryIteratorInterface, error)</code></li><li>查询指定范围内的键值，startKey为起始key，endKey为终止key，返回账本状态键迭代器,可用来获取指定的起始键与结束键（半闭半开区间）之间的状态键</li></ul></li><li>API：GetFunctionAndParameters<ul><li><code>func (stub *ChaincodeStub) GetFunctionAndParameters() (function string, params []string)</code></li><li>通过该API，可以提取获取应用App调用链码链码交易中的参数，其中第一个作为被调用的函数名称，剩下的参数作为函数的执行参数。</li></ul></li><li>API：GetStringArgs<ul><li><code>func (stub *ChaincodeStub) GetStringArgs() []string</code></li><li>获取区块链应用App调用链码时调用的参数列表，要求参数列表是字符串。</li></ul></li><li>API: Success/Error<ul><li><code>func Success(payload []byte) pb.Response</code></li><li><code>func Error(msg string) pb.Response</code></li><li>无论是Init还是Invoke，在实现的时候都要求返回一个Response对象，使用Success和Error分别对应于构建处理成功和失败时的Response。 Success 方法负责将正确的消息返回给调用Chaincode的客户端， Error方法将错误的信息返回给调用Chaincode的客户端。</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GetArgs returns the arguments intended for the chaincode Init and Invoke</span></span><br><span class="line"><span class="comment">// as an array of byte arrays.</span></span><br><span class="line">GetArgs() [][]<span class="keyword">byte</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GetStringArgs returns the arguments intended for the chaincode Init and</span></span><br><span class="line"><span class="comment">// Invoke as a string array. Only use GetStringArgs if the client passes</span></span><br><span class="line"><span class="comment">// arguments intended to be used as strings.</span></span><br><span class="line">GetStringArgs() []<span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GetFunctionAndParameters returns the first argument as the function</span></span><br><span class="line"><span class="comment">// name and the rest of the arguments as parameters in a string array.</span></span><br><span class="line"><span class="comment">// Only use GetFunctionAndParameters if the client passes arguments intended</span></span><br><span class="line"><span class="comment">// to be used as strings.</span></span><br><span class="line">GetFunctionAndParameters() (<span class="keyword">string</span>, []<span class="keyword">string</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetState returns the value of the specified `key` from the</span></span><br><span class="line"><span class="comment">// ledger. Note that GetState doesn&#x27;t read data from the writeset, which </span></span><br><span class="line"><span class="comment">// doesn&#x27;t</span></span><br><span class="line"><span class="comment">// consider data modified by PutState that has not been committed.</span></span><br><span class="line"><span class="comment">// If the key does not exist in the state database, (nil, nil) is returned.</span></span><br><span class="line">GetState(key <span class="keyword">string</span>) ([]<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// PutState puts the specified `key` and `value` into the transaction&#x27;s</span></span><br><span class="line"><span class="comment">// writeset as a data-write proposal. PutState doesn&#x27;t effect the ledger</span></span><br><span class="line"><span class="comment">// until the transaction is validated and successfully committed.</span></span><br><span class="line"><span class="comment">// Simple keys must not be an empty string and must not start with a</span></span><br><span class="line"><span class="comment">// null character (0x00) in order to avoid range query collisions with</span></span><br><span class="line"><span class="comment">// composite keys, which internally get prefixed with 0x00 as composite</span></span><br><span class="line"><span class="comment">// key namespace. In addition, if using CouchDB, keys can only contain</span></span><br><span class="line"><span class="comment">// valid UTF-8 strings and cannot begin with an underscore (&quot;_&quot;).</span></span><br><span class="line">PutState(key <span class="keyword">string</span>, value []<span class="keyword">byte</span>) error</span><br><span class="line"></span><br><span class="line"><span class="comment">// DelState records the specified `key` to be deleted in the writeset of</span></span><br><span class="line"><span class="comment">// the transaction proposal. The `key` and its value will be deleted from</span></span><br><span class="line"><span class="comment">// the ledger when the transaction is validated and successfully committed.</span></span><br><span class="line">DelState(key <span class="keyword">string</span>) error</span><br></pre></td></tr></table></figure><h3 id="编写一个简单的chaincode">编写一个简单的chaincode</h3><h3 id="链码单元测试">链码单元测试</h3><p>尽管通常链码都比较简单，但是还是需要经过测试验证其正确。我们可以通过自动化的方法，通过写程序验证代码逻辑上的正确性，Fabric提供了自动化测试框架。自动化测试框架的一个最大的优点是：不需要将链码部署到复杂的平台上，不需要启动任何网络节点，通过我们的测试文件就可以在本地对链码中的接口进行调用测试。。 Fabric通过一个名为 <code>MockStub</code> 的类用于单元测试。 MockStub主要提供两个函数来模拟背书节点对链码的调用：MockInit()和MockInvoke()，分别调用Init和Invoke接口。接收的参数均为类型为string的uuid（用于链码开始前和结束后开始事务的标志，无实际意义，可随便设置即可），以及一个二维byte数组（用于测试的提供参数）。 单元测试的要求： 1.需要导入testing包 2.单元测试文件以_test.go结尾 3.测试用例的函数必须以Test_开头</p><p>输入 <code>go test</code> 进行测试，加入参数 <code>-v</code> 可查看详细结果。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"> <span class="string">&quot;testing&quot;</span></span><br><span class="line"></span><br><span class="line"> <span class="string">&quot;github.com/hyperledger/fabric-chaincode-go/shim&quot;</span></span><br><span class="line"> <span class="string">&quot;github.com/hyperledger/fabric-chaincode-go/shimtest&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">performInit</span><span class="params">(t *testing.T, stub *shimtest.MockStub, args [][]<span class="keyword">byte</span>)</span></span> &#123;</span><br><span class="line"> <span class="comment">//通过stub调用链码中的Init</span></span><br><span class="line"> res := stub.MockInit(<span class="string">&quot;1&quot;</span>, args)</span><br><span class="line"> <span class="comment">/*- 1为uuid，用于链码开始前和结束后开始事务的标志，无实际意义</span></span><br><span class="line"><span class="comment">   - args为初始化需要的参数*/</span></span><br><span class="line"> <span class="keyword">if</span> res.Status != shim.OK &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;Init failed&quot;</span>, <span class="keyword">string</span>(res.Message))</span><br><span class="line">  <span class="comment">//如果没有启动成功，则报告失败</span></span><br><span class="line">  t.FailNow()</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//确认指定key的状态值是否为预期的值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkState</span><span class="params">(t *testing.T, stub *shimtest.MockStub, name <span class="keyword">string</span>, value <span class="keyword">string</span>)</span></span> &#123;</span><br><span class="line"> <span class="comment">//获取链码维护的指定key的状态值</span></span><br><span class="line"> bytes := stub.State[name]</span><br><span class="line"> <span class="keyword">if</span> bytes == <span class="literal">nil</span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;State&quot;</span>, name, <span class="string">&quot;failed to get value&quot;</span>)</span><br><span class="line">  t.FailNow()</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="comment">//如果不是期望的值，则报告失败</span></span><br><span class="line"> <span class="keyword">if</span> <span class="keyword">string</span>(bytes) != value &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;State value&quot;</span>, name, <span class="string">&quot;was not&quot;</span>, value, <span class="string">&quot;as expected&quot;</span>)</span><br><span class="line">  t.FailNow()</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test_Init</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"> <span class="comment">//构建链码</span></span><br><span class="line"> cc := <span class="built_in">new</span>(SimpleContract)</span><br><span class="line"> <span class="comment">// 将其部署到模拟MockStub平台， 传入名称和链码实体</span></span><br><span class="line"> stub := shimtest.NewMockStub(<span class="string">&quot;SimpleChaincode&quot;</span>, cc)</span><br><span class="line"> <span class="comment">//带参数（“a&quot;,&quot;10)调用链码中的Init，并确认是否成功</span></span><br><span class="line"> performInit(t, stub, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;a&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;10&quot;</span>)&#125;)</span><br><span class="line"> <span class="comment">//确认初始化后，指定key的状态值是否为预期的值，即健“a&quot; 的vlaue 应该为“10”</span></span><br><span class="line"> checkState(t, stub, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;10&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test_Get</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"> cc := <span class="built_in">new</span>(SimpleContract)</span><br><span class="line"> <span class="comment">// 获取MockStub对象， 传入名称和链码实体</span></span><br><span class="line"> stub := shimtest.NewMockStub(<span class="string">&quot;SimpleChaincode&quot;</span>, cc)</span><br><span class="line"> performInit(t, stub, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;a&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;10&quot;</span>)&#125;)</span><br><span class="line"></span><br><span class="line"> <span class="comment">//调用invoke方法中的get方法，查询a的值，得到a为10，说明get方法成功</span></span><br><span class="line"> res := stub.MockInvoke(<span class="string">&quot;1&quot;</span>, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;get&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;a&quot;</span>)&#125;)</span><br><span class="line"> <span class="keyword">if</span> <span class="keyword">string</span>(res.Payload) != <span class="string">&quot;10&quot;</span> &#123;</span><br><span class="line">  fmt.Println(<span class="string">&quot;get value a  was not 10 as expected&quot;</span>)</span><br><span class="line">  t.FailNow()</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test_Set</span><span class="params">(t *testing.T)</span></span> &#123;</span><br><span class="line"> cc := <span class="built_in">new</span>(SimpleContract)</span><br><span class="line"> <span class="comment">// 获取MockStub对象， 传入名称和链码实体</span></span><br><span class="line"> stub := shimtest.NewMockStub(<span class="string">&quot;SimpleChaincode&quot;</span>, cc)</span><br><span class="line"> performInit(t, stub, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;a&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;10&quot;</span>)&#125;)</span><br><span class="line"></span><br><span class="line"> <span class="comment">//调用invoke方法中的set方法，update key &quot;a&quot; value &quot;20&quot;</span></span><br><span class="line"> stub.MockInvoke(<span class="string">&quot;1&quot;</span>, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;set&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;a&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;20&quot;</span>)&#125;)</span><br><span class="line"> checkState(t, stub, <span class="string">&quot;a&quot;</span>, <span class="string">&quot;20&quot;</span>)</span><br><span class="line"> <span class="comment">//调用invoke方法中的set方法， add key &quot;b&quot;  value &quot;30&quot;</span></span><br><span class="line"> stub.MockInvoke(<span class="string">&quot;1&quot;</span>, [][]<span class="keyword">byte</span>&#123;[]<span class="keyword">byte</span>(<span class="string">&quot;set&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;b&quot;</span>), []<span class="keyword">byte</span>(<span class="string">&quot;30&quot;</span>)&#125;)</span><br><span class="line"> checkState(t, stub, <span class="string">&quot;b&quot;</span>, <span class="string">&quot;30&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="以太坊-ethereum-简介区块链-2.0">以太坊 Ethereum 简介（区块链 2.0）</h2><p>2014年一位名叫 Vitalik Buterin（以下简称布特林）的俄罗斯小伙在《比特币杂志》上发表文章 ”一代智能合约和去中心化应用平台“——以太坊白皮书 一个开源的“可编程区块链“——Ethdocs ”以太坊在整体上可以看作一个基于交易的状态机: 起始于一个<strong>创世状态</strong>，然后随着交易的执行状态逐步改变达到一个最终状态。该最终状态将被看作以太坊世界的权威”版本“。状态中包含的信息有:账户余额、信誉度、现实世界相关数据等。——以太坊黄皮书</p><p>从“奥林匹克”“前沿”“家园”到 “大都会”（“拜占庭”“君士坦丁堡”）</p><ul><li>EVM<ul><li><strong>以太坊虚拟机 (EVM)</strong> 是智能合约的运行环境。它是一个对外完全隔离的沙盒环境，在其中运行的代码无法访问网络、文件系统和其他进程。不同合约之间的访问也是有限制的。</li></ul></li><li>账户<ul><li>以太坊有两类不同类型的账户，分别为<strong>外部账户EOA和合约账户CA</strong>，它们共用一个地址空间。<ul><li><strong>外部账户</strong>由公钥-私钥对控制，账户地址由公钥生成。该类账户被私钥控制（由人控制），没有关联任何代码</li><li><strong>合约账户</strong>则由智能合约的代码控制，合约地址在合约创建时自动生成(通过合约创建者的地址和从该地址发出的交易数量计算得到) 。</li></ul></li><li>外部账户可以发起交易，而合约账户不能主动发起交易，只能通过外部账户发起交易触发后，按照预先编写的合约代码执行。</li><li>每个账户都记录了四个字段，分别是<strong>nonce值，余额，存储哈希和合约代码哈希</strong>。<ul><li>nonce 值: 为该账户地址发出的交易数量</li><li>余额: 用来记录该账户的以太币余额</li><li>存储: 是一个键值对形式的持久化存存储</li><li>合约代码哈希: <strong>用于指向合约代码，只有合约账户有值，外部账户为空</strong>。</li></ul></li></ul></li><li>交易<ul><li>交易可以看作是从一个帐户发送到另一个帐户的消息。</li><li>交易包含消息的接受者，用于确认发送者的签名，二进制数据和发送的以太币的数量。除此以外，交易还包含两个和gas有关的变量: gas price和 gas limit。</li><li>交易的目标账户<ul><li>目标账户是外部账户，则转入指定的以太币数量到该账户。</li><li>目标账户是合约账户，则合约代码会被执行，发送的数据会作为代码的参数。</li><li>目标账户是零账户(账户地址为 0 )，此交易将创建一个新合约， 发送的数据会转化为EVM字节码并执行，代码的输出将作为合约代码被永久存储。<br /></li></ul></li><li><strong>合约部署就是将编译好的合约字节码通过外部账号发送交易的形式部署到以太坊区块链上</strong>（由实际矿工出块之后，才真正部署成功）。</li><li>在两个外部账户之间传送消息是价值转移的过程。</li><li>从外部账户到合约账户的消息会激活合约账户的代码，允许它执行各种动作（比如转移代币，写入内部存储，挖出一个新代币，执行一些运算等）</li></ul></li><li>货币</li><li>Gas<ul><li>和云计算相似，占用区块链的资源（不管是简单的转账交易，还是合约的部署和执行）同样需要付出相应的费用。以太坊的每笔交易都会收取一定数量的gas作为交易的手续费。</li><li>以太坊上用 Gas 机制来计费，Gas 也可以认为是一个工作量单位，智能合约越复杂（计算步骤的数量和类型，占用的内存等），用来完成运行就需要越多 Gas。gas limit 指定用户愿意为该笔交易花费的最大gas数量，在 EVM 执行交易时，gas limit会按照特定规则逐渐消耗。</li><li>而 Gas price由运行合约的人在提交运行合约请求的时候设定，以确定他愿意为这次交易愿意付出的费用：Gas 价格（用以太币计价） * Gas 数量。发送者账户需要预付的以太币为 <code>gas price * gas limit</code>。【最高可能支付的手续费】</li></ul></li></ul><h3 id="智能合约应用案例">智能合约应用案例</h3><ul><li>差价和约<ul><li>金融衍生品是“智能合约”的最普遍的应用之一。实现金融合约的主要挑战是它们中的大部分需要参照一个外部的价格发布器；例如，一个需求非常大的应用是一个用来对冲以太币（或其它密码学货币）相对美元价格波动的智能合约，但该合约需要知道以太币相对美元的价格。最简单的方法是 通过由某特定机构（例如纳斯达克）维护的“数据提供“合约进行，该合约的设计使得该机构能够根据需要更新合约，并提供一个接口使得其它合约能够通过发送一个消息给该合约以获取包含价格信息的回复。</li></ul></li></ul><h3 id="以太坊中的交易">以太坊中的交易</h3><ul><li>以太坊中的交易(Transaction)是指存储一条从外部账户发送到区块链上另一个账户的消息的签名数据包，它既可以是简单的数字货币一一以太币的转账，也可以是包含智能合约代码的消息 。</li><li>一条交易包含以下内容<ul><li>from: 交易发送者的地址，必填;</li><li>to: 交易接收者的地址，如果为空则意味这是一个创建智能合约的交易;</li><li>value: 发送者要转移给接收者的以太币数量;</li><li>data (也写作 input): 存在的数据字段，如果存在，则是表明该交易是一个创建或者调用智能合约交易;</li><li>Gas Limit(也写作 Gas, StartGas): 表示这个交易允许消耗的最大 Gas 数量;</li><li>GasPrice: 表示发送者愿意支付给矿工的 Gas 价格;</li><li>nonce: 用来区别同一用户发出的不同交易的标记;</li><li>hash: 由以上信息生成的散列值(哈希值)，作为交易的 ID;</li><li>r s v:交易签名的三个部分，由发送者的私钥对交易 hash 进行签名生成</li></ul></li><li>三种类型的交易<ul><li><ol type="1"><li><strong>转账交易</strong>: 转账是最简单的一种交易， 从一个账户向另一个账户发送以太币 。 发送 转账交易时只需要指定交易的发送者、接收者、转移的以太币数量即可(在客户端发送交易时， Gas Limit、 Gas Price、 nonce、 hash、签名可 以按照默认方式生成)</li></ol></li><li><ol start="2" type="1"><li><strong>创建智能合约的交易</strong>: 创建合约是指将合约部署到区块链上，这也是通过发送交易来实现的。 在创建合约的交易中， “to” 字段是一个空字符串，在 data 字段中指定初始化合约的二进制代码，在之后合约被调用时，该代码的执行结果将作为合约代码。</li></ol></li><li><ol start="3" type="1"><li><strong>执行智能合约的交易</strong>: 顾名思义，该交易是为了执行已经部署在区块链上的智能合约，在该交易中，需要将 “to” 字段指定为要调用的智能合约的地址，通过“data” 字段指定要调用的方法以及向该方法传递参数。</li></ol></li></ul></li></ul><h3 id="以太坊的主流开源项目">以太坊的主流开源项目</h3><h4 id="以太坊客户端">以太坊客户端</h4><p>目前，以太坊协议及其客户端有多种语言版本的实现，其中最受欢迎的包括 Go­ethereum、 CPP-ethereum、 Parity 和 Pyethapp 等，这些开源项目均可在以太坊的官方 GitHub 目录下找到( <a href="https://github.com/ethereum/" class="uri">https://github.com/ethereum/</a>)</p><p>1 ) <strong>Go-ethereum</strong>: 以太坊协议 Go 语言实现的版本，既包括了一个独立的以太坊客户端，即本地节点可以作为完全节点或轻节点连接到以太坊的主网络，测试网络或私有网络，用于挖矿，组建私有链，管理账号，部署智能合约等常用功能，不可以编译智能合约。也可作为一个 Go 版本的以太坊库被调用， 即其他进程可以通过HTTP，WebSocket或IPC通道的方式连接到geth的JSON RPC端口，进而访问以太坊网络。 Go-ethereum客户端又称 Geth，是目前使用最为广泛的以太坊客户端。 2) CPP-ethereum:以太坊协议 C++语言实现的版本，也是目前最受欢迎的以太坊客户端之一。 CPP-ethereum 的最大特点是可移植性强，适用于 Windows、 Linux 和 OS X 等各个 版本的操作系统以及多种硬件平台 。 3) Parity :以太坊协议 Rust 语言实现的版本。 Parity客户端实现了以太坊钱包功能，可用于创建和管理以太坊账户，管理账户中的以太币和各种代币以及创建智能合约等。 4) Pyethapp:以太坊协议 Python语言实现的版本，其主要特点为创建了一个易扩展的以太坊核心代码版本。</p><h4 id="以太坊浏览器和拓展工具">以太坊浏览器和拓展工具</h4><ul><li>Mist。由以太坊官方开发的工具，用于浏览各类 DApp 项目 。而是将来DAPP（智能合约的应用APP）市场，类似于苹果市场，在这里可以有你的账号，可以浏览、发布和买卖以太坊的DAPP应用。</li><li>MetaMask 一个用于接人以太坊去中心化网络的浏览器插件 ，目前适用于 Chrome 和 Brave 浏览器 。 用户无需在本地安装运行以太坊节点，只需通过 MetaMask 便可在浏览器上连接以太坊网络，运行以太坊 DApp。<br /></li><li>Web3.js: 一个兼容了以太坊核心功能的 JavaScript 库，为以太坊客户端及 DApp提 供了一系列以太坊功能调用的 JavaScriptAPI 接口 。</li><li><strong>Remix</strong>:又称为 Browser-Solidity，是一个基于网页浏览器的 SolidityIDE 和编译器。 Remix 网页终端整合了 Solidity 代码的编写、调试和运行等功能，为用户提供了开发以太坊智能合约的综合环境 。</li><li>Truffle : 一套针对以太坊 DApp 的开发框架，本身是基于 Node.js编写的。 Truffle 框架对 Solidity 智能合约的开发 、 测试、部署等进行全流程管理，帮助开发者更专业地开发 以太坊 DApp。</li><li>ENS-registrar :以太坊域名服务( Ethereum Name Service, ENS)是为以太坊账户 提供简单、易记域名的服务，类似于互联网的 DNS。 ENS-registrar是一个基于以太坊的开 源 DApp 项目，在以太坊区块链上为以太坊账户提供域名注册服务 。</li></ul><h2 id="solidity-语言">Solidity 语言</h2><p>已转移到 <a href="mweblib://16095815772969">Solidity 语言概要</a>，下面简单列举一些概念。</p><h3 id="合约结构">合约结构</h3><p>Solidity 中的合约（ contract ）与面向对象编程语言中的类 (Class) 很相似，在一个合约中可以声明多种成员，包括：</p><ul><li>状态变量：是永久存储在合约账户存储中的值</li><li>函数：函数是合约代码的执行单位， 一个合约中可能包含许许多多提供各种功能的函数 ， 它们相互调用，共同组成合约的工作逻辑，一些特殊的函数 如构造函数等</li><li>函数修改器 ：函数修改器可用于改变函数的行为，在函数执行前或执行后插入其他逻辑</li><li>事件：事件是以太坊日志协议的高层次抽象， 用于记录合约执行过程中发生的各种事件和状 态变化。</li></ul><p>同时，一个合约可以继承另一个合约。</p><h3 id="地址类型">地址类型</h3><ul><li>存储一个 20 字节的值，表示一个以太坊地址</li><li>地址类型有成员变量 <code>balance, transfer, send</code></li></ul><h3 id="特殊全局变量与函数">特殊/全局变量与函数</h3><ul><li>区块属性</li><li>交易属性<ul><li>msg.data msg.sender msg.value（随消息发送的 wei 的数量）</li></ul></li><li>和约相关<ul><li>this 当前和约</li></ul></li></ul><h2 id="以太坊ethereum智能合约token实现">以太坊Ethereum智能合约：Token实现</h2><h3 id="token">Token</h3><p>Token--以太坊上的数字资产 Digital Asset on Ethereum</p><ul><li><strong>以太坊设计目标就是让各种数字资产以智能合约的形式运行在以太坊虚拟机上</strong>。 目前， 在以太坊上的众多智能合约之中，应用最为广泛的是<strong>代币合约 (Token Contract)</strong>。</li><li>代币合约是在以太坊上管理账户及其拥有的代币的智能合约，实质上可以理解为一张账户地址和对应账户代币余额的映射表。</li><li>太坊上数字资产的发行和流通更加简便灵活，相关的操作一般由代币合约创建者在代币合约中实现，包括：<ul><li>记录账户及代币余额</li><li>代币转账</li><li>通过铸造代币、销毁代币来增加或减少代币供应总量</li><li>数字资产的查询、权限控制，甚至经济学公式计算等</li></ul></li></ul><h3 id="erc-20-接口规范">ERC-20 接口规范</h3><ul><li>常量 name symbol decimals</li><li>函数 totalSupply transfer transferFrom approve allowance</li><li>事件 Transfer Approval</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">contract EIP20Interface &#123;</span><br><span class="line">   string public constant name = ” Token Name<span class="string">&quot;; </span></span><br><span class="line"><span class="string">   string public constant symbol =”SYM”;</span></span><br><span class="line"><span class="string">   uint8 public constant decimals = 18; </span></span><br><span class="line"><span class="string">   function totalSupply() public view returns (uint256);</span></span><br><span class="line"><span class="string">   function balanceOf(address _owner) public view returns (uint256 balance);</span></span><br><span class="line"><span class="string">   function transfer(address _to, uint256 _value) public returns (bool success);</span></span><br><span class="line"><span class="string">   function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);</span></span><br><span class="line"><span class="string">   function approve(address _spender, uint256 _value) public returns (bool success);</span></span><br><span class="line"><span class="string">   function allowance(address _owner, address _spender) public view returns (uint256 remaining);</span></span><br><span class="line"><span class="string">   event Transfer(address indexed _from, address indexed _to, uint256 _value);</span></span><br><span class="line"><span class="string">   event Approval(address indexed _owner, address indexed _spender, uint256 _value);</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure><p>11 个标准接口可分为三类</p><ul><li>常量<ul><li>代币名称 name<ul><li>代币名称(name)是由代币合约创建者指定的完整名称，是一串公开的字符串常量【可通过构造方法传值进行初始化，也可直接在代码中指定返回当前 Token 的名称 function name() public view returns (string)】</li></ul></li><li>代币符号 symbol<ul><li>代币符号( symbol)是由代币合约创建者指定的代币简称，是一串公开的字符串常量， 一般由3~4个大写字母组成，便于标识该代币，如EXT 【可通过构造方法传值进行初始化，也可直接在代码中指定，返回当前 Token 的符号 function symbol() public view returns (string)】</li></ul></li><li>小数点位 decimals<ul><li>小数点位(decimals)是由代币合约创建者指定的一个公开的无符号整数常量，用于指定代币的最小精度值， 一般为 18。小数点位的数值表示该代币在交易中最小单位在小数点后的位数，比如 18 表示该代币在交易中的最小单位为 l × 10 18 个代币 ，可以分割为小数点后 18 位的精度。一般情况下，当查询一个 Token 余额时，是按照最小精度的整型来显示的【可通过构造方法传值进行初始化，也可直接在代码中指定，返回当前 Token 的精度 function decimals() public view returns (uint8)】</li></ul></li></ul></li><li>函数功能包含总供应量、余额、转账、从他人处转账、允许量值以及限额 6个功能函数，分别规定了实现代币合约所必需的查询、转账 、权限控制等基本功能的函数接口 。<ul><li>总供应量 <code>function totalSupply() public view returns (uint256);</code><ul><li>用于查看代币当前的总供应量，即当前合约账本中所有账户余额的总和。 该函数没有输入参数，返回值为无符号整数常量。 【 uint256 public totalSupply与上面的属性一样，可通过构造方法传值进行初始化】</li></ul></li><li>余额 <code>function balanceOf(address _owner) public view returns (uint256 balance);</code><ul><li>用于查看当前合约中指定账户的代币余额。 该函数的输入参数为账户地址，返回值为账户代币余额，为无符号整数常量 。【所有的地址与余额之间的关联都是通过此 mapping 进行存储： mapping (address =&gt; uint256) public balanceOf】</li></ul></li><li>转账 <code>function transfer(address _to, uint256 _value) public returns (bool success);</code><ul><li>用于从当前账户向其他账户进行代币转账。 该函数的输入参数为目标账户地址和转账的代币数额，返回值为布尔型变量。 当账户满足当前有足够的余额、 转账数额为正数以及合约编写者指定的其他条件时，转账成功，则合约中当前账户的余额减 少，目标账户中的余额增加，函数返回值为真;否则转账失败，函数返回值为假 。</li></ul></li><li>从他人处转账 <code>function transferFrom(address _from, address _to, uint256 _value) public returns (bool success);</code><ul><li>用于从他人账户向其他账户进行代币转账，在有些情况下，用户不仅可以使用 transfer( )函数自己发起转账，还可以授权他人在一定限额下调用 transferFrom( )函数从自己账户中转出代币，而无须自己介入。</li><li>例如，在一个银行合约中， 由于合约无法控制用户的行为，不能命令用户使用 transfer( )发起转账，但可以由用户提前授权，并通过 transferFrom( )从用户账户中转出钱款，自动完成转账过程，而无须通知用户参与。 该函数的输入参数为转账的发起地址、目标地址以及转账数额。 与 transfer( )函数一样，当转账成功时返回值为真，转账失败则返回值为假 。</li></ul></li><li>允许量值 <code>function approve(address _spender, uint256 _value) public returns (bool success);</code><ul><li>用于设定当前账户对指定账户的允许转账量值(allowed)。 该函数的输入参数为代币使用方地址和允许使用的额度，返回值为设置是否成功的布尔型变 量 。</li><li>必须对其他人利用transferFrom( )接口从本账户中转走的代币数额进行限制，于是 ERC 20 标 准引入了允许量值 allowed。</li><li>allowed 是一个二元组， <strong>allowed[A][B]记录的是用户 A 对本账户中允许账户B转走的代币额度</strong>。 用户A通过调用approve()函数并指定账户B和允许额度，对 allowed[A][B]进行设置;当账户 B 调用 transferFrom( )函数从账户 A 中转出代币时，需先通过检查，确保转出的数额不超过账户 A 设置的 allowed[A][B]值，并且转账之后 allowed[A][B]值会减少相应的数额 。</li></ul></li><li>限额 <code>allowance(address _owner, address _spender) public view returns (uint256 remaining);</code><ul><li>用于查看当前的 allowed 值 。 该函数的输入参数为代币持有方A 的地址和代币使用方 B 的地址，返回值为当前在账户 A 中允许账户 B 转出的代币数额之后 allowed[A][B] ，为无符号整型常量 。</li></ul></li></ul></li><li>智能合约中还包括了记录事件的 event 类型接口， ERC 20 合约标准也对代币合约基本的事件接口进行了规范。 ERC20 标准要求代币合约包含至少两个事件:转账(Transfer)和 允许(Approval)。<ul><li>转账 <code>event Transfer(address indexed _from, address indexed _to, uint256 _value);</code><ul><li>Transfer()事件用于记录代币合约最基本的功能一一转账。 事件的输入参数为转账的发起方、接收方以及转账的代币金额，一般位于 transfer( )函数和 transferFrom( )函数中转账成功之后触发。 用户可以从交易收据(receipt)中查看每一笔代币转账的相关信息 。<br /></li></ul></li><li>允许 <code>event Approval(address indexed _owner, address indexed _spender, uint256 _value);</code><ul><li>Approval( )事件用于记录代币合约的进阶功能一一允许他人从本账户中转出代币。事件的输入是代币的持有者、使用者以及所设置的允许金额，一般位于 approve()函数中，设 置允许限额成功之后触发 。 用户可以从交易收据( receipt)中查看代币持有者对他人设置的 允许转账限额等相关信息 。</li></ul></li></ul></li></ul><h3 id="token智能合约实现">Token智能合约实现</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.4</span><span class="number">.21</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明合约和状态变量</span></span><br><span class="line">contract EIP20 is EIP20Interface &#123;</span><br><span class="line">   uint256 constant private MAX_UINT256 = <span class="number">2</span>**<span class="number">256</span> - <span class="number">1</span>;</span><br><span class="line">   <span class="comment">//balances 保存每个地址的余额</span></span><br><span class="line">   mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256) public balances;</span><br><span class="line">   <span class="comment">//保存每个地址可以允许其他地址取出的 token 的剩余数量 </span></span><br><span class="line">   mapping (<span class="function"><span class="params">address</span> =&gt;</span> mapping (<span class="function"><span class="params">address</span> =&gt;</span> uint256)) public allowed;</span><br><span class="line">   string public name;     <span class="comment">//token名称</span></span><br><span class="line">   uint8 public decimals;  <span class="comment">//小数位数</span></span><br><span class="line">   string public symbol;   <span class="comment">//token代码</span></span><br><span class="line">   uint256 public _totalSupply; <span class="comment">//发行总量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明合约的构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EIP20</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">      uint256 _initialAmount,</span></span></span><br><span class="line"><span class="params"><span class="function">      string _tokenName,</span></span></span><br><span class="line"><span class="params"><span class="function">      uint8 _decimalUnits,</span></span></span><br><span class="line"><span class="params"><span class="function">      string _tokenSymbol</span></span></span><br><span class="line"><span class="params"><span class="function">   </span>) <span class="title">public</span> </span>&#123;</span><br><span class="line">      balances[msg.sender] = _initialAmount; <span class="comment">//给合约创建者所有的token</span></span><br><span class="line">      _totalSupply = _initialAmount;         <span class="comment">//更新totalSupply等</span></span><br><span class="line">      name = _tokenName;</span><br><span class="line">      decimals = _decimalUnits;</span><br><span class="line">      symbol = _tokenSymbol;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下三个方法只是简单的从状态变量中返回 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">totalSupply</span>(<span class="params"></span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint256</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> _totalSupply;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">balanceOf</span>(<span class="params">address _owner</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint256 balance</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> balances[_owner];</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">allowance</span>(<span class="params">address _owner, address _spender</span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">uint256 remaining</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">return</span> allowed[_owner][_spender];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// transfer方法是从消息发送者的地址中转出</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transfer</span>(<span class="params">address _to, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">   <span class="built_in">require</span>(balances[msg.sender] &gt;= _value);</span><br><span class="line">   balances[msg.sender] -= _value;</span><br><span class="line">   balances[_to] += _value;</span><br><span class="line">   emit Transfer(msg.sender, _to, _value);</span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// transferFrom方法的实现与transfer方法相似，不同的是transferFrom方法需要指定转出账户 ，以及需要将 allowed[A][B]值减少相应的数额 </span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">transferFrom</span>(<span class="params">address _from, address _to, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">   uint256  allowance = allowed[_from][msg.sender];     </span><br><span class="line">   <span class="built_in">require</span>(balances[_from] &gt;= _value &amp;&amp; allowance &gt;= _value);</span><br><span class="line">      balances[_to] += _value;</span><br><span class="line">      balances[_from] -= _value;</span><br><span class="line">      <span class="keyword">if</span> (allowance &lt; MAX_UINT256) &#123;</span><br><span class="line">            allowed[_from][msg.sender] -= _value;</span><br><span class="line">      &#125;</span><br><span class="line">      emit Transfer(_from, _to, _value); </span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 最后实现approve方法，授权指定账户转账和允许的额度</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">approve</span>(<span class="params">address _spender, uint256 _value</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool success</span>) </span>&#123;</span><br><span class="line">   allowed[msg.sender][_spender] = _value;</span><br><span class="line">   emit Approval(msg.sender, _spender, _value); </span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//  Token事件【这里仅仅声明了一下？】</span></span><br><span class="line">event Transfer(address indexed _from, address indexed _to, uint _value); </span><br><span class="line">event Approval(address indexed _owner, address indexed _spender, uint _value);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 区块链 </tag>
            
            <tag> 密码学 </tag>
            
            <tag> HyperLedger </tag>
            
            <tag> Fabric </tag>
            
            <tag> Ethereum </tag>
            
            <tag> Solidity </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法治与公民课程论文：以公民身份视角观「占海特事件」</title>
      <link href="/posts/5223f70c/"/>
      <url>/posts/5223f70c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>摘要：本文围绕 2012 年占海特事件，以公民身份的视角从受教育权、迁徙权的角度分析了公民身份在其所代表的城市流动人口中的缺位，并从户籍制度和城乡关系的发展的角度探讨了这些问题的原因。</p></blockquote><p>2012 年 6 月，江西户籍的初中生占海特注册微博账号，自称 <strong>「少年公民」</strong> 表示希望自己能在上海参加中考，并发布「约辩」帖邀请京沪籍人士在上海教委针对异地高考等问题展开辩论，在当时引起了广泛的关注和讨论。占海特生于珠海，户籍则在江西，小学和初中均在上海就读；然而，由于占海特还有一个弟弟一个妹妹，违反了独生子女政策，根据上海的入户政策，其一家不能落户上海，因此其只能报考上海的职校或是回户籍地江西参加中考就读高中。面对自己无法参加中考的窘境，在和学校、教委沟通无果后，其实名注册了微博账户作「绝望前的呐喊」，主动和一些微博大 V 讨论，并公开向京沪籍人士「约辩」，迅速引发了 <strong>「进城务工人员随迁子女」</strong> 这一特殊群体的共鸣。</p><p>占从小和父母一起生活在上海，而她在成长学习的过程中也对于上海这个城市产生了认同，她同班里的孩子一样认为自己是一个上海人；然而，由于户籍的问题，在现有政策下她无法取得和身边的人一样平等参与中考的权利；以少年公民自居的她喊出了「 <strong>享受公平教育是作为公民的权利，我不愿意妥协回到江西老家读书」</strong>的宣言，而这一议题在线上线下所引起热议，说明了这一问题并非个例，存在的时间会短，涉及到的群体不在少数，他们中的很大一批人可能也面临着同样的窘境。</p><p>数据显示，截至 2010 年，全国流动儿童总数达 3581 万，能否在当地参加中高考，显然是关系到他们切身权益的重要话题。（此外，与「流动」相对的「留守」是同一个问题的两面，除城市流动儿童之外还有滞留农村的 6102 万留守儿童，构成了全国儿童人数的三分之一。）（李淼 2015）为什么同样生活在一个城市，某些孩子却不能和其他人一样享有同等的受教育的机会，要远去一个毫不熟悉甚至没有多少亲属的户籍地就读？<strong>《宪法》第四十六条规定，「中华人民共和国公民有受教育的权利和义务」</strong>。教育的首要关注点是公平，而占海特现在面临的问题则是，在同等的公民身份下，能否接受平等的教育还受到户籍制度的制约。</p><p>基于德沃金的平等理论，江雪松（2007）<strong>在受教育权方面区分了两类不同的平等权</strong>：第一类是平等对待的权利，即机会、资源或义务的平等分配的权利；第二类则是「作为一个平等的个人所具有的受到平等对待的权利」，即「标准之下的平等」。其指出，尽管现行的高考方案实现了（区域内的）第二类平等权，然而高考制度、教育制度、户籍制度本身却没能保障第一类平等。这样的不平等，户籍的差异所导致的受教育权利的差异，在北京、上海等教育资源丰富的地区尤为凸显。</p><p>马歇尔在演讲「公民身份与社会阶级」中，<strong>把公民身份的构成看做是由市民权利（civil rights）、政治权利（political rights）和社会权利（social rights）所组成的复合范畴</strong>。而其中「公民的社会权利是公民身份三种要素中实现最晚的一种权利, 它是指一国公民, 不论其在市场领域和国家领域中的位置和处境如何, 都有资格享有福利、教育、医疗等一些使人们过上『体面生活』 的权利」（李艳霞 2005）。可见其着重点在平等，然而，城市流动人口却在现实上处于「经济上接纳，政治上排斥」的尴尬地位，仅实现了「半市民化」，即农村剩余劳动力转移到城市成为「农民工」，而尚未完成<strong>「后市民化」</strong>，即逐渐融入到城市成为成为真正的市民（钟水映 2007）。作为绝对不算少数的一群边缘群体，他们身为中华人民共和国的公民却不能享有真正的「公民身份」，他们的声音很难在主流媒体上出现，接受城市的文化却无法得到政治、文化上的认同。占虽然不属于我们对于流动人口的典型想象，却因为户籍问题而面临着这一群体所共同困扰的问题。</p><p><strong>从根本上来看，这样的问题显然和户籍制度密切相关。</strong></p><p>建国以来，我国的户籍管理制度可划分为 3 个阶段：建国之初属自由迁徙期，没有严格的户籍管理制度；1958 年后，随着《中华人民共和国户口登记条例》的颁布，建立起了城乡二元格局，严格控制户籍；改革开放之后，人口的流动性增强，原本的的户籍制度也有所松动，属半开放期。可以看到，户籍制度的沿革和国家的经济发展、城乡关系之间有着密切的关联。建国之后，服务于重工业优先发展战略，我国在经济社会层面建立起了全方面的城乡二元体制，农业和非农户口之间也建立起了严格的区隔；改革开放以来，进入了「城乡⼆元经济体制破冰阶段」（张海鹏 2019），通过向农⺠赋权和推动市场化改⾰的⽅式，逐步打破了城乡⼆元经济体制；然而，于此同时户籍制度的改革却相当缓慢，流动人口在城市仍然面临着诸多制度制约和歧视。</p><p><strong>迁徙自由权（Right to Free Movement）</strong> 和人身自由权有着密切的关联（张晓玲 2006），是人权的重要组成部分，《公民权利和政治权利国际公约》中即规定「人人在各国境内有权享受迁徙自由和选择住所的自由」，而 1954 年的宪法也规定了「中华人民共和国公民有居住和迁徙自由」，然而与 58 年的《户口登记条例》相呼应的是，此后的 75、78、82 宪法中均没有规定迁徙自由。改革开放以来，我国人口的流动性大大增加，然而这表面的迁徙难度和成本的降低之下，却并没有建立起一套帮助他们真正融入所在城市的制度保障，阻碍了真正意义上的迁徙自由，他们往往身在城市而非此中人，于此同时也伴生了诸多的问题。</p><p>诚然，在地区、城乡之间发展不平衡的客观现状下，完全放开户籍制度是不现实的；大城市人口饱和、资源紧张的状态下，设置「准入门槛」或许确属无奈之举；然而我们也确实看到了六十多年前的户籍制度在当下所显现的「水土不服」，确实从流动人口在城市所面临的教育、社保、医疗等诸方面的困境中看到了这些边缘群体公民身份的缺位。在认清现状了解问题的复杂性困难性的同时，并不意味着我们就可以不作为；仍以流动人口的教育问题问题，李淼（2015）指出同在一个城市中的分别以本地孩子和外来工子女为主的公立重点中学和非重点中学在教育机会、教育过程、教育结果方面的巨大差异；然而，即使人口户籍制度不能放开，从教育资源分配、制度监管等角度对这些问题的改善或许未必是不可行的。近年来，<strong>从收容遣送制度的废除到对于户籍制度改革的讨论，从新型城镇化到乡村振兴战略</strong>，我们看到了正在萌发的公民意识和国家对于公民权利的一步步落实，然而要实现公民在市民权利、政治权利、社会权利上的真正平等，需要我们长期的反思、讨论、权衡与行动。</p><ul><li>钟水映 2007 农民工“半市民化”与“后市民化”衔接机制研究</li><li>江雪松 2007 考试公平与区域公平——由我国高考录取地域差异看受教育权平等</li><li>李艳霞 2005 公民身份理论内涵探析</li><li>张海鹏 2019 中国城乡关系演变 70 年：从分割到融合</li><li>张晓玲 2006 《人权理论基本问题》</li><li>李淼 2015 不可逾越的“人生起跑线”——学龄农民工子女的教育边缘化</li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
            <tag> 公民 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mendeley 转 Zotero 记</title>
      <link href="/posts/cd72d6b9/"/>
      <url>/posts/cd72d6b9/</url>
      
        <content type="html"><![CDATA[<p>之前使用的文献管理软件是 Mendeley；然而最近在同步的问题上实在是受够了于是最终转而投入 Zotero 的怀抱，在这里简要记录 Mendeley 的同步问题和 Zotero 入门过程。</p><span id="more"></span><h2 id="mendeley-同步之痛">Mendeley 同步之痛</h2><p>【文献管理】说起来又是一个悲伤的故事，原因是 Mendeley 极为糟糕的同步体验，折腾了半天最终还是失败，期间甚至尝试了修改 mac 账户名字，导致了一些很严重的问题……最终促使我放弃了这款原本的期待值很高的文献管理软件，转入 Zotero 的怀抱。 需求简述如下：寝室一个台式机想要和 MBP 实现同步，要求文献属性和 link 的 PDF 文件一起同步。例如我在寝室添加好了一篇文章，能够在外出的时候使用 MBP 查看和编辑，最好是能够同步完整的 PDF 文件，这样就可以在外面接着往下看。</p><p>这样的需求应该说是很基础的了，然而在 Mendeley 中始终无法完成。</p><p>一般的思路，直接使用 Mendeley 提供的同步功能，（事先在 File Orgnizer 中配置到将文件集中在 <code>Document/Mendeley Desktop</code> 文件夹下），问题在于：1. Mendeley 似乎不提供自动同步而非要手动点一下才行，速度还挺慢（这意味着我在一端加入了一份文件并且阅读编辑了很久，如果我外出在另一端是找不到这个文件的）；2. 同步的容错性很低，默认是放在 Document 文件夹下的，不知道是否和 iCloud 有冲突的原因，经常出现重复的文件，删了之后还会自动下载回来；3. 为此我专门清空了 Mendeley 的 Liberary，在没有任何文献条目关联的情况下，Mendeley 居然还会从云端下载 PDF 文件到本地，我连在 web 端的管理界面都找不到如何删文件，真的不胜其扰。</p><p>方案二：参考了 利用坚果云辅助Mendeley同步 <a href="https://zhuanlan.zhihu.com/p/28650352" class="uri">https://zhuanlan.zhihu.com/p/28650352</a> ，关闭 Mendeley 自带的 Library 同步功能，使用了 Synology 的同步功能（文中是坚果云），然后在 BibTex 中勾选 <code>Enable BiTax syncing</code> 并设置好相应的文件夹。奇葩的事情出现了：之前说到我因此甚至修改了 mac 用户文件夹名字，就是为了确保文件目录是完全一致的。结果，（我推测）Mendeley 自作主张，一打开就将这个 <code>library.bib</code> 文件基于本地的信息修改了（进入软件的时候可以看到系统的自动同步的，即使在 <code>Edit settings</code> 中将同步选项关闭）。我在一端发现某些条目没有关联到文件（对应于在 <code>library.bib</code> 中缺失 <code>file</code> 属性），于是手动关联了文件，修改之后确认在 <code>library.bib</code> 之中是完整的，并且确认另一端已经同步好了这个文件；然后奇葩的是在另一端打开软件的时候，又会自作主张把这个文件给修改了，以至于又有另外一部分条目缺失关联条目……服气，完全不懂 Mendeley 同步功能的实现逻辑。 【参考】另外看到一份 Mendeley 迁移的方案 关于重新关联PDF与文献条目（及外挂Dropbox等）的方法 <a href="https://www.douban.com/group/topic/36521680/" class="uri">https://www.douban.com/group/topic/36521680/</a> ，仅供备份参考。</p><p>顺便吐槽一下 Mendeley 另一宗罪：作为一个文献管理软件，何必去实现 PDF 阅读和标注的功能（虽然事实上的体验还行），不像 Zotero 是默认使用外部的 PDF 浏览器打开的。</p><h2 id="zotero-教程同步方案">Zotero 教程&amp;同步方案</h2><p>【参考】一份少数派的文章不错：文献管理神器 Zotero 学习路径指南 <a href="https://sspai.com/post/56724" class="uri">https://sspai.com/post/56724</a> 。下面记录一下自己的使用体验吧。</p><ul><li>上官网 <a href="https://www.zotero.org/" class="uri">https://www.zotero.org/</a> 注册账号，下载安装即用，还是比较简单的。</li><li>不同于 Mendeley 只能管理文献条目/PDF 文件，Zotero 使用了单独的名字（对应一个文件夹）对应每一个「条目」，下面可以包含 PDF 文本、Notes 乃至其他关联的各种格式的文件。</li><li>粗暴地讲下载好的论文拖进去即会自动进行识别，准确度还是很高的，但速度似乎比 Mendeley 慢一点；当然对于中文的一些 PDF 多无法识别所以一个条目就是一个 PDF 文件，英文文献的话，过一段时间识别完成后会生成一个单独的条目，并且并自动重命名关联的PDF 文件。</li><li><p>最重要的 <strong>同步功能</strong>，Zotero 完爆 Mendeley，软件自带的同步功能就已经很好用了；当然有容量限制，进阶可以使用 WebDAV，在 <code>Preference-Sync-File Syncing</code> 中选择相应配置即可，坚果云还有份教程 <a href="https://help.jianguoyun.com/?p=3168" class="uri">https://help.jianguoyun.com/?p=3168</a> 当然我用的是 Synology。</p></li><li>浏览器插件也很厉害，居然是直接下载完整的 html 文件到本地，效果和 SingleFile 居然差不多；</li><li>可以通过 Import 功能导入 Mendeley 等其他软件的数据库；</li><li>Tag 可以设置相应的色块，这样就可以显示在文献管理界面上；</li><li>直接拖拽条目可以复制引用格式到文本编辑器中，同时按住 <code>Shift</code> 则实现简洁格式的引用；当然也可以选中单个/多个文件，右键 <code>Create Bibliography from Item...</code>，导出为不同格式的文件，或者直接 <code>Copy to Cilpboard</code> 以供复制;</li><li><p>支持插件使用，参见上面那篇「学习路径指南」；作者指出插件格式和 Firefox 一样，还给出了一个将 Notes 从 Zotero 不支持的 Markdown 转换为富文本格式的插件，详见 <a href="https://github.com/fei0810/markdownhere4zotero" class="uri">https://github.com/fei0810/markdownhere4zotero</a> ；</p></li></ul><p>初步体验下来，Zotero 的感受非常棒，细节方面要高出 Mendeley 很多。再举个小例子，两者对于中文文献的支持都很差这也可以理解，但 Mendeley 的识别之后文件名等会变成乱码还需要自行修改，但 Zotero 则是保留文件的原名（当然这一点见仁见智）。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Mendeley </tag>
            
            <tag> Zotero </tag>
            
            <tag> 文献 </tag>
            
            <tag> Research </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法治与公民 课程笔记 1</title>
      <link href="/posts/8bae8daa/"/>
      <url>/posts/8bae8daa/</url>
      
        <content type="html"><![CDATA[<p>在个体自由和法治之间找到共存的途径。有效的方式是通过对话，对话的平台：1. <strong>对于概念有一些基本的共识</strong>。 自由、平等……概念的普世化还是概念的内涵的普世化？每个人的「自由」概念完全不一样——因此需要对概念有基本的共识。</p><h2 id="好人与好公民-pre">「好人与好公民」 PRE</h2><h3 id="pre-1">PRE 1</h3><ul><li>好人与好公民的定义：后者是「响应国家号召的人」？</li><li>例子：<strong>马丁路德金</strong> 是好人但不是好公民？</li><li>界清「公民与非公民」<ul><li>公民身份所带来的一系列福利</li><li>例子：朝鲜战争结束后十年间，禁止两地的亲属往来</li><li>例子：叙利亚难民，15 年叙利亚儿童死后被冲上海滩</li></ul></li><li>全球化时代：「世界公民」<ul><li>康德：<strong>「每一个人作为世界公民而拥有一种『世界公民的权利』，他们组成世界性的联合体，并有某些普遍地调整他们彼此交往的法律，且无论如何也不能废除一个人作为世界公民的权利。」</strong></li><li>哈贝马斯：「世界公民权的关键在于，这种权力必须越过作为国际法主体的各国政府，而落实到作为个人的法律主体的头上，并使个人作为自由、平等的世界公民联盟中的一员而享有不可剥夺的权利。」</li></ul></li><li>多元国家公民身份</li></ul><h3 id="pre-2">PRE 2</h3><ul><li><p>「公民」「人民」的概念</p><ul><li>「凡具有中华人民共和国国籍的人都是中华人民共和国公民。中国人民共和国公民在法律面前一律平等。国家尊重和保障人权。任何公民享有宪法和法律规定的权力，同时必须履行宪法和法律规定的义务」——《宪法》公民的基本权利和义务 33</li><li>「由中国共产党领导的，有各民主党派和各人民团体参加的，包括全体社会主义劳动者、社会主义事业的建设者、拥护社会主义的爱国者、拥护祖国统一和致力于中华民族伟大复兴的爱国者」——《宪法》序言中的「爱国统一战线」</li></ul><blockquote><p>人民是政治认同还是文化认同？</p></blockquote></li><li><p>「民族」</p><ul><li>历史和文化来进行划分？</li></ul></li><li><p>「好的公共生活」</p><ul><li>公共领域的定义：<strong>「当我们从个人和家庭中走出来，开始关注从经济领域拓展到文化和政治交往中时，我们把这种领域称为公共领域。」</strong>——哈贝马斯《公共领域的结构转型》</li></ul></li></ul><h3 id="pre-3">PRE 3</h3><ul><li>「公民」概念</li><li>自由主义：个人权利，强调<strong>私权利</strong>免受公权力干扰</li><li>共和主义：政治参与热情，强调<strong>政治性权利</strong>与公民美德</li><li>「公民身份」：公民身份来源于公民这一主体地位，但公民身份并不是公民的直接映射，它还与<strong>承载公民这一角色的个体</strong>是密切相关的。<ul><li>世界/多元公民身份</li><li>公民身份其实是公民对于自己在共同体中的一种<strong>身份认同感</strong>，随着民族国家外部或者内部的<strong>环境</strong>变化而变化的。</li></ul></li></ul><h2 id="公民及其相关概念">公民及其相关概念</h2><p><img src="16101227992532.jpg" /></p><h3 id="问题-1为什么要做公民">问题 1：为什么要做公民？</h3><ul><li>特定民族国家可以给人精神上的归属感。——参看萨义德自传《格格不入》</li><li>用脚投票的权力。任何一个在个体权力保护上较好的国家都是以好的<strong>公民权力</strong>的形式为基础的。</li></ul><p><img src="16101228090416.jpg" /></p><p><img src="16101228179506.jpg" /></p><h3 id="问题-2好人与好公民">问题 2：好人与好公民</h3><ul><li><p>第一，政体有不同的类型，不同的整体，<strong>好公民的标准就有不同</strong>（符合特定政体的标准）。思考，政体本身是不是就是政府？</p><p>但是「善」，对于好人的判断可以说是统一的，取决于人类共同体对于善的认知（当然这一点也是可以讨论的，不同价值之下普遍的善是否有可能）。相信宇宙是一个统一的整体，在一个统一的普遍法则之下，自然法/宇宙秩序，它决定了我们对于善的理解。</p></li><li><p>第二，<strong>好公民和国家的整体相适应</strong>。<strong>国体</strong>决定了谁是自权力的最终源头，谁的利益作为最终的行动目标。<strong>政体</strong>就是通过相关的制度安排来进行服务，君主/民主。《宪法》第二条，对于我国政体的规定。政体≠政府本身，是服务于国体的。<strong>我国的国体是「人民民主专政」，政体则是人代会。</strong>所以，适应政体的标准≠适应政府的标准。所以在评价好公民的时候，必须要和国家的目标相匹配。</p></li><li><p>第三，根据亚里士多德的观点，<strong>好人≠好公民</strong>。公民是对于公共领域和政治领域；但是还有私人领域，所以不一定是好人（活动场域）。</p><p>另一个矛盾：当公民的良知自觉和政府的决策、现行立法之间的冲突的时候，怎么办？作为公民，我们应该如何行动？前提性的澄清：二战之后，我国从德国的经验得到，我们承认冲突的存在。现在国家的正当性都是建立在个人的价值之上的。个人的伦理和国家论题，后者并不必然有优先性。2. 国家利益和政府利益之间的区分：国家的利益表达需要政府这样的一个实体来表达；而政府是由人来代表的，所以并不是全知全能的，<strong>因此政府并不总是代表国家利益，政府不必然有正当性</strong>。</p></li></ul><p>国家要有对于公民的合法的请求来矫正恶法——要有合法的渠道来进行反馈。（中国有这样的机制吗？14 年之后，国家在逐渐健全。）</p><p>斯特劳斯所讲，为什么在一个好的政体之中，好人的善和好公民的善才能得到统一。「因为只有在最好的政权下，政权的善与人的善才能等同起来，这种善就是美德。」《什么是政治哲学？》1. 人民的目标和国家的目标之间是否统一；2. 公民和政府之间的冲突能否得以反馈，得以解决，一个平台。</p><p>国家可能并不认同公民的良知自觉（假设这是正义、理性的），这就涉及到对于「公民的不服从」的权力的理解（这在<strong>自由主义</strong>国家中才有更多的意义，但在其他政体中可能不被承认）。但这并不重要，因为这里涉及到的是个人在这种情况下的反应。对于「公民不服从」，从亚里士多德、梭罗、马丁路德金、甘地。都承认：1. 公民不服从本身，要以尊重法律为前提；2. 采取非暴力不合作的形式，不服从不能是暴力的方式，不能对于自身以外的他人的财产构成影响，注意到任何人的行动都会对社会秩序构成影响；3. 要承担因为你的违法所构成的法律后果。注意到，需要公民有理性、自制、良知。</p><p><img src="16101228304249.jpg" /></p><h3 id="问题-3公民和公民身份">问题 3：公民和公民身份</h3><p>citizen<strong>ship</strong>，有一种「关系」：国家对于个体的认同，个体对于国家的认同。两者之间的相互认同，才具有「公民身份」；而公民是无差异的，国籍决定了。我是否<strong>认同</strong>一个国家很大程度上取决于国家有没有对于个体权利的保护。简言之，<strong>是否得到平等的权力保障决定了「公民身份」</strong>。马歇尔，三个方面的权利：</p><ul><li>个体自由</li><li>政治权力的保障</li><li>社会的要素，社会要素：「得体」的生活</li></ul><blockquote><p>何谓公民身份？马歇尔认为“公民身份是一种地位（status），一种共同体的所有成员都享有的地位，所有拥有这种地位的人，在这一地位所赋予的权利和义务上都是平等的”。可见，在马歇尔看来，平等是公民身份的内在本质。就公民身份的构成要素而言，马歇尔认为公民身份由公民的要素、政治的要素和社会的要素所构成，其中公民的要素由个人自由所需要的各项权利组成，比如人身自由、思想自由、言论自由和信仰自由，同时也包括司法权利、拥有财产和订立有效契约的权利等。公民身份的政治要素是指公民参与行使政治权力的权利，比如选举权和被选举权等。公民身份的社会要素是指从某种程度的经济福利与安全到充分享有社会遗产，并依据社会通行标准享受文明生活的权利等一系列权利。<strong>马歇尔的公民身份理论代表了自由主义公民身份传统</strong>，他所言说的公民身份的各个构成要素分别对应于自由主义的各个组成部分：公民身份的防治要素对应于法治，希望通过法治来保护公民所享有的一些基本自由；公民身份的政治要素与自由民主相对应，希望公民在政治上享有权利（比如监督和批评政府的权利），从而使公民的基本自由获得保护；公民身份的社会要素对应的是福利国家，主张通过建构一种福利国家体制，为公民提供一些基本的生活保障。</p></blockquote><p><img src="16101228417698.jpg" /></p><p>什么是正义？罗尔斯《论正义》：……我对于一个国家的政治期待，就是一个人不要以个人以外的因素所支配。</p><p>一个问题：立法的过程是民主决策的过程，常常是<strong>多数决</strong>，这意味着社会少数无法得到反馈。因此，<strong>这些少数虽然是公民，但不具有公民身份</strong>。我们在讨论城乡差异、教育等一系列问题的时候，我们讨论的是公民身份的差异。</p><h3 id="问题-4民族国族人民">问题 4：民族、国族、人民</h3><ul><li><p>民族：现在民族概念是威斯特伐利亚和约建立的。把欧洲秩序建立在民族国家的基础上。「共同的历史记忆，所产生了共同的语言、……」指称的是一个血缘的共同体，历史记忆等等产生的文化传统的承袭。</p><p><strong>而所谓中华民族，是文化认同</strong>。1. 一切对于中国文化认同的人都可以放在<strong>中华民族这一「国族」概念</strong>。2. 在国族之下的小的民族族群，如「民族区域自治」；两者有所差异，但都是基于历史、文化的认同，都是文化认同的概念。</p><p>费孝通，「中华民族作为一个自觉的民族实体，是近百年来中国和西方列强对抗中出现的，但作为一个自在的民族实体则是几千年的历史过程所形成的。」</p><p>为什么同一部宪法中会有两个（民族的概念，一为族群，一为「中华民族」）？孙中山认知的转变，1. 1923 年之前，是以汉文明为主体的「驱除鞑虏恢复中华」，中华民族是一元一体的；2. 1923 年之后，则是国族的概念，强调多元一体的认同观。</p><blockquote><p>在20世纪30年代前后，<strong>费孝通和顾颉刚</strong>之间曾经有过一场关于“中华民族”是一个还是多个的问题之争。这实际上触及到了人类学的有关于“一”和“多”这一基本问题的讨论。费孝通晚年试图用中华民族的多元一体格局的民族关系观念，去对此既有争执对立加以弥合，由此而发展出适用于中国语境的核心概念，并注意到了一个有着其自身历史进程的国家在处理民族关系上的策略选择。而今天，我们如果能注意到国家的一统和民族的多样是同时共在这一点，那人类学的“一”和“多”之间的辩证关系的把握，可能就是我们理解自身民族发展问题的关键。</p></blockquote><p>不得不承认，「民族」这一概念有着其魅力：一方面，天然的认同，<strong>自然情感</strong>；另一方面，超<strong>越国界的感召力</strong>，甚至对于超越政治、地域范围，都是有影响力的，如春晚「全球华人」。</p><p>但是，<strong>以民族为准构建国家有问题</strong>：1. 一元文化认同，和多元文化并存的现代国家之间就有着冲突。2. 健全的关系之上，不能依赖于情感，而要理性；如果只是建立在文化基础之上，可能带来狭隘的爱国主义。</p></li><li><p><strong>总结</strong>：民族是一个<strong>文化概念</strong>；宪法中民族有两个概念，一是国族，一是族群。作为构建国家的基础有着强大的力量，但是也有着一些短板。</p></li><li><p>第一，<strong>历史上是共和国的缔造者</strong>，集体的概念。第二，是<strong>国家权力的所有者</strong>，代表了良善的政治选择/决策所忠诚的方向。注意到，人民是和共和国联系起来的。是和一个特定的政治共同体联系的，使得其区别于民族而成为一个<strong>政治概念</strong>。</p><p>人民是一个共同德性凝聚起来的伦理共同体，<strong>图景性的期待</strong>。1. 人民作为共同是永恒存在的；2. 因为是共同德性凝聚起来的伦理共同体，所以是正确的，通过人民所表达，赋予了国家一个抽象/意志；国家不仅是不朽的，还是正确的。</p><p>第二点，对于个人，是对于政治修辞，<strong>提供了构建政治共同体的想象的基础</strong>。我是作为人民的一元存在的，是超越个人生活的，给予了……的建构。人民是国家的主权者。有效地构建了安德烈「<strong>想象的共同体</strong>」。</p><p>然而，因为其抽象性和集体性，容易阻塞掉个人的关怀——所以要局限在特定的场域。当我们涉及到具体的……，不能停留在抽象的集体概念中，也即不能停留在<strong>政治修辞</strong>上。我们要回到具体的个体公民上。</p></li><li><p><strong>总结</strong>：人民是一个（集体）<strong>政治概念</strong>，一方面构成了国家的正确的想象；对于个人产生了政治生活的想象，构建了我和国家的关联。它有其意义，但它的使用要有局限。</p></li></ul><h2 id="国旗致敬案">国旗致敬案</h2><h3 id="pre-1-组">PRE 1 组</h3><p><img src="16101228724070.jpg" /> <img src="16101228762237.jpg" /></p><blockquote><p>关于“公共利益”的思考 1、我们不能脱离集体而存在。我们的经历、成长环境、周围的人和事塑造了我们，我们需要通过所生活的环境来认识自己。而认识自己是自由选择的基础。因此，自由的实现应具有公共利益的考量。 2、公共利益这个概念为我们对道德问题的思考提供了一个新的维度。公共利益应存在于我们对于道德和自由问题的考量中，它可以帮助我们对道德标准的确定。在今天——这个价值观多元的社会中更是如此。</p></blockquote><h3 id="pre-2-组">PRE 2 组</h3><p>这一组则是支持不致敬的权力</p><blockquote><p>二.宗教自由</p><ul><li><p>清教主义传统</p><p>清教徒远赴美洲 政教合一的寡头体制及衰弱 第一次大觉醒运动</p></li><li><p>宪法及其修正案中的宗教自由</p><p>1787宪法第六条 1791宪法第一修正案 联邦宪法与州宪法的冲突 1868宪法第十四修正案</p></li><li><p>宗教自由背后的对政府权力的警惕</p><p>守夜人政府传统：守夜人政府本质上是一种有限政府，在规模、职能、权力和行为方式上受到法律和社会的严格限制和有效制约。 个人和政府之间的壁垒</p></li></ul><p>patriotism:[patriot+ism] ·古希腊语：patriotes[pater(父亲）+-otes(表示状态的后缀）]"people that shared a common fatherland"享有共同领土的人 ·拉丁语：patriota[country man] 十五世纪意大利城市共和国时期定义：守卫共同的法律和自由的公民[认同公民共同利益common good的存在，承认自己为守卫公民精神civil spirit需要尽一份力] ·中古法语（1300s-1600s)patriote-1590年代英语compatriot同胞 ·patriot+ism在18世纪出现，19世纪20世纪在美国和欧洲广泛使用</p><p>致敬国旗的历史 ·19世纪80年代，南北战争后，校舍国旗运动 ·20世纪初，二次工业革命后，加入诗歌、歌曲、国旗仪式等感性元素；南欧东欧移民潮，同化外来人 ·40年代，二战影响，狂热推崇致敬国旗活动</p></blockquote><p>老师这个例子是来自美国的阿米绪人（信仰中拒绝一切暴力与战争），在一战二战时期因为服兵役问题与美国国会发生过多次冲突</p><p>因为这个冲突后来才产生了《普遍军事训练和服务法》里的宗教实践与良心</p><p><span class="citation" data-cites="韩时东">@韩时东</span>，美国1948年的《普遍军事训练和服务法》第六（J)章免除了因“宗教实践和信仰”而反对”任何形式的战争“的良知反战者的作战义务。即这里不是给与特定群体以例外，而是对所有的与supreme being有关的信仰在教义中存在反战认知的公民的平等义务的免除。</p><h3 id="pre-3-组">PRE 3 组</h3><blockquote><p>向国旗致敬的行为超越了宗教信仰的范畴 《法哲学原理》：国家是普遍物的公共生活所具有的目的和现实。 它意味着国家依旧是公民的情感主体，法律规定的自由真实存在，保护弱者不受强者伤害，防止权力的任意行使...... 进一步地，我们认为对上帝这样的超越者的崇拜与对国旗的致敬并不矛盾。</p><p>美国1879年的雷诺德（又译雷诺兹）诉美国案。 摩门教是美国犹他州的一个宗教团体，实行一夫多妻制，而那时联邦法律并无反对重婚或一夫多妻制的规定。到了1862年，《莫里尔反重婚法案》通过，规定在整个美国，一夫多妻制定为非法。 1874年，美国国会又通过《普兰法》强化了《莫里尔反重婚法案》的规定，但引起了摩门教的不满。1874年10月，雷诺德因涉嫌重婚罪被政府起诉。然而，第一次审判以政府失败告终。1875年10月，雷诺德再次被诉。美国犹他州盐湖城的摩门教徒雷诺德被地方法院判为重婚罪。雷诺德对此不服，他以宗教信仰自由受宪法第一条修正案的保护上诉至最高法院。</p><p>然而最高法院的判词指出：“美国宪法保证公民的信仰自由，这和在法律上对公民的行为加以限制并不冲突。信仰是人的一种精神活动，是人的心灵、灵魂的生活状态，是人的本能。法律保护人在精神生活上的自由，不于涉人的内心活动。<strong>另一方面，作为现实生活中的人则没有权利用精神上的自由来代替行为上的自由，或打着精神上的自由的旗号在现实中不受约束肆意妄为。当</strong>信仰或者说宗教教义从单纯的教条变成具体的人的行为，在社会上实现的时候，它就必须承担起这种行为的法律后果。</p></blockquote><p><img src="16101228933743.jpg" /></p><h2 id="自由主义公民观">自由主义公民观</h2><p>自由主义和共和主义公民观。不能立场先行，而是问题先行。不同流派的介绍是给我们更多的看待事件的视角。回到具体的问题当中。今天主要介绍<strong>自由主义公民观</strong>的框架。</p><h3 id="自由主义的历史">自由主义的历史</h3><p><img src="16101229002481.jpg" /></p><ol type="1"><li><strong>自由主义常常和启蒙联系在一起，作为和宗教衰落在一起，但不是作为宗教的对立面而存在的；</strong></li></ol><p>按照基督教，人有二重性，肉体是世俗的，灵魂是不朽的；划分了精神生活和物质生活，分别由<strong>政权和教会</strong>来控制。【而东方不一样，后者要么是世俗政权来控制，而伊斯兰则是教会来控制；在中世纪西方，二者保持了长时间的平衡。】<strong>「凯撒的归凯撒，上帝的归上帝」</strong>。【当然不是完全的平等，而是竞争的关系。】在政权和教权相对稳定的二元对立中：一方面，世俗权力不是最高的，国家权力本身是有限的，只与价值上较低的那一部分相关。（在世俗政权一直以来很强的情况下，限制本身是很难的。）</p><p>教权衰落的时候，当政权希望控制另外的一个领域的时候，人们认为它没有权力来控制，不可能全面干涉。原<strong>来由教会控制的领域应当变为个体自由的领域</strong>。洛克「掌管灵魂的……是属于自己的」。——所以，变成了<strong>世俗政权的 power 和个体自由的 right</strong> 之间的关系了。而且 right 作为一种本位的高级的部分高于前者就显得合理。</p><ol start="2" type="1"><li>首先要申明，<strong>希腊城邦更多是共和主义公民观联系</strong>，但不是和自由主义毫无关系，包括平等概念。自由主义对于自由的理解更多和中世纪城市自由联系在一起。【《看不见的城市》，涉及到中央和地方的关系。】</li></ol><p>历史上城市的自治和个体自由的关联，我们在讲「城市」的时候好像不可分离。但中世纪城就是高大而坚固的城堡，国王和贵族；而市有着很大广场，有邮局和其他的其他公共设施，所以是为了商品交易的。所以我们讲城市自治，更多实质市的自治。</p><p>如何成为城堡统治的域外之地？解决纠纷的司法的权力：所以出让自己的经济利益，或者说暴力的方式获得自治权。（城市最早是在商业中出现的）市的自治权是为了防止城堡的干涉。<strong>这构成了古典自由主义的最初的起源</strong>。（所以《大宪章》13 条强调的城市自由，伦敦城）。</p><h3 id="古典自由主义消极自由">古典自由主义：消极自由</h3><ul><li>市本质上是一种<strong>防御的自由</strong>——古典自由主义对于自由的理解：免于受到干涉。（柏林，贡斯当《古代人的自由和现代人的自由》）</li><li>初始的目的是<strong>保护财富</strong>，所以古典自由主义对于自由的基础性的含义是财产自由。在过去，财产来源于土地，而土地归属国王，所以财产归属国王。洛克给出新的解释：财产其实来源于人的劳作，所以财产归属个人。——另外，财产是从个人的努力联系在一起的。——带来了公共领域和私人领域的划分</li><li>是<strong>个体主义</strong>的价值领域。什么是自由？没有外在干涉，没有人对其剥夺财产的情况下，个体可以追求个人幸福。不受阻碍。《人权宣言》自由是有一切有权从事，无害于他人的概念。</li><li>因此，强调<strong>公共领域和私人领域的划分</strong>——免于干涉，结合之前政权和私人权力的划分。</li><li>因此，<strong>对于国家的想象也是非常消极的</strong>。国家只要不干涉就行了，所以国家是一个<strong>「守夜人」</strong>的角色，国家享有的权力也有限，仅限于治安的权力、对外防止入侵的权力，还有邮政的权力。亚当斯密《国富论》<strong>强调市场的独立和本位的价值</strong>。——政治和经济，国家和社会是完全不同的概念；在此之前，我们是在王权的统治下不区分政治和经济、国家和社会的。（政治经济学开端） 。——个体的自由和权力是本位性的价值，而国家是手段性的为了实现而不得不接受的。<strong>最本质的价值归属是个人权力、个人自由，不存在高于其的共同的善。</strong></li><li>对于<strong>公民的想象</strong>（好公民的理解）：是否纳税，是否参与到市场中，是否守法？也是完全消极的。个体并不受共同公共生活的义务；只有当政府干预了私人生活的时候，个体才有权选择是否超越个人领域参与到公共讨论中。人的本质是个人主义的，反对政治国家通过权力来构建政治联系/社会关联（只是在人的自主的层面上自发形成）；因此，<strong>对于教育是非常警惕的</strong>：国民教育常常是的政治构建，试图给与公民何为好的生活的想象；但其实应该交给个体去回答，和它所强调的个人自主是完全冲突的。</li></ul><p><img src="16101229102446.jpg" /></p><h3 id="以宗教自由为例">以宗教自由为例</h3><p>首先，这是一种消极自由。怎样理解？从宪法中来看，美国宪法首先提出了宗教自由，这是对于母国的反思，他们希望国家在宗教问题上应该是消极的角色，<strong>既不支持也不压制特定宗教的宗教宽容</strong>，leave the citizens alone。（911 之后西方对于宗教的应对）</p><p>《马克思论犹太人》好像是很轻松的，国家只要不干涉就行了。但是在上面两节课的讨论中，可以看到是复杂的，宗教没办法完全停留在私人领域中。尤其是宗教行动本身外部性非常突出的那部分。所谓的「政教分离」并不意味着两者有条泾渭分明的界限。</p><blockquote><p>2001 年，入学誓词——亨廷顿，未来世界的冲突不是意识形态的冲突，而是文明的冲突。——知识分子的责任是什么？显得更为敏感，更为痛苦，看到社会未来可能的问题，「桥中人」的角色。（2004 年开始，法国「禁止在……佩戴宗教标志的……」，德国「和宪的方式……禁止老师佩戴面纱」）</p><p>未来世界的国际冲突的根源将主要是文化的而不是意识形态的和经济的，全球政治的主要冲突将在不同文明的国家和集团之间进行，文明的冲突将主宰全球政治，文明间的（在地缘上的）断裂带将成为未来的战线；国际政治的核心部分将是西方文明和非西方文明及非西方文明之间的相互作用。冷战后的国际政治秩序是同文明内部的力量配置和文明冲突的性质分不开的。同一文明类型中是否有核心国家或主导国家非常重要；在不同文明之间，核心国家间的关系将影响冷战后国际政治秩序的形成和未来走向。——文明冲突论</p></blockquote><p>当<strong>宗教自由和公共生活发生冲突</strong>的时候，如何判断国家行为的正当性？两个因素</p><ol type="1"><li>政策背后主张的公共利益是什么？（正当的）</li><li>（宗教宽容就是要平等地对待所有的宗教）是否在指定的时候是限定特定的宗教信徒的？</li></ol><p>进一步追问，宗教信仰自由背后要保护的是什么？宗教信仰自由到底是什么？——和给的中国的案例放在一起，姓名权是什么？</p><h3 id="新自由主义-new">新自由主义 new</h3><p><img src="16101229180089.jpg" /></p><p>防御性的想象，right 是盾，power 是矛。有何发展？</p><p>新自由主义其实是中文翻译，其实有两个分支，new, neo，后者是一种变体/变态。neo 意义上典型代表是<strong>里根政策和撒切尔政策</strong>。是对于古典自由主义的背离式的发展。——一切都私有化，甚至否认传统的自由主义想象中国家的权力。认为国家提供的所有都可以通过私人来完成。但在现在，我们还是认为有些<strong>具有排他性的公共产品</strong>。【所以我们现在不太提及 neo 意义上的自由主义而是 new 自由主义。】</p><h3 id="洛克纳诉纽约州案1905">洛克纳诉纽约州案（1905）</h3><blockquote><p>洛克纳是一家烤面包房的经营者，他因为要求自己的工人每天工作超过10个小时而被控违反了纽约州的《面包坊法案》。法院要求他立刻缴纳50美元的罚款，在监狱里服刑50天。洛克纳不服判决，一直将自己的案子上诉到联邦最高法院，终于得以胜诉，并成功推翻了纽约州的《面包坊法案》。</p></blockquote><p>纽约州认为他们维护了<strong>治安权</strong>：面包工人不良的健康状况，造成食品安全的隐患。洛克纳认为纽约州干涉了自由，政府违反了契约自由的承诺，<strong>多管闲事</strong>【1905 年就已经开始了对于社会主义的警惕】——延续了古典自由主义的对于自由的想象。</p><p>【州立法机构的立法是实现立法目标的合理的手段，还是专断任意的立法？从本质上说也就是州“治安权”这个权力与受宪法保护的个人基本权利之间的较量与博弈。】</p><p>反对意见，哈兰大法官等三人：另外两个都是规范到事实的论述，而哈兰则有了<strong>法社会学</strong>的角度：面包工人确实有隐患。霍姆斯：任由多数人的摆布恰恰是民主社会的特征。立法本身就是多数决的过程。（宪法的功能是什么？防止多数人对少数人的暴政）但有例外：除非可以这么说，民主的立法侵犯了基本的原则——这时要从节制转向能动。——之后会讲到。</p><blockquote><p>大家本以为，洛克纳此案毫无胜算。毕竟，已有霍顿诉哈代案(Holden v. Hardy)在先。但是，万万没想到，最高院以5笔4的比例，支持洛克纳胜诉。最高法院大法官以违反宪法第5和第14修正案的「正当程序」条款为主要的判决理由，裁定《面包坊法案》无效。判决原文表示：“这个法律必然干涉了雇主和雇员之间订立合同的权利，这项权利涉及到了雇员在雇主的面包店里的工作时间。对于自己的事务签订合同的普遍权利是由联邦宪法第十四条修正案所保护的个人自由权的一部分”。</p><p>自此后，美国司法就进入了洛克纳时代，简而言之，就是最高院法院宣布州立法规制无效是家常便饭的时代。虽然此案一直伴随颇多争议与批评，不过不得不承认，此案开启的洛克纳时代，极大的巩固了美国的宪法和司法稳定，加强了联邦与各州的司法管控。</p></blockquote><h3 id="西滨旅社案1937west-coast-hotel-co.-v.-parrish">西滨旅社案（1937）West Coast Hotel Co. V. Parrish</h3><p><img src="16101229253347.jpg" /></p><p>1937 年：<strong>罗斯福新政，古典自由主义向新自由主义转变</strong>。（三次：立法、南北战争，还有罗斯福新政）</p><p>1929-1933 年经济大萧条：仅仅依靠市场可能有问题；市场可能失灵，社会达尔文，强者愈强。——契约本身可能是虚假的，契约双方可能本身就不平等。</p><blockquote><p>美国罗斯福新政时期，华盛顿州的《妇女最低工资法》以保护妇女和未成年人免受在有损健康与道义的工作条件下从事工作为目的，将州内任何行业雇佣妇女和未成年人在有损健康和道义的工作条件从事工作的行为，包括以不足维持生计的低工资雇佣妇女从事工作的行为，均规定为违法，并确立了妇女和未成年人最低工资以及劳动条件的基本标准，甚至还规定成立作为裁定上述工资和工作条件是否适当的机关“产业福利委员会”（Industrial Welfare Commission）以及有关的裁定程序。</p><p>本案的当事人帕里什（Parrish）是一家名为西岸宾馆（West Coast Hotel）的一名妇女顾员，因为实际所得的工资低于上述法律所规定的有关标准，[１]遂向州地方法院提起诉讼，要求顾主补回差额，但遭法院驳回，便进而提起上诉。州最高法院否定了西岸宾馆一方所提出的有关华盛顿州《妇女最低工资法》构成违宪的主张，裁定该法律合宪，并接纳了帕里什的请求。西岸宾馆一方对此不服，向联邦最高法院提起上诉，其辩护人引用了1923年艾德金斯诉哥伦比亚区儿童医院一案的判例，[２]坚称本案中的华盛顿州的《妇女最低工资法》违反了联邦宪法第14条修正案中的有关正当程序条款，因而无效。[３]</p><p>联邦最高法院于1937年3月作出判决，全体大法官以 5 : 4的微弱多数认定上述州法合宪，并明确地推翻此前有关正当程序条款的判决，从而成为历史上的一个具有转捩点意义的重要判例。</p></blockquote><p>和洛克纳的案例相似，这里是为了保护女工的权益。——<strong>否定了绝对的自由</strong>，契约自由不是不可撼动的，而是有历史和意涵；另外，加重了国家的责任，用宪法来保障。转变：古典主要是为了保证经济自由，政府的角色是减少干预，是因为当时市场兴起时候在资源分配上的优势，以及打破封建国家的桎梏；而在 30 年代的萧条打破了这一观念，出现了 1. 契约制度两方面失衡；2. 市场失灵，社会达尔文。<strong>意识到这些弊端的解决需要国家的介入</strong>。保持现有市场，国家积极维护市场的平稳，再分配，社会平等（只是解决弱势群体）。</p><p>罗斯福「我们唯一值得恐惧的就是恐惧本身」（背景是大萧条）。——加了另外两大自由：<strong>免于匮乏的自由，免于恐惧的自由</strong>。</p><p><strong>公民的权力转向了积极的自由</strong>：社会福利、保险、基本教育。国家的角色发生了变化，积极起来。从「守夜人」到……。政府被授予了很大的权力，如何保证这些权力不被滥用？就需要公民的权力，对政治生活的参与。但现实上，则是国家权力的不断膨胀，而私人不断缩退到私人领域。在这个意义上，共和主义开始复兴。——古典共和主义是否能和今天的话语向对接？下节课。</p><blockquote><p>Q：为什么不能只管制市场市场竞争（扭转市场失灵）？而要提供社会福利等</p><p>政府首先要解决的是资源调配的问题。但是即使市场完美运行，仍然有社会达尔文的问题——<strong>市场竞争之后的社会达尔文问题</strong>。例如：公民教育，使得穷人和富人有一个平等的起点。失业保险，使得工人有了和老板谈判的条件。</p></blockquote><h2 id="共和主义公民观">共和主义公民观</h2><p><img src="16101229328400.jpg" /></p><p>解释了原因：1. 规模的扩大，每个人直接参与政治的可能性降低；2. 商业，更倾向于独立；3. 闲暇。</p><p>古代人的自由是集体自由；现代人是个体自由。</p><p>这两种自由对应积极自由、消极自由？对应共和主义、自由主义？（并不完全对应）</p><p>消费主义、享乐主义，等的出现，使得公民参与政治的愈渐衰弱；在此背景下，共和主义复兴。【《独自打保龄》】</p><h3 id="古典共和主义">古典共和主义</h3><h4 id="古希腊雅典的民主制">古希腊雅典的民主制</h4><p><img src="16101229409217.jpg" /></p><p>对于王制的反思带来了古典共和；注意与<strong>君主制/君主制对立</strong>而存在的。特点如上面的 ABC 这些。经过梭伦改革、克里斯提尼改革等，形成了一种新的政体。</p><p><img src="16101229475626.jpg" /></p><p>公民大会如果比作立法的话，议事会更像是政府；陪审法庭最多为 501 人；执政官处理日常事务，由公民大会选定。雅典的特征：<strong>民主化发展</strong>。</p><p>引出一个问题：<strong>为什么会发生在雅典</strong>？和军制的改革有关：成员有参与公共事务的热情和意愿。亚里士多德《政治学》「公民团体完全是由战士组成的」——参与的热情和战士的身份相关；作为战士为城邦付出过，会和城邦之间构成血脉联系的强烈联系。就会产生对于公共生活的欲望。最初雅典是以骑士为主的，因此多为贵族。斯巴达的军制传入，加上战争频繁；从骑兵转为重装步兵；这些催生了雅典民主政体的改革。（这也解释了雅典民主的主体是<strong>成年男性</strong>）</p><p>雅典的民主政体第一次把权力从少数人转移到了公民的手中，实现了公民内部政治权的平等。</p><ul><li>雅典共和主义第一层内涵/特征：<strong>与君主制对应的民主特征（共和国内涵，强调民主）</strong></li></ul><p>但是<strong>在和平年代，用什么来构建个体和共同体之间的强有力的联系</strong>？——这是我们作为公民要思考的</p><h4 id="罗马共和制">罗马共和制</h4><p><img src="16101229549772.jpg" /></p><p>罗马在什么意义上拓展了共和的内涵？</p><p>亚里士多德的观点，混合（注意到和柏拉图的哲人王不同）。三中权力的支持合作和相互制衡（之后还加入了教会势力）</p><ul><li>共和的第二层内涵：<strong>共同融合、共同和谐繁荣发展的政体（承认民主的前提下对纯粹民主的限制）</strong></li></ul><p>雅典强调民主的话，罗马更强调了和谐；雅典促进了民众的激情，而罗马对这种激情加以制约，对纯粹民主的制约。一种分权制衡的观念。构建了自洽的罗马法体系（三次政府世界：武力、宗教、法律）</p><p><img src="16101229617624.jpg" /></p><ul><li>两者重合之处，也构成了古典共和主义的第三重内涵：两者都强调公民美德，和公民身份紧密相关的<strong>公民参与和公民美德</strong></li></ul><h3 id="古典自由主义和古典共和主义的区别">古典自由主义和古典共和主义的区别</h3><ul><li>对待政治参与：自由主义认为公民没有参与的义务，参与本身也是实现私人自由的<strong>手段</strong>；而共和主义认为政治参与是人的<strong>本质</strong>所在。</li></ul><p>亚里士多德，支配万物的普遍法则，借助于城邦精神展现出来：共同体应该有一个共同善存在，common good，城邦的目标所在。人们只有实现了共同善，才符合宇宙规律，才是善的。（三种善，其中灵魂的善就是要实现共同善）任何孤立的个体/团体不能同时实现这三种善。</p><p><strong>1958 汉娜·阿伦特《人的境况》</strong>：为什么<strong>政治参与是人的本质所在</strong>。人一生中三种重要的活动：1. 劳动（对于自然的加工，农耕）；2. 工作（不依赖于自然，人的创作）；3. 行动（公共领域中的政治参与）。私人领域完全建立在物质之上的，受到欲望的束缚，不自由的；只有进入到公共生活中才是自由和解放的。【参与本身就是自由的本质】因为都是无差异的表达。言论和行动才彰显了「我是谁」。对于显示自我来说，政治参与才是最高的形式；<strong>因此政治参与不是手段，而是美德</strong>。是目的，如果不参与，就是不自由的。</p><blockquote><p>對於理解阿倫特的公民觀來說，獨特的歷史政治背景與公民共和的傳統理念同樣重要。作爲一個從德國納粹第三帝國逃亡出來的猶太人，<strong>阿倫特目睹了魏瑪政府民主代議制度的崩潰，也見證了以踐踏自由主義理念，發動群衆運動起家的納粹極權統治的崛起。</strong>對於自由民主體制的自健自強能力，對於以自由主義爲代表的西方文明的持久價值，阿倫特遠沒有大多數自由主義所持的那份樂觀肯定。她憂慮的是，現代自由國家公共生活的萎縮正是民主制度脆弱的根本原因。公民觀的薄弱更會從根本上動搖民主制度賴以生存的一些基本價值和觀念，如人的自由、尊嚴以及積極進取的主體判斷和行動。</p></blockquote><ul><li>关于共同善：古典共和认为城邦有共同善，先于、高于个体的善。亚里士多德认为本身就存在的。「上帝已死」，用什么来解释这个共同善？后来共和主义认为共同善是共同体是协商之后的共识？——但不论如何认为有共同善存在，不存在任何前政治性的权力：只有在先承认共同善的前提下，才有个人的权力。个人权利不能对于共同善构成任何的障碍。</li></ul><p>他们认为存在一种<strong>「好的生活」的特定观念</strong>，当个人权力构成对于这个的冲突的话，个体权力要被牺牲。</p><p>上节课讲到，自由主义对于教育很警惕；而共和主义则非常强调教育。（多元主义和相对主义：前者但承认还有一种共同的共识；而相对主义认为根本不可能存在共识）</p><p>而对于古典自由主义：存在<strong>基本权利 fundemental rights</strong>，其是外源性的存在，是先于政治而存在的。这是高于「好的生活」的，因此社会不能有一个「好的生活」的先验判断。因此：基本权利先于共同体的，因此先于共同善；对于自由主义来说，总是要维护基本权利。</p><h3 id="共和主义的复兴">共和主义的复兴</h3><p>回到贡斯当的文本中：共和主义的表达在现代社会中是很虚弱的。然而，如何应对<strong>政治冷漠</strong>的问题？共和主义的调整</p><p><img src="16101229698980.jpg" /></p><p><strong>伯林《两种自由概念》，</strong>写于 50 年代，看到了积极自由潜在的危险。所以站在了消极自由的立场；但是不意味着积极自由不重要，而是要超越罗马。来看文本。</p><h4 id="消极自由">消极自由</h4><p>「<strong>应当被容许</strong>」，非常消极的，守住，防备的状态，是一个盾防止积极的干涉。</p><ul><li>自由本身是建立在公共领域和私人领域的划分之上，对于私人领域的保护。</li><li>强调这条界限，一旦这个界限划定之后，双方都是消极的，个体不参与对于国家的积极塑造中，守好自己的领域；国家是从界限之外，</li><li>国家是「守夜者」，没有危害就不需要出来，有外来干涉的时候「警察」来解决就行了。</li><li>注意到，这里<strong>是「控制的范围」，而不是「来源」问题</strong>。而国家权力，如何来源，如何行使，我不关心。</li></ul><p>【穆勒，就是约翰密尔】</p><h4 id="积极自由">积极自由</h4><p><img src="16101229766487.jpg" /></p><p>积极自由的核心在于人要成为<strong>「自己的主人」</strong>。「我要做自己的主人」和「别人不干涉」之间的差异？</p><ul><li>不要干涉：我选择的范围是给定的；要做主人，进一步追问，选择范围本身是不是有问题，提供给我选择的人遮蔽了选择？给定我选择的人的正当性是什么？动机是什么？</li><li>对于自由的威胁来自外部，他人的干涉；要做自己的主人，意味着阻碍本身也可能是客观条件：教育、信息获取</li></ul><p>积极自由对于自由本身、自由的障碍的理解完全不同了。障碍本身可能是外部的：选项谁来提供、给我提供的条件；内部的障碍，自我分裂。物质的我与<strong>先验性的自我</strong>，要让我真正成为自我的主人。</p><p>另外一方面，积极自由更强调教育，因为要认识到先验的真正的我。和古典共和主义的关联，共同善，摒除经验的我对自我的奴役。</p><p>黑格尔康德都强调先验的自我。然而，<strong>积极自由可能存在的风险</strong>。我受困于经验的我，谁来告诉我？是否有第三者更清楚真正的我？把一种外在的意志以「这是为你好」「更明白真正需要的是什么」而强加给个人。</p><p>出现了悖论：对于自由的要求最后变为对于集体的强制。50 年代，在纳粹德国演变为现实中的灾难。共同善由于权力的时候，潜在的危险。</p><p>如何克服？新雅典流派对于自由的理解？</p><ol type="1"><li>新雅典：阿仑特（对于积极自由的阐释？）</li><li>新罗马：佩蒂特</li></ol><p>从共和主义自由观的发端可以看到，其和自由主义所追问的问题是不同的：自由主义只要不受干涉就可以了，而共和主义则要真正「做自己的主人」。消极自由只要有选择就行了，而积极自由则要问谁给我选择，要问对我们选择的自由有什么障碍。所以，积极自由确实拓展了消极自由对于自由的理解。此外，不仅要摆脱外在的限制，可能也要摆脱内在的限制——经验自由和先验自由。潜在风险：</p><ul><li>第一个后果，外在目标作为共同善的理解，<strong>外在的集体性目标对于个体进行强制</strong>（当积极自由把自由与善联系起来的时候，它用集体的目标来替代个体的对于自由的理解；精英/集体强迫人们自由；悖论，对于自由的追求最终演变为压迫）——所以贡斯当现代人的自由是「个体自由」古代人是「集体自由」。</li><li>个体丧失对于外在一切，把本应当作为自己权利的「退隐到内心的碉堡中」。（<strong>积极自由带来的消极后果</strong>）——「佛系的生活状态」？——不受奴役本身不是目的，而是「我应当活成自己的样子」。而是应该去认识理性的自我，康德。</li></ul><h4 id="新雅典阿伦特-待补充">新雅典：阿伦特 #待补充</h4><p>上世纪 90 年代开始，大家意识到仅仅倡导消极自由，可能造成社会生活的凋敝，无助于社会的发展；而柏林的积极自由有着语境，在二战的德国/俄国中看到了隐患的存在。</p><p>共和主义的复兴：完全停留在亚里士多德/新雅典/阿仑特的脉络中，隐患？</p><p>所有有新的一条路径：<strong>新罗马</strong>。通过佩蒂特《共和主义》来理解，很难说他给了我们一个更好的答案，但至少给了我们新的视野。（TED 演讲 <a href="https://www.youtube.com/watch?v=1rTEOU67zCo">How Do You Know If You're Truly Free? | Philip Pettit | TEDxNewYork</a>）</p><p>娜拉……提出了问题：我们……。</p><p>两个问题：1. 娜拉是否有权利不出走；2. 娜拉出走是否就是自由？或许还会回到让她舒服的环境中？</p><p>她是不自由的，是一种 lucky freedom 建立在她的好的丈夫之上。</p><h4 id="新罗马佩蒂特">新罗马：佩蒂特</h4><p>佩蒂特在 2008 年《共和主义》提到的另一个情景：奴隶遇到一个很好的主人，甚至他提到要自我发展的时候主人还使用其财力来帮助他发展。但是佩蒂特仍认为其不是自由的。（注意到这里的自由还是自由主义所谈的<strong>个体自由</strong>）——因为尽管主人没有干涉，但是主人有随时干涉的能力，<strong>「任意的/武断的」干涉的能力</strong>。「无干涉等于自由」吗？</p><p><img src="16101229884482.jpg" /></p><p><strong>「无支配的自由观」</strong>。「任意的干涉的能力」，首先是干涉的能力，这种干涉还是任意的没有条件的。</p><p>关注的是能力本身的存在，而不是干涉是否存在。只要这种能力存在，就是不自由的。（TED 中）潘恩在《常识》中提到的，殖民地收回了税种，但这就自由了吗？反对的是税收本身还是别的什么？想征收多少就多少的权力没有改变。反对的应当是「任意的征税权」，它现在可以让你缴纳一便士，之后就可以以同样的方式让你缴纳最后一便士。——北美口号<strong>「无代表不纳税」</strong>，反对的就是任意的征税权。</p><p>「无支配的自由」需要有三个条件：</p><p><img src="16101229940751.jpg" /></p><ol type="1"><li><strong>为少数人提供防止多数人暴政的保护</strong></li></ol><p>可以看到和积极自由的联系。【注意到佩蒂特讨论问题的起点都是以个体自由出发的，否认了古典共和「共和善可以就对个体自由构成否定的主张」阿仑特等认为公共参与本身就是善；民主决策本身就是源于多数决，所以民主意志就有天然善/理所当然的正当的力量。】多数人的意志就构成了对于个体的<strong>任意的武断的干涉力量</strong>。【伯林那篇文章伟大之处，回归到了消极自由。两个原则：<strong>1. 唯有 rights 本身能成为绝对的东西；2. 人类在某些界限之内拥有绝对的自由</strong>】</p><blockquote><ul><li>第一，惟有“权利”（rights）能成为绝对的东西，除了权利以外，任何“权力”(power)都不能被视为绝对；惟有如此，所有的人才能具有绝对的权利，去拒绝从事非人的行为，而不论他们是被什么权利所统治。</li><li>第二，人类在某些界限以内，是不容侵犯的，这些界限不是人为划定的，这些界限之形成，是因为它们所包含的规则，长久以来，就广为众人所接受，而人们也认为：要做一个“正常人”，就必须遵守这些规则；同时，人们认为如果违犯这些规则，就是不人道、或不正常的行为；对于这些规则而言，如果我们认为它们可以由某个法庭、或统治团体，用某种正式的程序，予以废止，是荒谬的想法。当我说某一个人是个“正常人”的时候，我所指的意思中，也包含了“他不可能破坏以上这些规则，而丝毫不感到嫌恶、或不安”。</li></ul></blockquote><p>无支配的自由和现代的「多元主义」是相容的；而古典自由主义对于共同善，对于教育的强调，对于民主意志本身正当性的认可，可能的问题。</p><p><img src="16101230007759.jpg" /></p><ol start="2" type="1"><li><strong>提供民主的决策机制</strong></li></ol><p>执着于「无干涉」的人强调选择的权力，可以接受主人的存在，只要是「好的主人」；而「无支配」则强调选择本身，反对任何主人的存在，做自己的主人；这就与<strong>民主制度的需求</strong>相呼应。</p><p>为了实现无支配自由，法律之下的自由；公民有接受法律的义务，但是公民要决定什么事法律的自由【卢梭，法律是我制定的，服从法律等于服从自我的意志】。除了代议制、选举制之外，<strong>对于自治的强调</strong>，在公共生活中自我管理。【问题，自治，不是需要多数人？】</p><p>强调无干涉的消极自由，<strong>法律赋予公众的是干涉发生时候的抵御权以及事后的救济权</strong>；而后者关心的是，任意武断的干涉意志/能力是否存在，<strong>事前的预防和干预也是可以达到的</strong>。——无干涉对于政治是无能为力的，最小的国家，对于公共领域的冷漠。</p><p><strong>公共领域的民主权力的要求</strong>，我要做自己的主人：1. 决定法律的走向，成为主人；2. 私人领域……，消除对于个人的支配。——要求国家尽量减少因为残障/贫困/无知对于自由的威胁。【我们没有能力改变劳动力市场供大于求的局面，我们怎么做？对支配能力进行限制/削减。矫正——怎么办：再分配，以此增强劳工与雇主对话的能力】</p><p>两个重要走向：1. 对于民主机制的要求；2. 增加不同语境中个体权力的保护（国家的保护）。</p><p>还有一个问题：<strong>干涉本身是否构成了对于自由的否定？</strong>再分配本身就构成了对于自由的威胁。第一点已经区别于消极自由了，第二点……。举了再分配的例子，干涉发生了，是否意味着不自由？</p><p>对于无支配的自由本身，首先承认是法律之下的自由。作为社会性的存在，干涉是无法避免的。因此在一定程度上干涉并不意味着不自由。</p><p><img src="16101230070490.jpg" /></p><p>好的法律是在成就个体自由的。问题变成了如何是「好的法律」，即如何保证干涉不是武断的/任意的？意味着法律不是专断的，……但受干涉的……。区分 1. 自由的威胁性因素，其不构成对于自由的剥夺的；2. 自由的制约性因素，才构成对于自由的否定。 #问题：两者区别？</p><p>【核心观点：现代社会中被干涉很难避免，（第一次课面临问题，工体生活和个体之见的关系）和自然性的阻碍的约束性一样的，是制约性的，并没有构成武断的干涉（好像构成了障碍，最终可能实现了自由）；威胁性因素在于，实质性地剥夺了自由，（简单的例子就是法律，群己权界，），纽伦堡法对于犹太人】</p><p>公平的法治本身是民主的反应（是民主决策过程决定的法律）；实质性条件是实现了「公共利益」，干涉本身是促成一个我在其中能实现自我的环境的，我是在其中可以受到保护，和任意武断的保护是不一样的。</p><p>和消极自由的区别：无干涉的支配不是自由的，而无支配的干涉不但是可接受的而且是必要的因为是对于自由的保障。</p><p><img src="16101230137231.jpg" /></p><ol start="3" type="1"><li><strong>公共选择、公共政策的可抗辩性 contestability</strong></li></ol><p>选举等过程是实现了自由，非常规政治；<strong>但是在常规政治中，如何保障个体自由？</strong>个体选择？如何保证日常中个体依然有自由选择的自由？</p><p>这就是<strong>第三种自由</strong>。不仅仅是政治的自由，还要求信息自由、言论自由、公共渠道在常规政治/日常选择中表达自由的观点的可能性。</p><ul><li>不同于无干涉意义上的自由</li><li>也不同于民主参与意义上的自由，即作为自治的积极自由。不同于共和主义「民主参与是本质性的善」，而是作为手段来看待的，最终的目的还是要回到个体自由。「<strong>民主参与是自由保障而非自由的核心</strong>」。</li></ul><p>归到共和主义当中，因为它强调了民主参与；但核心的问题在于如何理解共同善？佩蒂特并不是认为没有共同善，但不同于亚里士多德的共同善，对于其的理解是个个体自由联系在一起的。</p><p><img src="16101230195157.jpg" /></p><p>回到柏林，个体自由是起点和重点，但不意味着是唯一的标准。承认个体自由的时候，也要构成限制和约束——这时候，要求我们对于共同善的理解。（少数精英的理解裹挟个体自由）不能脱离个体自由来讨论共同善，「什么样的人生才是完满的人生」，个体的视角；反之，我们可能是从第三者的视角来看的，微妙的区别。——个体自由和共同善并不是非此即彼的关系，一个通道？</p><p>「什么样的人生才是完满的人生」，这个问题本身可能也是变的；当我们在不同的历史语境之下，我们给出的答案可能是不同的。【好像是很形而上的问题，但是影响了我们的人生。】「文明人不同于野蛮人，……但是果敢地去维护合体信念」——现代的语境下理解什么是共同善。</p><blockquote><p>【立法：民主程序是多数决。】</p><p>【康德《什么是启蒙运动》……「什么样的人生是完满的」，《公民历史下的……》，是不断的发展的历史的问题。《什么是启蒙运动》中，公众自我启蒙是可能的。】</p></blockquote><p>所以，下次课讨论北雁云依的问题。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 公民 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法治与公民 课程笔记 2</title>
      <link href="/posts/12a7dc10/"/>
      <url>/posts/12a7dc10/</url>
      
        <content type="html"><![CDATA[<h2 id="北雁云依案">北雁云依案</h2><p>如何能够在共同体规范和个体自主之间达成平衡，从而实现自由？</p><h3 id="pre1">PRE1</h3><p>这个 PRE 主要分成了三个部分，第一部分站在原告的角度从「法不溯及既往」等角度进行讨论；第二部分对于本案中「公序良俗」进行了论述；第三部分讨论了涉及到的「姓名权」问题。</p><p><img src="16101230545375.jpg" /></p><p><img src="16101230718064.jpg" /></p><p><img src="16101230614189.jpg" /></p><p><img src="16101230885466.jpg" /></p><p><img src="16101230941665.jpg" /></p><blockquote><p>澄清错误：<strong>（新）法不溯及既往</strong>：新法颁布之后，并不约束在它之前发生的行为。但不是所有的，只要新法对于公民权益有提升，还是可以的。——知晓和预期，若该法是要加重公民的约束，则可以不追溯既往；但若是加强了公民的权力，则可以追溯到过往。</p><p>因此，这里是：对于原有法律的解释，所以不是新法；因此这里不涉及到「法不溯及既往」的概念。</p></blockquote><h3 id="pre2">PRE2</h3><p>这个是从被告方的角度展开的。主要围绕自由的概念展开，从消极自由讲到积极自由，但感觉思路有点偏，可能是自己无法理解吧。</p><blockquote><p>我的回应：关于社会管理成本这一点，社会管理不可能仅仅以姓名作为血缘认定的方式，至少需要证件号作为认证；而且在现代社会中，我认为「北雁云依」这样的名字相较于一些生僻字来说带来的成本并不会有很大的差别。</p></blockquote><p><img src="16101231026427.jpg" /></p><h2 id="宪法">宪法</h2><p>引入：人格权</p><p><img src="16101231085240.jpg" /></p><p>该案件涉及到的是姓名权（人格权）</p><p>除了直接从法律制度来理解，更重要的是法律的正当性（由来），即讨论人格权究竟是什么？从《宪法》中得到；然而，《宪法》一般不会在日常的法律案件中被使用。</p><p>——宪法是法，它在调整法律制度/权力关系的过程中，究竟涉及到的是什么？</p><p>——这两周重要的学习内容：<strong>宪法框架之下，它对于权力关系的调整的一般性逻辑</strong>。</p><p>三十八条，是放在「公民的基本权利」之下的。第二章涉及「基本权利」。04 年宪法修改（用「公共利益」的概念和个人权利进行对话；涉及到个人财产受法律保护；放入了「人权」概念）</p><h3 id="宪法权利基本权利">宪法权利（基本权利）</h3><p><img src="16101231158269.jpg" /></p><p><strong>「基本权利」和「人权」</strong> 同时出现在第二章中，两者有何区别？</p><blockquote><p>【讨论部分】</p><p>——并不是：基本权利更为具体而人权更为抽象，政治性概念。看《世界人权宣言》，没有那么抽象。</p><p>——韩石东：康德观念，人权是超越一切的自然状态下固有的权力，独立于政治、法律、国家，根属于所有人。基本权利是法律上的对于人权的确认和保障。自然法和实证主义的观点。——反问：宪法的结构是前言、基本权利、国家结构。宪法列举出权力是为了确立权利的范围？</p><p>注意《世界人权宣言》的时间，是在二战结束之后。</p></blockquote><blockquote><p>《世界人权宣言》（法语：La déclaration universelle des droits de l'homme）是联合国大会于1948年12月10日在法国巴黎夏乐宫通过的一份旨在维护人类基本权利的文献（联合国大会第217号决议，A/RES/217），共有30条。宣言起草的直接原因是对第二次世界大战的反省，是第一份在全球范围内表述所有人类都应该享有的权利的文件。其完整文件由联合国出版在其网站上。</p><p>《世界人权宣言》与《经济、社会及文化权利国际公约》、《公民权利和政治权利国际公约》（两公约）一起包含在国际人权法案中，两个公约都是在1966年通过。</p></blockquote><p><img src="16101231217146.jpg" /></p><p>来看《德国基本法》，第一次把人权和基本权利都放在基本法中。【卢梭《社会契约论》中同时用了基本法和宪法；而在欧陆语境中，「宪法」指的是国家之内通行的习惯，而「基本法」才是更为基本的法。】</p><p>还是二战背景，<strong>人权是外在于国家之上的权利</strong>。实证法和自然法的关系，此起彼伏。<strong>自然法的高峰是启蒙运动</strong>，法国大革命，否定君主的权力；建构了现代民族国家之后，意识到一个有效的民族国家强调「主权」；<strong>实证法</strong>，极端是德国纳粹时期，这个时候自然法再次回到人们的视线当中。——这是《国际人权宣言》的出现背景。</p><blockquote><p>而實證法學派是先由國家依照公權力而制定，再依照法律之方法論，進而推論到具體案件，故實證法學派是由人類基於經驗而創造的具體法律規範，再依據文理、係統、歷史與類推解釋，按照三段論法予以推論的法學方法，在這個推論之下，只要法律具備完整，就能規範社會上之一切行為。實證法學派認為人類之行為與自然現象不同，自然現象受到因果律的支配，而人類的行為必須受到目的律之支配，因此目的為一切文化制度之創造者與社會生活的原動力。</p></blockquote><p>看《德国基本法》，强调了人权；<strong>「宪法是法」</strong>；可以对于国家的立法和司法构成直接的约束。【《德国基本法》和《世界人权宣言》中人权之微小差别？】</p><ul><li><p><strong>人权是哲学概念，生之为人的基本尊严（平等独立有尊严）</strong>。人权和特定的语境、国家没有关系，「<strong>天赋人权</strong>」（先于、外在于政治国家的关系；甚至在没有构建政治国家之前就享有的权利的综合）。（独立于实证化的存在，<strong>超实证性</strong>）</p></li><li><p>再看基本权利。宪法是构建政治国家的根本依据；国家在构建的过程中确立了基本权利。但是权利的实现是有成本的，<strong>因此一个国家肯认的基本权利是有差别的（能力的差别）</strong>，基于一国的历史/语境。两者相伴而生，国家确认部分的人权。——基本权利和国家政治权力直接关联；带来了基本权利的效力，带来直接的法律效力。（<strong>实证性</strong>，获得了特定宪法的对于人权的肯定的内容）</p></li></ul><p>《世界人权宣言》确认了人权，但没有得到特定国家的确认。人权和主权的关系？现代民族国家两个任务：1. 对外独立的主权；2. 对内的民主。主权的最高性应当得到确认。但正如之前的自然法/实证法的此起彼伏，主权的过度可能会造成危险。所以国际上还是努力要「人权和主权的对话」。<strong>人权作为一个范本，对于国家构建基本权利进行制单，但是实际上对于国家内部的约束是很有限的。</strong>范围的角度，人权是更大的概念，包括但不限于政治基本权利。</p><h3 id="基本权利主观权利客观法">基本权利：主观权利客观法</h3><p><img src="16101231273137.jpg" /></p><p>确立了之后，有两部分的功能（约束力的两个视角）：1. <strong>主观权利</strong>。得到确认之后，我就可以主张这个权利（对于公民来说）2. （对于国家）<strong>客观法</strong>。客观秩序，不管公民有没有主张，国家都有促成这一权利的义务。——<strong>主观是相对于公民的意愿，客观是国家的义务和责任。</strong></p><p><strong>启蒙运动之后，变成客观法</strong>。封建制度时，其实是不存在这样的客观秩序的意识的；民族国家之后，意识到管理者/统治机构仅仅是代理人，……仅能维护这一客观秩序（由宪法中基本权利来决定的），不能修改。所以一旦得到确认之后，就变成了客观权利；而对于政治国家来说，就变成了客观义务。</p><blockquote><p>张翔：首先我要说明一下，基本权利双重性质理论是<strong>德国宪法学的基础性理论</strong>之一。现在讨论基本权利问题大部分是在这样一个框架内进行，也就是说，几乎所有人讨论基本权利理论都需考虑这样一个问题：基本权利作为一种主观权利和作为一种客观法或客观规则所具有的不同意义。这个理论在德国是比较基本的，而且对我们也有借鉴意义。</p><p><strong>首先，基本权利作为一种主观权利，是“个人得以主张”的意义上的基本权利</strong>。主观权利在德国法上最核心的内容是一种防御权，所以主观权利又被称为主观防御权。客观法是什么含义呢？在德国法上有这样一种观念，权利不仅是个人得以向国家主张的权利，<strong>而且也是国家机关或国家一切权力运作必须遵守的一种规则。</strong>这些规则并不是个人向国家主张意义上的，所以称为客观的规则或“客观的法”。</p></blockquote><blockquote><p>关于这个问题，我想举一个案例。这个案例是德国在1977年发生的案例，叫施莱耶案件（Schleyer）。施莱耶是德国的工业部长。他被恐怖分子绑架，恐怖分子要求德国释放当时在监狱中服刑的恐怖分子十余人，以此作为交换人质施莱耶的条件。由于德国政府拒绝恐怖分子的条件，施莱耶的家属就以保护施莱耶的“生命权”为由，向联邦宪法法院提起宪法诉愿，请求宪法法院发出一个紧急介入的命令，就是说要宪法法院命令国家释放这十一个恐怖分子，理由是施莱耶的生命权受到侵害。最后，宪法法院没有支持这种请求。理由是什么？生命权的意义是什么？比如说国家非法侵害你的生命权，你可以有个主观请求权，你可以通过宪法诉讼排除这种侵害。但现在问题在于侵害你生命权的并不是来自国家，而是来自别人。法院认为这种情况下的请求权国家是可以拒绝的。如何保护这个人应由国家自己决定，自己衡量。这是国家客观法上的义务，并不与公民的请求权相对应。虽然宪法法院没有支持施莱耶家属的请求，但是宪法法院仍然从基本权利是“客观的法秩序”角度出发，认定国家有从方法、手段、时机等方面充分考虑而对施莱耶进行营救的义务，例如派出特种部队。</p></blockquote><p>（当然，还有部分没有得到转化的人权）。04 年我国宪法中引入「尊重和保障人权」，并不代表一切的人权都得到保护；这实际上代表的<strong>国家承诺</strong>，希望得到保障的部分和人权趋于一致。</p><p>《世界人权宣言》没有客观的约束力；我们承认国家的主权，二战的经验告诉我们仅仅注重主权可能带来的危险。</p><p>【不同与此，《公民权利和政治权利国际公约》以及《经济、社会即文化权利国际公约》则是对于宣言的落实。（注意是公约）很多国家成为这两个公约的缔约国，但不意味着这两个直接对于我国具有约束力。看《》第七条，虽然「签署」了；但还要批准了才有效。——现在只批准了《经济、社会以文化权利国际公约》。（可以看到意识形态的差异。虽然缔约国上很难看出来差异，但是真的批准的时候，意识形态就反映出来了。）】</p><h3 id="基本权利是否具有法律约束力">基本权利是否具有法律约束力</h3><p><strong>宪法作为根本法、母法</strong>。宪法第二章确立的基本权利，反映在一般法律上，变成了<strong>一般性的权利</strong>。（受教育权和劳动权，唯一具有权利和义务双重性的两个。）</p><p>Family tree 是不是意味着宪法不会进入了一般生活中？当和人权对话的时候有约束力，但是在一般权利对话的过程是，似乎基本法就可以保障？究竟如何关联的？（宪法是法，更是政治纲领/宣誓/叙事）主观权利客观法的约束力，在哪里体现出来？</p><p><img src="16101231345871.jpg" /></p><p>【方法论的转换：之前是在宪法框架中；现在要转向实证性的、人文的视角。「人文社科」连在一起，但不一样，社会科学和自然科学相伴而生（<strong>苏格兰启蒙</strong>），客观规律，很大功能是「科学认识」，social scince，帮助我们对于周围社会的科学认知，周围世界的<strong>「实然」状态</strong>。</p><p>但是，人类作为共同体，是需要理想的存在，不然无法面对现实的苦难；人类和个体一样，要有理想来克服当下的苦难，即<strong>「应然」状态</strong>。所以政治学科下 political science/ political philosophy。前面是「实然」，现在要进入到「应然」，人文视角。】</p><p><img src="16101231415716.jpg" /></p><p>社会契约是启蒙的一个重要理论贡献；一切都要回到人类理性本身。康德「勇敢地运用理性」。公共生活面临的问题：我们为什么要在这样一个政治国家？政治国家的合法性是什么？</p><p>这样就产生了<strong>「社会契约」</strong>。三个人（<strong>霍布斯、洛克、卢梭</strong>）都认为<strong>政治国家之前人类都处在「自然状态」</strong>，差异是在对于自然状态的认知。</p><ul><li><strong>霍布斯</strong>：悲观的。自然资源的有限，所以人与人之间最终必然陷入了竞争（绝对和还是相对的？后者意味着自然资源相对于人的欲望来说是短缺的）。《利维坦》描述自然状态：孤独、贫困、龌龊、野蛮和短命。这就需要有国家的强制力。但是因为想象的自然状态很糟糕，人类必然陷入自我灭亡中；所以国家是强力的。<strong>所以国家一旦建立出来，是不受契约的约束的，契约是人之间建立的。</strong></li><li><strong>洛克</strong>：更为积极。人在自然状态下可以生存，但又不方便。矛盾和纠纷，人有超越理性的激情，自己不能做自己的法官。这样的话，签订契约之后，出让一部分权力，由国家来统治，更好的生活。正因为这样的思想，国家不是超越一切的；<strong>契约的目的是对国家的约束，是为了保障公民的权利</strong>。国家有契约义务，受到人民的监督。【所以美国深受宪法修正案第二条持枪权但没有总统敢动，这是国家的根本立国之策。】（今天对于宪法的想象很大程度上来自洛克的社会契约论。我们之所以接受国家，公民在国家里受到更好的保护，社会契约约束的是国家和公民之间的关系，尤其是对于国家）但是，我们要组织一个由人组成的政府，如何建立？（如果是由天使来管理，我们就没有必要对政府进行约束）怎样来约束权力本身？在这个基础上，我们<strong>把宪法想象成全体公民和国家之间签订的契约</strong>。</li></ul><p><img src="16101231485166.jpg" /></p><p>宪法为什么具有最高性，就是源于此。</p><ul><li><p>（从形式的角度）被认为是全体人民和国家之间签订的，因此其效力高于法律，是根本大法；</p></li><li><p>（从实质的角度）<strong>根本性地对顶了国家权力的结构和公民的基本权利，为社会的良性运行构建了最为基本的规则 fitst principle</strong>。宪法为国家确立了范围，构架了 blueprint，提供了理想的图景。（解释了为什么一般法只要多数决就能修改，而修改宪法需要大多数决。）</p></li></ul><h3 id="宪法作为公法">宪法作为公法</h3><p><img src="16101231547396.jpg" /></p><p>回到刚才的问题：宪法列举出权力是为了确立（基本）权利的范围？并不是，基本权利的宣誓，醉翁之意不在酒；宪法修正案第九条，<strong>不能因为列举就不保护其他的权利</strong>。</p><p>事实上，基本权利是<strong>为国家权力设定界限</strong>。国家权力结构，从积极角度赋予国家权力的范围；另一个角度，要告诉它不可以做什么，是对于国家的提醒，是公共权力的行使所不能僭越的范围，为国家权力设定界限。——进一步明确了宪法是干什么的？是人民和国家的签，对国家权力划定界限，<strong>义务主体本身是国家权力</strong>。是<strong>公法</strong>，调整的法律关系中，有一方在行使国家权力，公民和国家权力，是不平等的关系。而<strong>私法</strong>调整的平等主体之间的关系。</p><blockquote><p>《少年的你》获奖，怎么看？</p><p>每一个公民都有两个角色：市民/公民；区别在于，个体进入到公共领域中，开始参与到和个体利益没有直接关联的时候称之为公民。在十七十八世纪是以「文学」公民的形式——印刷术的发展，阅读，文学作品的交流，咖啡馆/沙龙/图书馆参与讨论，产生了这样的一种群体。（文学的作用非常大）我们来自不同的地方，但是阅读了同一本书就让我们有了共同体（关切的原因是因为我们能够体验到这样的体验），有了共同点。</p><p>所以，这部影片、B 站在五四青年节放出的宣传片「后浪」，或许是我们进入到公共领域的讨论的契机。</p></blockquote><blockquote><p>回到正课。我们谈到宪法。姓名权后面是「人格权」。民法和宪法中都有，如何理解？</p><p>宪法是根本法，但是是如何运行的？上节课通过对于基本权利的讨论，就是想要来探讨这个问题。1. 我们说基本权利是主观权利客观法，有效力，宪法上的基本权利对于立法、司法等构成了约束。2. 但是通过一般权利的讨论，发现宪法很难落实到我们的生活中。</p><p>所以有了问题，宪法是法吗？回到契约签订的时代，宪法其实是全体公民和国家之间签订的契约，优先于仅仅通过民主程序、多数人决定的法律本身；而实质性的原因在于，我们在这里根本性规定了国家权力结构和公民的基本权利，为社会的良性运行构成了保障，是一个 blueprint。</p><p>仅仅回到了<strong>最高的法律效力</strong>的问题，但这<strong>针对谁</strong>？涉及到基本权利，法律的要求是保护，但是宪法没有宣誓的权力就不受到保护吗？</p><p>公民权利和国家权力设定之间的关联；背后有一个统一的目的——为国家权力设定界限。宪法是消极的……</p><p>也就是说，宪法承担的主体不是平等的公民，而是行使公权力的政府，宪法的本质是<strong>「公法」</strong>。</p></blockquote><p><img src="16101231640892.jpg" /></p><blockquote><p>作为一个新的法律门类，我国学界对社会法的认识存在很多争议，一直是在不同的意义上使用这一词语。从国际上看，社会法在不同的国家有不同的理解，甚至在同一国家也有不同的解释或称谓。社会法是国家制订和颁布的旨在保护弱者生活安全，提供社会福利，促进民生福祉，具有国家和社会帮助或给付性质的法律法规的概称。这一内涵是由社会法的法律性质决定的。在本质上，社会法是弥补私法和市场经济不足的新的法律体系，它调整的是形式平等而实质不平等的社会关系，是市场分配之外的分配法，体现了分配正义、校正正义和实质正义。</p></blockquote><p>公法调整的对象，至少有一方行使国家权力；所以不是平等的，单方面可以对另一方构成强制或命令。（当然核心的问题是<strong>双方的意志是否平等</strong>，是否一方对于另外一方有单方面的强制性或命令性。如国家在京东上购买打印机，或许就不需要涉及公法）</p><p>社会法，主要是针对社会弱势群体的某种保护，典型的是经济法等，但是存在争议。</p><p>所以一般的还是分为两部分，公法和私法。对于私法，我们之前就强调消极自由，国家承担一个消极角色。所以遵循的重要的原则是「<strong>私法自治</strong>」，国家是守夜人的角色，不到万不得已不介入。我们更多的把自主权留给平等主体去决定（自由选择，当然也要自主承担选择的结果）。也即，<strong>「法无明文禁止即合法」</strong>，只有在例外的情况下，国家才会介入。</p><blockquote><p>行政立法形式正当性的一项重要内容就是不能越权立法，而判断行政立法是否越权首先必须确定行政立法的权限，其实质就是确定立法权与行政权的界限。现代法治的核心是依法行政，即行政权依据法律而行使，而法律优先原则和法律保留原则是依法行政的重要内容，也是确定行政立法权限的原则。法律优先原则和法律保留原则是德国行政法学的始祖奥托？迈耶最早提出的，不仅在德国、日本有深刻的影响，而且实际上是世界各国普遍适用的行政法原则。</p></blockquote><h3 id="法律保留">法律保留</h3><p><img src="16101231708972.jpg" /></p><p>在这样的理解下，看「市场准入负面清单」：公民在特定领域之外可以自由进入；在这之前国家权力是不受限制的。负面清单是把国家可以进入的（市场）领域进行了限制。这是「法无明文禁止即可为」的表现。</p><p>这是私法调整的原则。不一样的是公法的调整原则。国家权力是一把双刃剑：在有国家权力的时候公民可以享有个体自由的实现；但反过来这一权力可以损害公民的自由。所以，<strong>这种限制要更为严格</strong>。这时的准则即<strong>「法无明文授权即违法」</strong>。</p><p><img src="16101231767150.jpg" /></p><p>（第八条第六项）之前燃油税，可以发现有时候有有时候没有；这是因为当时是由财政部来决定的；尽管从行政监管的角度来说是最有效的，但是从另一角度来看，就违背了「无支配的自由」，问题在于是否有支配的能力，<strong>潘恩「无代表不纳税」</strong>，只有公民的代表才能实行。</p><p>「但是」后面的部分是<strong>绝对保留</strong>的。涉及到公民的<strong>政治权力、人身自由</strong>的，这些只能由全国人大及常委会制定。【下节课宪法监督及其实施，会谈到孙志刚案件】</p><blockquote><p><strong>法律保留原则</strong>（英语：principle of legal reservation；德语：Gesetzesvorbehalt），或称<strong>积极之依法行政</strong>，系指任何行政行为或规定均有法律明确授权。</p><p>法律保留原则起源于立法国家时期，其当初的用意是在于利用立法权对行政权为完全的限制，亦即国家运作的所有根据，皆应交由立法权以法律的形式形成。</p></blockquote><p><img src="16101231834930.jpg" /></p><p><strong>劳动教养</strong>最高可以限制人身自由可达四年；但是它和「坐牢」之间在形式上看不出区别。51-54 年镇压反革命，三反五反，55-56 年肃反……这时候既没办法放行也定罪；55 年的《指示》，注意是「中共中央」，这是劳动教养的起源。</p><p>劳动教养的范围非常广，反革命分子，强制戒毒，卖淫嫖娼等。每年最少四千多人，最多三十万。注意到产生的特殊历史背景，客观上有助于社会秩序的塑造和维护。但是，没有对它进行约束，所以必然会被滥用；比如，<strong>劳动教养委员会</strong>本来有多个部门联合，但事实上是公安部内部制定的。（承认它发挥过作用，但是是和法律保留的原则是不相符的。）2013 年开始，废除劳动教养的程序，最终被废止。</p><h3 id="法律优先">法律优先</h3><blockquote><p><strong>法律优先</strong>是指法律在效力等级上高于行政机关的<a href="https://wiki.mbalib.com/wiki/规范性文件">规范性文件</a>，上一层级的法律规范的效力高于下一层级的法律规范的效力。因此，任何其它法律规范，包括<a href="https://wiki.mbalib.com/wiki/行政法规">行政法规</a>、地方性法规和规章，都不得与法律相抵触，凡有抵触，都以法律为准。</p></blockquote><p><img src="16101231905717.jpg" /></p><p>第二个原则是<strong>法律优先原则</strong>。下一层法律受到上一层法律的约束。（中央的高于地方）【由上面的法律和行政规范性文件的关系引申下来】</p><p><img src="16101231971876.jpg" /></p><p>不同的法律规范的效力是不同的。一般情况下中央的规范要高于地方的规范（但不一定，因为地方的规范有「因地制宜」的优势。）</p><p>有最高法律效力的是宪法；宪法之下是全国人大和常委会的法律；<strong>国务院</strong>制定的行政法规；<strong>地方立法机构</strong>的地方性法规；<strong>行政机构</strong>所制定的规范性制度，法律规章。</p><p>【2015 年的<strong>立法法</strong>的改变：扩大了地方性的立法权。之前，除了省级的立法权，还有一些市（省府所在地，如杭州；经济特区如深圳，特殊的立法机构；国务院批准的较大的诗，如厦门）也有<strong>立法权</strong>。现在扩大到：凡是有自治区的市/自治州，都能由自发机构指定地方性法规（当然有限定，城乡建设、环境保护）。为什么要这样，毛泽东《论十大》「一抓就死一放就死」；城市级自由，城市的个性依赖于其法规。中央和地方的关系，中央愿意放，但是很有可能地方会乱？（城市的个性，以及之下的个体的自由）。】</p><p>另外，冲突的时候怎么办？看上面的图。最容易冲突的是部门规章和地方政府规章。不同的部委，对于同一个事项都有涉及，这时怎么办？国务院来裁决；同样也可能出现地方性法规和部门规章之间的冲突、行政法规和法律之间的冲突……</p><ul><li>总结：宪法作为公法存在的，调整的问题，<strong>「法无明文授权即违法」</strong>，有两个原则，<strong>法律保留和法律优先</strong>原则。</li></ul><p>最后一个问题，宪法可不可以介入到平等主体之间的纠纷？</p><h3 id="宪法的第三人效力">宪法的第三人效力</h3><p><img src="16101232035804.jpg" /></p><p>支持的观点：1. 基本权利不仅仅可能受到国家的侵害，除了国家权力机构之外有社会强势地位的机构/个人，这里面关系已经失衡；所以这时候应当适用；2. 普通立法的立法滞后性，出现了立法漏洞，这是宪法应当让它的光芒照射到这上面。</p><p>反对的观点：1. 双方都是平等主体，相对基本权利受到约束，超越了宪法可以处理的范畴；【后面会提到国家特殊的宪法结构，这里不涉及】</p><p>第三方。间接效力/辐射效力。只有当公权力的介入的时候……</p><p>一个案例：Masterpiece Cakeshop v. Colorado Civil Rights Commission （2012 年，科罗拉多州）</p><blockquote><p>本案的事实很简单，一对同性情侣来到科罗拉多州的一家蛋糕店，想为他们的婚礼订做一个结婚蛋糕。糕点师傅菲利普拒绝了要求，他表示，自己信仰基督教，基于自己的宗教信仰，不能通过订做结婚蛋糕这一方式表达对同性婚姻的支持。这对情侣对此非常不满，在当地民权组织的帮助下，将蛋糕店告上法庭。蛋糕店在科罗拉多州上诉法院败诉后，上诉到了联邦最高法院，就有了Masterpiece Cakeshop, Ltd. v. Colorado Civil Rights Commission一案。</p></blockquote><p><img src="16101232095717.jpg" /></p><p>我国的一个案例：齐玉苓案</p><p><img src="16101232148440.jpg" /></p><h3 id="宪法的约束力宪法监督">宪法的约束力/宪法监督</h3><p><img src="16101232204137.jpg" /></p><p>多数决，但是多数并不等于正义。怎样对于民主机制运行所出现的问题进行约束。意识到对立法权进行约束的必要性。用什么进行约束呢？——（社会契约的想象中）用宪法进行。除了宪法之外，可以通过政治化的方式进行约束——选举。</p><p><strong>立法堵塞</strong>：立法过程受到各种力量的影响，导致立法规范很难得到运行。</p><p><strong>首次对于立法权的约束</strong>：美国 <strong>马布里诉麦迪逊</strong>案。</p><blockquote><p><strong>马伯利诉麦迪逊</strong>（Marbury v. Madison，5 U.S. 137 (1803)）是美国最高法院于1803年判决的一个案例。庄园主马伯利由于上届政府的疏忽，而未收到“太平绅士”的委任状，而继任政府的国务卿麦迪逊拒绝承认委任的合法性及将委任状下发。根据1789年美国国会通过的《司法法》第13条，最高法院对此具有初审管辖权，于是马伯利直接向当时并无实权的最高法院提起诉讼，要求得到自己的委任状。在由首席大法官<strong>约翰·马歇尔</strong>主笔的判决意见中，裁定马伯利应该获得委任状，但同时首次运用司法审查权，判定1789年美国国会通过的《司法法》因为违宪而无效，理由是根据美国宪法第三条第二项第二款，最高法院对此案并不具有初审管辖权，而仅具有上诉管辖权，故将案件撤销。虽然马伯利未得到委任状，但美国最高法院得以在避免与行政权正面冲突的基础上，树立了对宪法的解释权，即司法审查权。由此开始，司法权成为制衡行政权和立法权的第三种权力，确立了美国三权分立的宪政体制。</p></blockquote><p>政治冲突，原告<strong>联邦党人马伯里</strong>原本应当在上届政府获得委任，被告<strong>共和党麦迪逊</strong>是在选举后获胜的国务卿，拒绝下发委任状。法官马歇尔提出了三个问题：1. 马伯里有没有权利获得委任状？2. 如果他有权，而这种权利已受到侵犯，他的国家的法律是否向他提供补救办法？3. 如果法律确实向他提供补救办法，是否即为本院发出的执行令？</p><blockquote><p>对于第三个问题，马歇尔笔锋一转，给出一个否定的回答。马歇尔认为虽然法院有权向行政官员发出执行令，但在马伯利案中，最高法院仅具有“<a href="https://zh.wikipedia.org/w/index.php?title=上诉管辖权&amp;action=edit&amp;redlink=1">上诉管辖权</a>”，而不具有“<a href="https://zh.wikipedia.org/w/index.php?title=初审管辖权&amp;action=edit&amp;redlink=1">初审管辖权</a>”；简单地说，就是马伯利告错了地方。</p></blockquote><p>但是 1789 年的法令，最高法院的管辖权，议会所制定的法律本身违背的宪法的规定的，是无效的。因此，最高法院对此没有管辖权。</p><p>两个创举：1. 最高法院获得了权力：对于宪法的解释权力（这是在美国，立法行政司法分立；在我国，<strong>立法权是更上位的</strong>，因此司法权不能对其制约）；2. 在全世界，此前，宪法是政治性的纲领，但在马歇尔的处理中，宪法作为法来对待，<strong>作为一个标尺对一个国家的立法的正当与否进行衡量</strong>；因此在全世界，解决了<strong>立法制约</strong>的问题。（「好公民」的问题，用什么来衡量法律的良善？宪法。但是，这一体制如何实现，要回到每一个国家。）</p><p><strong>宪法监督/立法审查并不在于否定/取代民主，而是让它更加健康。</strong>所以后来衍生出，宪法拟定为契约。宪法作为每个人权力的表达，成为了少数人权力的守护者。</p><p><img src="16101232279319.jpg" /></p><p><strong>Judicial review 司法审查</strong></p><p>（司法）这是美国的逻辑：法律的解释由法院完成，宪法是法，所以有法律解释。</p><p>（专门机构）德国，专门的宪法法院，单独的。</p><p>（行政机构）而法国不同，宪法委员会。它被视作宪法委员会，1958 年立宪，美国戴高乐总统。核心目标是<strong>制约议会权力，强调行政权</strong>。（法国和中国类似，行政权比较强；行政法院，也是强化行政权的）</p><p>为什么没有出现<strong>英国</strong>？立法权没有受到制约。英国没有成文的宪法，但是有宪法性的法律，例如 05 年有宪法修正法案；还有宪法原则；另外有「议会至上」等原则。但是在司法上，只有对行政的审查权力而没有立法的审查权力。这是因为「议会至上」有首要原则：之所以，是因为国王/女王是通过议会来进行权力表达的；而拉丁法系的一个观念，国王不可能犯错；因此不受到审查的，立法不接受司法的监督的。1998 年推行了《人权法案》；现在的现状是：法院提供一个宣告，但是政治性的而非司发行的，要求政治对话，让议会重新审视法律。</p><p><img src="16101232341975.jpg" /></p><p>注意十八大「备案审查」，而十九大「合宪性审查」。</p><p><strong>司法、行政、监察，相对于全国人大的立法权，都是具有下位性的。</strong></p><ul><li>（美国没有明确法律的解释权是谁）。如上，宪法的<strong>监督主体</strong>是全国人大及其常委会。（立法权是全国人大）</li><li>第二，监督对象。全国人大有权撤销其常委会——但是没有提到全国人大制定的法律。</li></ul><p><img src="16101232403886.jpg" /></p><p>备案的范围大于被提起审查要求的范围。备案包括了审查。</p><p><img src="16101232462821.jpg" /></p><p><img src="16101232506629.jpg" /></p><p>我们不是强调分权制衡，而是分工合作。<strong>内部对话的柔性合作</strong>。受理主体是全国人大及其常委会，专门机构；审查主体是全国人大及其常委会。</p><p><strong>备案审查都是合法性审查，而非合宪性审</strong>查。18 年的改革：原有「法律委员会」变更为<strong>「宪法和法律委员会」</strong>。十九大加入了「合宪性审查」</p><blockquote><p><strong>违宪审查</strong>或称<strong>合宪性审查</strong>（<em>Constitutional review</em>），是指基于<a href="https://zh.wikipedia.org/wiki/權力制衡">权力制衡</a>原则，由释宪机关判断<a href="https://zh.wikipedia.org/wiki/行政命令">命令</a>、<a href="https://zh.wikipedia.org/wiki/法律">法律</a>或者规章制度是否符合<a href="https://zh.wikipedia.org/wiki/憲法">宪法</a>。对于个人行为的<a href="https://zh.wikipedia.org/wiki/司法审查">司法审查</a>属于传统<a href="https://zh.wikipedia.org/wiki/司法权">司法权</a>，而违宪审查则起源于<a href="https://zh.wikipedia.org/wiki/美国">美国</a>，在20世纪后，普遍发展为维护宪法机制的司法权力，是<a href="https://zh.wikipedia.org/wiki/司法獨立">司法独立</a>的象征。</p></blockquote><p><img src="16101232568639.jpg" /></p><p><img src="16101232657790.jpg" /></p><p><strong>常委会法工委</strong>决定是否启动合法性审查。</p><ul><li>备案审查，很多时候涉及到的是<strong>合法性</strong>的问题，只需要涉及上位法，不一定需要涉及到宪法</li><li>合宪性审查，<strong>备案审查是合宪性审查的前置条件</strong>。</li></ul><p>对象上的差异：合宪性审查涉及到所有的法规，甚至是一些行为，对于司法权和行政权进行约束。</p><p>目标：备案仅仅关注是否违背上位法；合宪性审查是保障人权，是否对公民基本权利构成威胁。</p><p><img src="16101232715807.jpg" /></p><p><img src="16101232764640.jpg" /></p><p><img src="16101232807274.jpg" /></p><p>19 年备案审查中，首次涉及到了宪法。释放信息：逐渐过渡到合宪性审查？</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 公民 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>法治与公民 课程笔记 3</title>
      <link href="/posts/65a0ec86/"/>
      <url>/posts/65a0ec86/</url>
      
        <content type="html"><![CDATA[<h2 id="宪法基本权利">宪法基本权利</h2><ul><li>权力本身是有成本的。一个国家的历史、文化等会对于宪法的基本权利构成威胁？</li><li>第二点，宪法是「公法」，它的权力可能在私法中也会涉及到；同样的权力在不同的范畴可能会发生转变。比如「人格权」</li></ul><p>今天关于两个权力：言论自由和人格权</p><h2 id="言论自由">言论自由</h2><p><img src="16101233196243.jpg" /></p><p><img src="16101233242982.jpg" /></p><p>木心的一句话：「文字产生之前，就有文学产生」，交流的方式。所以，交流/言论本身和人是紧密相连的。</p><p><img src="16101233478157.jpg" /></p><p><img src="16101233547796.jpg" /></p><p>比较一下。我国宪法；美国宪法是修正案第一条。</p><p>注意不能仅看35条，整个宪法文本之间的联系。借用整个宪法来看待。我们理解的时候，我们先看法律禁止了什么言论，在此之外可以所（规范的主体是公民）——53条赋权的对象是公民，而约束的对象也是公民。而美国规范的主体是国徽。</p><ul><li>正反的结合：「正」是53条，其他是「反」</li><li>而美国：原则上享有言论自由，只有在特殊的情况下才会限制，限制是例外。</li></ul><p><img src="16101233621766.jpg" /></p><p><img src="16101233654026.jpg" /></p><p>这是「政见」的一个调查。认为，中国公民更多强调政府作为一个中介的存在，并不热衷于直接参与政治。</p><p>之前上课谈到《乌合之众》，在群体中展示出庸俗的状态——问题是，人在群体中是必然出现这一情况的吗？相关联的另一个问题：没有政治教育就不能参与政治？在这个调查中，似乎很多北大的学生认同这一观点。</p><h2 id="人格权">人格权</h2><p><img src="16101233772395.jpg" /></p><p>对于「人格权」的讨论，在公法方面仅有这一条；而最近的对于《民法典》的讨论，就有「人格权」要不要单独出来，可以看到这次非常全。</p><p>关于「人格权」的来由，是和当时特定的历史联系在一起的，文革中牛棚等对于人格的迫害；而今天我们对于人格权的讨论有了不同的语境。</p><p><img src="16101233837787.jpg" /></p><ul><li><p>首先，对于「人格」进行认同。在罗马法中，人格是一个身份概念，这和后来的「法律面前人人平等」并不是一致的。</p></li><li><p>今天讲的人格，则是在启蒙运动之后的。<strong>启蒙之后「人」首先是平等</strong>。1. 从身份变为众生平等的法律资格。2. 上帝赋予人的秉性是「理性」，所以「人格」中还有理性。（康德的理论）——身份概念向<strong>伦理概念</strong>的转变。</p></li></ul><p><img src="16101233930980.jpg" /></p><p><img src="16101233971448.jpg" /></p><p>宪法中「人格」概念都是来源于康德，硕士论文《道德形而上学奠基》《纯粹理性批判》《实践理性批判》。</p><p>人看到周围的世界都是合乎目的性的，所以人会对于「和目的性」的本能诉求。这是讨论人格的前提。所以，<strong>什么样的人生是值得过</strong>的，追问这个问题，最终的目标是<strong>人要是完整的、合目的性的</strong>。三个层面相联系</p><ul><li>幸福。幸福是回应/满足自己偏好的，和感性联系【感观世界，自然法则】【服从自然法则，他律】</li><li>道德。理性的存在，不是满足自己作为感性需要的工具，而是为自己理发，作为目的存在而非手段存在，【理知世界，理性法则】【作为目的的人格】</li><li>宗教。</li></ul><p>三者中，道德是最为根本的。因为在履行道德的过程中，人是作为目的存在的。自由意志是人格的标准，并用自由意志为自己立法，这一过程中确立了<strong>尊严</strong>。</p><p><img src="16101234054002.jpg" /></p><p>独立的人格，意味着不能依赖于外在的世界存在（所以偏好/欲望是自然的产物）；必须要作为目的来对待，和自由意志、不能作为手段来对待关联在一起。</p><p><img src="16101234136651.jpg" /></p><p>人格和尊严看似分离，但是 1. 是否内心自由；2. 是否作为目的来对待（人的主体性）</p><hr /><p>上节课两个角度来理解。2. 要理解公法和私法在不同角度来对于人格权的理解。围绕康德来探讨人格权；<strong>人格权是来源于二战背景</strong>；来自德国基本法，所以要回到德国语境。</p><p>中国社会科学，这两年的基础研究：概念史。很大程度上<strong>引介</strong>西方的概念，上个世纪开始的自觉：我们学术的自主化？需要厘清概念，这其中有一个<strong>再概念化</strong>的过程，这一过程就是自主性的过程。【理论渊源】</p><p>人格的起源，人对于和目的性的天然的诉求，形成<strong>人格的尊严的概念</strong>。</p><p>尊严的两种渊源：对于人的理想想象，我们可以认为 1. 人格是和目的性的；2. 人的自由意志。所以，人格权的保护（核心的价值/利益），保护的是人的内在价值，涉及生命价值的良知自觉。凭借人的自由意志去实现个体的价值。</p><p><img src="16101234216082.jpg" /></p><ul><li>基于「人格权本质上是一种精神利益」的理解，对于和<strong>人格</strong>紧密相关，而和社会一般的利益关联不大的部分，划分为私密领域；</li><li>隐私领域，当公共利益和私人利益出现矛盾的时候，可能会牺牲个体利益；</li><li>公共领域，上节课「靠左行靠右行」，不会关涉到生命的终极价值的理解和实现，而「是否要战争」就关涉到生命。</li></ul><p>德国基本法十二条，就<strong>关涉对于生命的终极价值的理解</strong>，所以一般情况下不干涉。</p><p>一个核心问题，人作为主体，对于生命和道德的最根本的利益，我们根据生命价值和价值的实现，和公共领域之间划分界限，国家的权力。一方面强调国家的消极；另一方面，如何理解生命对于自我价值的实现，这是绝对的领域吗？「人的自主和公共的冲突」，很难有绝对的领域——我们有一个<strong>伦理责任</strong>去维护国家的运行。</p><p>注意到，德国基本法中也有涉及到「国家作为伦理主体」</p><h3 id="国家作为伦理主体的责任">国家作为伦理主体的责任</h3><p><img src="16101234349514.jpg" /></p><p>结合康德，无论是<strong>生命价值还是自主</strong>，都涉及到双重的维度：</p><ul><li>生命价值的<strong>客观性</strong>。1. 有神论者，客观维度在于神的创造力和爱（启蒙运动初期的思想家中），我们随便让人的生命消逝，就是对于上帝的创造的否定；2. 作为无神论者，人为代表的万物是自然的创造，甚至人作为自然的组成部分就有维系自然的责任。客观性，在于<strong>如何使人的生命价值存续并且发展</strong>？【客观价值，源自神创/自然的肯定】——因此这里蕴含了某种国家责任。大多数国家对于自杀的消极态度，对于器官买卖的反对。</li><li><strong>主观维度</strong>：生命的神圣价值和完整性，不完全在于上帝/自然，同时每个人都有<strong>独特性和卓越性</strong>，在于人的自主的选择。人的精神力量成长的过程中，将重塑自我，这是另一种完整性的价值。【自主的选择力和创造力】——国家体现为消极的尊重，没有对现有秩序和他人造成危害的时候，不干涉。</li></ul><p>这是生命价值的角度</p><ul><li>在对于生命价值的维度里，和康德的人的价值的三个层次之间有关联。一方面康德强调「个体幸福」；另一方面，除了幸福，要进入道德的世界，这才是我们的自由意志在发挥作用，真正作为目的而存在；不受制于限制，和来世、未来联系起来，宗教意义上的价值，从而呈现完满的人生。</li><li>【涉及幸福的时候，主观；和道德联系起来的时候，康德的客观唯心主义就展现出来了，理性具有客观性】和一开始的罗马法联系起来（客观的维度，每个人的固有身份承担一定的责任和义务），<strong>强调共同体，人的伦理责任</strong>；人格的实现，个人自制等，并不是独立的；人在实现的过程，必须要考虑到共同体的利益。</li><li>总结，<strong>自主的两个维度</strong>：人的自主，出于自爱原则追求幸福，和生命价值的主观维度呼应；另一方面聚焦个人选择所需要的人格义务，<strong>良心自觉预设了个人的道德责任</strong>，是作为个人的价值的不可缺少的部分。</li></ul><p>都预设了国家的不同责任。</p><ul><li><p>从生命价值的角度来说，一方面，生命存在固有、客观的价值。<strong>人格权的保护意味着生命要延续下去并发展出趋向于完善的状态。</strong>所以国家要承担维系其发展的责任，创造外部的基础。【罗斯福，30 年代，免于恐惧/匮乏的自由，得体的生活】——福利国家就是要在物质的层面去提供支持。</p><p>另一方面，除了存续，还要发展——国家要为个体去理解生命价值，所以要创造更为包容的社会环境，提供不同的可能性。</p><p>总结：<strong>1. 保证得体的生活的责任；2. 发展出不同的可能性，提供这种可能性，制度性的保障</strong>。</p></li><li><p>自主的角度。选择个人幸福，国家有消极的/尊重的责任。「自主」不是绝对的自主——强调个体作为伦理主体的维度。这里面国家的责任？人格权的保护，出于社会整体性关系中理性的主题，<strong>主观的自主和客观的责任</strong>。</p><p>（1. 排斥极端的个人主义；2. 另一方面，源于纳粹，抗拒人作为手段而非目的存在的状态，即拒绝纳粹式的集体主义）（联系罗马法「建构」的作用）（<strong>柏林对于积极自由的警惕</strong>）</p></li></ul><blockquote><p>民法典的编撰，一方面是对于现有法律的完善；另一方面，国家的立法，是否挤压了民间的自由立法的权力？公法的调整的时候，国家要做到「伦理中立」的状态。</p></blockquote><p>两种<strong>国家伦理责任</strong>：1. 涉及到具体的道德目标去约束公民的行为，考虑的是<strong>社会伦理</strong>的认知；2. 另一个维度，致力于公民一般性的发展出责任意识和道德能力——让他去意识到责任/能力（前者是给出正确的答案，后者是给出这样的一种能力；具体的目标，和责任伦理的培育）</p><p>这两种<strong>国家伦理责任</strong>的两个维度：1. 一方面是消极的尊重；2. 采取客观的/间接性的措施去鼓励个体意识到并且承担责任。但是后者的责任承担，要以不违背前者的消极的尊重为前提的，也即不能造成不恰当的负担/个体选择的障碍。讲「法律保留」时候的例子，从事前许可到事后监管的转型（允许你进去，除了问题再进行处理，这也是鼓励公民进行主动选择）。（国外对于堕胎的讨论，国家是让主体意识到这是个体的审慎选择；既不对个体的选择构成障碍，又鼓励其选择——联系到民法典的制定中，离婚冷静期要不要设立）</p><p>【负责任的伦理主体】基本权利的角度，理解公民身份，国家和个体的关系。</p><p>这个主题结束，第二个主题：自主观念的联系。</p><h2 id="民主">民主</h2><h3 id="自主观念">自主观念</h3><p><img src="16101234453676.jpg" /></p><p>启蒙之后，「自主」变为重要的概念；这是民主制度之所以成立的原因。</p><p><img src="16101234505674.jpg" /></p><p>（区别于君权神授等，）当<strong>自主的概念</strong>引入公共生活的时候，秩序建立在「公民同意」的基础上。——对于民主制度的理解。</p><p>但是涉及到我们对于民主的本质？今晚的议题</p><h3 id="民主的本质">民主的本质</h3><p><img src="16101234570918.jpg" /></p><p>两个层面，执行（交给政府）和决策（进入到民主决策空间中，具有伦理的正当性）；然而，并不是所有的议题都能进入到民主决策的公共空间中。<strong>什么样的议题？</strong></p><ul><li>分歧存在的客观性——比如涉及到知识性的客观问题，如疫情的来源、传播问题（当然进入到后期，这一决策有没有对于公民的限制，这里就可能进入到公共决策空间）</li><li>明确的行动指向——即很难有共同接受的问题的时候，就很难进入。如信仰的讨论，要证明自身信仰，很难说服对方（宗教问题和公民身份之间的不关联）（当然，涉及到宗教信仰的外部性议题又是另一个问题）</li></ul><p><img src="16101234634408.jpg" /></p><p>第二个问题。<strong>民主是什么？</strong>1. 民主是多数决；2. 民主是妥协？对吗？从民主的过程来看：</p><ul><li>议程开放：做研究，提对问题就完成了一半；公共问题也一样，<strong>议程设定</strong>。媒介时代，传统传媒也要存在，很重要的功能就是「议程设定」。（其决定了民主决策的走向）；议程设定的开放性，让尽可能多的选项都进入到公共空间</li><li>表明信念，阐明立场：一个理想的议程，除了允许进入，议程开放，还要让各个个体阐明信念/立场</li><li>权衡证据和论点</li><li>识别问题，对话促进并深化思考</li><li>协商调整，形成共识（投票）</li></ul><p>明确第一点：<strong>民主是一个持续的过程，而不是一个片段</strong>——而我们的<strong>「多数决」</strong>只是最后的协商之中。当我们的民主过程顺利推进的话，民主决策要考虑两方面：1. 保护价值；2. 效益价值。能够被决议影响的各方参与到决策中，参与的广度要有要求。效益要求，参与之后，要高效的决策，有效率地产出这一结果。（上一页）</p><p>民主如果理解为一个过程，多数决因为同时能满足保护和效益的目标而产生——所以其是最后的行动指向的决议的时候。多数决是决议规则的一种（甚至「抽签」也是一种决议规则）；决议都是民主的最后的片段。</p><p><strong>民主≠决议规则</strong>。决议规则好处在于给出一个明确的产出结果/产生共识的方式。整个民主展现为<strong>「商谈」</strong>的过程，重要的是共识的产出，多数决是这一产出的决议规则。所以最重要的是相互了解，相互对话的过程。</p><p><img src="16101234705515.jpg" /></p><p><img src="16101234744775.jpg" /></p><p>什么样的公共决策是「好的」？</p><ul><li>（<strong>亚里士多德</strong>）最早是「公意」，形而上的观念，大写的 Reason，是<strong>客观绝对的</strong>，独立于人的主观意志，来自上帝/自然并不重要，重要的客观的<strong>绝对理性</strong>。</li><li><strong>马克思韦伯</strong>，权威的三种形式，「君权神授」、人格魅力性、法理性。retionality，<strong>实然状态的</strong>，只要是合理的，就是公共理性。——弊端在于人类不再有理想，公共理性变为了完全实然的描述，停滞不前。</li><li>两种「公共理性」都是极端的，（看似巨大差异之中）都隐含了一种极其强大的、专制性的影响（前者，纳粹德国被 <strong>施密特</strong> 利用，一部分人掌握了绝对真理，「政治的根本问题是区分敌我」，这是每个人的生命都处于危险之中）</li><li>就有了<strong>哈贝马斯</strong>的<strong>「协商理性」</strong>。如前所述，强调对话，把公共理性从大写 Reason 转变为小写的 reasons，进入到对话的语境中，在彼此对话说理的基础上形成的共识，多个 reasons （理由/观念）所形成的共识——既能克服 Reason 的专断，又能克服静态的 rationality。——<strong>从独白走向对话</strong>。协商民主的转向。</li></ul><p>西方，<strong>区分哲学和政治</strong>：哲学探知真理，政治关联意见的领域，政治意见。阿仑特「哲学的复归哲学」</p><blockquote><p>【韩石东 提问：哈贝马斯的「协商失败」，现代公共议题中，共识出现的可能性？</p><p>回应：1. 一方面归属<strong>政治哲学</strong>，是理想的图景；2. 但完全理想化/实然之间，问题在于，除了协商的共识，还有没有其他的方式？（民主落实的时候有各种困难，但这种困难是否有可能克服？这和是否否定民主是两个问题）</p><p>分析存在，如何应对？首先，要形成对话，我们的冲突，很多时候在于没能建构出一个有效的平台（非常俗套的观点），整个社会在常识性的构建方面，处在一个启蒙的状态，在这个基础上才能构建出对话。</p><p>微博？是不是一个公共领域？另一个问题，公共讨论的实名制问题，一方面匿名可能出现发言尺度不受限；另一方面实名制可能出现「寒蝉」效应。</p><p>回应：还是涉及到公共讨论的构建，常识性】</p></blockquote><h3 id="反思人的自利性">反思：人的自利性</h3><p><img src="16101234816720.jpg" /></p><p>最后一个问题，提到民主的机制的时候，更多有伦理基础，但没有实证基础：动机合理的情况下，结果是否是好的？（上面的三个现象，大众读物《乌合之众》，《黑镜》第一集）</p><p>马克思韦伯，区分了<strong>动机/信念伦理（动机的伦理性）、责任伦理（现实运作的结果如何）</strong>。</p><blockquote><p>他認為，一個好的道德家，未必能夠成為一個好的政治家。他指出，人類歷史的一個基本事實，就是政治活動的最後結果，往往與它最初的動機甚少關聯；甚至產生與最初的動機截然相反的結果。因此，從政者不應僅僅關注自己的道德動機，更重要的是考慮自己的行為可能產生的後果。他把關注動機的從政倫理稱為「意圖倫理」（ an ethic of intentions），關注後果的從政倫理稱為「責任倫理」（ an ethic of responsibility）。從政者應包含這兩種倫理規範。</p><p>堅持<strong>意圖倫理</strong>的人，亦要考慮責任；強調責任倫理的人，也要有自己的意圖。只講意圖倫理，那就會只關心自己的動機是否純正，所做的事是否對得起良知，至於自己的行為是否能產生理想的後果，那就只問耕耘不問收穫了。強調<strong>責任倫理</strong>的人，則每走一步，必慮及它直接的現實後果。他們認為濁世中本就充滿了為爭權奪利不擇手段之徒，因此政治家應從最壞的假設出發，爭取盡可能好的後果，而不應只從自己的道德、理念等願望出發。政治家必須為自己的行為所導致的每一個後果負責。韋伯認為，政治家的基本素質是：投身理想目標的熱情，即意圖倫理；責任感與冷靜的判斷力，即責任倫理。</p><p>堅持自己的理念並毫不妥協的人，可以論政而不能從政。倘要從政，就不能只抱着意圖倫理去行事，而必須考慮對托付你的人士，比如選民的責任。</p></blockquote><p>这是最后给大家的思考视野。</p><p><img src="16101234879831.jpg" /></p><ul><li><p>希腊城邦以来的想象，人进入到公共领域中就呈现出美德。（公共领域）</p></li><li><p>经济中，就是自私的（私人领域）</p></li></ul><p>两种想象？<strong>布坎南</strong>认为人在公共领域中也有非理性的样态，诸多的问题，但对于民主机制坚持下来，意味着我们没有面对这些问题停止下来，这些问题是否可以克服？——<strong>丘吉尔「民主不是一个好东西，但目前还没有找到一个比它更好的东西」</strong>（所以我们才能坚持民主，正当性；当然他在伦理上的正当性是非常强的）</p><p>公共领域的自私和私人领域不一样——公共领域中受到<strong>规则的束缚</strong>；规则形成的重要性</p><h3 id="自由与平等">自由与平等</h3><p><img src="16101234934531.jpg" /></p><p>很多文献，平等和自由的潜在冲突。2011 年前后，皮凯蒂《21 世纪资本论》。两个核心观念（与 <strong>阿玛蒂亚森《以自由看待发展》</strong>对话的可能性）1. 资本收入比工资增长快的时候，贫富差距加大；2. 可以依赖的唯一手段是政治（这里是主观的论断?）</p><p>耶鲁大学 丹尼尔，2016 年的一本畅销书《精英主义的陷阱》，核心观念：<strong>美国经济状态的发展/建构极大地影响了人们的政治生活</strong>。一个观念：天赋造就成功，每个人凭借自己的天赋获得了应该获得的部分【能力和所得的匹配，社会达尔文】？？丹尼尔 false pride ，那些可称之为天赋的东西是你恰好在社会中获得的，没有获得成功的人并不意味着没有天赋。（偶然性的获得，非客观的，甚至是意识形态的）为什么会这么讲，2016 年特朗普获选，经济的结果，利用这样的阶层固化所带来的民间的不满（有意识地回应平民的诉求，打击精英）；或许这是这本书畅销的原因。</p><h3 id="民主与教育">民主与教育</h3><p><img src="16101234990411.jpg" /></p><p>另一个反思的视角：法国大革命。和英国/美国革命的区别，这里没有很好的<strong>民主训练/教育</strong>。</p><p><img src="16101235047998.jpg" /></p><p>这是 2000 年北大未名 BBS 的一个调查，选题：「如果人民没有受过民主教育，他们是不应该拥有普选权的」，同意的人数远大于反对。</p><p>所谓的「政治教育」本身，除了学校教育之外，还要<strong>实践教育</strong>；没有实践教育，政治是一个高高在上的敏感物；只有这样才能脱敏。</p><h3 id="人性自利">人性：自利？</h3><p><img src="16101235114478.jpg" /></p><p>区分自立和自私。区分两种自利，<strong>「经过启蒙的自利」和「非经启蒙的自利」</strong>。上面的一本拓展读物《阿特拉斯耸耸肩》（很厚）</p><ul><li>自利并不等于自私，只有当自利未经启蒙，不考虑社会的时候，自利才会转化到<strong>狭隘的自私</strong>。</li><li>在进过教育/启蒙之后，经过启蒙的自利，和公共利益之间可能达成共识，或是减少发生冲突的可能性</li></ul><p>之所以要鼓励公共讨论，就是在启蒙；不否认人都是带着自利进入讨论的，但是一个合理的程序可以降低这样带来的风险。</p><p>怎么样在个体的认同之外获得对于公共的认同？下节课</p><p><img src="16101235181770.jpg" /></p><p>还一个议题，勒庞的《乌合之众》</p><ul><li><p>群体心理，并不一定意味着一定会进入到乌合之众的状态中</p></li><li><p>「过度使用」，过多地接受外在的信息——这和现代的议题联系起来，个体的独立思考的能力。</p><ul><li>（一个不喜欢的哈佛法学院畅销书作家）写的一本书中，信息茧房</li></ul></li></ul><h2 id="共同体与个体文化宪法与认同">共同体与个体：文化、宪法与认同</h2><p><img src="16101235256082.jpg" /> <img src="16101235286725.jpg" /></p><p>公共领域的认同，萨义德在自传《格格不入》的追问，「我是谁」</p><h3 id="文化认同">文化认同</h3><p>构建认同的第一个向度：文化</p><p><img src="16101235366930.jpg" /></p><p>西欧的民族国家的构建，一个民族一个国家——民族这个概念，一般意义上是文化的概念，指称的是血缘共同体；预设了文化的共同。民族核心解决的是文化认同的问题。</p><p>我们的文化核心概念：<strong>中华民族</strong>。两个部分：1. 中华，和传统认知紧密关联，中原/中土/中州，和传统对于世界秩序的理解紧密关联，天下秩序，我们处在地理、文化、政治的中心，和独立的民族国家是没有关系的（一直到 20 世纪初，民族意识才得以产生；中国的传统是「天下大同/一体」，区别只是中心和边缘）——天下秩序的王朝向世界秩序的民族国家的转型；费孝通「中华民族作为一个自觉的民族实体，是近百年来中国和西方列强对抗中出现的，但作为一个自在的民族实体则是几千年的历史过程所形成的。」；2. 民族，现代的国家概念的承袭——中西对话，古今对话的结果；一部分是来自于传统，一部分则是现代国家概念。孙中山的转变：「驱除鞑虏恢复中华」，后来则是强调了「国族」的概念。</p><p>现代国家在构建的过程中，首先找到依托点是文化。我们天然的认同和自己有相同的历史文化习惯的人；强调历史记忆和文化认同——优势在于，不局限于构建民族认同，还可以维系更为广泛的认同，如春晚的海外同胞。</p><p>文化的短板？</p><ul><li><p>第一个问题：「顾颉刚」《中华民族是一体》，日本在中国本部、周边等的概念区别目标进行分裂中国，顾颉刚的核心观点是，虽然有不同的族群，但是几千年的同居过程中，在血缘上融为一体。「费孝通」作为人类学家，认为真正到公共政策的事实上有问题；提到在文化语言上，首先要承认不同民族上的差异；然后再去讨论统一的概念，<strong>「多元一体」</strong>。</p><p>动机不一样，一个要解决外在危机，一个看到了这种可能带来的问题。文化的同质性处理不当，可能带来冲突。</p></li><li><p>第二：没有理性的考量，那么培育出来的公民，常出现<strong>「热情有，理性不足」</strong>的情况；我们在抵制日本，却表现为损害同胞的日本车？再比如，阿仑特《耶稣撒冷的艾希曼》（以色列警察在阿根廷逮捕了艾希曼，阿仑特全程跟进审判；一方面，提出了「平庸的恶」。历史叙事角度，不同于反犹问题的角度——发现了一个事实，很多犹太中层的人参与到了对于犹太人的屠杀。另一方面，一个重要的哲学思考，仅仅从受害人的视角来讲述这段历史，优势在于民族的苦难中唤醒认同，但是这种激情有理性无的状态中无助于境遇的改善。【类似于哈贝马斯，历史塑造】），文化认同中情感的问题；最后得出马克思在《论犹太人问题》中的论述，犹太人境遇的改善就要求他们参与到政治中。</p><blockquote><p>总而言之，如果用一句话概括犹太人的主要问题（并非全部问题，因为犹太教与基督教的冲突等也是问题），那就是政治上无权，以及利己主义精神在犹太人群体中的普遍存在。——摘自知乎 <a href="https://zhuanlan.zhihu.com/p/52233277" class="uri">https://zhuanlan.zhihu.com/p/52233277</a></p></blockquote></li></ul><h3 id="政治认同宪法认同">政治认同/宪法认同</h3><p><img src="16101235461078.jpg" /></p><p>政治认同，最主要的来源是「启蒙运动」。</p><p>主要是<strong>英国和法国</strong>。国家认同不同于文化认同，这种逻辑完全以理性来展开：国家的建立要比没有国家，个体会生活得更好。<strong>文化认同转向政治认同</strong>。</p><p>启蒙的几点重大影响：1. <strong>国家秩序从一种主观秩序转变为客观秩序（基本权利）</strong>，对于公民美德的忽略；2. 公民是国家的主权者，另一方面又是服从国家统治的个体，<strong>联结这两个身份的中介是政府</strong>。一方面贯彻主权者的意志，另一方面要对个体进行统治。</p><p>共同体和个体之间的关系讨论，关注于共同体（政府）能够做什么，而苏格拉底「何为好的生活」式的问题则被忽略了。</p><p>【这是英法启蒙的视角，而苏格兰启蒙的视角则完全不同。】</p><p><img src="16101235566093.jpg" /></p><p><strong>宪法爱国主义</strong>，把文化问题转化为民族问题。通过宪法包容少数族的差异。政治认同来弥补文化认同的问题；<strong>核心是宪法认同</strong>；从情感联系到理性视角来理解国家和公民的关系。</p><p>（真正借助于宪法、借助于权力）最早的实践是（二战后）德国。正是因为对于特定民族的偏好造成了这样的一场灾难，所以凭借此再无法构建认同。因此，宪法爱国主义，<strong>借助于宪法、借助于基本权力</strong>构建认同。<strong>「斯登贝格」</strong>，宪法秩序本身就是祖国的一种表现形式，解决掉了差异性的问题，从文化认同到宪法/政治认同，把差异性的文化变为对于宪法的共同认同。<strong>保护性宪法爱国主义</strong>，防止民族偏好/伦理共同体所导致的极端民族主义。</p><p>此后，哈贝马斯，怎样在欧洲共同体上构架政治认同体？核心的是<strong>公民身份替代民族身份</strong>。宪法认同来构建公民和共同体之间的关系。</p><p>宪法爱国主义可能的问题：人作为理性的对象，简单化处理？</p><p>第一个问题，美国是一个典型的宪法爱国主义的表彰。仅仅把个体和共同体建立在权力的基础上，第一可能导致<strong>「权力幻象」</strong>，把一切道德变为权力，复杂的道德转化到权力话题，限制公共对话/道德对话的范畴，并且使对话陷入僵局。20 世纪末，哈佛 Glendon，堕胎和离婚问题，对比西方和美国，美国全部还原为权力问题，两种权力的对抗，女性主宰自己身体的权力和胎儿的生命权，讨论停止不前；而福利的北欧国家，讨论的是生命价值的实现，以及儿童保护、公共卫生的讨论，涉及到更为广阔的背景，关注什么才是对社会、对国家更为有效的。【老师的一本译著中，「不妥协的抵抗权」，<strong>不合作</strong>的实证品质，不合作，无外乎两种形态：1. 政府要求公民几乎是英雄的；2. 还原为权力问题】</p><p><img src="16101235623703.jpg" /></p><p>第二点，<strong>「一种没有国家的理论」</strong>。1. 赋予阶层「用脚投票」，通过全球化来形成认同（往外走）；2. 贫穷阶层，转向地方社群（往下走）。国家仅仅是构建国家的一个阶段，完全被架空了。</p><p><img src="16101235680809.jpg" /></p><p><img src="16101235743146.jpg" /></p><p>解决这些问题的方案，还是（宪法）文化。</p><p><img src="16101235801463.jpg" /></p><p>宪法爱国主义还是两部分组成：1. 普遍的规范，以全力保障为基础，建立在所有人都被看做自由平等的个体来对待，约束族群文化带来的排斥性问题；2. 然而可能带来国家消亡的问题，宪法的特殊性没有得以实现。有<strong>作为特殊性补充的宪法文化</strong>。是什么样的动机使我们认为每个人是平等的？——<strong>道德动机</strong>，认为其是每个国家都是不同的，使得不至于走向「世界大同主义」。一方面，宪法规范的道德动机的原因不同；另一方面，道德动机（宪法规范）所呈现的样态也不同。</p><p>核心观点：规定一个国家宪法精神以及宪法认同的，还是这个国家的特定文化，而普遍性的宪法认同仅仅是为了避免（文化认同）可能带来的问题。</p><p><strong>宪法文化如何得以产生？</strong>同哈贝马斯 50 年代和德国历史学家的争论，……强调客观性，后者带着反思性。不仅界定了过去，还在这一过程中反思性的构想未来，决定了如何走向。</p><p>问题在于，历史文化，如何融入到普遍性的<strong>宪法规范/道德规范/动机</strong>？首先，哈贝马斯的<strong>「公共商谈」</strong>，以达成<strong>「重叠共识」</strong>，通过这一共识所展现出来的就是我们的宪法文化。第一方面，借助重叠共识，通过商谈来确认我们的宪法。</p><p>第二方面，历史叙事本身使我们构建共识（fuke，话语表达可以构建），宪法本身……稳定性，一个国家的宪法是古老的（苏格兰启蒙，传统本身就是正当性）。宪法本身可以作为历史叙事，可以讲述国家，构建当下……未来。宪法修饰中「我们人民」，借助于这样的叙事，从民族的历史中，让人民感受到我们是政治规划的参与者，宣誓主权的画面，构建了一个独特的个体但是可以获得不朽的意义。</p><p>中国的现实语境的复杂性，我们在还没有完成现代化的过程中，要同步地应对后现代的问题（仅仅强调权力所带来的问题）。所以不是要弱化谁，而是要在这一过程中，思考我们和共同体之间的关联。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 公民 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mendeley 使用笔记</title>
      <link href="/posts/64f630a8/"/>
      <url>/posts/64f630a8/</url>
      
        <content type="html"><![CDATA[<p>【这篇文章写于这学期初，总结了使用 Mendeley 管理文献的一些技巧和问题；总的来说算是自己在文献管理上的第一次尝试，实际上 Mendeley 的表现还是很棒的；然而由于同步的问题，最终使我放弃了这款软件转而投入 Zotero 的怀抱，详情参见 <a href="mweblib://16051935423705">20201110 Mendeley 转 Zotero 记</a>。】</p><span id="more"></span><p>从大二下开始接触到文献管理软件，走了很多的弯路，也一直没能坚持下来；自己大概是一个工具论执迷不悟的人了，对于电子化的任何事物都意图找到最为舒适的状态，才有可能坚持下去（但更多会是半途而废吧😷）；零零总总下来，也算是尝试过很多的方案，用下来比较省心的是 Mendeley，下面总结一下相关使用技巧，有了这些方法论也希望自己能多看看论文吧。</p><h3 id="论文导入">论文导入</h3><p>这一部分其实倒并不是难点，主要的可选方式包括</p><ul><li>手动拖拽下载好的论文，也是很常用的</li><li>左上角的 <code>Add</code>，也可能直接监测文件夹</li><li>浏览器插件导入</li><li>在没有 PDF 的情况下添加 entry</li></ul><p>相关的内容网上有很多中文版教程，例如 <a href="https://zhuanlan.zhihu.com/p/65992720" class="uri">https://zhuanlan.zhihu.com/p/65992720</a> 就有比较详细的介绍，不多说</p><h3 id="文件管理-file-organizer">文件管理 File Organizer</h3><p>对我来说更关注的应该是文件管理，不去论 Mendeley 提供的同步功能（之前说是给 2G 的免费空间？），其实本地存储才是比较关键的。</p><p>这个问题之前困扰了很久，然后找到了这里 <a href="http://blog.baoduge.com/Mendeley/" class="uri">http://blog.baoduge.com/Mendeley/</a> 的解决方案，可以清楚地将文件汇总到同一个目录下。</p><p>具体的方案是：勾选 <code>Preferences-File Organizer-Organize my files</code> ，这样可以将所有的文献复制到该文件夹下，点 <code>Tidy up</code> 可以将之前未放置在该文件夹下的附件备份到此目录下（之后在软件内阅读的时候，<code>Details</code> 中的 File 就指向这里了）；这样默认是展开放在同一个文件下中，下面的两个选项可以对文件进行分类，或者重命名。</p><p>此后从其他地方拖动 PDF 到 Mendeley 时，会自动复制到该目录下。</p><p><strong>这样做的好处是</strong>，将所有的阅读/待阅读论文放在一起，方便检索和查阅，可以结合如 Dropbox 等实现备份；对我来说比较有用的，就是不会出现整理文件夹之后，原本链接到的地址失效从而找不到文件的尴尬。</p><p>当然，<strong>也存在着一些弊端</strong>，这样的本地备份机制显然是不优雅的，我觉得更为合理的应该是 <strong>替换原本的 PDF 文件为 Alias</strong> （和下面的结合起来，从而直接在项目文件夹中用默认 PDF 阅读器打开论文）。</p><h3 id="pdf-阅读标注">PDF 阅读标注</h3><p>Mendeley 默认提供了一些标注方案，但是使用体验还是一般，可以从 论文条目或者 Detail-FIles 右键 <code>Open file extenrnally</code> 用默认 PDF 阅读器打开。这似乎也是 Mendeley 被诟病的一个缺点所在，无法设置为点击用默认阅读器打开。</p><p>默认标注的问题在于：1. 使用体验一般，划线的时候有点飘；2. 软件内部标记，似乎要 output 之后才能保存到 PDF 文件上，也就是说如果用外部阅读器是看不到这里的标记的。</p><p>现在的还是在 PDF Expert 中打开文件，阅读标记，测试之后发现在 Mendeley 是支持这些标记的，但是只能查看无法识别和修改。</p><blockquote><p>在网上找到了一个替代的方案，用 Automator 建立一个 Quick Action，然后到 Mendeley 中用快捷键打开 <a href="https://gist.github.com/vertesy/0dda3bf36ff165739941d6abc9b50b9a" class="uri">https://gist.github.com/vertesy/0dda3bf36ff165739941d6abc9b50b9a</a> （代码用的是这一份，详细的教程见 <a href="http://biogeolabs.uchicago.edu/sedie/?p=4363" class="uri">http://biogeolabs.uchicago.edu/sedie/?p=4363</a> 不过这里的代码有一点问题）。尝试了一下，反应比较慢而且不知道为什么 arrow-down 两次之后会停下来，常常会失败，也就不去研究了，右键两步打开反而更快。</p><p>不过这算是第一次在 macOS 下接触 Workflow，虽然失败了但是很有意思。</p></blockquote><h3 id="多余的话">多余的话</h3><p>引用 <a href="http://blog.baoduge.com/Mendeley/" class="uri">http://blog.baoduge.com/Mendeley/</a> 的一段话，Mendeley 仅仅是一个文件管理软件，它并不完美，而真正强大的，应该是自己的阅读和输出；对于工具的追求是无止尽的，而因为千人前面的需求不可能得到真正完美的体验，应该更多地把时间花在论文阅读本身。</p><blockquote><p>Mendeley十分强大，<strong>但是它并不完美</strong>。 知乎上的一个回答我觉得说得十分棒，最好的文献整理方法还是自己看完文献之后的Notes。我个人喜欢用Sublime Text 3 + Excel（当然你可以用更高级的Tool）整理自己的读后感。工具永远只是工具，只有花时间去<strong>看文献</strong>才是最直接的办法。</p></blockquote><p>其他可能有用的资源</p><ul><li>同一个作者的 Sublime 写作方案 <a href="http://blog.baoduge.com/Use_ST3_manage_reference/">Neverland|用Sublime Text 3管理文献</a></li><li>Mendeley 官方的教程 <a href="https://www.mendeley.com/guides" class="uri">https://www.mendeley.com/guides</a></li><li>一些讨论 <a href="https://yukunwu.wordpress.com/2017/07/14/mendeley-qa/">mendeley软件问答</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 笔记 </tag>
            
            <tag> Mendeley </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次 macOS type-C 口失效 &amp; 重制 SMC 与 NVRAM</title>
      <link href="/posts/d64397e1/"/>
      <url>/posts/d64397e1/</url>
      
        <content type="html"><![CDATA[<p>【失效可能的原因：一个拓展坞不小心进水了，连接过程出现显示器闪屏，可能有短路？之后这个口就失效了】</p><p>知乎上有<a href="https://zhuanlan.zhihu.com/p/71055741">同样的问题</a>，给出了</p><ul><li><a href="https://support.apple.com/zh-cn/HT201295">重置 SMC</a></li><li><a href="https://support.apple.com/zh-cn/HT204063">重置 NVRAM 和 PRAM</a> 和</li><li><a href="https://support.apple.com/zh-cn/HT202731">使用诊断</a> 三种官方给定方案。</li></ul><h3 id="重制-smc系统管理控制器">重制 SMC（系统管理控制器）</h3><p>我重置了一次 SMC 即解决了问题：在关机状态下长按 <code>Shift+Control+Option+电源键</code> 会亮一下图标；等待十秒之后再开机即可。【根据是否有 T2 芯片似乎要分别按左右 Shift，详见官方教程】 摘录 <strong>系统管理控制器 (SMC)</strong> 的作用：电源，包括电源按钮和 USB 端口的电源；电池和充电；风扇和其他热能管理功能；指示灯或感应器，例如状态指示灯（睡眠状态、电池充电状态等）、突发移动感应器、环境光传感器和键盘背光；打开和合上笔记本电脑盖时的行为。 简而言之，SMC 对应的是 <strong>与睡眠、唤醒、电源、为 Mac 笔记本电脑电池充电有关的问题或其他与电源相关的症状</strong>。</p><h3 id="重置-nvram-和-pram">重置 NVRAM 和 PRAM</h3><p>顺便摘录 NVRAM 和 PRAM 的作用： 「NVRAM（非易失性随机访问存储器）是一小部分内存，Mac 使用这些内存来储存某些设置并对其进行快速访问。PRAM（参数 RAM）储存着类似的信息，且 NVRAM 和 PRAM 的重置步骤相同。 可储存在 NVRAM 中的设置包括音量、显示屏分辨率、启动磁盘选择、时区，以及最近的内核崩溃信息。储存在 NVRAM 中的设置取决于您的 Mac 以及与这台 Mac 搭配使用的设备。 如果您遇到与这些设置或其他设置有关的问题，那么重置 NVRAM 可能会有帮助。例如，如果 Mac 并非从“启动磁盘”偏好设置中选定的磁盘启动，或者在 Mac 启动前短暂地显示了一个问号图标，则可能需要重置 NVRAM。」 重置的方法是在关机状态下长按 <code>Option+Command+P+R</code> 约 20 秒。</p><p>另外摘录使用「系统诊断」的方法：Intel CPU 的电脑是在启动时长按 <code>D</code> 键进入。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple </tag>
            
            <tag> macOS </tag>
            
            <tag> NVRAM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MWeb 入门指南</title>
      <link href="/posts/c94c1e96/"/>
      <url>/posts/c94c1e96/</url>
      
        <content type="html"><![CDATA[<p>兜兜转转，从原本对于 <code>Typora</code> 的死忠，尝试了几个不同的 Markdown 编辑器，终于又是回到了 MWeb 的怀抱中。在此记录 Mweb 的使用技巧和相关资源。</p><p>今天花了一整个下午研究 <code>MWeb</code> 并撰写本文，将 MWeb 的使用逻辑理顺了，并成功完成 发布服务和图床 的相关配置，另花了很多时间看完了官网上的文档，收获很大。</p><span id="more"></span><p>目前明确了如何使用 MWeb，包括：1. 灵感整理，用到 MWeb 的「快速笔记」；2. 笔记功能，定位和 Notion 有一些重叠之后再考虑；3. 文档书写与输出，最为重点也是 MWeb 处理最好的部分。最后，关于使用 MWeb 生成自己的静态网络/博客的部分，还有很大的研究空间，暂且搁置留待日后成文。</p><h2 id="mweb-官方文档汇总">MWeb 官方文档汇总</h2><p>MWeb 的网址在 <a href="https://zh.mweb.im/">这里</a> ；文档的质量也极其高，这里摘录文档列表和摘要：</p><ul><li>MWeb 的基本使用 <a href="http://zh.mweb.im/15303606797118.html" class="uri">http://zh.mweb.im/15303606797118.html</a> 介绍了文档库、外部模式、标签等基本内容；</li><li>Markdown 语法 <a href="http://zh.mweb.im/markdown.html" class="uri">http://zh.mweb.im/markdown.html</a> 非常严谨，支持 GFM 语法并拓展了很多画图的功能，之后画流程图可参考 ##</li><li>Markdown 辅助 <a href="http://zh.mweb.im/15303597337753.html" class="uri">http://zh.mweb.im/15303597337753.html</a> 介绍了图片大小缩放、对齐、LaTeX 预览等功能，emm 自己还是更喜欢 Typora 的编辑体验但已经非常棒了；</li><li>Markdown 输出 <a href="http://zh.mweb.im/15303673435460.html" class="uri">http://zh.mweb.im/15303673435460.html</a> 支持导出为 <strong>图片、HTML、Epub、PDF、RTF和Docx</strong> 等格式；「复制为富文本」选项可以将 Markdown 文档到粘贴到 <strong>邮件（mail.app）、Pages.app、Word.app</strong> 等中直接粘贴使用；</li><li>MWeb 的发布服务介绍 <a href="http://zh.mweb.im/15303685987267.html" class="uri">http://zh.mweb.im/15303685987267.html</a> 支持 <strong>Wordrpess、支持 Metaweblog API 协议的服务、Wordpress.com、印象笔记、Blogger、Medium、Tumblr 和为知笔记</strong> 这也太良心了；<ul><li>其中 Metaweblog 常用网站包括 cnblogs, oschina, 51cto, typecho 博客等；</li><li>图床和发布服务的列表支持导出操作；</li></ul></li><li>MWeb 的图片上传服务介绍 <a href="http://zh.mweb.im/15303740497765.html" class="uri">http://zh.mweb.im/15303740497765.html</a> 支持 <strong>Google Photos、Imgur、七牛云、又拍云和自定义的图床服务</strong>；这里是我最爱的 MWeb 地方，详见下一节；</li><li>MWeb 文档库详细介绍 <a href="http://zh.mweb.im/mweb-library.html" class="uri">http://zh.mweb.im/mweb-library.html</a> 这篇文档也非常赞，介绍了 <strong>文档结构与存储、分类树、文档间引用、文档排序、使用标签、大纲视图、导入导出、全键盘导航、相关问题</strong> 等 ###<ul><li>大爱 MWeb 的又一点正是其开放的文档结构，除了一些软件内容使用的数据库，存储结构完全是透明化的，我们所关心的文件位置、图片存放位置等完全可以看到；</li><li>由于内部数据和文档库是存放在同一个位置的，这给 <strong>文档库备份、同步和恢复带来了极高的便利性</strong>（当然软件本身提供了三个备份方案）；例如，我可以非常方便地使用 Synology Drive 在两台电脑上同步；在新设备上使用，安装完成后直接设置文档库所在位置即可无障碍使用；</li><li>关于安全性问题，作者指出「通常两处就不会有问题了。只要把一处设置在有历史记录的网盘中，另一处设置在其它硬盘的位置，或者不设置，也是可以的。但是建议务必设置一个位置在有历史记录功能的网盘中，或者是像时间机器这种设备中，因为文档库总是与备份位置同步的。」</li><li>在「分类树的使用方法」「文档排序」「全键盘导航」等章节，作者所介绍的功能非常细致，但却体现了开发者对于用户需求之关注，看到之后真的让人动容；（文档排序部分的逻辑还没有理清，有机会再看看看 hhh）##</li><li>关于「文档库的导入和导出」，支持将外部的 Markdown 文件夹整体导入；另外还支持将整个文档库导出为 Epub 和 PDF！</li></ul></li><li>快速笔记 <a href="http://zh.mweb.im/15303794142935.html" class="uri">http://zh.mweb.im/15303794142935.html</a> 「此功能默认是关闭的，因为要占用宝贵的状态栏上的一个位置」，还有比这更良心的开发者吗？可以在设置中设定多少时间间隔生成一个新的文档，例如三天，在这个间隔内的所有「快速笔记」被存放在同一个文档中，每次提交的内容会以提交的时间为标题进行划分；</li><li>快速搜索 <a href="http://zh.mweb.im/15303804636963.html" class="uri">http://zh.mweb.im/15303804636963.html</a> 使用 <code>CMD+O</code> 进行全局搜索；</li><li>MWeb 外部模式详细介绍 <a href="http://zh.mweb.im/15304187309476.html" class="uri">http://zh.mweb.im/15304187309476.html</a> 这个功能应该是为了照顾例如我这种从 Typora 转过来的人，不过已经准备将外部的这些文件全部放到 MWeb 中管理了；</li><li>MWeb 生成静态网站 &amp; 博客 &lt;<a href="http://zh.mweb.im/mweb-static-blog.html" class="uri">http://zh.mweb.im/mweb-static-blog.html</a>≥ 介绍了 <strong>两种文章类型（文章和页面）、网站拓展设置、文档拓展、设置网页主菜单、添加阅读更多注释</strong> 等内容；</li><li>自定义或制作自己的静态网站模板 <a href="http://zh.mweb.im/make_your_site_template.html" class="uri">http://zh.mweb.im/make_your_site_template.html</a> ###<ul><li>介绍了 MWeb 静态网站的生成过程、如何自定义网站模板，以及所有变量参考，日后技能点加上了之后再去琢磨……</li></ul></li></ul><h2 id="图片管理">图片管理</h2><p>关于 Markdown 的图片管理一直是一件非常头疼的事情，尝试了一下之后发现 MWeb 处理地简直无敌。下面介绍 <a href="http://zh.mweb.im/15303740497765.html">MWeb 的图片上传服务介绍</a> 这一篇文档中给出的方案：</p><p>在「文档库」模式下不需要配置，软件会自行进行本地图片管理；下面的两种模式主要针对的是「外部模式」下的配置。</p><ul><li>第一，插入图片后自动上传至图床，仅支持「外部模式」；但作者也不建议使用，「主要是万一图床挂了或者是什么问题，比较麻烦」；</li><li>第二种方案是「插入图片后复制一份到文档所在的相对位置」，这一模式支持图片预览</li></ul><blockquote><p>这里举个例子说明一下，比如说引入的文件夹为 folder，在 folder/sub/sub2/sub3/doc.md 这个位置的文档插入图片，如果是 “绝对位置”，图片会保存在 fodler/media 下，生成的 Markdown 为 <code>![](/media/pic.jpg)</code>；而 “相对位置”，则会保存在 folder/sub/sub2/sub3/media 下，生成的 Markdown 为 <code>![](media/pic.jpg)</code>。“绝对位置” 这个设置其实是为了支持 Hexo、Octpress、Jekyll 等静态博客的 Markdown 文档能文件用 MWeb 编辑。</p></blockquote><p>更常用的是「文档库」模式，图片是本地管理的，因此需要考虑的是发布，也即「把文档中的本地图片上传至图床」；这里明确地将本地图片和在线图床的功能区分开来了，我之前在 <a href="https://www.cnblogs.com/easonshi/p/13205857.html">Markdown 新解决方案：Typora+本地备份+GitHub 图床</a> 和<a href="https://www.cnblogs.com/easonshi/p/13877870.html">【NAS】搭建 Chevereto 图床 &amp; Typora 上传指南</a> 两份方案中纠结的问题正在于此，这里得到了非常合理的解决。</p><ul><li>粘贴之后，图片本地化管理，解决了预览速度和可能的图床出错的问题；复制或拖动放入的图片会默认存放在 <code>docs/media</code> 中，基于不同 md 文件的 id，存放在相应名字的子文件夹中；</li><li>在编辑器中删除图片链接不会丢失这个图片，想要彻底删除，可以点击该图片，选择「彻底删除」；（只删除链接的话，相当于保留了一个没有出现在文档中的图片资源，但我们可以通过指向这个图片的链接在使用它，例如将其设置为网站的 icon）</li></ul><p>还有一个之前非常纠结的问题，在图片本地化管理之后，如何将文档发布到不同的平台？之前的想法是统一采用 Markdown 格式，例如 CNblogs 支持的 Markdown 编辑器，但这里的问题就在于，需要将本地的图片链接转化为图床的格式，事实上我在之前的那个「解决方案」中就提到了这一问题，甚至想要在本地备份两个分别是本地图片链接和图床链接的文件——当然这无疑是极为笨拙不优雅的。</p><p>而 MWeb 直接解决了这一问题，软件自动将 Markdown 文档转化为富文本（HTML？不太清楚）上传，图片也是直接上传到第三方平台，稳定性上更优。</p><p>在之前的问题上，没想到 MWeb 直接给出了极为优雅的方案：在发布选项的「把本地文件上传至图床，发布至微信公众号、知乎等……」选项中，<strong>支持将本地的文件上传至所选择的图床，然后复制已经替换好的 Markdown 文件或者 HTML 文本，粘贴到相应的平台即可</strong>。</p><p>今天第一次使用 MWeb，真的被惊艳到了，相信这将会是自己在之后很长一段时间内主力的记录和输出方式。下面简单介绍 MWeb 在发布服务和图床配置上的经验。</p><h2 id="发布服务">发布服务</h2><p>对于已经列出的第三方平台来说应该是比较方便的，我试了之前用过的 Wordpress.com 和 Blogger 都支持；</p><ul><li>不过 Wordpress.com 以及下面的 CNblogs 都能将图片上传至相应的服务器，而 Blogger 则仅支持上传至图床；</li></ul><h3 id="cnblogs">CNblogs</h3><p>在设置中配置 <code>Metaweblog API</code> 即可，非常简单，参见 <a href="https://www.cnblogs.com/cmi-sh-love/p/Mac-xia-ru-he-shi-yongMWEB-fa-bu-bo-ke-dao-bo-ke-y.html">Mac下如何使用MWEB发布博客到博客园</a></p><h3 id="typecho">Typecho</h3><p>同样可通过 Metaweblog API 发布到 Typecho，参见 <a href="https://icharle.com/mwebmarkdowm.html">使用 MWeb 一键发布文章到 Typecho 博客</a>。</p><p>对于未开启伪静态的网络来说，其 API 为 <a href="http://xxxx.com/index.php/action/xmlrpc" class="uri">http://xxxx.com/index.php/action/xmlrpc</a></p><h2 id="图床">图床</h2><p>一般性的第三方图床配置起来应该比较简单，网上找相应的教程即可；下面记录 MWeb 配合 Synology 自建的 Chevereto 图床，还有白嫖 GitHub 图床的经验。</p><h3 id="chevereto">Chevereto</h3><p>直接进行相应配置即可，参见 <a href="https://family.condmon.com:8443/weblog/?id=1732">MWeb 图床设置教程</a> 。</p><ul><li>API 写 <code>https://xxx.xxx.com/api/1/upload</code></li><li>POST 文件名写 <code>source</code></li><li>图片 URL 路径填 <code>image/url</code></li></ul><p>然后在 Body 中添加三个数据</p><ul><li>key: xxxxxxx</li><li>action: upload</li><li>format: json</li></ul><p>其中 API 上填写自己的网址，而 Body 中的 key 则填写 Chevereto 中「面板-设置-API 中的密钥」。</p><p>另外，按照默认配置上传是放在「访客」账户下的，因此不方便进行可视化管理，可以配置 Chevereto 进行修改，也就是把 <code>app/routes/route.api.php</code> 复制到 <code>app/routes/overrides/route.api.php</code> 并将配置中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHV\Image::uploadToWebsite(<span class="variable">$source</span>);</span><br></pre></td></tr></table></figure><p>修改为相应的用户名和相册 id，注意下面的用户名和相册 id 要填自己的，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHV\Image::uploadToWebsite(<span class="variable">$source</span>, <span class="string">&#x27;juanito&#x27;</span>, <span class="keyword">array</span>(<span class="string">&#x27;album_id&#x27;</span>=&gt;<span class="number">4</span>));</span><br></pre></td></tr></table></figure><p>上述技巧来自 <a href="https://www.sukeycz.com/course/uPic-Chevereto-imageuploads">Mac uPic-Chevereto图床配置教程</a> ；不过其中的借助 uPic 上传是多余的，只需要参考「自定义chevereto上传用户和上传相册（可选）」一节即可。</p><p>【资源】另外补充一份 Chevereto 迁移的资源，以备日后使用（希望不会用上😳）<a href="https://zorz.cc/post/chevereto-install-migration.html">chevereto的安装与迁移</a> 。</p><h3 id="github-图床">Github 图床</h3><p>由于 GitHub 需要用 PUT 方法提交文件而 MWeb 只能用 POST 方法，因此需要另想办法，<a href="https://github.com/gaop-0561/PicBed4MWeb">gaop-0561/PicBed4MWeb</a> 提供了一个方案：本地启动一个服务，接受请求代为上传。</p><p>我简单尝试了一下未能成功，可能是配置的问题，不过应该是可行的；由于自己在用 Chevereto 所以也就不折腾了。</p><h2 id="发布到-github-pages">发布到 GitHub Pages</h2><p>第一节中介绍的最后两篇文档介绍了如何使用 MWeb 生成静态网页，下面简要介绍如何将 MWeb 配合 GitHub Pages 使用完成完整的发布流程。</p><ul><li>如何使用“发布脚本”功能发布静态网站 <a href="http://zh.mweb.im/how_to_use_shell_script.html" class="uri">http://zh.mweb.im/how_to_use_shell_script.html</a> 官方给出的教程，按照教程走就行了十分流畅。</li></ul><h3 id="关于主题的选择">关于主题的选择</h3><p>自己试了几个系统自带的主题，最后选择了 <code>site-mwev-bulma</code> ，原因是包含了该主题默认包含了 分类、标签 的功能；美中不足的地方有：1. 每个文档需要手工设定 <code>eexcerpt</code> 和 <code>featured</code> 以显示简介或封面图，当然这一点也见仁见智；2. 没有自带的搜索功能。</p><h3 id="添加评论分享流量分析功能">添加评论、分享、流量分析功能</h3><p>参见 <a href="http://lsof.fun/15625029387037.html">我的博客搬家啦</a> 一文，包括 <strong>评论、分享、流量分析</strong>，可惜只有代码没有实现教程。</p><p>其中评论功能功能比较复杂自己搞了很久也不算满意，最后用的是 Disqus；分享的话比较简单直接用了 Addthis；而流量分析之前在 <a href="https://www.cnblogs.com/easonshi/">cnblogs</a> 里实践过，用的还是 Google Analytics。</p><h4 id="评论">评论</h4><p>完全是因为无知，在评论的问题上折腾了好久，尝试了 Disqus、来必力和 Gitalk，最终还是选择了 Disqus；由于周知的原因，Disqus 在国内的使用体验并不理想，另外自己在配置方面也有很多的问题；因此目前只能算是权衡之计，日后有机会再去研究。</p><p>对于静态博客的评论方案比较，可参考 <a href="https://weiweitop.fun/2019/08/10/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%AF%94%E8%BE%83%E5%8F%8A%E9%80%89%E6%8B%A9/">静态博客评论系统的比较及选择</a> ；此外，<a href="https://www.xdx97.com/article?bamId=672122394537623552">个人博客【留言功能】生命历程</a> 介绍了如何实现动手实现一个留言板。</p><ul><li>想要使用 <code>来必力</code> 的话，可以参考 <a href="https://zhuanlan.zhihu.com/p/33617273">Hexo博客优化之实现来必力评论功能</a>，按照教程成功完成安装；</li><li>关于 <code>Disqus</code> 的话，MWeb 的很多模板是自带这个拓展的，到官网完成注册之后，在「网站拓展-网站拓展设置-disqus」中填写相应的 shartname 即可；似乎本地生成的静态网站好像是不支持的（大概是需要 JavaScript？就是因为这一点导致了我后面的一系列折腾 Orz）；</li><li>我之后找了很多相关的材料，这里罗列一部分：Disqus 在一般网站上的通用引入，可以参考 <a href="https://blog.zxbing0066.com/jekyll/2014/11/12/disqus.html">Jekyll--在Github Pages中使用Disqus</a>（MWeb 的模板应该也是这么干的，只是帮我们简单实现了）；另外还有一个高阶教程 <a href="https://blog.ichr.me/post/use-disqus-conveniently/">在特殊地区科学使用 Disqus 评论系统</a>；详细介绍配置的文章有 <a href="https://www.wpchen.net/zh-hans/posts/disqus">Disqus 详细教学：让网站拥有社群网络形式的网站留言服务系统、社会化评论框</a>；</li><li>另外似乎还有一个比较火的方案是 <code>Gitalk</code> <a href="https://github.com/gitalk/gitalk">gitalk/gitalk</a>，不过似乎挺复杂的我没有实践成功；参见 <a href="https://segmentfault.com/a/1190000018072952">Gitalk评论插件使用教程</a>。</li></ul><h4 id="分享">分享</h4><p>这个非常简单，直接到 Addthis 网站 <a href="https://www.addthis.com/" class="uri">https://www.addthis.com/</a> 注册一个账户，按几下就可以得到嵌入代码，复制到对应位置即可；参考最后一篇官方文档，我试着放在 MWeb 自定义模板的 <code>footer.html</code> 中（放在 body 的最后部分），成功实现。</p><h4 id="流量分析">流量分析</h4><p>Google Analytics 对中文非常友好，注册之后填写相应的站点信息，最后即可得到代码，同样放在 <code>footer.html</code> 文件中即可。</p><p>具体步骤由于是之前注册的记不太清了，这次新增了一个站点，重新生成了一个「媒体资源」，简单记录如下（由于整个网站还是比较复杂的，涉及到很多的名词，以下方案不一定规范但至少自己是实践成功了）。</p><p>进入主界面之后，点击左下角的「管理」，在中间列「创建媒体资源」（如果注册过程中已创建好就不需要改动）；然后在「数据流」中添加一个网站即可，每一个数据流会对应一个「衡量 ID」，这个 ID 会出现在生成的流量分析代码上。然后添加该代码到模板的指定位置即可。接下来就可以愉快的玩耍 Google Analytics 了，虽然整体挺复杂的，但可玩性真的很高 hhh。</p><p>可参考 <a href="https://zhuanlan.zhihu.com/p/136378374">谷歌流量分析工具Google Analytics使用方法指南教程</a>。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MWeb </tag>
            
            <tag> Software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经济学原理 note2</title>
      <link href="/posts/a4419b67/"/>
      <url>/posts/a4419b67/</url>
      
        <content type="html"><![CDATA[<h2 id="一国收入的衡量">23. 一国收入的衡量</h2><p>由于每一次交易都有买者与卖者，所以经济中的总支出必定等于经济中的总收入。 国内生产总值（GDP)衡量经济用于新生产的物品与劳务的总支出，以及生产这些物品与劳务所赚到的总收入。更确切地说，GDP是在某一既定时期一个国家内生产的所有最终物品和劳务的市场价值。 GDP分为四个组成部分：消费、投资、政府购买和净出口。消费包括家庭用于物品与劳务的支出，但不包括购买新住房。投资包括用于新设备和建筑物的支出，也包括家庭购买新住房的支出。政府购买包括地方、州和联邦政府用于物品与劳务的支出。净出口等于国内生产并销售到国外的物品与劳务的价值（出口）减国外生产并在国内销售的物品与劳务的价值（进口）。 名义GDP用现期价格来评价经济中物品与劳务的生产。真实GDP用不变的基年价格来评价经济中物品与劳务的生产。GDP平减指数——用名义GDP与真实GDP的比率计算——衡量经济中的物价水平。 GDP是经济福利的一个良好衡量指标，因为人们对高收入的偏好大于低收入。但GDP并不是衡量福利的一个完美指标。例如，GDP不包括闲暇的价值和清洁的环境的价值。</p><h2 id="生活费用的衡量">24. 生活费用的衡量</h2><p>消费物价指数表示相对于基年一篮子物品与劳务的费用，这一篮子物品与劳务的费用是多少。这个指数用于衡量经济的物价总水平。消费物价指数变动的百分比可用于衡量通货膨胀率。 由于三个原因，消费物价指数并不是生活费用的一个完美衡量指标。第一，它没有考虑到，随着时间的推移，消费者用变得较便宜的物品替代原有物品的能力。第二，它没有考虑到因新物品的引进而使1美元的购买力提高。第三，这个指数因没有衡量物品与劳务质量的变动而被扭曲。由于这些衡量问题，CPI高估了真实的通货膨胀。 与消费物价指数一样，GDP平减指数也衡量经济的物价总水平。这两个物价指数通常同时变动，但是它们有着重大差别。GDP平减指数不同于消费物价指数，是因为它涵盖生产出来的物品与劳务，而不是用于消费的物品与劳务。因此，进口物品影响消费物价指数，但不影响GDP平减指数。此外，消费物价指数用固定的一篮子物品，而GDP平减指数一直随着GDP构成的变动而自动地改变物品与劳务的组合。 不同时间的美元数字并不代表购买力的真实差别。为了比较过去与现在的美元数字，过去的数字应该用物价指数进行调整。 各种法律和私人合同用物价指数来校正通货膨胀的影响。但是，税法只是部分地对通货膨胀实行了指数化。 当考察利率数据时，对通货膨胀的校正特别重要。名义利率是通常所公布的利率，它是储蓄账户上随着时间推移而增加的美元量的比率。与此相反，真实利率考虑到美元价值随着时间的推移而发生的变动。真实利率等于名义利率减通货膨胀率。</p><h2 id="生产与增长">25. 生产与增长</h2><p>按人均GDP衡量的经济繁荣在世界各国差别很大。世界上最富裕国家的平均收入是最贫穷国家的十倍以上。由于真实GDP增长率差别也很大，所以各国的相对地位一直在急剧变动。 一个经济的生活水平取决于该经济生产物品与劳务的能力。生产率又取决于工人所得到的物质资本、人力资本、自然资源和技术知识。 政府政策能以许多方式影响经济的增长率：鼓励储蓄和投资、鼓励来自国外的投资、促进教育、促进健康、维护产权与政治稳定、允许自由贸易以及促进新技术的研究与开发。 资本积累受收益递减的限制：一个经济拥有的资本越多，该经济从新增加的一单位资本中得到的产量的增加就越少。结果，尽管高储蓄会引起一定时期内的高增长，但是随着资本、生产率和收入的增加，增长最终会放慢。由于收益递减，在穷国资本的收益特别高。在其他条件相同时，由于追赶效应这些国家可以增长得更快。 人口增长对经济增长有多种影响。一方面，更加迅速的人口增长会通过使自然资源供给紧张和减少每个工人可以得到的资本量而降低生产率。另一方面，更多的人口也可以提高技术进步的速度，因为会有更多的科学家和工程师。</p><h2 id="储蓄投资和金融体系">26. 储蓄、投资和金融体系</h2><p>美国金融体系由各种金融机构组成，例如，债券市场、股票市场、银行和共同基金。所有这些机构的作用都是使那些想把一部分收入储蓄起来的家庭的资源流入到那些想借款的家庭和企业的手中。 国民收入账户恒等式说明了宏观经济变量之间的一些重要关系。特别是，对一个封闭经济来说，国民储蓄一定等于投资。金融机构是使一个人的储蓄与另一个人的投资相匹配的机制。 利率由可贷资金的供求决定。可贷资金的供给来自想把自己的一部分收入储蓄起来并借贷出去的家庭。可贷资金的需求来自想借款投资的家庭和企业。为了分析任何一种政策或事件如何影响利率，我们应该考虑它如何影响可贷资金的供给与需求。 国民储蓄等于私人储蓄加公共储蓄。政府预算赤字代表负的公共储蓄，从而减少了国民储蓄和可用于为投资筹资的可贷资金供给。当政府预算赤字挤出了投资时，它就降低了生产率和GDP的增长。</p><h2 id="基本金融工具">27. 基本金融工具</h2><p>由于储蓄可以赚到利息，所以今天的货币量比未来相同的货币量更有价值。人们可以用现值的概念比较不同时间的货币量。任何一笔未来货币量的现值是现行的利率既定时为产生未来这一货币量今天所需要的货币量。 由于边际效用递减，大多数人是风险厌恶者。风险厌恶者可以通过购买保险、使其持有的财产多元化，以及选择低风险和低收益的有价证券组合来降低风险。 一种资产的价值等于所有者将得到的现金流的现值。对一股股票而言，这些现金流包括红利流量以及最终出售价格。根据有效市场假说，金融市场理性地处理可获得的信息，因此股票价格总是等于企业价值的最好估算。但是，一些经济学家质疑有效市场假说，并相信非理性心理因素也影响资产价格。</p><h2 id="失业">28. 失业</h2><p>失业率是那些想要工作但又没有工作的人所占的百分比。劳工统计局每月根据对成千上万户家庭的调查计算这个统计数字。 失业率是对失去工作者的一个不完善的衡量指标。一些自称失业的人实际上可能并不想工作，而一些想工作的人在寻找工作失败后离开了劳动力队伍，从而被计算为失业者。 在美国经济中，大多数成为失业者的人在短期内找到了工作。然而，在任何一段既定时间内所观察到的大多数失业归因于少数几个长期失业者。 失业的一个原因是工人寻找最适合于他们技能与嗜好的工作需要时间。由于失业保险、政府政策旨在保护工人收入，摩擦性失业增加。 经济中总是存在某种失业的第二个原因是最低工资法。最低工资法通过把不熟练与无经验的工人的工资提高到均衡水平以上而增加了劳动供给量，并减少了劳动需求量。它所引起的过剩劳动供给代表失业。 失业的第三个原因是工会的市场势力。当工会推动有工会组织的行业的工资提高到均衡水平之上时，工会就创造出了过剩的劳动供给。 效率工资理论提出了失业的第四个原因。根据这种理论，企业发现支付高于均衡水平的工资是有利的。高工资可以改善工人的健康状况，降低工人流动率，提高工人努力程度，以及提高工人素质。</p><h2 id="货币制度">29. 货币制度</h2><p>货币这个词指人们经常用来购买物品与劳务的资产。 货币有三种职能：作为交换媒介，它提供用于进行交易的东西；作为计价单位，它提供记录价格和其他经济价值的手段；作为价值储藏手段，它提供把购买力从现在转移到未来的方式。 像黄金这样的商品货币是有其内在价值的货币：即使它不作为货币也有其价值。像纸币这样的法定货币是没有内在价值的货币：如果它不作为货币就没有价值。 在美国经济中，货币以通货和其他各类银行存款，例如支票账户的形式存在。 联邦储备，即美国的中央银行，负责管理美国的货币制度。美联储主席每隔4年由总统任命并得到国会确认，他是联邦公开市场委员会的领导人。联邦公开市场委员会约每6周开一次会，考虑货币政策的变动。 银行储户通过把他们的钱存到银行账户向银行提供资源。这些存款是银行负债的一部分。银行所有者也为银行提供资源（称为银行资本）。由于杠杆作用（为投资而借入资金）,银行资产价值较小的变动就会引起银行资本价值较大的变动。为了保护储户，银行监管者要求银行持有某种最低的资本量。 美联储主要通过公开市场操作来控制货币供给：购买政府债券增加货币供给，出售政府债券减少货币供给。美联储还可以用其他工具来控制货币供给。美联储可以通过降低贴现率，增加它对银行的贷款，降低法定准备金，或者降低准备金利率，来扩大货币供给。也可以通过提高贴现率，减少它对银行的贷款，提高法定准备金，或者提高准备金利率，来减少货币供给。 当个人在银行有存款货币，并且银行把一些存款贷出去时，经济中的货币量就增加了。由于银行体系以这种方式影响货币供给，所以美联储对货币供给的控制是不完全的。 美联储近年来确定了选择联邦基金利率作为目标的货币政策，联邦基金利率是银行向另一家银行贷款的短期利率。当美联储要实现这个目标时，它调整货币供给。</p><h2 id="货币增长与通货膨胀">30. 货币增长与通货膨胀</h2><p>经济中物价总水平的调整使货币供给与货币需求平衡。当中央银行增加货币供给时，就会引起物价水平上升。货币供给量的持续增长引起了持续的通货膨胀。 货币中性原理断言，货币量变动只影响名义变量而不影响真实变量。大多数经济学家认为，货币中性近似地描述了长期中的经济行为。 政府可以简单地通过印发货币来为自己的一些支出付款。当国家主要依靠这种通货膨胀税时，结果就是超速通货膨胀。 货币中性原理的一个应用是费雪效应。根据费雪效应，当通货膨胀率上升时，名义利率等量上升，因此，真实利率仍然不变。 许多人认为，通货膨胀使他们变穷了，因为通货膨胀提高了他们所买东西的成本。但这种观点是错误的，因为通货膨胀也提高了名义收入。 经济学家确定了通货膨胀的六种成本：与减少货币持有量相关的皮鞋成本，与更频繁地调整价格相关的菜单成本，相对价格变动的加剧，由于税法非指数化引起的意想不到的税收义务变动，由于计价单位变动引起的混乱和不方便，以及债务人与债权人之间任意的财富再分配。在超速通货膨胀时期，这些成本都是巨大的，但温和通货膨胀时期这些成本的大小并不清楚。</p><h2 id="开放经济的宏观经济学基本概念">31. 开放经济的宏观经济学：基本概念</h2><p>净出口是在国外销售的国内生产的物品与劳务的价值（出口）减去在国内销售的国外物品与劳务的价值（进口）。资本净流出是国内居民获得的国外资产(资本流出）减去外国人获得的国内资产（资本流入）。由于每一次国际交易都包括资产与物品或劳务的交换，所以一个经济的资本净流出总是等于其净出口。 一个经济的储蓄既可以用于为国内投资筹资，又可以用于购买国外资产。因此，国民储蓄等于国内投资加资本净流出。 名义汇率是两国通货的相对价格，而真实汇率是两国物品与劳务的相对价格。当名义汇率变动致使每美元能购买更多的外国通货时，可以说美元升值或者坚挺。当名义汇率变动致使每美元只能购买较少的外国通货时，可以说美元贬值或者疲软。 根据购买力平价理论，一美元（或者一单位任何一种其他通货）应该能在所有国家购买等量的物品。这种理论意味着两国通货之间的名义汇率应该反映这两个国家的物价水平。因此，有较高通货膨胀的国家的通货应该贬值，而有较低通货膨胀的国家的通货应该升值。</p><h2 id="开放经济的宏观经济理论">32. 开放经济的宏观经济理论</h2><p>两个市场是开放经济的宏观经济学的中心：可贷资金市场和外汇市场。在可贷资金市场上，真实利率的调整使可贷资金的供给（来自国民储蓄）和可贷资金的需求（来自国内投资和资本净流出）平衡。在外汇市场上，真实汇率的调整使美元的供给（来自资本净流出）和美元的需求（用于净出口）平衡。因为资本净流出是可贷资金需求的一部分，并且它为外汇市场提供了美元，所以它是联系这两个市场的变量。 减少国民储蓄的政策，例如政府预算赤字，减少了可贷资金的供给，并使利率上升。较高的利率减少了资本净流出，这又减少了外汇市场上的美元供给，导致美元升值及净出口减少。 虽然限制性贸易政策，例如进口关税或进口配额，有时因被视为一种改变贸易余额的方法而得到支持，但这些政策并不一定有这种效果。贸易限制增加了汇率既定时的净出口，从而也提高了外汇市场上的美元需求。因此，美元的价值上升，这就使国内物品相对于国外物品更昂贵。这种升值抵消了贸易限制对净出口的最初影响。 当投资者改变他们对持有一国资产的态度时，这对该国经济的后果可能是严重的。特别是，政治上的不稳定会引起资本外逃，资本外逃往往又会提高利率，并引起通货贬值。</p><h2 id="总需求与总供给">33. 总需求与总供给</h2><p>所有社会都经历过围绕长期趋势的短期经济波动。这些波动是无规律的，而且大体上是不可预测的。当衰退真的发生时，真实GDP以及有关收入、支出与生产的其他衡量指标都下降，而失业增加。 古典经济理论建立在货币供给和物价水平这类名义变量并不影响产量和就业这类真实变量这一假设的基础之上。许多经济学家认为，这个假设在长期中是正确的，但在短期中并不正确。经济学家用总需求与总供给模型分析短期经济波动。根据这个模型，物品与劳务的产量和物价总水平的调整使总需求与总供给平衡。 总需求曲线由于三个原因向右下方倾斜。第一是财富效应：较低的物价水平增加了家庭持有的货币的真实价值，这刺激了消费支出；第二是利率效应：较低的价格减少了家庭需要的货币量，随着家庭试图把货币转变为有利息的资产，利率下降了，这刺激了投资支出；第三是汇率效应：当较低的物价水平降低了利 率时，外汇市场上美元贬值，这刺激了净出口。 在物价水平既定时任何一种增加消费、投资、政府购买或净出口的事件或政策都会增加总需求。在物价水平既定时任何一种减少消费、投资、政府购买或净出口的事件或政策都会减少总需求。 长期总供给曲线是垂直的。在长期中，物品与劳务的供给量取决于经济中的劳动、资本、自然资源和技术，但不取决于物价总水平。 本章提出了三种理论用以解释短期总供给曲线向右上方倾斜。根据黏性工资理论，未预期的物价水平下降暂时增加了真实工资，这使企业减少就业和生产。 根据黏性价格理论，未预期的物价水平下降使一些企业的价格暂时升高，这就降低了它们的销售，并使它们削减生产。根据错觉理论，未预期的物价水平下降使供给者错误地相信，它们的相对价格下降了，这就使它们减少生产。所有这三种理论都意味着，当实际物价水平与人们预期的物价水平背离时，产量就会与自然产量率背离。 改变经济生产能力的事件，例如劳动、资本、自然资源或技术的变动，都会使短期总供给曲线移动（而且也会使长期总供给曲线移动）。此外，短期总供给曲线的位置还取决于预期的物价水平。 经济波动的一个可能原因是总需求的移动。例如，当总需求曲线向左移动时，短期中产量和物价就会下降。随着时间的推移，当预期物价水平的变动引起工资、物价和感觉进行调整时，短期总供给曲线就会向右移动，并使经济在一个新的、较低的物价水平时回到其自然产量率。 经济波动的第二个可能原因是总供给的移动。当短期总供给曲线向左移动时，效应是产量减少和物价上升——这种结合称为滞胀。随着时间的推移，当工资、物价和感觉进行了调整时，短期总供给曲线向右移动，使物价水平和产量回到其原来的水平。</p><h2 id="货币政策和财政政策对总需求的影响">34. 货币政策和财政政策对总需求的影响</h2><p>在建立短期经济波动理论时，凯恩斯提出了流动性偏好理论来解释利率的决定因素。根据这种理论，利率的调整使货币的供求平衡。 物价水平上升增加了货币需求，提高了使货币市场均衡的利率。由于利率代表借款的成本，所以较高的利率减少了投资，从而减少了物品与劳务的需求量。向右下方倾斜的总需求曲线表明了物价水平与需求量之间的这种负相关关系。 决策者可以用货币政策影响总需求。货币供给的增加降低了物价水平既定时的均衡利率。因为较低的利率刺激了投资支出，所以总需求曲线向右移动。相反，货币供给减少提高了物价水平既定时的均衡利率，使总需求曲线向左移动。 决策者还可以用财政政策影响总需求。政府购买增加或减税可以使总需求曲线向右移动。政府购买减少或增税可以使总需求曲线向左移动。 当政府改变支出或税收时，所引起的总需求变动可能大于或小于财政变动。乘数效应往往扩大财政政策对总需求的影响。挤出效应往往减少财政政策对总需求的影响。由于货币政策和财政政策可以影响总需求，所以政府有时用这些政策工具来试图稳定经济。经济学家对政府应该如何积极地进行这种努力的看法并不一致。根据积极稳定政策支持者的看法，家庭和企业态度的改变使总需求变动，如果政府不对此作出反应，结果就是产量与就业的不合意及其不必要的波动。根据积极稳定政策批评者的看法，货币政策与财政政策发生作用都有相当长的时滞，以至于稳定经济的努力往往以不稳定告终。</p><h2 id="通货膨胀与失业之间的短期权衡取舍">35. 通货膨胀与失业之间的短期权衡取舍</h2><p>非利普斯曲线描述了通货膨胀和失业之间的负相关关系。通过扩大总需求，决策者可以在菲利普斯曲线上选择较高通货膨胀和较低失业的一点。通过紧缩总需求，决策者可以在菲利普斯曲线上选择较低通货膨胀和较高失业的一点。 非利普斯曲线所描述的通货膨胀与失业之间的权衡取舍只在短期中成立。在长期中，预期通货膨胀根据实际通货膨胀的变动进行调整，而短期菲利普斯曲线也会移动。因此，长期菲利普斯曲线是通过自然失业率的一条垂线。 短期菲利普斯曲线也会由于总供给冲击而移动。不利的供给冲击，例如世界石油价格的上升，给了决策者一个较为不利的通货膨胀和失业之间的权衡取舍。也就是说，在不利的供给冲击之后，决策者不得不在失业率既定时接受较高的通货膨胀率，或者在通货膨胀率既定时接受较高的失业率。 当美联储紧缩货币供给增长以降低通货膨胀时，它使经济沿着短期菲利普斯曲线移动，这就引起暂时的高失业。反通货膨胀的代价取决于通货膨胀预期下降的速度。一些经济学家认为，可信任的低通货膨胀承诺可以通过引起预期的迅速调整而降低反通货膨胀的代价。</p><h2 id="宏观政策的六个争论问题">36. 宏观政策的六个争论问题</h2><p>积极货币政策与财政政策的支持者认为，经济本质上是不稳定的，并相信政府可以管理总需求，以便抵消内在的不稳定性。积极货币政策与财政政策的批评者强调，政策对经济的影响存在时滞，而且我们预期未来经济状况的能力是很差的。因此，稳定经济的努力可能以使经济不稳定而告终。 增加政府支出以应对衰退的支持者认为，由减税可以用于储蓄而不是支出，直接的政府支出能更多地增加总需求，这是促进生产和就业的关键。增加支出的批评者认为，减税既可以扩大总需求又可以扩大总供给，而且政府支出迅速增加会引起浪费性的公共项目的产生。 货币政策规则的支持者认为，相机抉择的政策会饱受缺乏能力、滥用权力和政策前后不一致性之苦。货币政策规则的批评者认为，相机抉择的政策在对变化着的经济环境作出反应时较为灵活。 零通货膨胀目标的支持者强调，通货膨胀有许多成本，而且即使有好处也很少。此外，消除通货膨胀的代价——压低产量和就业——只是暂时的。如果中央银行宣布一项可信的降低通货膨胀的计划，从而直接降低通货膨胀预期，那么甚至连这种代价也可以减少。零通货膨胀目标的批评者认为，温和的通货膨胀给社会只带来很小的成本，而降低通货膨胀所必需的衰退则代价高昂。批评者也指出了几种可以有助于经济的缓和通货膨胀的方法。 平衡政府预算的支持者认为，预算赤字通过增加子孙后代的税收并减少他们的收入而把不公正的负担加在他们身上。平衡政府预算的批评者认为，赤字只是财政政策的一小部分。只关心预算赤字会忽略诸多方面，包括各种支出计划在内的财政政策能够影响几代人的利益。 税收激励储蓄观点的支持者指出，我们的社会用许多方法抑制储蓄，例如对资本收入征收重税和减少那些积累了财富的人享有的补助。他们支持修改税法以鼓励储蓄，比如把所得税改为消费税。税收激励储蓄观点的批评者认为，许多刺激储蓄的变动主要是使富人受益，而这些富人并不需要减税。他们还认为，这种变化对私人储蓄只有微小的影响。通过降低政府预算赤字来增加公共储蓄可以提供更直接、更平等地增加国民储蓄的方法。</p><h2 id="术语表">术语表</h2><p>总需求曲线（aggregate-demand curve)表示在每一种物价水平时，家庭、企业、政府和外国客户想要购买的物品与劳务数量的曲线。 总供给曲线（aggregate-supply curve)表示在每一种物价水平时，企业选择生产并销售的物品与劳务数量的曲线升值（appreciation)按所能购买到的外国通货量衡量的一国通货的价值增加。 自动稳定器（automatic stabilizers)当经济进入衰退时，决策者不必采取任何有意的行动就可以刺激总需求的财政政策变动。 贸易平衡（balanced trade)出口等于进口的状况。 银行资本（bank capital)银行所有者投入机构的资源。 债券（bond)一种债务证明书预算赤字（budget deficit)政府支出引起的税收收入短缺。 预算盈余（budget surplus)税收收入大于政府支出的余额。 资本外逃（capital flight)一国资产需求大量且突然地减少资本需要量（capital requirement)政府规定的最低银行资本量。 追赶效应（catch-up effect)开始时贫穷的国家倾向于比开始时富裕的国家增长更快的特征。 中央银行（central bank)为了监管银行体系和调节经济中的货币量而设计的机构。 古典二分法（classical dichotomy)名义变量和真实变量的理论区分。 封闭经济（closed economy)不与世界上其他经济相互交易的经济。 集体谈判（collective bargaining)工会和企业就就业条件达成一致的过程。 商品货币（commodity money)以有内在价值的商品为形式的货币。 复利（compounding)货币量的累积，比如说银行账户上货币量的累积，即赚得的利息仍留在账户上以赚取未来更多的利息。 消费物价指数（consumer price index,CPI)普通消费者所购买的物品与劳务的总费用的衡量指标。 消费（consumption)家庭除购买新住房之外用于物品与劳务的支出。 挤出（crowding out)政府借款所引起的投资减少。 挤出效应（crowding-out effect)当扩张性财政政策引起利率上升，从而减少了投资支出时所引起的总需求减少。 通货（currency)公众手中持有的纸币钞票和铸币。 周期性失业（cyclical unemployment)失业率对自然失业率的背离。 活期存款（demand deposits)储户可以通过开支票而随时支取的银行账户余额。 贬值（depreciation)按所能购买到的外国通货量衡量的一国通货的价值减少。 萧条（depression)严重的衰退。 收益递减（diminishing returns)随着投入量的增加，每一单位额外投入得到的收益减少的特性。 贴现率（discount rate)美联储向银行发放贷款的利率。 丧失信心的工人（discouraged workers)想工作但已放弃寻找工作的人。 多元化（diversification)通过用大量不相关的小风险代替一种风险来降低风险。 效率工资（efficiency wages)企业为了提高工人生产率而支付的高于均衡水平的工资。 有效市场假说（efficient markets hypothesis)认为资产价格反映了关于一种资产价值的所有公开的、可获得的信息的理论。 出口（exports)国内生产而在国外销售的物品与劳务。 联邦基金利率（federal funds rate)银行向另一家银行进行隔夜贷款时的利率。 联邦储备（Federal Reserve,Fed)美国的中央银行。 法定货币（fiat money)没有内在价值、由政府法令确定作为通货使用的货币。 金融学（finance)研究人们如何在某一时期内做出关于配置资源和应对风险的学科。 金融中介机构（financial intermediaries)储蓄者可以借以间接地向借款者提供资金的金融机构。 金融市场（financial markets)储蓄者可以借以直接向借款者提供资金的金融机构。 金融体系（financial system)经济中促使一个人的储蓄与另一个人的投资相匹配的一组机构。 企业特有风险（firm-specific risk)只影响一个公司的风险。 财政政策（fisical policy)政府决策者对政府支出和税收水平的确定。 费雪效应（Fisher effect)名义利率对通货膨胀率所进行的一对一的调整。 部分准备金银行（fractional-reserve banking)只把部分存款作为准备金的银行制度。 摩擦性失业（frictional unemployment)由于工人寻找最适合自己嗜好和技能的工作需要时间而引起的失业。 基本面分析（fundamental analysis)为决定一家公司的价值而对其会计报表和未来前景进行的研究。 未来值（future value)在现行利率既定时，现在货币量将带来的未来货币量。 GDP平减指数（GDP deflator)用名义GDP与真实GDP的比率乘以100计算的物价水平衡量指标。 政府购买（government purchase)地方、州和联邦政府用于物品与劳务的支出。 国内生产总值（gross domestic product,GDP)在某一既定时期一个国家内生产的所有最终物品与劳务的市场价值。 人力资本（human capital)工人通过教育、培训和经验而获得的知识与技能。 进口（imports)国外生产而在国内销售的物品与劳务。 指数化（indexation)根据法律或合同对通货膨胀的影响进行货币数量的自动调整。 通货膨胀率（inflation rate)前一个时期以来物价指数变动的百分比。 通货膨胀税（inflation tax)政府通过创造货币而筹集的收入。 信息有效（informational efficiency)以理性方式反映所有可获得的信息的有关资产价格的描述。 投资（investment)用于资本设备、存货和建筑物的支出，包括家庭用于购买新住房的支出。 寻找工作（job search)在工人的嗜好与技能既定时工人寻找适当工作的过程。 劳动力（labor force)既包括就业者又包括失业者的工人总数。 劳动力参工率（labor-force participation rate)劳动力占成年人口的百分比。 杠杆（leverage)将借到的货币追加到用于投资的现有资金上。 杠杆率（leverage ratio)资产与银行资本的比率。 流动性（liquidity)一种资产兑换为经济中交换媒介的容易程度。 宏观经济学（macroeconomics)研究整体经济现象，包括通货膨胀、失业和经济增长。 可贷资金市场（market for loanable funds)想储蓄的人借以提供资金、想借钱投资的人借以借贷资金的市场。 市场风险（market risk)影响股市上所有公司的风险。 交换媒介（medium of exchange)买者在购买物品与劳务时给予卖者的东西。 菜单成本（menu costs)改变价格的成本。 微观经济学（microeconomics)研究家庭和企业如何做出决策，以及它们如何在市场上相互交易。 总需求与总供给模型（model of aggregate demand and aggregate supply) 大多数经济学家用来解释经济活动围绕其长期趋势的短期波动的模型。 货币中性（monetary neutrality)认为货币供给变动并不影响真实变量的观点。 货币政策（monetary policy)中央银行的决策者对货币供给的安排。 货币（money)经济中人们经常用于向其他人购买物品与劳务的一组资产。 货币乘数（money multiplier)银行体系用1美元准备金所产生的货币量货币供给（money supply)经济中可得到的货币量。 乘数效应（multiplier effect)当扩张性政政策增加了收入，从而增加了消费支出时引起的总需求的额外变动。 共同基金（mutual fund)向公众出售份，并用收入来购买股票与债券资产组合的机构。 国民储蓄（储蓄）[national saving(saving)]在用于消费和政府购买后剩下的一个经济中的总收入。 自然产量率（natural rate of output)一个经济在长期中当失业处于其正常率时达到的物品与劳务的生产自然失业率（natural rate of unemployment)失业率围绕它而波动的正常失业率。 自然资源（natural resources)由自然界提供的用于生产物品与劳务的投入，如土地、河流和矿藏。 自然率假说（natural-rate hypothesis)为无论通货膨胀率如何，失业最终要回到其正常率或自然率的观点。 资本净流出（net capital outflow)本国居民购买的外国资产减外国人购买的国内资产净出口（net export)外国人对国内生产的物品的支出（出口）减国内居民对外国物品的支出（进口）。 名义汇率（nominal exchange rate)一个人可以用一国通货交换另一国通货的比率。 名义GDP(nominal GDP)按现期价格评价的物品与劳务的生产。 名义利率（nominal interest rate)通常公布的，未根据通货膨胀的影响校正的利率。 名义变量（nominal variables)按货币单位衡量的变量。 开放经济（open economy)与世界上其他经济自由交易的经济。 公开市场操作（open-market operations)美联储买卖美国政府债券。 菲利普斯曲线（Phillips curve)一条表示通货膨胀与失业之间短期权衡取舍的曲线。 物质资本（physical capital)用于生产物品与劳务的设备和建筑物存量。 现值（present value)用现行利率产生一定量未来货币所需要的现在货币量。 私人储蓄（private saving)家庭在支付了税收和消费之后剩下来的收入生产物价指数（producer price index,PPI)企业购买的一篮子物品与劳务的费用的衡量指标。 生产率（productivity)每单位劳动投入所生产的物品与劳务数量。 公共储蓄（public saving)政府在支付其支出后剩下的税收收入。 购买力平价（purchasing-power parity)一种认为任何一单位既定通货应该能在所有国家买到等量物品的汇率理论。 数量方程式（quantity equation)方程式MxV=PxY把货币量、货币流通速度和经济中物品与劳务产出的美元价值联系在一起。 货币数量论（quantity theory of money)-种认为可得到的货币量决定物价水平，可得到的货币量的增长率决定通货膨胀率的理论。 随机行走（random walk)一种变量变动的路径是不可预期的。 理性预期（rational expectations)一种认为当人们预测未来时，可以充分运用他们所拥有的全部信息，包括有关政府政策的信息的理论。 真实汇率（real exchange rate)一个人可以用一国物品与劳务交换另一国物品与劳务的比率。 真实GDP(real GDP)按不变价格评价的物品与劳务的生产。 真实利率（real interest rate)根据通货膨胀的影响校正过的利率。 真实变量（real variables)按实物单位衡量立的变量。 衰退（recession)真实收入下降和失业增也加的时期。 准备金率（reserve ratio)银行作为准备金持有的存款比例。 法定准备金（reserve requirements)关于银行必须根据其存款持有的最低准备金量的规定。 准备金（reserves)银行得到但没有贷出去的存款。 风险厌恶（risk aversion)不喜欢不确定性。 牺牲率（sacrifice ratio)在通货膨胀减少一个百分点的过程中每年产量损失的百分点数。 皮鞋成本（shoeleather cost)当通货膨胀鼓励人们减少货币持有量时所浪费的资源。 滞胀（stagflation)产量减少而物价上升的时期。 股票（stock)企业部分所有权的索取权。 价值储藏（store of value)人们可以用来把现在的购买力转变为未来的购买力的东西。 罢工（strike)工会有组织地从企业撤出劳动。 结构性失业（structural unemployment)由于某些劳动市场上可提供的工作岗位数量不足以为每个想工作的人提供工作而引起的失业。 供给冲击（supply shock)直接改变企业的成本和价格，使经济中的总供给曲线移动，进而使菲利普斯曲线移动的事件。 技术知识（technological knowledge)社会对生产物品与劳务的最好方法的了解。 流动性偏好理论（theory of liquidity prefer-ence)凯恩斯的理论，认为利率的调整使货币供给与货币需求平衡。 贸易余额（trade balance)一国的出口值减进口值，又称净出口。 贸易赤字（trade deficit)进口大于出口的部分。 贸易政策（trade policy)直接影响一国进口或出口的物品与劳务数量的政府政策。 贸易盈余（trade surplus)出口大于进口的部分。 失业保险（unemployment insurance)当工人失业时为他们提供部分收入保障的政府计划。 失业率（unemployment rate)劳动力中失业者所占的百分比。 工会（union)与雇主谈判工资和工作条件的工人协会。 计价单位（unit of account)人们用来表示价格和记录债务的标准。 货币流通速度（velocity of money)货币易手的速度。</p><h2 id="第23章-一国收入的衡量">第23章 一国收入的衡量</h2><p>围观经济学microeconomics研究个别家庭和企业如何做出决策，以及它们如何在市场上相互影响。宏观经济学macroeconomics：研究整体经济现象，包括通货膨胀、事业和经济增长。</p><h3 id="经济的收入与支出">23.1 经济的收入与支出</h3><p>GDP同时衡量两件事：经济中所有人地总收入和用于经济中物品于劳务产出的总支出。对一个整体经济而言，收入必定等于支出。（循环流量图）GDP衡量这个货币流通量。两种方法：加总家庭的总支出或加总企业支付的总收入（工资、租金和利润）。</p><h3 id="国内生产总值的衡量">23.2 国内生产总值的衡量</h3><p>国内生产总值gross domestic product，GDP：在某一既定时期一个国家内生产的所有最终物品于劳务的市场价值。 #定义</p><ol type="1"><li>市场价值，使用市场价格；2. 所有的，（物品，房屋租金，自己的房产也算；注意没有纳入的部分）；3. 最终的，不包括中间物品而只包括最终物品；4. 物品与劳务；5. 生产的，包括现期生产的物品与劳务，不包括过去生产的东西的交易；6. 一个国家内；7. 在某一既定时期内，一般为一年或一个季度。</li></ol><h3 id="gdp的组成部分">23.3 GDP的组成部分</h3><p><span class="math display">\[Y = C+I+G+NX\]</span></p><ol type="1"><li>消费consumption：家庭除购买新住房之外用于物品与劳务（理发、医疗，教育）的支出；</li><li>投资investment：用于资本设备、存货和建筑物的支出，包括家庭用于购买新住房的支出（区别于金融投资，是指购买用于生产其他物品的物品，例如资本设备、建筑物和存货（尚未销售的算为存货，卖出则存货投资为负数，抵消了买者的正支出））； 3.政府购买gevernment purchase：地方、州和联邦政府用于物品与劳务的支出（不包含转移支付）；</li><li>净出口net export：外国人对国内生产的物品的支出（出口）减国内居民对外国物品的支出（进口）。</li></ol><h3 id="真实gdp与名义gdp">23.4 真实GDP与名义GDP</h3><p>名义GDP nominal：按现期价格评价的物品与劳务的生产；真实GDP real：按不变价格评价的物品与劳务的生产。 名义GDP是用当年价格来评价经济中物品与劳务生产的价值。真实GDP是用不变的基年价格来评价经济中物品与劳务生产的价值，真实GDP的变动只反映生产的产量的变动。 GDP平减指数GDP deflator：用名义GDP与真实GDP的比率乘以100计算物价 水平衡量指标。GDP平减指数衡量相对于基年价格的现期物价水平。（通货膨胀率：两个相连年份的通货膨胀率，计算相对增长。一般用CPI计算而非GDP deflator）GDP平减指数是经济学家用来检测经济中平均物价水平，从而检测通货膨胀率的一个衡量指标。GDP平减指数的得名是因为它可以用来从名义GDP中剔除通货膨胀——也就是说，“平减”名义GDP中由于物价上升而引起的上升。</p><h3 id="gdp是衡量经济福利的好指标吗">23.5 GDP是衡量经济福利的好指标吗</h3><p>然而，GDP并不是衡量福利的完美指标。对美好生活作出贡献的某些东西并没有包括在GDP中。一种闲暇（因为在市场之外）。另一个是环境质量。也没有涉及收入分配。</p><h3 id="结论">23.4 结论</h3><h2 id="第24章-生活费用的衡量">第24章 生活费用的衡量</h2><h3 id="消费物价指数">24.1 消费物价指数</h3><p>消费者物价指数consumer price index，CPI：普通消费者所购买的物品与劳务的总费用的衡量指标。 如何计算：五个步骤：1. 固定篮子，确定哪些物价对普通消费者是最重要的；2. 找出价格；3. 计算这一篮子东西的费用；4. 选择基年并计算指数；5. 计算通货膨胀率，连续两年。通货膨胀率inflation rate：从前一个时期以来物价指数变动的百分比。 生产者物价指数producter price index，PPI：企业购买的一篮子物品和劳务的费用的衡量指标。 衡量生活费用中的问题：1. 替代偏向，若一篮子物品是固定不变的，就忽略了消费者替代的可能性，高估从某一年到下一年生活费用的增加；2. 新产品的引进，可选择范围的扩大使每一美元更值钱，如VCR和电影院消费；3. 无法衡量的质量变动，如汽车更省油； GDP平减指数与CPI：两个重要差别：1. GDP平减指数反映国内生产的所有物品无劳务的价格，而CPI反映消费者购买的所有物品与劳务的价格，如空军飞机价格变动，国外石油价格变动。2. 如何对各种价格进行加权以得出一个物价总水平的数字，CPI是固定一篮子，GPD平减指数则是现期生产的物品无劳务。一个重要例子，79-80年CPI明显较高，因为石油价格上升。</p><h3 id="根据通货膨胀的影响校正经济变量">24.2 根据通货膨胀的影响校正经济变量</h3><p>不同时期的美元数字：把现期数字转化为基年数字，一个典型例子便是电影票房。 指数化indexation：根据法律或协议按照通货膨胀的影响对美元数量的自动调整。如企业和工会之间的许多长期合同有工资根据CPI部分或全部指数化的条款，称为生活费用津贴COLA。 真实利率与名义利率：名义利率nominal interest rate：通常公布的、未根据通货膨胀的影响校正的 利率；真实利率real interset rate：根据通货膨胀校正过的利率，接近于 真实利率 = 名义利率 - 通货膨胀率。</p><h2 id="第25章-生产与增长">第25章 生产与增长</h2><h3 id="世界各国的经济增长">25.1 世界各国的经济增长</h3><h3 id="生产率作用及决定因素">25.2 生产率：作用及决定因素</h3><p>生产率productivity：每单位劳动投入所生产的物品和劳务的数量。 为什么生产率如此重要：一国的生活水平取决于它生产物品与劳务的能力。 #Theo 生产率是如何决定的：四个决定因素 #Note 人均物质资本：物质资本physical capital：用于生产物品与劳务的设备和建筑物存量。用于生产物品与劳务的投入（如劳动、资本等）称为生产要素。资本的重要特征是，它是一种生产出来的生产要素。也就是说，资本是生产过程的投入，也是过去生产过程的产出。 人均人力资本：人力资本huamn capital：工人通过教育、培训和经验而获得的知识和技能。人力资本也是生产出来的生产要素。 人均自然资源：自然资源natural resources：由自然界提供的用于生产物品和劳务的投入，如土地、河流和矿藏。自然资源是自然界提供的生产投入。两种形式：可再生与不可再生 技术知识technological knowledge：社会对生产物品与劳务的最好方法的了解。多种形式：1. 公共知识；2. 私人拥有；3. 短期内私人拥有，如制药公司。 区分技术知识和人力资本：技术知识是指社会对世界如何运行的理解，人力资本是指把这种理解传递给劳动力的资源消耗。</p><h3 id="经济增长和公共政策">25.3 经济增长和公共政策</h3><p>到现在为止，我们已经确定了社会的生活水平取决于它生产物品与劳务的能力，以及其生产率取决于物质资本、人力资本、自然资源和技术知识。现在我们转向全世界各国决策者面临的问题：哪些政府政策可以提高生产率和生活水平？</p><ol type="1"><li><p>储蓄和投资：提高未来生产率的一种方法是把更多的现期资源投资于资本的生产。社会更多地投资于资本，它就必然少消费并把更多的现期收入储蓄起来。</p></li><li><p>收益递减和追赶效应：（资本）收益递减diminishing returns：随着投入量的增加，每一单位额外投入得到的收益减少的特性。生产过程的传统观点是，资本要受到收益递减的制约。在长期中，高储蓄率引起高水平的生产率和收入，但在这些变量中并没有高增长。（达到这种长期需要相当一段时间，根据数据研究，提高储蓄率可以在几十年内引起相当高的增长）追赶效应catch-up effect：开始时贫穷的国家倾向于比开始时富裕的国家增长更快的特征（穷国人均资本较低）。</p></li><li><p>来自国外的投资：有外国直接投资和外国有价证券投资（股票形式）。利用来自国外的投资是一国增长的一种方法。这种投资也增加了一国的资本存量，造成该国更高的生产率和工资。是穷国学习富国开发并运用先进技术的一种方式。鼓励资本流入穷国的组织有世界银行、国际货币基金组织。</p></li><li><p>教育：教育（人力资本投资）对一个国家的长期经济繁荣至少和物质资本投资同样重要。教育的正外部性。穷国面临的问题：人才外流。</p></li><li><p>健康与营养：虽然人力资本通常指教育，但它也可以用来描述另一类对人的投资：使人口更健康。更健康的人生产率更高。关系是双向的。、</p></li><li><p>产权和政治稳定：决策者加快经济增长的另一种方法是保护产权和促进政治稳定。这个问题正式市场经济如何运行的核心问题。市场经济中的生产产生于千百万个个人与企业的相互交易，市场价格是市场这个看不见的手用来使组成经济的成千上万个市场供求平衡的工具；价格制度发生作用的一个重要前提是经济中广泛尊重产权，法院在市场经济中所起的一个重要作用就i是强制保护产权（极端情况下，政府不能保护产权还侵犯产权，如企业需要贿赂官员）；对产权的一个威胁是政治的不稳定（因此，经济繁荣不分区决定于政治繁荣）。</p></li><li><p>自由贸易：内向型政策和外向型政策。外向型政策如韩国、新加坡和中国台湾；贸易量不仅取决于政策还取决于地理环境，如天然海港如纽约、旧金山、香港。</p></li><li><p>研究与开发：今天生活水平高于一个世纪前的主要原因是技术知识的进步。知识是公共物品。政府方式：1. 提供研究资金；2. 专利制度（把公共物品变为私人物品）。</p></li><li><p>人口增长：导致自然资源紧张；稀释了资本存量（尤其是人力资本，教育系统的负担）；促进了技术进步。</p></li></ol><h3 id="结论长期增长的重要性">25.4 结论：长期增长的重要性</h3><h2 id="第26章-储蓄投资和金融体系">第26章 储蓄、投资和金融体系</h2><p>金融体系financial system：经济中促使一个人的储蓄与另一个人的投资相匹配的一组机构。 本章将考察金融体系如何运行。1. 探讨经济中组成金融体系的各种结构；2. 讨论金融体系和一些关键宏观经济变量之间的关系，尤其是储蓄和投资之间的关系；3. 建立一个金融市场上的资金供求模型，在这个模型中利率是调整供求平衡的价格，这个模型说明了政府政策如何影响利率，从而影响社会对稀缺资源的配置。 ＃Note</p><h3 id="美国经济中的金融机构两类">26.1 美国经济中的金融机构（两类）</h3><ol type="1"><li>金融市场finanical markets：储蓄者可以借以直接向借款者提供资金的金融机构。（债券和股票等） 债券市场。债券bond：一种债务证明书。（简单地说，债券就是拮据IOU）。不同债券由于三个重要特点而不同： 期限：债券到期之前的时间长度。长期债券的风险比短期大，因此利率也高； 信用风险：借款人不能支付某些利息或本金的可能性，这汇总不能支付称为拖欠。垃圾债券； 税收待遇：税法对待债券所赚到的利息的方式。州政府和地方政府发行市政债券，不用为利息收入支付联邦所得税，因此利率低于公司或联邦政府发行的债券。 股票市场。股票stock：企业部分所有权的索取权。股本筹资和债务筹资。</li><li>金融中介机构financial intermediaries：储蓄者可以借以简洁地向借款者提供资金的金融机构。（银行和共同基金） 银行。银行的主要工作是从储蓄的人那里吸收存款，并用这些存款向想借款的人发放贷款；除了作为金融中介机构，银行在经济运行中的另一个作用：通过允许人们根据自己的存款开支票以及使用借记卡使物品与劳务的购买变得便利（交换媒介，后面提到）。 共同基金 mutual fund：向公众出售股份，并用收入来购买股票与债务资金组合的机构。主要优点：可以使钱并不多对人进行多元化投资（经营共同基金的公司向股份持有者收取年费）；使普通人获得资金管理者的技能（金融经济学家怀疑共同基金公司所谓第二个优点，反例如指数基金） 其他：养老基金、信用社、保险公司、地放高利贷等。</li></ol><h3 id="国民收入账户中的储蓄与投资">26.2 国民收入账户中的储蓄与投资</h3><p>一些重要的恒等式 Y = C+I+G (+NX) 封闭经济：不与其他经济相互交易的经济（国际贸易、国际借贷） S = (Y-C-G =) I 国民储蓄national saving：在用于消费和政府购买后剩下的一个经济中的总收入。储蓄等于投资。 #Note S = (Y-T-C) + (T-C) T表示政府以税收的形式从家庭得到的数量减去以转移支付形式（如社会保障和福利）返还给加家庭的数量。私人储蓄private saving：家庭在支付了税收和消费之后盛下来的收入；公共储蓄public saving：政府在支付其支出后剩下来的税收收入。预算盈余budget surplus：税收收入大于政府支出的余额；预算赤字 budget deficit：政府支出引起的税收收入短缺。 储蓄和投资的含义：投资：设备或建筑物这类新资本的购买（买房，卖股票建工厂）；</p><h3 id="可贷资金市场">26.3 可贷资金市场</h3><p>可贷资金市场market for loanable funds：向储蓄的人借以提供资金、想借钱投资的人借以借贷资金的市场。为简化，假设经济中只有一个金融市场，称为可贷资金市场。 可贷资金：人们选择储蓄并贷出而不是用于自己消费的所有收入，以及投资者选择为新投资项目筹集资金要借的数量。#Note 可贷资金的供给与需求：可贷资金的供给来自那些有额外收入并想储蓄和贷出的人，储蓄是可贷资金供给的来源；可贷资金的需求来自希望借款进行投资的家庭（买房）和企业，投资是可贷资金需求的来源。利率是贷款的价格。（注意，指的是真实利率）。分析影响经济中储蓄与投资的各种政府政策： 政策1：储蓄激励。方法：扩大特殊账户的合法性，允许人们的某些储蓄免于征税，比如个人养老金账户。如果税法改革鼓励更多储蓄，则利率下降且投资增加。 政策2：投资激励。方法：投资赋税减免。如果税法改革鼓励更多投资，则利率上升且储蓄增加。 政策3：政府预算赤字与盈余。政府债务。当政府通过预算赤字减少了国民储蓄，（可贷资金供给量下降）利率上升且投资减少；预算盈余增加了可贷资金的供给，降低了利率，并刺激了投资。 为何预算赤字影响可贷资金的供给而不影响需求？（增加的政府借款改变了供给曲线，私人投资者增加的借款改变了需求曲线）“可贷资金”含义：为私人投资筹资可以得到的资源流量，而非从私人储蓄中得到的资源流量。</p><h3 id="结论-1">26.4 结论</h3><h2 id="第27章-基本金融工具">第27章 基本金融工具</h2><p>金融学finance：研究人们如何在某一时期内作出关于配置资源和应对风险的决策的学科。 讨论三个主题：1. 讨论如何比较不同时点的货币量；2. 讨论如何管理风险；3. 根据对时间和风险的分析，考察什么决定一种资产比如一股股票的价值。</p><h3 id="现值衡量货币的时间价值">27.1 现值：衡量货币的时间价值</h3><p>现值present value：用线性利率产生一定量未来货币所需要的现在货币量；未来值future value：在现行利率既定时，现在货币量将带来的未来货币量。复利compounding：货币量的累积，比如说银行账户上货币量的累积，即赚得的利息仍留在账户上以赚取未来更多的利息。贴现：寻找一定量未来货币现值的过程。现值的概念有助于解释为什么当利率上升时，投资（可贷资金的需求量）减少。</p><h3 id="风险管理">27.2 风险管理</h3><p>风险厌恶risk aversion：不喜欢不确定性。 效用：一个人对福利或满足的主观衡量。效用函数，变现为边际效用递减的性质，因此失去100美元损失的效用大于赢得100美元获得的效用。通过风险厌恶，下面考虑三件事：保险、多元化、风险-收益权衡取舍：（三种策略）</p><ol type="1"><li>保险市场。在某种意义上，每一份保险合同就是一场赌博；从整个经济的角度来看，保险的作用不是消除生活中固有的风险，而是更有效地分摊风险；保险市场受到制约其分摊风险能力的两类问题的困扰：1. 逆向选择（高风险者更有可能买保险）；2. 道德风险（谨慎从事以规避风险的激励小了）。</li><li>企业特有风险的多元化。多元化diversification：通过用大量不相关的小风险代替一种风险来降低风险。企业特有风险firm-specific risk：只影响一家公司的风险；市场风险market risk：影响股市上所有公司的风险。</li><li>风险与收益的权衡取舍：对风险与收益的权衡取舍（股票-债券的比例）取决于一个人的风险厌恶程度，这反映了他的偏好。</li></ol><h3 id="资产评估">27.3 资产评估</h3><p>基本面分析fundamental analysis：为决定一家公司的价值而对其会计报表和未来前景进行的研究。股票对股东的价值是他能从拥有的股票中得到的东西，包括红利支付流量和股票的最后出售价格的现值。 有效市场假说efficient markets hypothesis：认为资产价格反映了关于一种资产价值的公开的、可获得的信息的理论。</p><ol start="4" type="1"><li>在市场上的每个人都是理性的经济人，金融市场上每只股票所代表的各家公司都处于这些理性人的严格监视之下，他们每天都在进行基本分析，以公司未来的获利性来评价公司的股票价格，把未来价值折算成今天的现值，并谨慎地在风险与收益之间进行权衡取舍。</li><li>股票的价格反映了这些理性人的供求的平衡，想买的人正好等于想卖的人，即，认为股价被高估的人与认为股价被低估的人正好相等，假如有人发现这两者不等，即存在套利的可能性的话，他们立即会用买进或卖出股票的办法使股价迅速变动到能够使二者相等为止。</li><li>信息有效informational efficiency：以理性方式反映所有可获得信息的关于资产价格的描述。（股票的价格也能充分反映该资产的所有可获得的信息，即"信息有效"，当信息变动时，股票的价格就一定会随之变动。） 有效市场假说的一个含义是，价格随机行走random walk：一种变量变动的路径是不可预期的。 市场非理性：长期以来，传统观点认为，股票价格波动部分是心理原因造成的。投机泡沫</li></ol><h3 id="结论-2">27.4 结论</h3><p>现值的概念提醒我们，未来1美元不如现在1美元值钱，而且，它给了我们比较不同时点货币量的一种方法。风险管理理论提醒我们，未来是不确定的，而且风险厌恶者可以谨慎地防止这种不确定性。资产评估研究告诉我们，任何一家公司的股票价格应该反映其于其的未来赢利性。</p><h2 id="第28章-失业">第28章 失业</h2><p>28.1 失业的确认 28.2 寻找工作 28.3 最低工资发 28.4 工会和集体谈判 28.5 效率工资理论 28.6 结论</p><h2 id="第29章-货币制度">第29章 货币制度</h2><p>物物交换；欲望的双向一致性；货币的存在使贸易变得容易了。</p><h3 id="货币的含义">29.1 货币的含义</h3><p>货币money：经济中人们经常用于向其他人购买物品与劳务的一组资产assert。货币只是包括在物品与劳务交换中卖者通常接受的少数几种财富。 货币的职能：交换媒介、计价单位、价值储藏手段。这三种把货币与其他资产，如股票、债券、不动产、艺术品甚至棒球运动员卡区分开来。交换媒介medium exchange：买者在购买物品与劳务时给予卖者的东西；计价单位unit of caaount：人们用来表示价格和记录债务的标准；价值储藏store of value：人们可以用来把现在的购买力转变为未来的购买力的东西。财富这个词用来指所有价值储藏的总量，包括货币和非货币资产（如股票和债券）。 流动性liquidity：一种资产兑现为经济中交换媒介的容易程度。当人们决定以某种形式持有自己的财富时，必须使每种可能资产的流动性与资产作为价值储藏手段的有用性保持平衡。 货币的种类：商品货币commodity money：以有内在价值的商品为形式的货币。（如黄金、香烟）法定货币fiat meoney：没有内在价值、由政府法令确定作为通货使用的货币。 美国经济中的货币：货币存量：经济中流通的货币量（不仅包括通货，还包括银行和其他金融机构的存款，这些存款可以随时获得并用于购买物品与劳务）。通货currency：公众手中持有的纸币钞票和铸币。活期存款demand deposits：储户可以通过开支票而随时支取的银行账户余额。</p><h3 id="联邦储备体系">29.2 联邦储备体系</h3><p>中央银行central bank：为了监管银行体系和调节经济中的货币量而设计的机构。联邦储备Federal Reserve Fed：美国的中央银行。 美联储的结构：1名理事，任期14年，最重要的是主席。两项任务：1. 管制银行并确保银行体系的正常运行；2. 控制经济中可以得到的货币量，称为货币供给money supply：经济中可以得到的货币量。货币政策monetary policy：中央银行的决策者对货币供给的安排。 联邦公开市场委员会：7位理事和12个地区银行总裁中5位。通过联邦公开市场委员会的决策，美联储有权增加或减少经济中美元的数量。美联储主要工具是公开市场操作——买卖美国政府债券。</p><h3 id="银行与货币供给">29.3 银行与货币供给</h3><ol type="1"><li>百分百准备金银行的简单情况：准备金reserves：银行得到但没有贷出去的存款。T型账户：表明银行资产与负债变动的一个简化的会计报表。资产负债表。如果银行以准备金形式持有所有存款，银行就不影响货币供给。</li><li>部分准备金银行的货币创造：部分准备金银行fractional-reserve banking：只把部分存款作为准备金的银行制度。准备金率：银行作为准备金持有的存款比例。法定准备金、超额准备金。当银行只把部分存款作为准备金时，银行创造了货币。</li><li>货币乘数：货币乘数money multiplier：银行体系用1美元准备金所产生的货币量。货币乘数位准备金率的倒数。表明银行创造多少货币量取决于准备金率。 银行资本、杠杆以及2008-09年的金融危机：银行资本bank capital/所有者权益：银行的所有者投入机构的资源（银行向其所有者发行股票中得到的资源）。银行根据各种资产的风险与收益与任何一种限制银行选择的管制（如法定准备金率）来决定如何把资源在各类型资产之间进行配置。资产负债表左边的准备金、贷款和有价证券总量 = 右边的存款、债务和资本。因为所有者权益（资本）的价值 = 银行资产（准备金、贷款和有价证券）价值 - 负债（存款和债务）的价值。 杠杆leverage：将借到的货币追加到用于投资的现有资金上。杠杆率leverage ratio：银行的总资产与银行资本的比率。 资本需要量capital requirement：政府管制确定的最低银行资本量。目的是确保银行能偿还其储户。信用危机。</li></ol><h3 id="美联储控制货币的工具两类影响准备金量和影响准备金率从而影响货币乘数">29.4 美联储控制货币的工具：两类：影响准备金量和影响准备金率从而影响货币乘数</h3><ol start="4" type="1"><li>美联储如何影响准备金量 1.1 公开市场操作open-market operations：美联储买卖美国政府债券。为增加货币供给，买进公众手中的债券。 1.2 美联储向银行发放贷款。贴现率discount rate：美联储向银行发放贷款的利率。低贴现率鼓励银行向美联储借款，增加准备金量，从而增加货币供给。短期拍卖工具，如1987.10.19股市，2008-09房价下跌引起拖欠抵押贷款的房主数量急剧增加，持有这些抵押贷款的金融机构遇到麻烦。</li><li>美联储如何影响准备金率 2.1 法定准备金reserve requirements：关于银行必须根据其存款持有的最低准备金量的规定。法定准备金减少，降低准备金率，提高货币乘数，增加货币供给。 2.2 支付准备金利息：当一家银行以在美联储中的存款持有准备金时，美联储为这些存款向银行支付利息。准备金利率下降，减少准备金量，降低准备金率，提高货币乘数，增加货币供给。 控制货币供给中的问题：1. 美联储不能控制家庭选择以银行存款的方式持有的货币量；2. 美联储不能控制银行选择的贷款量。</li><li>联邦基金利率。联邦基金利率federal funds rate：银行向另一家银行进行隔夜贷款时的利率。公开市场购买债券，把准备金注入银行体系，准备金不足的银行减少，需求减少降低联邦基金利率（价格）。公开市场购买降低了联邦基金利率，而公开市场出售则提高了联邦基金利率。联邦基金利率目标的下降意味着货币的扩张，上升意味着货币供给的紧缩。 29.5 结论 现在我们知道了什么是货币以及什么因素决定货币供给，下章讨论货币量的变动如何影响经济。</li></ol><h2 id="第30章-货币增长与通货膨胀">第30章 货币增长与通货膨胀</h2><p>通货膨胀inflation：物价总水平的上升。通货紧缩。超速通货膨胀。货币数量论。</p><h3 id="古典货币通货膨胀理论">30.1 古典货币通货膨胀理论</h3><p>物价水平与货币价值：如果P是用货币衡量的物品与劳务的价格，那么<span class="math inline">\(１/P\)</span>就是用物品和劳务来衡量的货币的价值。当物价总水平上升时，货币的价值下降。 货币供给、货币需求与货币均衡：货币供给：简单把货币供给量当作由美联储控制的政策变量。货币需求：取决于人们能够从债券中赚取的利率。虽然很多变量都影响货币需求，但一个变量最为重要：经济中的平均物价水平（持有货币是因为交换媒介，持有多少货币取决于物品的价格）。在长期中，物价总水平调整到使货币需求等于货币供给的水平（从而决定货币价值和物价水平）。 货币注入的影响：货币数量论quantity theory of money：一种认为可得到的货币量决定物价水平，可得到的货币量的增长率决定通货膨胀率的理论。 调整过程简述：货币的注入增加了人们对物品和劳务的需求（花掉超额货币供给），引起价格上升（生产物品和劳务的能力不变），又增加了货币需求量。 古典的二分法和货币中性：名义变量nominal variables：按货币单位衡量的变量；真实变量real variable：按实物单位衡量的变量；这种区分称为古典二分法classical dichotomy：名义变量和真实变量的理论区分。货币中性monetary neutrality：认为货币供给变动并不影响真实变量（根据古典分析，名义变量受经济中的货币制度发展的影响，而货币对于解释真实变量基本是无关的）。正确吗？在短期中——在一两年的时期内，货币变动对真实变量有影响。 货币流通速度与货币数量方程式通货膨胀税：货币流通速度velocity of money：货币易手的速度。V = (P<em>Y) /M，P物价水平（GDP平减指数），Y表示产量，M表示货币量。数量方程式quantity equation： M</em>V= P<em>Y，把货币量、货币流通速度和经济中物品与劳务产出的美元价值联系在一起。</em> 包括：1. 货币流通速度较为稳定；2. 所有当央行改变货币量M，引起名义产出PY同比例变动；3. Y主要由要素供给（劳动、物质资本、人力资本和自然资源）和生产技术决定，由于货币中兴，不影响产量；4. 因此名义产出价值P*Y的变动价格P；5. 因此，当央行迅速增加货币供给，结果是高通膨。#分析 通货膨胀税inflation tax：政府通过创造货币而筹集的收入。通货膨胀税就像是一种向每个持有货币的人征收的税。 费雪效应Fisher effect：名义利率对通货膨胀率所进行的一对一的调整。名义利率 = 真实利率 + 通货膨胀率。当美联储提高货币增长率时，长期的结果是更高的通货膨胀率和更高的名义利率。Note：费雪效应长期有效，短期不成立，因为通膨是不可预期的。</p><h3 id="通货膨胀的成本">30.2 通货膨胀的成本</h3><p>购买力下降？通货膨胀的谬误：收入的膨胀和物价的膨胀是同步的，因此通膨本身并没有降低人们的实际购买力。因为货币中性。</p><ol start="2" type="1"><li>皮鞋成本 shoeleather cost：当通膨鼓励人们减少货币持有量时所浪费的资源。牺牲的时间和便利。</li><li>菜单成本menu cost：改变价格的成本。增加了企业必须承担的菜单成本。包括决定新价格的成本、印刷新清单和目录的成本、把这些新清单和目录送给中间商和顾客的成本、为新价格做广告的成本、处理谷歌对价格变动的恼怒的成本。</li><li>相对价格变动与资源配置不当：变革变化有时间，如一个月变化一次，相对价格变动。当通膨扭曲了相对价格时，消费者的决策也被扭曲了，市场不能有效配置资源（市场经济依靠相对价格来配置稀缺资源）。</li><li>通货膨胀引起的税收扭曲：由于通膨引起的税收变化，高通膨倾向于抑制人们的储蓄。减少投资，降低经济增长率（看法不一致）</li><li>混乱与不方便：如会计师错误衡量了真实收入；使投资者不能区分成功与不成功企业，抑制储蓄配置到不同投资。</li><li>未预期到的通货膨胀的特殊成本：任意的财富再分配：未预期到的物价变动在债权人与债务人之间进行财富再分配（通膨损害债权人） 通货膨胀不好，但通货紧缩可能更坏：弗里德曼规则：通货紧缩会降低名义利率，引起持有货币的成本下降，减少皮鞋成本。 #为什么</li></ol><h3 id="结论-3">30.3 结论</h3>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 经济学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经济学原理 note1</title>
      <link href="/posts/3d48cadd/"/>
      <url>/posts/3d48cadd/</url>
      
        <content type="html"><![CDATA[<blockquote><p>说是「笔记」也算不上，只是摘录了曼昆《经济学原理》书后面每章的摘要，在复习的时候重新过了一篇 PPT 稍微整理了一下。看上去条理还是挺清楚的就发了出来，经原复习的话可在一定进行参考。</p></blockquote><h2 id="经济学十大原理">1. 经济学十大原理</h2><ul><li>关于个人做出决策的基本结论是：<ul><li>人们面临不同目标之间的权衡取舍；People Face Tradeoffs</li><li>任何一种行为的成本可以用其所放弃的机会来衡量；The Cost of Something Is What You Give Up to Get It - <strong>opportunity cost</strong></li><li>理性人通过比较 <strong>边际成本与边际利益</strong> 做出决策；<strong>Rational People</strong> Think at the Margin</li><li>人们根据他们所面临的 <strong>激励</strong> 改变自己的行为。People Respond to Incentives</li></ul></li><li>关于人们之间相互交易的基本结论是：<ul><li>贸易以及相互依赖性可以是互利的；Trade Can Make Everyone Better Off</li><li>市场通常是协调人们之间经济活动的一种好方法；Markets Are Usually A Good Way to Organize Economic Activity</li><li>通过纠正市场失灵或者提高经济中的平等程度，政府可以潜在地改善市场结果。Governments Can <strong>Sometimes</strong> Improve Market Outcomes</li></ul></li><li>关于整体经济的基本结论是：<ul><li>生产率是生活水平的最终根源；A Country’s Standard of Living Depends on Its Ability to Produce Goods &amp; Services</li><li>货币量的增长是通货膨胀的最终根源；Prices Rise When the Government Prints Too Much Money - <strong>Inflation</strong></li><li>社会面临 <strong>通货膨胀与失业</strong> 之间的短期权衡取舍。Society Faces a Short-run Tradeoff Between Inflation and Unemployment</li></ul></li></ul><h2 id="像经济学家一样思考">2. 像经济学家一样思考</h2><p>经济学家们努力以科学家的客观态度来研究他们的学科。像所有科学家一样，他们做出了适当的假设并建立了简化的模型，以便解释我们周围的世界。两个简单的经济模型是 <strong>循环流量图和生产可能性边界</strong>。The Circular-Flow Diagram &amp; The Production Possibilities Frontier PPF</p><p>经济学可划分为两个分领域：微观经济学和宏观经济学。微观经济学家研究家庭和企业做出的决策以及家庭和企业在市场上的相互交易。<strong>宏观经济学家研究影响整体经济的力量和趋势</strong>。</p><p><strong>实证表述</strong> 是关于世界是什么的论断。<strong>规范表述</strong> 是关于世界应该是什么的论断。当经济学家做出规范表述时，他们的行为更像是政策顾问而不是科学家。<strong>positive statements v.s. normative statements</strong></p><p>经济学家们向决策者提出的建议之所以有时会相互矛盾，不是因为科学判断的差别，就是因为价值观的差别。在另一些时候，经济学家提供的建议是一致的，但决策者可能选择不理会这些建议。</p><ul><li><p>As scientists, economists try to explain the world using models with appropriate assumptions.</p></li><li><p>Two simple models are the Circular-Flow Diagram and the Production Possibilities Frontier.</p></li><li><p>Microeconomics studies the behavior of consumers and firms, and their interactions in markets. Macroeconomics studies the economy as a whole.</p></li><li><p>As policy advisers, economists offer advice on how to improve the world. <img src="16052299332788.jpg" /></p></li></ul><p><img src="16052299390654.jpg" /></p><ul><li><p>通过 PPT 来看 Opportunity cost，通过斜率反映出来。</p></li><li><p>The PPF could be a straight line or bow-shaped，前者如固定工时的分配，后者的原因可能是每个劳动力所熟练掌握的技能不同。</p></li></ul><h2 id="相互依存性与贸易的好处">3. 相互依存性与贸易的好处</h2><p>每个人都消费本国和世界各国许多其他人所生产的物品与劳务。相互依存和贸易之所以合意，是因为它可以使每个人都可以享有更多数量和品种的物品与劳务。 有两种方法可以用来比较两个人在生产一种物品时的能力。一个可以用较少投入生产该物品的人被称为在生产该物品上有 <strong>绝对优势</strong>。生产该物品的机会成本较小的人被称为有 <strong>比较优势</strong>。贸易的好处是基于比较优势，而不是绝对优势。资易可以使每个人的状况都变得更好，因为它使人们可以专门从事自己有比较优势的活动。 比较优势原理不仅适用于个人，还适用于国家。经济学家用比较优势原理支持各国间的自由 <strong>贸易</strong>。</p><ul><li><p>Interdependence and trade allow everyone to enjoy a greater quantity and variety of goods &amp; services.</p></li><li><p>Comparative advantage means being able to produce a good at a lower opportunity cost. Absolute advantage means being able to produce a good with fewer inputs.</p></li><li><p>When people—or countries—specialize in the goods in which they have a comparative advantage, the economic “pie” grows and trade can make everyone better off.</p></li></ul><p><img src="16052300125421.jpg" /></p><p>基于 PPF 描述了贸易的好处。</p><p>这个案例中 US 比 Japan 在两种商品上都具有绝对优势（成本低）；而贸易产生的收益的来源，则是源于他们的相对优势 Comparative advantage: the ability to produce a good at a lower opportunity cost than another producer。即机会成本的概念，其关注的是两国生产两种商品的效率比值，因此一般情况下总会一个高一个低，也即分工能够带来收益。</p><blockquote><p>§ Gains from trade arise from comparative advantage (differences in opportunity costs).</p><p>§ When each country specializes in the good(s) in which it has a comparative advantage, total production in all countries is higher, the world’s “economic pie” is bigger, and all countries can gain from trade.</p><p>§ The same applies to individual producers (like the farmer and the rancher) specializing in different goods and trading with each other.</p></blockquote><h2 id="供给与需求的市场力量">4. 供给与需求的市场力量</h2><p>经济学家用 <strong>供求模型来分析竞争市场</strong>。在竞争性市场上，有许多买者和卖者，他们每个人对市场价格影响很小，甚至没有影响。</p><p><strong>需求曲线</strong> 表示价格如何决定一种物品的需求量。根据需求定理，随着一种物品价格下降，需求量增加。因此，需求曲线向右下方倾斜。 除了价格之外，决定消费者想购买多少物品的其他因素包括 <strong>收入、替代品和互补品的价格、嗜好、预期和买者的数量</strong>。如果这些因素中的一种改变了，需求曲线就会移动。</p><p><strong>供给曲线</strong> 表示价格如何决定一种物品的供给量。根据供给定理，随着一种物品价格上升，供给量增加。因此，供给曲线向右上方倾斜。 除了价格之外，决定生产者想出售多少物品的其他因素包括 <strong>投入品价格、技术、预期和卖者的数量</strong>。如果这些因素中的一种改变了，供给曲线就会移动。</p><p>供给曲线与需求曲线相交决定了 <strong>市场均衡</strong>。当价格为均衡价格时，需求量等于供给量。 买者与卖者的行为会自然而然地使市场趋向于均衡。当市场价格高于均衡价格时，存在物品的过剩，引起市场价格下降。当市场价格低于均衡价格时，存在物品的短缺，引起市场价格上升。</p><p>为了分析某个事件如何影响一个市场，我们用供求图来考察该事件对均衡价格和均衡数量的影响。我们遵循三个步骤进行：第一，确定该事件是使供给曲线移动，还是使需求曲线移动（还是使两者都移动）。第二，确定曲线移动的方向。第三，比较新均衡与原来的均衡。</p><p>在市场经济中，价格是引导经济决策，从而配置稀缺资源的信号。对于经济中的每一种物品来说，价格确保供给与需求达到平衡。因此，均衡价格决定了买者选择购买多少这种物品，以及卖者选择生产多少这种物品。</p><ul><li><p><strong>A competitive market</strong> has many buyers and sellers, each of whom has little or no influence on the market price.</p></li><li><p>Economists <strong>use the supply and demand model to analyze competitive markets</strong>.</p></li><li><p>The downward-sloping demand curve reflects the <strong>law of demand</strong>, which states that the quantity buyers demand of a good depends negatively on the good’s price.</p></li><li><p>Besides price, demand depends on <strong>buyers’ incomes, tastes, expectations, the prices of substitutes and complements, and number of buyers</strong>. If one of these factors changes, the D curve shifts.</p></li><li><p>The upward-sloping supply curve reflects the <strong>Law of Supply</strong>, which states that the quantity sellers supply depends positively on the good’s price.</p></li><li>Other determinants of supply include <strong>input prices, technology, expectations, and the # of sellers</strong>. Changes in these factors shift the S curve.</li><li><p>The intersection of S and D curves determines the <strong>market equilibrium</strong>. At the equilibrium price, quantity supplied equals quantity demanded.</p></li><li><p>If the market price is above equilibrium, a surplus results, which causes the price to fall. If the market price is below equilibrium, a shortage results, causing the price to rise.</p></li><li><p>We can use the <strong>supply-demand diagram</strong> to analyze the effects of any event on a market: First, determine whether the event shifts one or both curves. Second, determine the direction of the shifts. Third, compare the new equilibrium to the initial one.</p></li><li><p><strong>In market economies, prices are the signals that guide economic decisions and allocate scarce resources.</strong></p></li></ul><p>竞争市场</p><blockquote><p>§ A <strong>market</strong> is a group of buyers and sellers of a particular product.</p><p>§ A <strong>competitive market</strong> is one with many buyers and sellers, each has a negligible effect on price.</p><p>§ In a <strong>perfectly competitive market</strong>:</p><p>§ All goods exactly the same</p><p>§ Buyers &amp; sellers so numerous that no one can affect market price—each is a <strong>“price taker”</strong></p><p>§ In this chapter, we assume markets are perfectly competitive.</p></blockquote><p>除了价格之外影响需求量的因素（造成 D 曲线移动）</p><ul><li># of Buyers：人数上升，需求增加，曲线右移</li><li>Income：收入增加，normal good 曲线右移，inferior good 曲线左移</li><li>Prices of Related Goods：另外的一个相关产品的价格上升（需求下降），substitutes 替代品曲线右移，complements 互补品曲线左移</li><li>Tastes：嗜好，一个例子是 The Atkins diet became popular in the ’90s, caused an increase in demand for eggs, shifted the egg demand curve to the right.</li><li>Expectations：预期收入上升，曲线右移</li></ul><p>除了价格之外影响供给量的因素（造成 S 曲线移动）</p><ul><li>Input Prices：原材料/工资上升，利润减少，生产减少，曲线左移</li><li>Technology：技术进步造成曲线右移</li><li># of Sellers：数量越多曲线右移</li><li>Expectations：例如预期中东的事件造成油价上升，Texas 的油田减少生产等待高价，曲线左移</li></ul><p>下图解释了 SD 曲线如何决定了均衡价格，以 Surplus 为例，Shortage 的情况类似。</p><p><img src="16052300266235.jpg" /></p><p>下图给了一个例子说明如何利用 SD 曲线，判别某一因素的影响造成的曲线和 PQ 变化。</p><p><img src="16052300423339.jpg" /></p><h2 id="弹性及其应用">5. 弹性及其应用</h2><p><strong>需求价格弹性</strong> 衡量的是需求量对价格变动的反应程度。如果某种物品可以得到相近的替代品，是奢侈品而不是必需品，市场范围狭小，或者买者有相当长的时间对价格变动做出反应，那么，这种物品就倾向于更富有弹性。</p><p>可以用需求量变动百分比除以价格变动百分比来计算需求价格弹性。如果需求量变动比例小于价格变动比例，那么弹性小于1,就可以说需求缺乏弹性。如果需求量变动比例大于价格变动比例，那么弹性大于1,就可以说需求富有弹性。</p><p><strong>总收益</strong>，即对一种物品的总支付量，等于该物品的价格乘以销售量。对于缺乏弹性的需求曲线，其总收益随着价格的上升而增加；对于富有弹性的需求曲线，其总收益随着价格的上升而减少。</p><p><strong>需求收入弹性</strong> 衡量的是需求量对消费者收入变动的反应程度。需求的交叉价格弹性衡量一种物品需求量对另一种物品价格变动的反应程度。</p><p><strong>供给价格弹性</strong> 衡量的是供给量对价格变动的反应程度。这种弹性往往取决于所考虑的时间长短。在大多数市场上，供给在长期中比在短期中更富有弹性。</p><p>可以用供给量变动百分比除以价格变动百分比来计算供给价格弹性。如果供给量变动比例小于价格变动比例，那么弹性小于1,就可以说供给缺乏弹性。如果供给量变动比例大于价格变动比例那么弹性大于1,就可以说供给富有弹性。</p><p>供求工具可以被运用于许多不同类型的市场。本章运用它们分析了 小麦市场、石油市场和非法毒品市场。</p><ul><li><p>Elasticity measures the responsiveness of <span class="math inline">\(Q^d\)</span> or <span class="math inline">\(Q^s\)</span> to one of its determinants.</p></li><li><p>Price elasticity of demand equals percentage change in <span class="math inline">\(Q^d\)</span> divided by percentage change in <span class="math inline">\(P\)</span>. When it’s less than one, demand is “inelastic.” When greater than one, demand is “elastic.”</p></li><li><p>When demand is inelastic, total revenue rises when price rises. When demand is elastic, total revenue falls when price rises.</p></li><li><p>Demand is less elastic: <strong>in the short run; for necessities; for broadly defined goods; and for goods with few close substitutes</strong>.</p></li><li><p>Price elasticity of supply equals percentage change in <span class="math inline">\(Q^s\)</span> divided by percentage change in <span class="math inline">\(P\)</span>. When it’s less than one, supply is “inelastic.” When greater than one, supply is “elastic.”</p></li><li><p>Price elasticity of supply is greater in the long run than in the short run.</p></li><li><p><strong>The income elasticity of demand</strong> measures how much quantity demanded responds to changes in buyers’ incomes.</p></li><li><p><strong>The cross-price elasticity of demand</strong> measures how much demand for one good responds to changes in the price of another good.</p></li></ul><p>弹性衡量的是供给或需求的量 Q 如何随价格 P 发生变化。</p><p><img src="16052300677536.jpg" /></p><p>例如需求价格弹性如上图所示，</p><ul><li><p>趋势是相反的本应该有个符号，这里不考虑；</p></li><li><p>注意这里用的都是百分比，假如我们定义 <span class="math display">\[percent\ change={end\ value-start\ value\over start\ value}\times 100%\]</span> 会有问题：价格上升和下降计算的结果不同，因此改为 <strong>midpoint method</strong> <span class="math display">\[percent\ change={end\ value-start\ value\over midpoint\ value}\times 100%\]</span></p></li><li><p>当然极限情况下不会出现这种情况</p></li></ul><p>哪些因素影响了商品的弹性？</p><ul><li>the extent to which close substitutes are available</li><li>whether the good is a necessity or a luxury</li><li>how broadly or narrowly the good is defined (e.g., “Blue Jeans” vs. “Clothing”)</li><li>the time horizon—elasticity is higher in the long run than the short run</li></ul><p>可以把价格弹性分成五类</p><ul><li>“Perfectly inelastic demand” 弹性为零，P 不影响 Q</li><li>“Inelastic demand” 小于 1</li><li>“Unit elastic demand” 等于 1</li><li>“Elastic demand” 大于 1</li><li>“Perfectly elastic demand” 无穷大，斜率为 0，P 稍一改动就没有人购买</li></ul><p>简单描述了 （需求价格）弹性和总收益 Total Revenue 的关系：弹性大于 1，价格上升的比例小于购买减少的比例，总收益（即需求曲线上一点围成的矩形）下降。</p><p>影响供给价格弹性的因素</p><ul><li>The more easily sellers can change the quantity they produce, the greater the price elasticity of supply.</li><li>For many goods, price elasticity of supply is greater in the long run than in the short run, because firms can build new factories, or new firms may be able to enter the market.</li><li>Supply often becomes less elastic as Q rises, due to capacity limits.（曲线上的变化，在 PQ 图上曲线上扬）</li></ul><p>一些其他的 Elasticities</p><ul><li><strong>Income elasticity of demand</strong>：需求随着收入的变化，第 4 章中将的 normal good 的需求收入弹性大于零，而 inferior goods 的需求收入弹性小于零；</li><li><strong>Cross-price elasticity of demand</strong>：衡量商品 1 的 Q 相对于商品 2 的价格变化情况，对于 substitutes 来说，需求的交叉价格弹性大于零（被替代品价格上升，替代品的销售量增加），而对于 complements 来说需求的交叉价格弹性小于零；</li></ul><h2 id="供给需求与政府政策">6. 供给、需求与政府政策</h2><p><strong>价格上限</strong> 是某种物品与劳务的法定最高价格。租金控制是一个例子。如果价格上限低于均衡价格，则需求量大于供给量。由于所引起的短缺，卖者必须以某种方式在买者中配给物品或劳务。</p><p><strong>价格下限</strong> 是某种物品或劳务的法定最低价格。最低工资是一个例子。如果价格下限高于均衡价格，则供给量大于需求量。由于所引起的过剩，必然要以某种方式在卖者中配给买者的物品或劳务需求。</p><p>当政府对一种物品征收 <strong>税收</strong> 时，该物品的均衡数量减少。也就是说，对某一市场征税缩小了该市场的规模。</p><p>对一种物品的征税是在买者支付的价格和卖者得到的价格之间打入的一个楔子。当市场向新均衡变动时，买者为该物品支付的价格高了，而卖者从该物品得到的价格低了。从这种意义上说，买者与卖者分摊了税收负担。</p><p>税收归宿(也就是说，税收负担的分摊）并不取决于是向买者征税，还是向卖者征税。税收归宿取决于供给和需求的价格弹性。税收负担更多地落在缺乏弹性的市场一方，因为市场的这一方较难通过改变购买量或销售量来对税收做出反应。</p><ul><li><p>A price ceiling is a legal maximum on the price of a good. An example is rent control. If the price ceiling is below the eq’m price, it is binding and causes a shortage.</p></li><li><p>A price floor is a legal minimum on the price of a good. An example is the minimum wage. If the price floor is above the eq’m price, it is binding and causes a surplus. The labor surplus caused by the minimum wage is unemployment.</p></li><li><p>A tax on a good <strong>places a wedge between the price buyers pay and the price sellers receive</strong>, and causes the <strong>eq’m quantity to fal</strong>l, whether the tax is imposed on buyers or sellers.</p></li><li><p>The incidence of a tax is the division of the burden of the tax between buyers and sellers, and does not depend on whether the tax is imposed on buyers or sellers.</p></li><li><p>The incidence of the tax depends on the price elasticities of supply and demand.</p></li></ul><p>政府控制市场 Outcome 的一些政策</p><ul><li>Price controls<ul><li>Price ceiling: a legal maximum on the price of a good or service Example: rent control</li><li>Price floor: a legal minimum on the price of a good or service Example: minimum wage</li></ul></li><li>Taxes<ul><li>The govt can make buyers or sellers pay a specific amount on each unit.</li></ul></li></ul><p>价格上限造成的影响</p><p><img src="16052300833447.jpg" /></p><ul><li>由于价格的上限造成了供需不平衡（长期 supply and demand are more price-elastic 所以 shortage 会加大）</li><li>With a shortage, sellers must <strong>ration</strong> the goods among buyers. 这样的选择没有价格机制那么高效，efficient (the goods go to the buyers that value them most highly)</li></ul><p>而价格下限的常见例子是 <strong>最低工资标准</strong>，造成劳动力市场的 surplus；其对于 skilled workers 没有影响，而是会影响 teen workers，常会造成 unemployment。</p><p>PPT 中分析了对于消费者收税和对于商家收费带来的影响，</p><ul><li>两者分别会需求曲线和供给曲线的移动，但最终的结果（Q 一样，两个新的均衡点分别在原供给和原需求曲线上）是一样的；</li><li>也即，收税在消费者的价格和商家的价格之间嵌入了一个 楔子 wedge；</li><li><p>虽然新的均衡价格是不一样的，但实际上无论是把税加在哪一方头上，最终商家的实际价格和消费者的实际价格都是一样的；</p></li><li>因此，相对于原来的价格，消费者和商家的价格分别上升和下降了，也即他们分别承担了一部分的 tax；</li><li><p>他们分担的比率取决于两者的价格弹性（斜率？）。例如，在奢侈品市场上，商家的供给曲线短期内缺乏弹性，曲线更为 sharp，因此承担更大部分的税收。</p></li></ul><p><img src="16052300928793.jpg" /></p><h2 id="消费者生产者与市场效率">7. 消费者、生产者与市场效率</h2><p><strong>消费者剩余</strong> 等于买者对一种物品的支付意愿减去其实际为此所支付的量，它衡量买者从参与市场中得到的利益。可以通过找出需求曲线以下和价格以上的面积，来计算消费者剩余。</p><p><strong>生产者剩余</strong> 等于卖者出售其物品得到的量减去其生产成本，它衡量卖者从参与市场中得到的利益。可以通过找出价格以下和供给曲线以上的面积，来计算生产者剩余。</p><p>使消费者剩余和生产者剩余的总和最大化的资源配置被称为是 <strong>有效率的</strong>。决策者通常关心经济结果的 <strong>效率以及平等</strong>。供给与需求的均衡使消费者剩余与生产者剩余的总和最大化。这就是说，市场中看不见的手指引着买者与卖者有效地配置资源。</p><p>在存在 <strong>市场势力或外部性</strong> 等 <strong>市场失灵</strong> 的情况下，市场不能有效地配置资源。</p><ul><li><p>The height of the D curve reflects the value of the good to buyers—their willingness to pay for it.</p></li><li><p>Consumer surplus is the difference between what buyers are willing to pay for a good and what they actually pay.</p></li><li><p>On the graph, consumer surplus is the area between P and the D curve.</p></li><li><p>The height of the S curve is sellers’ cost of producing the good. Sellers are willing to sell if the price they get is at least as high as their cost.</p></li><li><p>Producer surplus is the difference between what sellers receive for a good and their cost of producing it.</p></li><li><p>On the graph, producer surplus is the area between P and the S curve.</p></li><li><p>To measure society’s well-being, we use total surplus, the sum of consumer and producer surplus.</p></li><li><p>Efficiency means that total surplus is maximized, that the goods are produced by sellers with lowest cost, and that they are consumed by buyers who most value them.</p></li><li><p>Under perfect competition, the market outcome is efficient. Altering it would reduce total surplus.</p></li></ul><p>这一章研究了 <strong>福利经济学</strong> Welfare Economics</p><ul><li>Recall, the <strong>allocation of resources</strong> refers to:<ul><li>how much of each good is produced</li><li>which producers produce it</li><li>which consumers consume it</li></ul></li><li><strong>Welfare economics</strong> studies how the allocation of resources affects economic well-being.</li></ul><p>下面的一组概念</p><ul><li><p>先定义 <strong>Willingness to Pay (WTP)</strong>：A buyer’s willingness to pay for a good is the maximum amount the buyer will pay for that good.</p></li><li><p>消费者剩余 <strong>Consumer Surplus (CS)</strong>：Consumer surplus is the amount a buyer is willing to pay minus the amount the buyer actually pays <span class="math display">\[CS=WTP-P\]</span></p><p>消费者剩余衡量了其意愿出的价格和实际价格之间的差距，反映了消费者一方的「福利」。</p><p>对于每一个个体的 WTP 累积，可以得到阶梯形的 PQ 曲线，而当数量很大的时候，变为平滑的直线；下图展示了消费者剩余的计算方式。</p></li></ul><p><img src="16052301049280.jpg" /></p><p>类似地，可以有</p><ul><li><p><strong>Cost</strong> is the value of everything a seller must give up to produce a good (i.e., opportunity cost).</p></li><li><p>Producer Surplus (PS) <span class="math display">\[PS=P-cost\]</span></p></li><li><p>Total Surplus (TS) <span class="math display">\[TS=CS+PS\]</span></p></li></ul><p>得到了总剩余，即 total gains from trade in a market，也等于 (value to buyers) – (cost to sellers)</p><p>由此得到了 TS 的概念，以此来衡量社会的福利；我们通过这样指标，<strong>来判定资源分配是否是有效的</strong>。下面是具体的推理/描述</p><blockquote><p>The Market’s Allocation of Resources</p><p>§ In a market economy, the allocation of resources is <strong>decentralized</strong>, determined by the interactions of many self-interested buyers and sellers.</p><p>§ <strong>Is the market’s allocation of resources desirable?</strong> Or would a different allocation of resources make society better off?</p><p>§ To answer this, we use total surplus as a measure of society’s well-being, and we consider whether the market’s allocation is <strong>efficient</strong>.</p><p>(Policymakers also care about equality, though our focus here is on efficiency.)</p><p>An allocation of resources is efficient if it maximizes total surplus. Efficiency means:</p><p>§ The goods are consumed by the buyers who value them most highly.</p><p>§ The goods are produced by the producers with the lowest costs.</p><p>§ Raising or lowering the quantity of a good would not increase total surplus.</p></blockquote><p>而在市场下，那些 WTP 高于均衡价格的消费者得到了产品，那些 cost 低于均衡价格的生产者生产产品；可以利用 SD 曲线，说明在市场均衡价格下，极大化了 TS。——也即 Adam Smith 所谓的 <strong>Invisible Hand</strong> (The Wealth of Nations, 1776)。</p><p>也就是说，政府的干预无法提升，事实上只会使得社会福利下降。</p><p>通过这些分解过程，我们印证了第一章中的论断 Markets are usually a good way to organize economic activity；注意到，这里的推断是基于完全竞争市场的假设得到的，在其他情况下不一定成立（即市场失灵），例如说</p><ul><li>a buyer or seller has market power—the ability to affect the market price.</li><li>transactions have side effects, called externalities, that affect bystanders. (example: pollution)</li></ul><h2 id="应用赋税的代价">8. 应用：赋税的代价</h2><p>一种物品的税收使该物品买者与卖者的福利减少了，而且，消费者剩余和生产者剩余的减少常常超过了政府筹集到的收入。总剩余——消费者剩余、生产者剩余和税收收入之和——的减少被称为税收的 <strong>无谓损失</strong>。</p><p>税收带来无谓损失是因为它使买者少消费，使卖者少生产，而且，这种行为变动使市场规模缩小到使总剩余最大化的水平之下。由于供给弹性和需求弹性衡量市场参与者对市场状况变动的反应程度，所以，弹性越大意味着无谓损失越大。</p><p>税收增加越多，它对激励的扭曲越大，无谓损失也就越大。但由于税收减少了市场规模，税收收入不会一直增加。税收收入起初随着税收规模的扩大而增加，但如果税收规模达到足够大，税收收入就会开始下降。</p><ul><li><p>A tax on a good reduces the welfare of buyers and sellers. This welfare loss usually exceeds the revenue the tax raises for the govt.</p></li><li><p>The fall in total surplus (consumer surplus, producer surplus, and tax revenue) is called the <strong>deadweight loss (DWL) of the tax</strong>.</p></li><li><p>A tax has a DWL because it causes consumers to buy less and producers to sell less, thus <strong>shrinking the market below the level that maximizes total surplus.</strong></p></li><li><p>The price elasticities of demand and supply measure how much buyers and sellers respond to price changes. Therefore, higher elasticities imply higher DWLs.</p></li><li><p>An increase in the size of a tax causes the DWL to rise even more.</p></li><li><p>An increase in the size of a tax causes revenue to rise at first, but eventually revenue falls because the tax reduces the size of the market.</p></li></ul><p>这一章利用了 Welfare 经济学的思想分析了 tax 所带来的影响：在未征税的情况下，ABC 为 CS，DEF 为 PS；而征税后，两者分别为 A 和 F，而 Tax revenue 为 BD；丢失的那部分被称之为 <strong>deadweight loss</strong> DWL。</p><p>DWL 产生的原因是，由于征税减少了 <span class="math inline">\(Q_E\)</span> 到 <span class="math inline">\(Q_T\)</span>，而对于那一部分的生产者和消费者来说，消费者的 WTP 要高于 cost 是会带来整体的 welfare 的。</p><p><img src="16052301177771.jpg" /></p><p>之后分析了一下 DWL 的大小：高度是一定的，那么这个三角形的大小取决于由于征税地阿莱的销售量的减少。商品的 elasticity 越大（斜率越小），由于价格的变化带来的销售量的减少也越大，DWL 也越大。例如（结合第 5 张弹性中的观点）</p><ul><li>Breakfast cereal 相较于 sunscreen 有更接近的替代品，因此弹性更好，征税带来的 DWL 较大；</li><li>Hotel rooms in the short run 相较于 in the long run 弹性更差，DWL 更小；</li><li>At fancy restaurants 中，Groceries 相较于 meals 更是必需品，弹性更差，DWL 更小。</li></ul><p>How Big Should the Government Be?</p><blockquote><ul><li><p>A bigger government provides more services, but requires higher taxes, which cause DWLs.</p></li><li><p>The larger the DWL from taxation, the greater the argument for smaller government.</p></li><li><p>The tax on labor income is especially important; it’s the biggest source of govt revenue.</p></li><li><p>For the typical worker, the <strong>marginal tax rate</strong> (the tax on the last dollar of earnings) is about 40%.</p></li><li><p>How big is the DWL from this tax? It depends on elasticity….</p></li><li><p><strong>If labor supply is inelastic</strong>, then this DWL is small.</p></li><li><p>Some economists believe labor supply is inelastic, arguing that most workers work full-time regardless of the wage.</p></li><li><p>Other economists believe labor taxes are highly distorting because some groups of workers have elastic supply and can respond to incentives:</p></li><li><ul><li>Many workers can adjust their hours, e.g., by working overtime.</li></ul></li><li><ul><li>Many families have a 2 nd earner with discretion over whether and how much to work.</li></ul></li><li><ul><li>Many elderly choose when to retire based on the wage they earn.</li></ul></li><li><ul><li>Some people work in the “underground economy” to evade high taxes.</li></ul></li></ul></blockquote><h2 id="应用国际贸易">9. 应用：国际贸易</h2><p>通过比较没有国际贸易时的国内价格和世界价格，可以确定自由贸易的影响。国内价格低表明，该国在生产这种物品上有比较优势，而且将成为出口者。国内价格高表明，世界其他国家在生产这种物品上有比较优势，而且该国将成为进口者。</p><p>当一国允许贸易并成为一种物品的出口者时，该物品生产者的状况变好了，而该物品消费者的状况变坏了。当一国允许贸易并成为一种物品的进口者时，该物品消费者的状况变好了，而该物品生产者的状况变坏了。在这两种情况下，贸易的好处都大于损失。</p><p>关税——对进口物品征收的一种税——使市场向没有贸易时的均衡移动，因此，减少了贸易的好处。虽然国内生产者的状况变好了，而且政府收入增加了，但消费者的损失大于这些好处。</p><p>有各种限制贸易的观点：<strong>保护工作岗位、保卫国家安全、帮助幼稚产业、防止不公平竞争以及对外国的贸易限制做出反应</strong>。尽管这些观点在某些情况下有些道理，但经济学家相信，自由贸易通常是一种更好的政策。</p><ul><li><p>A country will export a good if the world price of the good is higher than the domestic price without trade. Trade raises producer surplus, reduces consumer surplus, and <strong>raises total surplus</strong>.</p></li><li><p>A country will import a good if the world price is lower than the domestic price without trade. Trade lowers producer surplus but raises consumer and total surplus.</p></li><li><p>A tariff benefits producers and generates revenue for the govt, but the losses to consumers exceed these gains.</p></li><li><p>Common arguments for restricting trade include: protecting jobs, defending national security, helping infant industries, preventing unfair competition, and responding to foreign trade restrictions.</p></li><li><p>Some of these arguments have merit in some cases, but economists believe free trade is usually the better policy.</p></li></ul><p>这一章是从 Welfare 的角度来看国际贸易：贸易可以带来福利的提升。</p><p>这里假设有一个 world price，而国家是 price taker，即市场份额很小。例如，对下面的国家来说， world price 为 6 美元，生产者和消费者都接受这一价格，没有贸易和进行贸易前后的情况如下</p><p><img src="16052301308808.jpg" /></p><p>Other Benefits of International Trade</p><blockquote><p>§ Consumers enjoy increased variety of goods.</p><p>§ Producers sell to a larger market, may achieve lower costs by producing on a larger scale.</p><p>§ Competition from abroad may reduce market power of domestic firms, which would increase total welfare.</p><p>§ Trade enhances the flow of ideas, facilitates the spread of technology around the world.</p></blockquote><p>理想情况下自然是自由贸易可以带来福利，但是无限制的贸易也会带来福利的考量之外的一些问题；因此，出现了 关税 <strong>Tariff</strong>。</p><p>下面给出了由于关税造成的 DWL</p><p><img src="16052301539261.jpg" /></p><ul><li>除了关税，另外一种限制国际贸易的方式是 <strong>进口配额 Import Quotas</strong></li></ul><p>对于关税的一些争议</p><ol type="1"><li><p><strong>The jobs argument</strong>: Trade destroys jobs in the industries that compete against imports.</p><p>Total unemployment does not rise as imports rise, because job losses from imports are offset by job gains in export industries.</p><p>Even if all goods could be produced more cheaply abroad, the country need only have a comparative advantage to have a viable export industry and to gain from trade.</p></li><li><p><strong>The national security argument</strong>: An industry vital to national security should be protected from foreign competition, to prevent dependence on imports that could be disrupted during wartime.</p><p>Fine, as long as we base policy on true security needs.</p><p>But producers may exaggerate their own importance to national security to obtain protection from foreign competition.</p></li><li><p><strong>The infant-industry argument</strong>: A new industry argues for temporary protection until it is mature and can compete with foreign firms.</p><p>Difficult for govt to determine which industries will eventually be able to compete and whether benefits of establishing these industries exceed cost to consumers of restricting imports. Besides, if a firm will be profitable in the long run, it should be willing to incur temporary losses.</p></li><li><p><strong>The unfair-competition argument</strong>: Producers argue their competitors in another country have an unfair advantage, e.g. due to govt subsidies.</p><p>Great! Then we can import extra-cheap products subsidized by the other country’s taxpayers.</p><p>The gains to our consumers will exceed the losses to our producers.</p></li><li><p><strong>The protection-as-bargaining-chip argument</strong>: Example: The U.S. can threaten to limit imports of French wine unless France lifts their quotas on American beef.</p><p>Suppose France refuses. Then the U.S. must choose between two bad options:</p><ol type="A"><li><p>Restrict imports from France, which reduces welfare in the U.S.</p></li><li><p>Don’t restrict imports, which reduces U.S. credibility.</p></li></ol></li></ol><h2 id="外部性-externalities">10. 外部性 Externalities</h2><p>当买者和卖者之间的交易间接影响第三方时，这种影响称为 <strong>外部性</strong>。如果一项活动产生了负外部性，例如污染，市场的社会最适量将小于均衡量。如果一项活动产生了正外部性，例如技术溢出效应，社会最适量将大于均衡量。</p><p>政府用各种政策来解决外部性引起的无效率。有时政府通过管制来防止从社会来看无效率的活动。有时政府通过矫正税来使外部性内部化。还有一种公共政策是发放许可证。例如，政府可以通过发放数量有限的污染许可量来保护环境。这种政策的结果与对污染者征收矫正税的结果大致相同。</p><p>受外部性影响的人有时可以用私人方法解决问题。例如，当一个企业给另一个企业带来了外部性时，两个企业可以通过合并把外部性内在化。此外，利益各方也可通过签订合约来解决问题。根据 <strong>科斯定理</strong>，如果人们能够无成本地谈判，那么，他们总可以达成一个资源有效配置的协议。但在许多情况下，在许多利益各方间达成协议是很困难的，从而科斯定理并不适用。</p><ul><li><p>An externality occurs when a market transaction affects a third party. If the transaction yields negative externalities (e.g., pollution), the market quantity exceeds the socially optimal quantity. If the externality is positive (e.g., technology spillovers), the market quantity falls short of the social optimum.</p></li><li><p>The government can attempt to remedy the problem. It can internalize the externality using <strong>corrective taxes</strong>. It can issue permits to polluters and establish a market where <strong>permits can be traded.</strong> Such policies often protect the environment at a lower cost to society than direct regulation.</p></li></ul><p>在第一章中的一个论断 Markets are usually a good way to organize economy activity. 然而会有一些例外的情况，例如这里的 <strong>外部性</strong> 就是其一（还比如市场非完全竞争），其为 <strong>the uncompensated impact of one person’s actions on the well-being of a bystander.</strong> 外部性可分为 negative 或 positive，取决于其对于他人是好是坏。</p><p>如何解决这一市场失效问题？还是第一章中的论断：Governments can sometimes improve market outcomes.</p><p>一些负外部性的例子：</p><blockquote><ul><li><p>Air pollution from a factory</p></li><li><p>The neighbor’s barking dog</p></li><li><p>Late-night stereo blasting from the dorm room next to yours</p></li><li><p>Noise pollution from construction projects</p></li><li><p>Health risk to others from second-hand smoke</p></li><li><p>Talking on cell phone while driving makes the roads less safe for others</p></li></ul></blockquote><p><img src="16052301677643.jpg" /></p><p>在之前的 SD 曲线分析中，我们考虑的事实上是 private value 和 private cost；在负外部性的场景下，Social cost还包含了一部分的 external cost，因此总的成本曲线上移；然而市场均衡还是按照 private 曲线进行的，因此造成了市场失灵。</p><p><strong>Internalizing the externality</strong></p><ul><li>解决的策略是使这样的外部性成本内部化，例如征收 1 美元的 tax，就可以调整成本曲线要该有的位置。</li></ul><p>一些正外部性的例子</p><blockquote><ul><li><p>Being vaccinated against contagious diseases protects not only you, but people who visit the salad bar or produce section after you.</p></li><li><p>R&amp;D creates knowledge others can use.</p></li><li><p>People going to college raise the population’s education level, which reduces crime and improves government.</p></li></ul></blockquote><p>负外部性改变的是整个社会的「成本」，商品在生产的过程中并未将这一成本考虑进去；而正外部改变的是社会的「social value」，因此这一商品产生了 external benefit 而这并未在市场中被考虑到。因此，正外部性将造成总的 Social value 曲线高于私人的需求曲线。</p><ul><li>一种补偿正外部性的方式是 <strong>津贴</strong> subsidize goods with positive externalities</li></ul><p>下面进一步讨论了控制外部性的一些政策</p><ul><li><strong>Command-and-control policies</strong> regulate behavior directly. Examples:<ul><li>limits on quantity of pollution emitted</li><li>requirements that firms adopt a particular technology to reduce emissions</li></ul></li><li><strong>Market-based policies</strong> provide incentives so that private decision-makers will choose to solve the problem on their own. Examples:<ul><li>corrective taxes and subsidies</li><li>tradable pollution permits</li></ul></li></ul><p>下面挨个儿来说</p><ul><li><strong>Corrective tax</strong>: a tax designed to induce private decision-makers to take account of the social costs that arise from a negative externality.<ul><li>Also called <strong>Pigouvian taxes</strong> after Arthur Pigou (1877-1959).</li><li>The ideal corrective tax = external cost</li></ul></li><li>corrective subsidy<ul><li>For activities with positive externalities, ideal corrective subsidy = external benefit</li></ul></li></ul><p>比较了强制的监管措施和以上的矫正型税收之间的关系 Corrective Taxes vs. Regulations</p><blockquote><ul><li><p>Different firms have different costs of pollution abatement.</p></li><li><p>Efficient outcome: Firms with the lowest abatement costs reduce pollution the most.</p></li><li><p>A pollution tax is efficient:</p></li><li><p>Firms with low abatement costs will reduce pollution to reduce their tax burden.</p></li><li><p>Firms with high abatement costs have greater willingness to pay tax.</p></li><li><p>In contrast, a regulation requiring all firms to reduce pollution by a specific amount not efficient.</p></li></ul></blockquote><p>因此，Corrective taxes are better for the environment:</p><ul><li>The corrective tax gives firms incentive to continue reducing pollution as long as the cost of doing so is less than the tax.</li><li>If a cleaner technology becomes available, the tax gives firms an incentive to adopt it.</li><li>In contrast, firms have no incentive for further reduction beyond the level specified in a regulation.</li></ul><p>最后是 <strong>Tradable Pollution Permits</strong></p><ul><li>A tradable pollution permits system reduces pollution at lower cost than regulation.<ul><li>Firms with low cost of reducing pollution do so and sell their unused permits.</li><li>Firms with high cost of reducing pollution buy permits.</li></ul></li><li>Result: Pollution reduction is concentrated among those firms with lowest costs.</li></ul><p>比较了一下可交易的污染许可和矫正型税收的关系：生产者的污染需求同样是向下倾斜的，因此可以按照市场平衡的逻辑进行，使用可交易的污染许可，可以使得这一市场自行达成平衡；而对于污染税来说，其对于污染控制的效率更低。</p><p>除了政策的手段，对于外部性的处理还可以有一些 private 的手段。包括</p><ul><li>Moral codes and social sanctions, e.g., the “Golden Rule”</li><li>Charities, e.g., the Sierra Club 塞拉俱乐部，美国一个草根环境组织</li><li>Contracts between market participants and the affected bystanders</li></ul><p><strong>The Coase theorem</strong>: If private parties can costlessly bargain over the allocation of resources, they can solve the externalities problem on their own.</p><p>下面讲了科斯定理的一个例子：一个宠物狗晚上叫造成负外部性的情况。</p><p><img src="16052301820917.jpg" /></p><p>比较好理解，蓝框部分指的是，无论是从 Dick has the right to keep Spot 还是 Jane has the legal right to peace and quiet 的角度来看，最终达成的和解都是有效率的。</p><p>然而，上述的讨论是理想情况，在现实中会存在着各种的阻力 Why Private Solutions Do Not Always Work</p><ul><li><p><strong>Transaction costs</strong>:</p><p>The costs parties incur in the process of agreeing to and following through on a bargain.</p><p>These costs may make it impossible to reach a mutually beneficial agreement.</p></li><li><p>Stubbornness:</p><p>Even if a beneficial agreement is possible, each party may hold out for a better deal.</p></li><li><p>Coordination problems:</p><p>If # of parties is very large, coordinating them may be costly, difficult, or impossible.</p></li></ul><blockquote><p>外部性 externality：一个人的行为对旁观者福利的无补偿的影响（正负）。 例子：纸张副产品二恶英 dioxin；汽车废气；修复历史建筑（正）；新技术</p><h3 id="外部性和市场无效率">10.1 外部性和市场无效率</h3><p>福利经济学：回顾；负的外部性（铝市场，社会成本大于私人成本，最适量小于均衡数量，对策：征税）；正的外部性（教育，社会价值大于私人价值，最适量小于均衡数量，对策：补贴）【供给对应成本，需求对应价值】 #注意 外部性内部化：改激励，以使人们考虑到自己行为的外部效应。（人们会对激励做出反应 #原理）</p><h3 id="针对外部性的公共政策">10.2 针对外部性的公共政策</h3><p>命令与控制政策：管控（如规定工厂可排放的最高污染）；以市场为基础的政策</p><ol type="1"><li>矫正性税收与补贴（比管控更有效率）；以市场为基础的政策</li><li>可交易的污染许可证（矫正说可以确定污染的价格，污染权的供给曲线完全有弹性，而需求曲线决定了污染量；污染许可证规定了污染量，供给曲线完全无弹性，而需求曲线的位置决定了污染的价格）</li></ol><p>矫正税corrective taxes（Pigovian taxes）：旨在引导私人决策者考虑负外部性引起的社会成本的税收。#定义 （矫正税与大多数其他税不同，矫正说改变了激励，使其考虑到外部性的存在，从而使资源配置向社会最适水平移动。因此，矫正说既增加了政府的收入，又提高了经济效率。）</p><h3 id="外部性的私人解决方法">10.3 外部性的私人解决方法</h3><p>私人解决方法的类型（道德规范和社会约束、慈善行为、有关各方的利己来解决、利益各方签订合约）；科斯定理；为什么私人解决方法并不总是有效（交易成本、谈判很容易破裂、利益各方人数众多时，达成有效率的协议尤其困难）</p><p>科斯定理 Coase Theorem：认为如果私人各方可以无成本地就资源配置进行协商，那么，他们就可以自己解决外部性问题地一个命题。 #定理 （最初的权力分配对市场达到有效率结果的能力无关紧要。） 交易成本 transcation cost：各方在达成协议与遵守协议过程中所发生的成本（起草和执行合约所需要的律师费；翻译） #定义</p><h3 id="结论">10.4 结论</h3><p>看不见的手是力量强大的，但不是万能的。市场均衡使生产者剩余和消费者剩余之和最大化。当市场上买者和卖者是仅有的利益方时，从整个社会的角度来看，这种结果是有效率的。但是，当存在诸如污染等外部性效应时，评价市场结果时还要考虑第三方的福利。在这种情况下，市场中看不见的手也许不能有效地配置资源。 在某些情况下，人们可以自己解决外部性问题。科斯定理表明，利益各方可以相互谈判，并达成一个有效率的解决方案。但是，有时无法通过谈判达成一个有效率的结果，这也许是因为利益各方人数太多而使谈判变得困难。 当人们不能用私人方式解决外部性问题时，政府往往就会介入。但即使有了政府干预，社会也不应该完全放弃市场的力量。政府可以通过要求决策者承担他们行为的全部成本来解决外部性问题。例如，排污的矫正说可污染许可证就是为了使污染的外部性内部化。这些做法日益成为那些关心环境保护的人的政策选择。只要得到适当的调整，市场力量往往是解决市场失灵的最好办法。</p></blockquote><h2 id="公共物品与公共资源">11. 公共物品与公共资源</h2><p>物品在是否具有排他性和竞争性上存在差别。如果阻止某个人使用某种物品是可能的，这种物品就具有排他性。如果一个人对某种物品的使用减少了其他人对同一物品的使用，这种物品就具有竞争性。市场运行最适用于既有排他性又有竞争性的私人物品。市场运行不适用于其他类型的物品。</p><p>公共物品既无竞争性又无排他性。公共物品的例子包括烟火表演、国防和基础知识的创造。由于不能对使用公共物品的人收费，所以在私人提供这种物品时，人们存在搭便车的激励。因此，政府提供公共物品，并以成本一收益分析为基础做出关于每种物品供给量的决策。 公共资源在消费中有竞争性但无排他性。例子包括公有的草地、清洁的空气和拥挤的道路。由于不能向使用公共资源的人收费，他们往往会过度地使用公共资源。因此，政府努力用各种方法限制公共资源的使用。</p><ul><li><p>A good is <strong>excludable</strong> if someone can be prevented from using it. A good is <strong>rival</strong> in consumption if one person’s use reduces others’ ability to use the same unit of the good.</p></li><li><p>Markets work best for private goods, which are excludable and rival in consumption. Markets do not work well for other types of goods.</p></li><li><p><strong>Public goods</strong>, such as national defense and fundamental knowledge, are neither excludable nor rival in consumption.</p></li><li><p>Because people do not have to pay to use them, they have an incentive to <strong>free ride</strong>, and firms have no incentive to provide them.</p></li><li><p>Therefore, the government provides public goods, using <strong>cost-benefit analysis</strong> to determine how much to provide.</p></li><li><p><strong>Common resources</strong> are rival in consumption but not excludable. Examples include common grazing land, clean air, and congested roads.</p></li><li><p>People can use common resources without paying, so they tend to overuse them. Therefore, governments try to limit the use of common resources.</p></li></ul><p>商品的分类：排他性和竞争性</p><ul><li>A good is <strong>excludable</strong> if a person can be prevented from using it.</li><li>A good is <strong>rival</strong> in consumption if one person’s use of it diminishes others’ use.</li></ul><p>由此区分出四类商品</p><ul><li><p>私人物品 Private goods: excludable, rival in consumption</p><p>Example: food</p></li><li><p><strong>公共物品 Public goods</strong>: not excludable, not rival</p><p>Example: national defense</p></li><li><p><strong>公共资源 Common resources</strong>: rival but not excludable</p><p>Example: fish in the ocean</p></li><li><p>俱乐部物品 Club goods: excludable but not rival</p><p>Example: cable TV</p></li></ul><p>例如，考虑一条公路，考虑其是否具有竞争性或排他性，竞争性意味着公路资源有限即是拥挤的，而排他性则指的是公路收费</p><blockquote><p>Uncongested non-toll road: public good</p><p>Uncongested toll road: club good</p><p>Congested non-toll road: common resource</p><p>Congested toll road: private good</p></blockquote><p>本章考虑的是两类 <strong>没有排他性</strong>（不收费？）的商品：公共物品和公共资源；由于没有价格机制的作用，会产生外部性；因此市场分配的结果不是有效率的，需要 Public policy 的干预。</p><h3 id="public-goods">Public Goods</h3><p>一些例子：</p><ul><li><p>National defense</p></li><li>Knowledge created through basic research</li><li><p>Fighting poverty</p></li></ul><p>Public goods are difficult for private markets to provide because of the free-rider problem.</p><ul><li><strong>搭便车 Free rider:</strong> a person who receives the benefit of a good but avoids paying for it</li></ul><p>If good is not excludable, people have incentive to be free riders, because firms cannot prevent non-payers from consuming the good. 原因在于商品没有排他性，其他人不需要付费即可享用。</p><blockquote><ul><li><p>If the benefit of a public good exceeds the cost of providing it, govt should provide the good and pay for it with a tax on people who benefit.</p></li><li><p>Problem: Measuring the benefit is usually difficult.</p></li><li><p><strong>Cost-benefit analysis</strong>: a study that compares the costs and benefits of providing a public good</p></li><li><p>Cost-benefit analyses are imprecise, so the</p></li></ul><p>efficient provision of public goods is more difficult than that of private goods.</p></blockquote><h3 id="common-resources">Common Resources</h3><p>一些例子</p><ul><li>Clean air and water</li><li>Congested roads</li><li>Fish, whales, and other wildlife</li></ul><p>和公共物品一样，没有排他性，也有 free riders 的现象；而不同之处在于，其还具有竞争性，资源是有限的。</p><p>讲了 公地悲剧 The Tragedy of the Commons 的例子：考虑一个镇子在草地养羊的例子</p><ul><li><p>The tragedy is due to an externality:</p><p>Allowing one’s flock to graze on the common land reduces its quality for other families.</p></li><li><p>People neglect this external cost, resulting in overuse of the land.</p></li></ul><p>一些解决方式：</p><ul><li>Impose a <strong>corrective tax</strong> on the use of the land to “internalize the externality.”<ul><li>Example: hunting &amp; fishing licenses, entrance fees for congested national parks</li></ul></li><li>Regulate use of the land (the “command-and-control” approach).</li><li>Auction off permits allowing use of the resource.<ul><li>Example: spectrum auctions by the U.S. Federal Communications Commission</li></ul></li><li>Divide the land, sell lots to individual families; each family will have incentive not to overgraze its own land.</li></ul><p>还给了一个有趣的例子，说明 spam e-mails 是公共资源：其几乎没有成本，无法阻止其他公司使用垃圾广告邮件，因此没有排他性；另一方面，一旦某个公司使用了 spam，它就变得 less effective，因此其又具有竞争性。</p><p>由于其是公共资源，最终的结果就是其被滥用，which is why we get so much of it!</p><blockquote><ul><li><p><strong>Public goods tend to be under-provided, while common resources tend to be over-consumed.</strong></p></li><li><p>These problems arise because <strong>property rights are not well-established</strong>:</p></li><li><p>Nobody owns the air, so no one can charge polluters. Result: too much pollution.</p></li><li><p>Nobody can charge people who benefit from national defense. Result: too little defense.</p></li><li><p>The govt can potentially solve these problems with appropriate policies.</p></li></ul></blockquote><blockquote><h3 id="不同类型的物品">11.1 不同类型的物品</h3><p>在提供人们需要的物品方面，市场能做到多好呢？对这问题的回答取决于所涉及的物品。 分类准则：排他性 excludablilty：一种物品具有的可以阻止一个人使用该物品的特定；消费中的竞争性rivalry in consumpation：一个人使用一种物品将减少其他人对该物品的使用的特性。#定义 私人物品 private goods：冰激凌蛋卷、衣服、拥挤的收费道路；公共物品 public goods：龙卷风报警器、国防、不拥挤的不收费道路；公共资源 coomon resources：海洋中的鱼、环境、拥挤的不收费道路；俱乐部物品 public goods/自然垄断：消防、有线电视、不拥挤的收费道路。#定义</p><p>本章考察没有排他性的物品：公共资源和公共物品；与外部性有关——因为这些有价值的东西没有价格。</p><h3 id="公共物品如7.4日焰火表演">11.2 公共物品（如7.4日焰火表演）</h3><p>搭便车者的问题（政府可以潜在地解决这个问题，如焰火表演，若一个公共物品地总利益大于成本，政府收税来支付）；一些重要的公共物品（国防、基础研究、反贫困）；成本--收益分析的难题 <strong>搭便车者 free rider</strong>：得到一种物品的利益但避免为此付费的人。#定义 成本--收益分析：比较提供以中国公共物品的社会成本与社会收益的研究 #定义</p><h3 id="公共资源">11.3 公共资源</h3><p>公地悲剧；一些重要的公共资源（清洁的空气和水、拥挤的道路、鱼、鲸和其他野生动物）； <strong>公地悲剧 Tragedy of the Commons</strong>：一个寓言，说明从整个社会的角度看，为什么公共资源的使用大于何意的水平。#定义 结论：当一个人使用公共资源时，他就减少了其他人对这种资源的使用。由于这种负外部性，公共资源往往被过度使用。政府可以通过管制或税收减少公共资源的消耗来解决这个问题。此外，政府可以把公共资源变为私人物品（如17世纪英国圈地运动）。</p><h3 id="结论产权的重要性">11.4 结论：产权的重要性</h3><p>在本章和上一章中，我们说明了存在一些市场不能充分提供的“物品”。市场不能确保我们呼吸的空气时清洁的，也不能确保我们的国家不受外国侵略。相反，社会依靠政府来保护环境并提供国防。 虽然我们在这两章考虑的问题产生于愈多不同的市场上，但他们有一个共同的主题。在所有的情况下，市场没有有效地配置资源，是因为没有很好地建立产权。这就是说，某些有价值的东西并没有在法律上有权控制它的所有者。例如，虽然没有人怀疑清洁的空气或国防等“物品”是有价值的，但没有一个人有权给它定一个价格，并从它的使用中得到利润。工厂污染太严重，是因为没有一个人能因为工厂派出污染而向它们收费；市场没有提供国防，是因为没有一个人能因为受到保卫的人获益而向它们收费。 当产权缺失引起市场失灵时，政府可以潜在地解决这个问题。有些时候，例如在出售污染许可证的情况下，解决方法是政府帮忙界定产权，从而释放市场的力量。另一些时候，例如在限制捕猎季节的情况下，解决方法是政府对私人行为进行管制。还有一些时候，例如在提供国防的情况下，解决方法是由政府提供市场不能提供的物品。在所有这些情况下，如果政策能得到很好的计划和实施，就可以使资源配置更有效率，从而增进经济福利。</p></blockquote><h2 id="税制的设计">12. 税制的设计</h2><p>美国政府用各种税收筹集收入。联邦政府最重要的税是个人所得税和用于社会保障的工薪税。州与地方政府最重要的税是销售税和财产税。</p><p>税制的效率是指它给纳税人带来的成本。除了资源从纳税人向政府的转移，税收还有两种成本：第一种是由于税收改变了激励、扭曲了资源配置而带来的 <strong>无谓损失</strong>；第二种是遵从税法的 <strong>管理负担</strong>。</p><p>税制的平等涉及税收负担是否公平地在个人之间进行分配。根据受益原则，人们根据他们从政府得到的收益来纳税是公平的。根据支付能力原则，人们根据他们承受财务负担的能力来纳税是公平的。当评价税制的平等性时，记住从税收归宿研究中得出的一条结论是很重要的：税收负担的分配与税单的分配不是一回事。</p><p>当考虑税法的变动时，决策者经常面临效率与平等之间的权衡取舍。大多数关于税收政策争论的产生是因为人们对这两个目标的侧重不同。</p><blockquote><h3 id="美国政府的财政概况">12.1 美国政府的财政概况</h3><h3 id="税收和效率">12.2 税收和效率</h3><h3 id="税收和平等">12.3 税收和平等</h3><h3 id="结论平等与效率之间的权衡取舍">12.4 结论：平等与效率之间的权衡取舍</h3><p>几乎每一个人都认为平等和效率使税制的两个最重要的目标。但这两个目标往往使冲突的，特别使当根据税制的累进性来评价平等时。人们对税收政策的分歧万网是由于他们对这些目标的侧重不同。 罗纳德 里根1980；比尔 克林顿1992；乔治 W 布什；巴拉克 奥巴马2008 只靠经济学家并不能确定平衡效率与平等目标的最好办法。这个问题不仅涉及经济学，还涉及政治哲学。</p></blockquote><h2 id="生产成本">13. 生产成本</h2><p>企业的目标是利润最大化，利润等于总收益减总成本。</p><p>分析企业的行为时，重要的是要包括生产的 <strong>所有机会成本</strong>。一些机会成本是显性的，例如，企业支付给工人的工资。另一些则是隐性的，例如，企业所有者在其企业工作而不去找其他工作所放弃的工资。</p><p>企业的成本反映其生产过程。随着投入量的增加，典型企业的生产函数变得更加平坦，这表现了 <strong>边际产量递减</strong> 的性质。因此，随着产量的增加，企业的总成本曲线变得更加陡峭。</p><p>企业的总成本可以分为固定成本和可变成本。固定成本是在企业改变产量时不变的成本。可变成本是在企业改变产量时改变的成本。</p><p>企业的总成本可以派生出成本的两种相关的衡量指标。<strong>平均总成本</strong> 是总成本除以产量。<strong>边际成本</strong> 是产量增加一单位时总成本的增加量。</p><p>在分析企业行为时，画出平均总成本和边际成本的图形往往是有所帮助的。对一个典型企业来说，边际成本随着产量增加而增加。平均总成本随着产量增加先下降，然后随着产量进一步增加而上升。<strong>边际成本曲线总是与平均总成本曲线相交于平均总成本的最低点</strong>。</p><p>一个企业的成本往往取决于所考虑的时间框架。特别是，许多成本在短期中是固定的，但在长期中是可变的。结果，当企业改变其产量水平时，短期中的平均总成本可以比长期中增加得更快。</p><ul><li><p><strong>Implicit costs</strong> do not involve a cash outlay, yet are just as important as explicit costs to firms’ decisions.</p></li><li><p><strong>Accounting profit</strong> is revenue minus explicit costs. <strong>Economic profit</strong> is revenue minus total (explicit + implicit) costs.</p></li><li><p>The production function shows the relationship between output and inputs.</p></li><li><p>The marginal product of labor is the increase in output from a one-unit increase in labor, holding other inputs constant. The marginal products of other inputs are defined similarly.</p></li><li><p>Marginal product usually diminishes as the input increases. Thus, as output rises, the production function becomes flatter, and the total cost curve becomes steeper.</p></li><li><p>Variable costs vary with output; fixed costs do not.</p></li><li><p><strong>Marginal cost</strong> is the increase in total cost from an extra unit of production. The MC curve is usually upward-sloping.</p></li><li><p>Average variable cost is variable cost divided by output.</p></li><li><p>Average fixed cost is fixed cost divided by output. AFC always falls as output increases.</p></li><li><p><strong>Average total cost (sometimes called “cost per unit”)</strong> is total cost divided by the quantity of output. The ATC curve is usually U-shaped.</p></li><li><p><strong>The MC curve intersects the ATC curve at minimum average total cost.</strong></p></li></ul><p>When MC &lt; ATC, ATC falls as Q rises. When MC &gt; ATC, ATC rises as Q rises.</p><ul><li><p>In the long run, all costs are variable.</p></li><li><p><strong>Economies of scale</strong>: ATC falls as Q rises.</p></li></ul><p><strong>Diseconomies of scale</strong>: ATC rises as Q rises.</p><p><strong>Constant returns to scale</strong>: ATC remains constant as Q rises.</p><p>这一章聚焦某一家公司，并假定公司的目标是最大化利润 <span class="math display">\[Profit=Total\ revenue-Total\ cost\]</span> 对 cost 进行分解</p><ul><li><p><strong>Explicit costs</strong> require an outlay of money,</p><p>e.g., paying wages to workers.</p></li><li><p><strong>Implicit costs</strong> do not require a cash outlay,</p><p>e.g., the opportunity cost of the owner’s time.</p></li></ul><p>联系第一章的那个论断：The cost of something is what you give up to get it.</p><p><img src="16052302029068.jpg" /></p><p>基于这两种成本的衡量方式，定义两种利润 Economic Profit vs. Accounting Profit</p><ul><li><p><strong>Accounting profit</strong></p><p>= total revenue minus total explicit costs</p></li><li><p><strong>Economic profit</strong></p><p>= total revenue minus total costs (including explicit and implicit costs)</p></li></ul><p>定义生产函数</p><ul><li><p>A <strong>production function</strong> shows the relationship between the quantity of inputs used to produce a good and the quantity of output of that good.</p></li><li><p>The <strong>marginal product</strong> of any input is the increase in output arising from an additional unit of that input, holding all other inputs constant. <span class="math display">\[Marginal\ product\ of\ labor(MPL)={\Delta Q\over\Delta L}\]</span></p></li></ul><p>边际生产递减</p><ul><li><p><strong>Diminishing marginal product</strong>:</p><p>the marginal product of an input declines as the quantity of the input increases (other things equal)</p></li></ul><p>再联系成本</p><ul><li><strong>Marginal Cost (MC)</strong> is the increase in Total Cost from producing one more unit: <span class="math display">\[MC={\Delta TC\over\Delta Q}\]</span></li></ul><p>边际成本的重要性在于，其描述了在边际情况下，每生产一个单位的产品所需要的成本；这对于企业的决策很重要，若 MC 高于出售产品所得到的 revenue，则企业不会生产。</p><p>分解成本</p><ul><li><strong>Fixed costs (FC)</strong> do not vary with the quantity of output produced.</li><li><strong>Variable costs (VC)</strong> vary with the quantity produced.</li><li><strong>Total cost (TC)</strong> = FC + VC</li></ul><p>基于上面的这组概念，绘制变化曲线</p><p><img src="16052302167049.jpg" /></p><p>说明一下：固定成本不变，可变成本随着产生量的增加而增加，并且呈现边际上升的趋势（这里假设了生产很少的时候效率也不高），如这里的 MC 曲线所示，即边际成本一开始减小，之后不断上升。而平均来看，平均的固定成本必然是下降的，而由于边际成本的先下降后上升的趋势，AVC 也呈现类似的样态，不过由于是平均值所以更加平缓；而 ATC（无论是这样的情形还是假设边际成本没有下降而是不断增加）曲线的样子一般都是先下降后上升。</p><p>另外需要注意的是，考虑到 MC 关注的是两个生产量之前的成本增加情况，所以是画在 Q 曲线半整数点的位置上的。</p><p>根据 ATC 的 U 形曲线性质，定义有效规模</p><ul><li><strong>Efficient scale</strong>: The quantity that minimizes ATC.</li></ul><p>注意到，ATC 的最低点和 MC 曲线密切相关：当 ATC 大于 MC 时，增加一单位生产所需要的成本低于平均成本，因此 ATC 是下降的。即，<strong>边际成本曲线总是与平均总成本曲线相交于平均总成本的最低点</strong>。</p><p><img src="16052302317519.jpg" /></p><ul><li><p>注意，上面考虑的是一家工厂在短期内的情况：其 FC 一般认为不可变</p></li><li>然而，长期来看，FC 也是可变的，例如改变工厂规模；</li><li><p>不同规模的通常的固定成本不同，ATC 曲线有不一样，例如下面考虑有三个 size 的工厂：S, M, L</p></li></ul><p><img src="16052302427374.jpg" /></p><p>根据生产量的不同，工厂会调整规模以达到最优的效率；而一般来说现实中不仅有三类而是更多，于是</p><p><img src="16052302652350.jpg" /></p><ul><li><strong>Economies of scale</strong> occur when increasing production allows greater specialization: workers more efficient when focusing on a narrow task.</li><li><strong>Diseconomies of scale</strong> are due to coordination problems in large organizations. E.g., management becomes stretched, can’t control costs.</li></ul><p>总结一下，企业在经营的过程中，成本是其重要的考量因素，本章介绍了几类不同的成本概念；下面的几章介绍了企业在不同的市场中如何运用这一概念达到最大化利润的目的。</p><h2 id="竞争市场上的企业">14. 竞争市场上的企业</h2><p>由于竞争企业是 <strong>价格接受者</strong>，所以它的收益与产量是同比例的。<strong>物品的价格等于企业的平均收益和边际收益</strong>。</p><p>为了使利润最大化，企业选择使边际收益等于边际成本的产量。由于竞争企业的边际收益等于市场价格，所以企业选择使价格等于边际成本的产量。因此，<strong>企业的边际成本曲线又是它的供给曲线</strong>。</p><p>在短期中，当企业不能收回其固定成本时，如果物品价格小于平均可变成本，企业将选择暂时 <strong>停止营业</strong>。在长期中，当企业不能收回其固定成本和可变成本时，如果价格小于平均总成本，企业将选择 <strong>退出市场</strong>。</p><p><strong>在可以自由进入与退出的市场上，长期中利润为零</strong>。在长期均衡时，所有企业都在有效规模上生产，价格等于最低平均总成本，而且，<strong>企业数量会自发调整，以满足在这种价格时的需求量</strong>。</p><p>需求变动在不同时间框架之内有不同影响。在短期中，需求增加引起价格上升，并带来利润，而需求减少引起价格下降，并带来亏损。<strong>但如果企业可以自由进入和退出市场，那么，在长期中企业数量将自发调整，使市场回到零利润均衡</strong>。</p><ul><li><p>For a firm in a perfectly competitive market, <strong>price = marginal revenue = average revenue</strong>.</p></li><li><p>If P &gt; AVC, a firm maximizes profit by producing the quantity where MR = MC. If P &lt; AVC, a firm will shut down in the short run.</p></li><li><p>If P &lt; ATC, a firm will exit in the long run.</p></li><li><p>In the short run, entry is not possible, and an increase in demand increases firms’ profits.</p></li><li><p>With free entry and exit, <strong>profits = 0</strong> in the long run, and <strong>P = minimum ATC</strong>.</p></li></ul><p>完全竞争市场的特点</p><ol type="1"><li><p>Many buyers and many sellers.</p></li><li><p>The goods offered for sale are largely the same.</p></li><li><p>Firms can freely enter or exit the market.</p></li></ol><p>Because of 1 &amp; 2, each buyer and seller is a “<strong>price taker</strong>” – takes the price as given.</p><p><img src="16052302852045.jpg" /></p><p>由于在竞争市场上，卖方和买方均为价格接受者，因此其收益呈现上面的特点。</p><ul><li>在竞争市场上，<span class="math inline">\(MR=P\)</span> ，注意这在其他市场中并不成立</li></ul><p>另外，MR 和 MC 的关系，有</p><ul><li>If MR &gt; MC, then increase Q to raise profit.</li></ul><p>对于商家来说，他们的决策 think at the margin，当边际收益大于边际成本时，增加产量可以提升利润，因此 MR 和 MC 决定了商家的决策。</p><p>另外，MC 和商家的供应量的关系：根据上述分析，可知商家的 MR 曲线就是其供给曲线。</p><p><img src="16052303008495.jpg" /></p><h3 id="shutdown-vs.-exit">Shutdown vs. Exit</h3><ul><li><p><strong>Shutdown</strong>: 停止营业</p><p>A short-run decision not to produce anything because of market conditions.</p></li><li><p><strong>Exit</strong>: 退出市场</p><p>A long-run decision to leave the market.</p></li></ul><p>注意到 shutdown 是短期内的决策，这时还会有 FC；而 exit 则是完全的退出。</p><p>考虑商家选择 shutdown 的决策：</p><ul><li><p>其停止营业付出的代价是这一期间内的总营收 TR，而其是获得的「收益」是不再营业而节省下来的 VC；</p></li><li><p>因此当 TR&lt;VC 的时候，商家选择shutdown，平均之后，即当 <span class="math display">\[P&lt;AVC\]</span> 时，营业所获得的平均利润无法补充生产的代价，会歇业</p></li><li><p>如下图所示，注意到商家的供给曲线是 MC；而当价格下降到 MC 和 ATC 曲线交点之下时，停止营业。</p></li></ul><p><img src="16052303184677.jpg" /></p><p>这里没有考虑 FC，因为这是短期内无法改变的，即沉没成本</p><ul><li><strong>沉没成本 Sunk cost</strong>: a cost that has already been committed and cannot be recovered<ul><li>Sunk costs should be irrelevant to decisions; you must pay them regardless of your choice.</li><li>FC is a sunk cost: The firm must pay its fixed costs whether it produces or shuts down.</li><li>So, FC should not matter in the decision to shut down.</li></ul></li></ul><p>注意到，FC 在长期内也是「可变的」。在上图中，若 P 在AVC 和 ATC 之前，商家会选择生产</p><ul><li><p>然而，此时出售商品获得的营收无法补偿平均成本，这时商家仍然是亏本的；</p></li><li><p>因此，影响商家是否进入或退出市场的，是 P 和 ATC 的关系</p></li><li><p>当 <span class="math display">\[P&lt;ATC\]</span> 时，长期来看，商家会选择退出市场</p></li><li><p>类似地，当 <span class="math display">\[P&gt;ATC\]</span> 时，新公司会选择进入该市场</p></li></ul><p>最后总结一下，长期内竞争市场下溢价企业的供给曲线</p><p><img src="16052303315126.jpg" /></p><h3 id="market-supply">Market Supply</h3><p>从对于一家企业的分析转向整个市场，考虑其供给。假设</p><ul><li>All existing firms and potential entrants have identical costs.</li><li>Each firm’s costs do not change as other firms enter or exit the market.</li><li>The number of firms in the market is<ul><li>fixed in the short run (due to fixed costs)</li><li>variable in the long run (due to free entry and exit)</li></ul></li></ul><p>是比较理想的，出于竞争市场的假设。</p><ul><li>市场的供给量是所有企业的供给量之和</li><li><strong>在短期内</strong>，企业的数量是固定的</li><li>每家企业都遵循利润最大化原则，因此生产量为 <span class="math inline">\(MC=MR\)</span> 的点</li><li>而我们假设每家企业的成本曲线是一样的，由此可以计算整个市场上的供给</li><li><strong>而在长期内</strong>，由于 Entry &amp; Exit，企业的数量是可变的，供给量的变动带来价格的变化</li><li>因此，长期的均衡点，发生在 <span class="math inline">\(P=ATC\)</span> 的时候，即每个企业都是 <strong>零利润的</strong>。</li></ul><p><strong>Long-run equilibrium</strong>: The process of entry or exit is completeremaining firms earn zero economic profit.</p><ul><li><p>我们知道，在竞争市场上，企业会选择生产量使得 <span class="math inline">\(P=MC\)</span></p></li><li><p>而由于零利润的平衡条件，有 <span class="math inline">\(MC=ATC\)</span> ；而在上一章中，我们知道 MC intersects ATC at minimum ATC，因此这时 ATC 为最低点</p></li><li><p>也即，在 LR 中， <span class="math display">\[P=\min ATC\]</span></p></li></ul><p>还有一个疑问：Why Do Firms Stay in Business if Profit = 0?</p><ul><li>Recall, economic profit is revenue minus all costs, including implicit costs like the opportunity cost of the owner’s time and money.</li><li><p>In the zero-profit equilibrium,</p><ul><li>firms earn enough revenue to cover these costs</li><li>accounting profit is positive</li></ul></li></ul><p>这里的 cost 衡量的是总体的机会成本，由此计算的 Profit=0 时，economic profit=0，但是 accounting profit 为正。</p><h4 id="需求变化的影响">需求变化的影响</h4><p>在竞争市场下，</p><ul><li>短期内，需求的上升带来价格上升，利润大于零；</li><li>而长期内，由于自由进出的假设，正利润会吸引企业进入该市场，最终平衡的结果仍然是：1. 利润为零；2. 价格维持在使得 LRATC 最低点的位置</li><li>如下图；这意味着， <strong>The LR market supply curve</strong> is horizontal at P = minimum ATC.</li></ul><p><img src="16052303452777.jpg" /></p><h4 id="why-the-lr-supply-curve-might-slope-upward">Why the LR Supply Curve Might Slope Upward</h4><p>对上述结论的一些补充</p><ul><li>The LR market supply curve is horizontal if<ul><li>all firms have identical costs, and</li><li>costs do not change as other firms enter or exit the market.</li></ul></li><li>If either of these assumptions is not true, then LR supply curve slopes upward.</li></ul><p>简言之，就是上述的讨论所预设的两个假定不满足</p><ul><li>Firms Have Different Costs 现实中不同企业的 cost 是有高有低的，直觉来看原本留在市场中的是那些成本最低的企业；而价格上升，使得那些成本偏高的企业也进入市场，造成了整体的 LRATC 曲线上扬，也就造成了长期 S 曲线不是水平而微微上扬的结果；此时，对于原本那些 cost 较低的企业来说利润为正；</li><li>Costs Rise as Firms Enter the Market 另一个假设要求企业的成本不随企业量的增长而改变，而现实中资源是有限的；P 的增长使得市场上的供应量增加，造成了成本的增长。</li></ul><p><img src="16052303566549.jpg" /></p><blockquote><p>本章的目的是考察就竞争市场上的企业如何做出生产决策。</p><h3 id="什么是竞争市场">14.1 什么是竞争市场</h3><p>竞争市场competitive market含义：完全竞争市场，有许多交易相同产品的买者与卖者，以至于每一个买者和卖者都是价格接收者的市场。 竞争企业的收益：价格不变，总收益与产量同比例变动 平均收益AR；边际收益MR</p><h3 id="利润最大化与竞争企业的供给曲线">14.2 利润最大化与竞争企业的供给曲线</h3><p>边际成本曲线和企业的供给决策：（对于竞争企业来说，企业产品的解各既等于平均收益ATR，也等于其边际收益MR #Note ）在本质上，由于企业的边际成本曲线决定了企业在任何一种价格时愿意供给的物品数量，因此，边际成本曲线也是竞争企业的供给曲线。（供给量为水品价格线与边际成本曲线的相交点） 企业的短期停止营业决策：停止营业的标准是：P &lt; ATC。竞争企业的短期供给曲线是边际成本曲线在平均可变成本曲线上的那一部分。 覆水难收与其他沉没成本 sunk cost：因此，竞争企业的短期供给曲线是边际成本曲线在平均可变成本曲线上的那一部分，而且，固定成本的大小对供给决策无关紧要。 企业退出或进入一个市场的长期决策：退出标准：P &lt; ATC。反之进入。如果企业在市场中，它将生产使边际成本等于物品价格的产量。竞争企业的长期供给曲线是边际成本位于平均总成本曲线之上的部分。 用竞争企业图形来衡量利润：利润 = (P - ATC) * Q。#Note</p><h3 id="竞争市场的供给曲线">14.3 竞争市场的供给曲线</h3><p>短期：有固定数量企业的市场供给：简单企业供给 * 数量 长期：有进入和退出的市场供给：有利则进入，因此，在这种进入和退出过程结束时，仍然留在市场上的企业的经济利润必定为零。来看利润公式，大于零时进入，反之退出。——得到结论，只有当价格和平均总利润相同时，进入和退出才结束。再由刚刚企业同时使价格等于边际成本来实现利益最大化，因此P = ATC = MC，平均总成本最低点（平均总成本=边际成本）为企业的有效规模。因此，在可以自由进入与退出的竞争市场的长期均衡中，企业一定实在其有效规模上运营。 如果竞争企业利润为零，为什么它们要留在市场上：区分经济利润和会计利润。 短期与长期的需求移动：企业的进入和退出使长期市场供给曲线使完全有弹性的（需求曲线水平，短期供给线向右上方）#Note 为什么长期供给曲线向右上方倾斜：1. 用于生产的资源数量可能是有限的；2. 不同企业可能有不同的成本。（注意，如果企业有不同的成本，一些企业在长期内也能盈利，因为退出考虑的边际企业的平均总成本=价格）</p><h3 id="结论-1">14.4 结论</h3><p>如果该市场中的企业是竞争的和利润最大化的，则一种物品的价格等于生产这种物品的边际成本。此外，如果企业可以自由进入和退出市场，价格还等于可能的最低平均总成本。</p></blockquote><h2 id="垄断">15. 垄断</h2><p>垄断者是在其市场上为唯一卖者的企业。当一个企业拥有一种关键资源，当政府给一个企业排他性地生产一种物品的权利，或者当一个企业可以比许多同行企业以较低成本供给整个市场时，垄断就产生了。</p><p>由于垄断者是其市场上唯一的生产者，所以它面临向右下方倾斜的产品 <strong>需求曲线</strong>。当垄断者增加一单位产量时，就引起它的产品价格下降，这就减少了所有单位的产量赚到的收益量。因此，<strong>垄断者的边际收益总是低于其物品的价格</strong>。</p><p>和竞争企业一样，<strong>垄断企业也通过生产边际收益等于边际成本的产量来实现利润最大化</strong>。这时垄断者根据需求量选择价格。与竞争企业不同，垄断企业的价格高于它的边际收益，因此它的价格高于边际成本。</p><p>垄断者利润最大化的产量水平低于使消费者剩余与生产者剩余之和最大化的产量水平。这就是说，当垄断者收取高于边际成本的价格时，一些对物品评价大于其生产成本的消费者不再购买这种物品。因此，垄断引起的 <strong>无谓损失</strong> 类似于税收引起的无谓损失。</p><p>垄断者通常可以通过根据买者的支付意愿对同一种物品收取不同的价格来增加利润。这种 <strong>价格歧视</strong> 的做法可以通过使一些本来不想购买的消费者购买物品从而增加经济福利。在完全价格歧视的极端情况下，垄断的无谓损失完全消除了。而且，市场上所有剩余都归垄断生产者。在更一般的情况下，当价格歧视不完全时，与单一垄断价格相比，它会增加或减少福利。</p><p>决策者可以用四种方式对垄断行为的无效率做出反应：<strong>用反托拉斯法使行业更具竞争性；管制垄断者收取的价格；把垄断者变为政府经营的企业</strong>；或者，如果与政策不可避免的不完善性相比，市场失灵的程度相对要小，政府可以选择不作为。</p><ul><li>A monopoly firm is the sole seller in its market.</li></ul><p>Monopolies arise due to barriers to entry, including: <strong>government-granted monopolies, the control of a key resource, or economies of scale over the entire range of output</strong>.</p><ul><li><p>A monopoly firm faces a downward-sloping demand curve for its product. As a result, it must reduce price to sell a larger quantity, which causes marginal revenue to fall below price.</p></li><li><p>Monopoly firms maximize profits by producing the quantity where <strong>marginal revenue equals marginal cost.</strong> But since marginal revenue is less than price, the monopoly price will be greater than marginal cost, leading to a deadweight loss.</p></li><li><p>Monopoly firms (and others with market power) try to raise their profits by charging higher prices to consumers with higher willingness to pay. This practice is called price discrimination.</p></li><li><p>Policymakers may respond by r<strong>egulating monopolies, using antitrust laws to promote competition, or by taking over the monopoly and running it</strong>. Due to problems with each of these options, the best option may be to take no action.</p></li></ul><p>这一章研究垄断 monopoly，其和竞争市场中的企业的区别在于，其拥有 market power，能够影响市场价格。</p><p>垄断的原因是 <strong>barriers to entry</strong></p><ol type="1"><li><p>A single firm owns a key resource.</p><p>E.g., DeBeers owns most of the world’s diamond mines</p></li><li><p>The govt gives a single firm the exclusive right to produce the good.</p><p>E.g., patents, copyright laws</p></li><li><p><strong>Natural monopoly</strong>: a single firm can produce the entire market Q at lower cost than could several firms.</p><p>Example: 1000 homes need electricity</p><p>ATC is lower if one firm services all 1000 homes than if two firms each service 500 homes.</p></li></ol><p>注意到，我们在研究竞争市场时用的是企业的 S 曲线（MC），因为在这种情况下单一企业是价格的接受者，其面临的是一条水平的 D 曲线；而在垄断市场下，企业是唯一的 seller，因此其面临的 D 曲线就是整个市场的向下倾斜的 D 曲线。</p><p>而由于需求曲线的变动，造成了这一市场和竞争市场的一个重要区别</p><ul><li>此时 <span class="math inline">\(MR\ne P\)</span></li></ul><p>供给量的增长造成了价格的下降（不是因果关系），使得 MR 要小于 P。</p><p>当然，垄断企业本着利润最大化的原则，决定产量 Q 的法则还是边际情况：MR=MC，如下图所示</p><p><img src="16052303690901.jpg" /></p><p>此时，由于 Q 由 MC 和 MR 决定，P 不等于 ATC，也就是说，垄断企业的利润不等于零。</p><h4 id="a-monopoly-does-not-have-an-s-curve">A Monopoly Does Not Have an S Curve</h4><ul><li>A competitive firm<ul><li>takes P as given</li><li>has a supply curve that shows how its Q depends on P.</li></ul></li><li><p>A monopoly firm</p><ul><li>is a “price-maker,” not a “price-taker”</li><li>Q does not depend on P; <strong>Q and P are jointly determined by MC, MR, and the demand curve</strong>.</li></ul></li></ul><p>Hence, no supply curve for monopoly. 这里的逻辑是：在竞争市场中，企业是价格接受者，P 决定了其产量（P=MC 时候的量），也即有 S 曲线；而在垄断市场中，企业是「价格制定者」，Q 并不直接由 P 决定，而是取决于 MR 和 MC 曲线，并且是利用 Q 和 D 曲线得到价格 P 的，因此其没有一条显式的描述 PQ 关系的曲线，即不存在 S 曲线。</p><h3 id="the-welfare-cost-of-monopoly">The Welfare Cost of Monopoly</h3><p>在竞争市场的平衡中，P &gt; MR = MC，也就是说边际情况的消费者的 WTP 是要高于生产者的 cost 的，即会产生 DWL</p><p><img src="16052303839441.jpg" /></p><p>在这一场景下，商家还可能制定差异化定价以进一步提高利润</p><ul><li><strong>Price discrimination</strong>: selling the same good at different prices to different buyers.</li></ul><p><img src="16052303996111.jpg" /></p><p><img src="16052304074424.jpg" /></p><p>价格歧视的例子</p><ul><li><p><strong>Movie tickets</strong></p><p>Discounts for seniors, students, and people who can attend during weekday afternoons. They are all more likely to have lower WTP than people who pay full price on Friday night.</p></li><li><p>Airline prices</p><p>Discounts for Saturday-night stayovers help distinguish business travelers, who usually have higher WTP, from more price-sensitive leisure travelers.</p></li><li><p>Discount coupons</p><p>People who have time to clip and organize coupons are more likely to have lower income and lower WTP than others.</p></li><li><p>Need-based financial aid</p><p>Low income families have lower WTP for their children’s college education. Schools price-discriminate by offering need-based aid to low income families.</p></li><li><p>Quantity discounts</p><p><strong>A buyer’s WTP often declines with additional units</strong>, so firms charge less per unit for large quantities than small ones.</p><p>Example: A movie theater charges $4 for a small popcorn and $5 for a large one that’s twice as big.</p></li></ul><h3 id="public-policy-toward-monopolies">Public Policy Toward Monopolies</h3><ul><li><p>Increasing competition with <strong>antitrust laws</strong></p><p>Ban some anticompetitive practices, allow govt to break up monopolies.</p><p>e.g., Sherman Antitrust Act (1890), Clayton Act (1914)</p></li><li><p>Regulation</p><p>§ Govt agencies set the monopolist’s price.</p><p>For natural monopolies, MC &lt; ATC at all Q, so marginal cost pricing would result in losses.</p><p>If so, regulators might subsidize the monopolist or set P = ATC for zero economic profit.</p></li><li><p>Public ownership</p><p>Example: U.S. Postal Service</p><p>Problem: Public ownership is usually less efficient since no profit motive to minimize costs</p></li><li><p>Doing nothing</p><p>The foregoing policies all have drawbacks, so the best policy may be no policy.</p></li></ul><blockquote><p>竞争企业接受市场给定的其产品的价格，并选择供给量，以使价格等于边际成本。于此相比，垄断者收取高于其边际成本的价格。</p><h3 id="为什么会产生垄断">15.1 为什么会产生垄断</h3><p>垄断企业monopoly：作为一种没有相近替代物的产品的唯一卖者的企业。#Def 垄断产生的基本原因是进入壁垒，而进入壁垒又有三种主要形成原因：1. 垄断资源；2. 政府管制；3. 生产流程。 垄断资源：虽然关键资源的排他性所有权是垄断的一个潜在起因，但实际上垄断很少是产生于这种原因。 政府创造的垄断：1. 专利法；2. 版权法。有关专利和版权的法律既有利益也有成本。 自然垄断 natural monopoly：由于一个企业能以低于两个或更多企业的成本向整个市场供给一种物品或劳务而产生的垄断。例子：供水，必须铺设管道，只有一家企业提供服务时成本最低。11章，有排他性而无竞争性的物品，如很少使用不拥挤的桥。</p><h3 id="垄断者如何做出生产与定价决策">15.2 垄断者如何做出生产与定价决策</h3><p>垄断与竞争：竞争企业和垄断企业之间的关键差别在于垄断企业影响其产品价格的能力。（调整向市场供给的产量来改变产品的价格）。考虑需求曲线：竞争企业面临一条水平的需求曲线（14.3），垄断企业因其时唯一卖者，它的需求曲线就是市场需求曲线，右下方倾斜。市场需求曲线限制了垄断者通过其市场势力来获得利润的能力。 垄断者的收益：垄断者的边际收益MR总小于其价格（与竞争不同）。 利润最大化：垄断者的利润最大化产量是由边际收益曲线与成本曲线的交点决定的。对于竞争企业：<span class="math inline">\(P=MR =MC\)</span>，对于垄断企业：<span class="math inline">\(P&gt;MR=MC\)</span>。注意，都是边际收益 = 边际成本。重要差别：竞争市场上，价格等于边际成本，而在垄断市场上，价格大于边际成本。 垄断者的利润：<span class="math inline">\(利润 = (P - ATC) * Q\)</span> ，和竞争企业同。</p><h3 id="垄断的福利代价">15.3 垄断的福利代价</h3><p>无谓损失：可以在需求曲线与边际成本曲线相交之处找出社会有效率的产量。垄断者生产的产量小于社会有效率的产量。无谓损失三角形。垄断引起的无谓损失类似于税收引起的无谓损失，区别在于，政府得到了税收收入，而私人企业得到了垄断利润。 垄断利润：是一种社会代价吗</p><h3 id="价格歧视">15.4 价格歧视</h3><p>价格歧视 price discrimination：以不同价格向不同顾客出售同一种物品的经营做法。 关于定价的一个寓言，“定价寓言”的寓意：1. 价格歧视是利润最大化垄断者的一种理性策略。2. 价格歧视要求能根据支付意愿划分顾客，推论是某些市场势力会阻止企业实行价格歧视，其中一种力量是套利。3. 价格歧视可以增进经济福利（注意书中例子带来的福利表现为生产者剩余更高，而非消费者剩余） 对价格歧视的分析：完全价格歧视；不完全价格歧视可能增进、减少市场总剩余，或不变。唯一确定的：价格歧视增加了垄断利润。</p><h3 id="针对垄断的公共政策">15.5 针对垄断的公共政策</h3><h3 id="结论垄断的普遍性">15.6 结论：垄断的普遍性</h3></blockquote><h2 id="垄断竞争">16. 垄断竞争</h2><p>垄断竞争市场有三个特点：许多企业、有差别的产品和自由进入。 * 垄断竞争市场的均衡在相关的两个方面不同于完全竞争市场。第一，垄断竞争市场上的每个企业有过剩生产能力。也就是说，它在平均总成本曲线向石下方倾斜的部分运营。第二，每个企业都收取高于边际成本的价格。 * 垄断竞争没有完全竞争所有合意的特点，存在由高于边际成本的价格加成引起的垄断的标准无谓损失。此外，企业的数量（以及产品的种类）可能过多或过少。实际上，决策者纠正这些无效率的能力是有限的。 * 垄断竞争中固有的产品差别使企业使用广告与品牌。广告与品牌的批评者认为，企业用广告控制了消费者的偏好，并减少了竞争；广告与品牌的辩护者则认为，企业用这些方法向消费者提供信息，并使价格和产品质量上的竞争更为激烈。</p><h2 id="寡头">17. 寡头</h2><ul><li>寡头通过形成一个卡特尔并像垄断者一样行事以使自己的总利润最大化。但如果寡头独立地做出生产决策，结果是产量大于垄断产量，价格低于垄断价格。在寡头市场上企业数量越多，产量和价格越接近于竞争状态下的水平。</li><li>因徒困境表明，利己使人们即使在合作符合他们共同利益时也无法维持合作。因徒困境的逻辑适用于许多情况，包括军备竞赛、公共资源问题和寡头。</li><li>决策者用反托拉斯法来防止寡头从事减少竞争的行为。这些法律的适用性是有争议的，因为有些看来可能减少竞争的行为实际上可能有合理的经营目的。</li></ul><h2 id="生产要素市场">18. 生产要素市场</h2><ul><li>经济的收入是在生产要素市场上分配的。三种最重要的生产要素是劳动、土地和资本。</li><li>要素需求，例如劳动需求，是一种派生需求，它产生于用这些要素生产物品与劳务的企业。竞争的、以利润最大化为目标的企业在某要素的边际产量值等于其价格这一点上使用该要素。</li><li>劳动的供给产生于个人在工作和闲暇间的权衡取舍。向右上方倾斜的劳动供给曲线意味着人们对工资上升的反应是做更多工作和少享受闲暇。</li><li>支付给每种要素的价格的调整使该要素的供求趋于平衡。由于要素需求反映了该要素的边际产量值，在均衡时每种要素根据其对物品和劳务生产的边际贡献得到报酬。</li><li>由于生产要素是同时使用的，因此，任何一种要素的边际产量都取决于可以得到的所有要素量。因此，一种要素供给的变动会改变所有要素的均衡收入。</li></ul><h2 id="收入与税收">19. 收入与税收</h2><ul><li>工人由于许多原因而赚到不同的工资。在某种程度上，工资差别是对工人工作特性的补偿。在其他条件相等时，从事艰苦、乏味工作的工人得到的工资高于从事轻松、有趣工作的工人。</li><li>人力资本多的工人得到的工资高于人力资本少的工人。累积的人力资本的收益是很高的，而且在过去20年来一直在增加。</li><li>虽然受教育年限、经验和工作特性都像理论所预期的那样影响收入，但仍有许多收入差别不能用经济学家可以衡量的东西来解释。收入中无法解释的变动主要归因于天生的能力、努力和机遇。</li><li>一些经济学家提出，受教育更多的人得到更高工资并不是因为教育提高了其生产率，而是因为有更高天赋的工人把教育作为一种向雇主显示他们高能力的信号。如果这种信号理论正确的话，那么，提高所有工人的受教育程度就不会提高整个工资水平。</li><li>有时工资会高于使供求平衡的水平。高于均衡的工资产生的三个原因是最低工资法、工会和效率工资。</li><li>收入中的一些差别是基于种族、性别或其他因素的歧视。但是，歧视的衡量是很困难的，因为必须根据人力资本和工作特性的差别进行矫正。</li><li>竞争市场倾向于限制歧视对工资的影响。如果一个工人群体的工资由于与边际生产率无关的原因而低于另一个工人群体，那么，非歧视企业将比歧视企业盈利更多。因此，利润最大化行为可以减少歧视性工资差别。如果顾客愿意向歧视企业支付更多，或如果政府通过要求企业歧视的法律，竞争市场上的歧视就会持续下去。</li></ul><h2 id="收入不平等与贫困">20. 收入不平等与贫困</h2><ul><li>收入分配数据表明了我们社会中存在的巨大不平等。最富有的1/5家庭的收入是最穷的1/5家庭的收入的十倍还多。</li><li>由于实物转移支付、经济生命周期、暂时收入和经济流动性对于理解收入变动如此重要，以至于要用某一年的收入分配数据来判断我们社会中的不平等程度是很困难的。当考虑到这些其他因素时，它们总倾向于表明经济福利的分配比年收入的分配更平等。</li><li>政治哲学家关于政府在改变收入分配中的作用的观点并不相同。功利主义者(例如，约翰·斯图亚特·穆勒）选择使社会中每个人效用之和最大化的收入分配。自由主义者（例如，约翰·罗尔斯）决定收入分配时，我们仿佛被置于“无</li><li>知面纱”之下，这使我们不了解自己的生活状况。自由至上主义者（例如，罗伯特·诺齐克）要求政府保护个人权利以保证一个公正的过程，但不用关注其所引起的收入分配结果的不平等。</li><li>有许多旨在帮助穷人的不同政策——最低工资法、福利、负所得税以及实物转移支付。虽然这些政策都帮助了一些家庭脱贫，但它们也有意料之外的副作用。由于经济援助随着收入增加而减少，因此，穷人往往面临很高的有效边际税率。这种高有效税率不鼓励贫困家庭依靠自己的力量脱贫。</li></ul><h2 id="消费者选择理论">21. 消费者选择理论</h2><ul><li>消费者预算约束线表示在其收入与物品价格为既定时，他可以购买的不同物品的可能组合。预算约束线的斜率等于这些物品的相对价格。</li><li>消费者的无差异曲线代表其偏好。无差异曲线表示能使消费者同样满足的各种物品组合。消费者对较高无差异曲线上各点的偏好大于对较低无差异曲线上的各点。任何一点上无差异曲线的斜率是消费者的边际替代率——消费者愿意用一种物品交换另一种物品的比率。</li><li>消费者通过选择既在预算约束线上又在最高无差异曲线上的一点来实现最优化。在这一点上，无差异曲线的斜率(物品之间的边际替代率）等于预算约束线的斜率（物品的相对价格）。</li><li>当一种物品价格下降时，对消费者选择的影响可以分解为收入效应和替代效应。收入效应是由于价格降低使消费者状况变好而引起的消费变动。替代效应是由于价格变动鼓励更多地消费变得相对便宜的物品而引起的消费变动。收入效应反映在从较低无差异曲线向较高无差异曲线的移动上，而替代效应表现为沿着一条无差异曲线向有不同斜率的点的变动上。</li><li>消费者选择理论适用于许多情况。它可以解释为什么需求曲线有可能向右上方倾斜，为什么工资提高既可能增加也可能减少劳动供给量，为什么利率提高既可能增加也可能减少储蓄。</li></ul><h2 id="微观经济学前沿">22. 微观经济学前沿</h2><ul><li>在许多经济交易中，信息是不对称的。当存在隐蔽性行为时，委托人会关注因代理人道德风险问题引起的损失。当存在隐蔽性特征时，买者会关注卖者中的逆向选择问题。私人市场有时用发信号和筛选来应对不对称信息。</li><li>虽然政府政策有时可以改善市场结果，但政府本身也是不完善的制度。康多塞悖论说明，多数原则没有引起社会有传递性的偏好；而阿罗不可能性定理说明，没有一种投票制度是完美的。在许多情况下，民主制度将产生中值选民想要的结果，而无论其他选民的偏好是什么。此外，那些决定政府政策的人会受利己而不是国家利益的驱动。</li><li>心理学和经济学的研究表明，人的决策比传统经济理论所假设的要复杂。人们并不总是理性的，他们关心经济结果的公正性（即使对他们自己有不利影响）,而且，他们可能具有前后不一致性。</li></ul><h2 id="术语表">术语表</h2><ul><li>支付能力原则（ability-to-pay principle)认为应该根据一个人可以承受的负担来对这个人征税的思想。</li><li>绝对优势（absolute advantage)用比另一个生产者更少的投入生产某种物品的能力。</li><li>会计利润（accounting profit)总收益减总显性成本。</li><li>逆向选择（adverse selection)从无信息一方的角度看，无法观察到的特征组合变为不合意的倾向。</li><li>代理人（agent)一个为另一个人（称为委托人）完成某种行为的人。</li><li>阿罗不可能性定理（Arrow's impossibility theorem)一个数学结论，它表明在某些假设条件之下，没有一种方案能把个人偏好加总为一组正确的社会偏好。</li><li>平均固定成本（average fixed cost)固定成本除以产量。</li><li>平均收益（average revenue)总收益除以销售量。</li><li>平均税率（average tax rate)支付的总税收除以总收入。</li><li>平均总成本（average total cost)总成本除以产量。</li><li>平均可变成本（average variable cost)可变成本除以产量。</li><li>行为经济学（behavioral economics)经济学中将心理学的观点考虑进来的分支学科。</li><li>受益原则（benefits principle)认为人们应该根据他们从政府服务中得到的利益来纳税的思想。</li><li>预算约束线（budget constraint)对消费者可以支付得起的消费组合的限制。</li><li>预算赤字（budget deficit)政府支出大于政府收入。</li><li>预算盈余（budget surplus)政府收入大于政府支出。</li><li>经济周期（business cycle)就业和生产等经济活动的波动。</li><li>资本（capital)用于生产物品与劳务的设备和建筑物。</li><li>卡特尔（cartel)联合起来行事的企业集团。</li><li>循环流量图（circular-flow diagram)一个说明货币如何通过市场在家庭与企业之间流动的直观经济模型。</li><li>俱乐部物品（club goods)有排他性但无竞争性的物品。</li><li>科斯定理（Coase theorem)认为如果私人各方可以无成本地就资源配置进行协商，那么，他们就可以自己解决外部性问题的一个命题。</li><li>勾结（collusion)一个市场上的企业之间就生产的产量或收取的价格达成的协议。</li><li>公共资源（common resources)有竞争性但无排他性的物品。</li><li>比较优势（comparative advantage)一个生产者以低于另一个生产者的机会成本生产一种物品的行为。</li><li>补偿性工资差别（compensating differential)为抵消不同工作的非货币特性而产生的工资差别。</li><li>竞争市场（competitive market)有许多买者与卖者，以至于每个人对市场价格的影响都微乎其微的市场。</li><li>互补品（complement)一种物品价格上升引起另一种物品需求量减少的两种物品。</li><li>康多塞惊论（Condorcet paradox)多数原则没有产生可传递的社会偏好。</li><li>规模收益不变（constant returns to scale)长期平均总成本在产量变动时保持不变的特性。</li><li>消费者剩余（consumer surplus)买者愿意为一种物品支付的量减去其为此实际支付的量。</li><li>矫正税（corrective taxes) 旨在引导私人决策者考虑负外部性引起的社会成本的税收。</li><li>成本（cost)卖者为了生产一种物品而必须放弃的每种东西的价值。</li><li>成本一收益分析（cost-benefit analysis)比较提供一种公共物品的社会成本与社会收益的研究。</li><li>需求的交叉价格弹性（cross-price elasticityof demand)衡量一种物品需求量对另一种物品价格变动的反应程度的指标，用第一种物品需求量变动百分比除以第二种物品价格变动百分比来计算。</li><li>无谓损失（deadweight loss)市场扭曲（例如税收）引起的总剩余减少。</li><li>需求曲线（demand curve)表示一种物品的价格与需求量之间关系的图形。</li><li>需求表（demand schedule)表示一种物品的价格与需求量之间关系的表格。</li><li>边际产量递减（diminishing marginal prod-uct)一种投入的边际产量随着投入量增加而减少的特征。</li><li>收益递减（diminishing returns)随着投入量的增加，每一单位额外投入得到的收益减少的特性。</li><li>歧视（discrimination)对仅仅是种族、宗教、性别、年龄或其他个人特征不同的相似个人提供不同的机会。</li><li>规模不经济（diseconomies of scale)长期平均总成本随产量增加而增加的特性。</li><li>占优策略（dominant strategy)无论其他参与者选择什么策略，对一个参与者都为最优的策略。</li><li>经济利润（economic profit)总收益减总成本，包括显性成本与隐性成本。</li><li>经济学（economics)研究社会如何管理自己的稀缺资源。</li><li>规模经济（economies of scale)长期平均总成本随产量增加而减少的特性。</li><li>效率（efficiency)社会能从其稀缺资源中得到最大利益的特性。</li><li>效率工资（efficiency wages)企业为了提高工人的生产率而支付的高于均衡工资的工资。</li><li>有效市场假说（efficient market hypothesis)认为资产价格反映了关于一种资产价值的所有公开的、可获得的信息的理论。</li><li>有效规模（efficient scale)使平均总成本最小的产量。</li><li>弹性（elasticity)衡量需求量或供给量对其某种决定因素的反应程度的指标。</li><li>平等（equality)经济成果在社会成员中公平分配的特性。</li><li>均衡（equilibrium)市场价格达到使供给量与需求量相等的水平时的状态。</li><li>均衡价格（equilibrium price)使供给与需求平衡的价格。</li><li>均衡数量（equilibrium quantity)均衡价格下的供给量与需求量。</li><li>排他性（excludability)一种物品具有的可以阻止一个人使用该物品的特性。</li><li>显性成本（explicit costs)需要企业支出货币的投入成本。</li><li>出口（exports)在国内生产而在国外销售的物品。</li><li>外部性（externality)一个人的行为对旁观者福利的影响。</li><li>生产要素（factors of production)用于生产物品与劳务的投入。</li><li>固定成本（fixed costs)不随着产量变动而变动的成本。</li><li>搭便车者（free rider)得到一种物品的利益但避开为此付费的人。</li><li>博奔论（game theory)研究策略状况下人们如何行为。</li><li>吉芬物品（Giffen good)价格上升引起需求量增加的物品。</li><li>横向平等（horizontal equity)主张有相似支付能力的纳税人应该缴纳等量税收的思想。</li><li>人力资本（human capital)对人的投资的积累，如教育和在职培训。</li><li>隐性成本（implicit costs)不需要企业支出货币的投入成本。</li><li>进口（imports)在国外生产而在国内销售的物品。</li><li>激励（incentive)引起一个人做出某种行为的某种东西。</li><li>收入效应（income effect)当价格的某些变有 动使消费者移动到更高或更低无差异曲线时所引起的消费变动。</li><li>需求收入弹性（income elasticity of demand)衡量一种物品需求量对消费者收入变动反应程度的指标，用需求量变动百分比除以收入变动百分比来计算。</li><li>无差异曲线（indifference curve)一条表示给消费者相同满足程度的消费组合的曲线。</li><li>低档物品（inferior good)收入增加引起需求量减少的物品。</li><li>通货膨胀（inflation)经济中物价总水平的上升实物转移支付（in-kind transfers)以物品和劳务而不是以现金形式给予穷人的转移支付。</li><li>外部性内在化（internalizing the externality)改变激励，以使人们考虑到自己行为的外部效应。</li><li>需求定理（law of demand)认为在其他条件不变时，一种物品价格上升，对该物品的需求量减少的观点。</li><li>供给定理（law of supply)认为在其他条件不变时，一种物品价格上升，该物品供给量增加的观点。</li><li>供求定理（law of supply and demand)任何一种物品的价格都会自发调整，使该物品的供给和需求达到平衡。</li><li>自由主义（liberalism)一种政治哲学，根据这种政治哲学，政府应该选择被认为是公正的政策。</li><li>这种公正要由一位在“无知面纱”背后的无偏见评论者来评价。</li><li>自由至上主义（libertarianism)一种政治哲学，根据这种政治哲学，政府应该惩罚犯罪并实行自愿的协议，但不应该进行收入再分配。</li><li>生命周期（life cycle)在人的一生中有规律的收入变动形式。</li><li>定额税（lump-sum tax)对每个人等量征收的税收宏观经济学（macroeconomics)研究整体经济现象，包括通货膨胀、失业和经济增长。</li><li>边际变动（marginal change)对行动计划的微小增量调整。</li><li>边际成本（marginal cost)额外一单位产量所引起的总成本的增加。</li><li>边际产量（marginal product)增加一单位投入所引起的产量增加。</li><li>劳动的边际产量（marginal product of la-bor)增加的一单位劳动所引起的产量增加量。</li><li>边际替代率（marginal rate of substitutionMRS)消费者愿意以一种物品交换另一种物品的比率。</li><li>边际收益（marginal revenue)增加一单位销售量引起的总收益变动。</li><li>边际税率（marginal tax rate)增加1美元收入所支付的额外税收。</li><li>市场（market)由某种物品或劳务的买者与卖者组成的一个群体。</li><li>市场经济（market economy)当许多企业和家庭在物品与劳务市场上相互交易时，通过它们的分散决策配置资源的经济。</li><li>市场失灵（market failure)市场本身不能有效配置资源的情况。</li><li>市场力量（market power)单个经济活动者（或经济活动者的一个小集团）对市场价格有显著影响的能力。</li><li>最大最小准则（maximin criterion)一种主张，认为政府的目标应该是使社会上状况最差的人的福利最大化。</li><li>中值选民定理（median voter theorem)一个数学结论，表明如果要选民沿着一条线选一个点，而且，每个选民都想选离他最偏好的点最近的点，那么，多数原则将选出中值选民最偏好的点。</li><li>微观经济学（microeconomics)研究家庭和企业如何做出决策，以及它们如何在市场上相互交易。</li><li>垄断竞争（monopolistic competition)存在许多出售相似但不相同产品的企业的市场结构。</li><li>垄断企业（monopoly)作为一种没有相近替代品的产品的唯一卖者的企业。</li><li>道德风险（moral hazard)一个没有受到完全监督的人从事不诚实或不合意行为的倾向。</li><li>纳什均衡（Nash equilibrium)相互作用的经济主体在假定所有其他主体所选策略为既定的情况下选择自己最优策略的状态。</li><li>自然垄断（natural monopoly)由于一个企业能以低于两个或更多企业的成本向整个市场供给一种物品或劳务而产生的垄断。</li><li>自然资源（natural resources)由自然界提供的用于生产物品与劳务的投入，如土地、河流和矿藏。</li><li>负所得税（negative income tax)向高收入家庭征税并给低收入家庭转移支付的税制。</li><li>正常物品（normal good)收入增加引起需求量增加的物品。</li><li>规范表述（normative statements)企图描述世界应该是什么的观点。</li><li>寡头（oligopoly)只有少数几个卖者提供相似或相同产品的市场结构。</li><li>机会成本（opportunity cost)为了得到某种东西所必须放弃的东西。</li><li>完全互补品（perfect complements)无差异曲线为直角形的两种物品。</li><li>完全替代品（perfect substitutes)无差异曲线为直线的两种物品。</li><li>持久收入（permanent income)一个人的正常收入。</li><li>政治经济学（political economy)用经济学的分析方法研究政府。</li><li>实证表述（positive statements)企图描述世界是什么的观点。</li><li>贫困线（poverty line)由联邦政府根据每个家庭规模确定的一种收入绝对水平，低于这一水平的家庭被认为处于贫困状态。</li><li>贫困率（poverty rate)家庭收入低于一个称为贫困线的绝对水平的人口百分比。</li><li>价格上限（price ceiling)出售一种物品的法定最高价格价格歧视（price discrimination)以不同价格向不同顾客出售同一种物品的经营做法。</li><li>需求价格弹性（price elasticity of demand)衡量一种物品需求量对其价格变动反应程度的指标，用需求量变动百分比除以价格变动百分比来计算。</li><li>供给价格弹性（price elasticity of supply衡量一种物品供给量对其价格变动反应程度的指标，用供给量变动百分比除以价格变动百分比来计算。</li><li>价格下限（price floor)出售一种物品的法定最低价格。</li><li>委托人（principal)让另一个人（称为代理人）完成某种行为的人。</li><li>因徒困境（prisoners'dilemma)两个被捕的因徒之间的一种特殊“博奔”，说明为什么甚至在合作对双方都有利时，保持合作也是困难的。</li><li>私人物品（private goods)既有排他性又有竞争性的物品。</li><li>生产者剩余（producer surplus)卖者出售一种物品得到的量减去其生产成本。</li><li>生产函数（production function)用于生产一种物品的投入量与该物品产量之间的关系。</li><li>生产可能性边界（production possibilitiesfrontier)表示在可得到的生产要素与生产技术既定时，一个经济所能生产的产量的各种组合的图形。</li><li>生产率（productivity)一个工人一小时所生产的物品与劳务数量。</li><li>利润（profit)总收益减去总成本。</li><li>累进税（progressive tax)高收入纳税人缴纳的税收在收入中的比例高于低收入纳税人的税收。</li><li>产权（property rights)个人拥有并控制稀缺资源的能力。</li><li>比例税（proportional tax)高收入纳税人和低收入纳税人缴纳收入中相同比例的税收。</li><li>公共物品（public goods)既无排他性又无竞争性的物品。</li><li>需求量（quantity demanded)买者愿意并且能够购买的一种物品的数量。</li><li>供给量（quantity supplied)卖者愿意并且能够出售的一种物品的数量。</li><li>理性人（rational people)系统而有目的地尽最大努力实现其目标的人。</li><li>累退税（progressive tax)高收入纳税人缴纳的税收在收入中的比例低于低收入纳税人的税收。</li><li>消费中的竞争性（rivalry in consumption)一个人使用一种物品将减少其他人对该物品的使用的特性。</li><li>稀缺性（scarcity)社会资源的有限性。</li><li>筛选（screening)无信息的一方所采取的引起有信息的一方披露信息的行动。</li><li>短缺（shortage)需求量大于供给量的状态。</li><li>发信号（signaling)有信息的一方向无信息的一方披露自己私人信息所采取的行动。</li><li>社会保险（social insurance) 旨在保护人们规避负面事件风险的政府政策。</li><li>罢工（strike)工会组织工人从企业撤出劳动。</li><li>替代品（substitute)一种物品价格上升引起另一种物品需求量增加的两种物品。</li><li>替代效应（substitution effect)当价格的某种变动使消费者沿着一条既定的无差异曲线变动到有新边际替代率的一点时所引起的消费变动。</li><li>沉没成本（sunk cost)已经发生而且无法收回的成本。</li><li>供给曲线（supply curve)表示一种物品的价格与供给量之间关系的图形。</li><li>供给表（supply schedule)表示一种物品的价格与供给量之间关系的表格。</li><li>过剩（surplus)供给量大于需求量的状态。</li><li>关税（tariff)对在国外生产而在国内销售的物品征收的一种税。</li><li>税收归宿（tax incidence)税收负担在市场参与者之间进行分配的方式。</li><li>总成本（total cost)企业用于生产的投入的市场价值。</li><li>(企业）总收益[total revenue(for a firm)]企业出售其产品所得到的货币量。</li><li>(市场）总收益[total revenue(in a mar-ket)]一种物品买者支付从而卖者得到的量，用该物品的价格乘以销售量来计算。</li><li>公地悲剧（Tragedy of the Commons)-个寓言，说明从整个社会的角度看，为什么公有资源的使用大于合意的水平。</li><li>交易成本（transaction cost)各方在达成协议与遵守协议过程中所发生的成本。</li><li>工会（union)与雇主谈判工资和工作条件的工人协会。</li><li>功利主义（utilitarianism)一种政治哲学，根据这种政治哲学，政府应该选择使社会上所有人总效用最大化的政策。</li><li>效用（utility)衡量幸福或满足程度的指标。</li><li>边际产量值（value of the marginal product)一种投入的边际产量乘以该产品的价格。</li><li>可变成本（variable costs)随着产量变动而变动的成本。</li><li>纵向平等（vertical equity)主张支付能力更强的纳税人应该缴纳更多税收的思想。</li><li>福利（welfare)补贴贫困者收入的政府计划。</li><li>福利经济学（welfare economics)研究资源配置如何影响经济福利的一门学问。</li><li>支付意愿（willingness to pay)买者愿意为某种物品支付的最高量。</li><li>世界价格（world price)一种物品在世界市场上所通行的价格。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 经济学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电子书技巧种种 &amp; 关于 Kindle</title>
      <link href="/posts/9edcef95/"/>
      <url>/posts/9edcef95/</url>
      
        <content type="html"><![CDATA[<p>从最初想要好好利用自己的 Kindle，再到阅读的电子化，以及电子书整理与转化等方面的技巧，这里汇总这些方面的技巧，也可作为反观自己与电子媒介的一个入口。</p><span id="more"></span><h2 id="关于-kindle">关于 Kindle</h2><p>本文原名「Kindle 使用笔记」，初衷是希望「<strong>整理一下常见的 Kindle 使用、书籍整理、等方面的常见技巧</strong>」，原本是想要好好开发一下自己的 PaperWhite 的，虽然说使用体验真的不错（要是在高中阶段的话使用场景应该会大很多），但最终还是难免沦落到了「盖泡面」的下场。原因大概有以下几个方面</p><ul><li>墨水屏相较于一般屏幕的阅读体验自然是好很多的，但仍然难以 battle 纸质书；本来进入大学之后阅读的场景/时间少了很多（好吧这才是主要原因不要抵赖了），况且学校里借阅又十分方便，因此 Kindle 沦为比下有余但比上仍有差距的地位；</li><li>说到阅读的电子化，现在用「讯飞」的 OCR 已经非常好了，所以纸质书的电子笔记也很方便，而且 Kindle 的圈划导出也不太方便，好像还有数量的限制；</li><li>要看电子书的话，几乎无限免费下去的「微信阅读」实在太香了，腾讯爸爸的财大气粗之下平台的书源真的挺全，自己想看的很大一部分书都能在上面找到；</li><li>如果没有的话，如果能在网络上找到自己，会导入 Calibre 管理，之后导入微信阅读或者 iBooks 阅读，均支持多平台同步，便携性要好很多。</li></ul><p>好在以下话题均不限于 Kindle，虽然长久没有更新了，整理之后发出来。</p><h2 id="书籍管理calibre">书籍管理：Calibre</h2><p>【以下内容主要摘录自下文】</p><ul><li><a href="https://zhuanlan.zhihu.com/p/34996144">最强大的本地电子书管理工具：Calibre 使用指南</a></li></ul><h3 id="制作属于自己的阅读书单">制作属于自己的阅读书单</h3><p>如果是常年使用豆瓣读书的书虫，想必也和我一样，习惯用「想读」来标注暂时还没空读的书。Calibre 能完美的管理已经购买的书，至于那这些想读的书，如果也能用 Calibre 来整理就更省事了。</p><p>已购买的书可以导入电子书文件，如果没有购买，就要另想它法把图书导入 Calibre。所幸 Calibre 可以在书库中，添加一本没有实际电子书文件的条目。点击<strong>「添加图书 - 根据 ISBN 号添加图书」</strong>（上文已经介绍过如何获得图书的 ISBN 号），记得在右侧给图书加上「想读」标签。导入后 Calibre 会自动询问你是否要下载元数据。完成导入后的条目，除了没有真正的电子书文件，其余和 Calibre 中的其它书是完全一样的。</p><p>但我们不希望把已购买的和想读的书，一直混在同一个界面，这样会不好区分哪些是已购买，哪些是已读。虽然能通过搜索「想读」标签来筛选，但毕竟不是优雅的解决方案。</p><p>这时就可以用到 Calibre 的「<strong>虚拟书库</strong>」功能。抛开技术细节，「虚拟书库」可以理解为基于现有书库创建一份独立的书单。<strong>点击「虚拟书库 - 创建虚拟书库」</strong>，Calibre 会让你<strong>设置名称和搜索表达式</strong>。我们之前为想读的书都打好了「想读」标签，此时只需要基于这个标签来筛选即可。</p><h3 id="分享书库">分享书库</h3><p>Calibre 作为私人的藏书库，在功能上已经无可指摘了。而虽然它的数据结构是基于本地硬盘的，但开发者还是给它加上了网络书库功能，方便我们将电子书分享出去。</p><p>Calibre 提供了不止一种共享图书的办法，有<strong>内容服务器、无线设备共享和电子邮件共享</strong>。不过经过体验下来，内容服务器是最稳定和便捷的方式。</p><p>在 Calibre 的「连接／共享」窗口中打开内容服务器，软件会提示一个 IP 地址和端口，假设 IP 地址是 123.456.789.987，而端口是 8888，将两者以 <code>123.456.789.987:8888</code> 格式在浏览器中输入，就能在网页端打开你的书库。朋友可以随意下载你书库中的书籍到他的电脑中。</p><p>一定要注意的是，因为 Calibre 的内容服务器是用的非加密通道，一定不要将自己的 IP 地址和端口随意公布到网上，否则你的电脑将极不安全。在给朋友分享完后，一定记得停止内容服务器。</p><h2 id="txt-转-mobi">TXT 转 MOBI</h2><p>参考：</p><ol type="1"><li>把 TXT 文档转换成带目录的 MOBI 格式电子书 <a href="https://bookfere.com/post/82.html" class="uri">https://bookfere.com/post/82.html</a></li><li>正则表达式：Sigil 基础教程（二）：Sigil 的基本操作 <a href="https://bookfere.com/post/72.html" class="uri">https://bookfere.com/post/72.html</a></li></ol><p>最大的问题在于格式方面，若直接讲TXT转为MOBI，则会缺少目录，阅读时很不方面，可利用正则技巧自制目录。</p><ol type="1"><li>检查文档格式，若有规则的章节名称，使用正则表达式方法将其转化为 <code>markdown</code> 形式，如 <code>#</code> 对应于HTML中的 <code>&lt;h1&gt;</code> 。</li><li>这里采用 <code>Sublime Text</code> 的正则功能。点击菜单“<strong>Find → Replace</strong>”调出替换功能面板，然后确认选中了面板左侧的正则功能图标【<code>.*</code>】，输入相应的正则表达式，然后点击右侧的【<strong>Replace All</strong>】按钮，即可完成添加。<ol type="1"><li>例如，查找内容为 <code>^(\s+|)第(.*)章</code> ，将其替换为 <code>###第\2章</code> 。</li></ol></li><li>章节标题的标记添加完毕后就可以把修改后的 TXT 文档转换成 mobi 格式了。打开 Calibre 软件，用鼠标把文档拖进去，然后右键点击它，在弹出的菜单中依次选择“<strong>转换书籍 → 逐个转换</strong>”，在弹出的窗口中，把右上角的“<strong>输出格式</strong>”选成“<strong>MOBI</strong>”，然后点击左栏的“内容目录”标签，找到“一级目录”这一项，填入 <code>//h:h3</code>（也可以点击后面的魔术棒小图标，在弹出的窗口中选择 <strong>h3</strong>）。</li></ol><h2 id="把-rss-新闻变成电子书">把 RSS 新闻变成电子书</h2><p>除了书籍，RSS 新闻也是很多爱读书的人的信息来源。市面上已经有很多工具，可以把 RSS 信息源转换成电子书，再通过邮件推送的方式发送到 Kindle。作为你唯一的电子书书库，Calibre 又怎么能少的了这个功能呢。</p><p>不过如果直接把 RSS 源中的新闻全部转为电子书，我想很多人都难以读完所有新闻，况且 RSS 中并不是所有的新闻都值得放在 Kindle 中精读。</p><p>我个人习惯的方式是将在 Reeder 中<strong>扫一遍 RSS 中标题和开头</strong>，将想要认真读的文章<strong>发到 Instapaper</strong> 中。Instapaper 有个不为人知的实用功能，在网页版上可以导出每个文件夹的 RSS 源链接（其实也可以在网页上直接下载 ePub）！这样既可以解决新闻数量过多的问题，又能实现在手机上利用碎片时间筛选，在 Kindle 上专心精读的 Workflow。</p><p>获取 Instapaper 的 RSS 源链接后，在 Calibre 中选择「抓取新闻 - 添加或编辑自定义新闻源」，将 RSS 链接添加进去即可。此外还可以设定定期下载的时间。不过需要提醒的是，下载完成后最后去 Instapaper 将文章存档或者删除，否则下次下载时会重复下载老文章。</p><p>当然你也可以直接添加 RSS 源。除了一个个添加 RSS 链接，更高效的操作是从 Inoread 或者 Feedly 导出自己已有的 RSS 源的 <strong>OPML 文件</strong>，再在 Calibre 中导入，就可以一口气添加所有已有的 RSS。</p><h2 id="利用-synology-提供网页服务">利用 Synology 提供网页服务</h2><p>有些电子书分享网站就是基于 Calibre-web 构建的，之前有段时间非常心水，不过真正要搞好的话，真正需要花费心思的其实是去管理书籍；因此目前是简要搭建了一下个人使用，可以使用 外网访问下载、元数据编辑、EPUB 等格式在线阅读的需求；书籍的管理还是要用 Calibre 客户端，利用 WebDAV 同步过去还是很方便的。</p><ul><li>我用的是和这个教程 <a href="https://post.smzdm.com/p/a6l8ovxe/" class="uri">https://post.smzdm.com/p/a6l8ovxe/</a> 中的 docker，在注册表中也是最火的；官方 docker 网页在这里 <a href="https://registry.hub.docker.com/r/linuxserver/calibre-web/" class="uri">https://registry.hub.docker.com/r/linuxserver/calibre-web/</a> 可以看到更新还是很勤快的；</li><li>参考的🔗有 <a href="http://ifoxfactory.com/2018/05/15/Synology-NAS-with-Calibre-web-one/" class="uri">http://ifoxfactory.com/2018/05/15/Synology-NAS-with-Calibre-web-one/</a></li><li>安装过程中遇到了一些小坑：一个是文件夹配置，docker 中的「卷」设置可以将本地文件夹映射到 docker 找那个使之可以读取；这点在之前的设置中已经做好了，不过 docker 初始化的过程中，报了<code>DB location is not valid, please enter correct path</code> 错，原本以为是权限的问题，不过最后发现是因为缺少数据库文件 metadata.db ，原来是因为我之前是尝试的原因只复制了 mac Calibre 书库的几本书并没有将整个 Calibre Library 复制过去导致的，有了元数据文件之后正常；参看 <a href="https://blog.csdn.net/xs20691718/article/details/100166473" class="uri">https://blog.csdn.net/xs20691718/article/details/100166473</a></li><li>另外初始的用户名和密码是 admin admin123 登陆之后可以在设置中修改；</li><li>主要的修改还是在 Mac 本地的 Calibre 上完成管理，参考链接 1 中的 tip，使用了 Synology Drive 将此文件夹同步到 Synology 上去；需要注意的是，Drive 无法访问 /homes 目录（仅有 /homes/user/Drive），所以我之前见文件夹放在/home 下就无法完成同步，我的方案是将书库文件下放到 /docker 下，在「Driver 管理控制台」中将 docker 设置为「团队文件夹」，然后再到 mac 本地的 Driver 中设置同步；</li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kindle </tag>
            
            <tag> 阅读 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jupyter Notebook 使用笔记</title>
      <link href="/posts/db3d78af/"/>
      <url>/posts/db3d78af/</url>
      
        <content type="html"><![CDATA[<p>这里记录了 Jupyter Notebook 使用过程中的一些资源。</p><span id="more"></span><h2 id="基础教程">基础教程</h2><p>原本摘录了一些 Jupyter Notebook 的使用语法，但搞了半天还是网上教程的搬运，因此这里就直接放链接了；用得多了自然会比较熟练，一步步按照教程走就行了。</p><p>【官方文档】<a href="https://jupyter-notebook.readthedocs.io/en/stable/" class="uri">https://jupyter-notebook.readthedocs.io/en/stable/</a></p><p>下面是初学的时候参考的一些教程</p><ul><li><a href="https://wklchris.github.io/Jupyter-basic.html">Jupyter Notebook基础</a></li><li><a href="https://juejin.im/post/5af8d3776fb9a07ab7744dd0">[译] 给初学者的 Jupyter Notebook 教程</a></li></ul><h2 id="jupyter-配置-kernel">Jupyter 配置 kernel</h2><ul><li>Jupyter Notebook 仅需要在 base 环境下安装，之后若要使用直接在 base 下 <code>jupyter notebook</code> 打开即可；</li><li>但为了能够使用其他的环境，需要手动将其他 conda 环境添加到 Jupyter 中，之后即可在浏览器界面中选择所调用的环境；</li><li>添加的方式有以下两种，均测试成功</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#方案 1</span></span><br><span class="line"><span class="comment">#事先在 base 环境中安装好 ipykernel</span></span><br><span class="line">python -m ipykernel install --user --name 环境名称 --display-name <span class="string">&quot;Python (环境名称)&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#方案 2</span></span><br><span class="line">ipython3 kernel install --user --name python35 --display-name=<span class="string">&#x27;Python 3.5&#x27;</span></span><br></pre></td></tr></table></figure><p>若成功安装会有类似的提示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installed kernelspec py3 <span class="keyword">in</span> /Users/mac/Library/Jupyter/kernels/py3</span><br></pre></td></tr></table></figure><ul><li>此外，例如对于上面的那个环境，对应的 Jupyter 中的配置文件是 <code>~/Library/Jupyter/kernels/py3/kernel.json</code> ，内容为</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> <span class="attr">&quot;argv&quot;</span>: [</span><br><span class="line">  <span class="string">&quot;/Users/mac/anaconda3/bin/python&quot;</span>,</span><br><span class="line">  <span class="string">&quot;-m&quot;</span>,</span><br><span class="line">  <span class="string">&quot;ipykernel_launcher&quot;</span>,</span><br><span class="line">  <span class="string">&quot;-f&quot;</span>,</span><br><span class="line">  <span class="string">&quot;&#123;connection_file&#125;&quot;</span></span><br><span class="line"> ],</span><br><span class="line"> <span class="attr">&quot;display_name&quot;</span>: <span class="string">&quot;py3&quot;</span>,</span><br><span class="line"> <span class="attr">&quot;language&quot;</span>: <span class="string">&quot;python&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里记录了环境的详细信息。</p><ul><li>最后，是如何删除配置好的 Kernel。1. 当然可以直接把用户 Library 下的那个文件夹删去；2. Jupyter 提供了管理工具，使用 <code>jupyter kernelspec list</code> 查看 Kernel 列表，使用 <code>jupyter kernelspec uninstall &lt;my_env_name&gt;</code> 删除对应的 Kernel。</li></ul><p>Reference:</p><ul><li><a href="https://medium.com/programming-with-data/%E5%9C%A8-jupyter-notebook-%E4%B8%AD%E5%BB%BA%E7%AB%8B-%E7%A7%BB%E9%99%A4%E8%99%9B%E6%93%AC%E7%92%B0%E5%A2%83-6c90c89791a5">Anaconda｜在 Jupyter notebook 中建立、移除虛擬環境</a></li><li><a href="https://medium.com/analytics-vidhya/create-virtual-environment-using-conda-and-add-it-to-jupyter-notebook-d319a81dfd1" class="uri">https://medium.com/analytics-vidhya/create-virtual-environment-using-conda-and-add-it-to-jupyter-notebook-d319a81dfd1</a></li><li>jupyter notebook选择conda环境 <a href="https://blog.csdn.net/u011606714/article/details/77741324" class="uri">https://blog.csdn.net/u011606714/article/details/77741324</a> 在Ubuntu上也实践成功</li><li>jupyter与python的内核 <a href="https://letianfeng.github.io/python/2018/04/24/jupyter_and_python_kernel.html" class="uri">https://letianfeng.github.io/python/2018/04/24/jupyter_and_python_kernel.html</a></li></ul><h2 id="删除-jupyter">删除 Jupyter</h2><p>另外，赘述一下如何卸载 Jupyter，可以使用 <code>pip-autoremove</code> 这个包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pip-autoremove</span><br><span class="line">pip-autoremove jupyter -y</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Jupyter </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令行+虚拟机 代理设置方案汇总</title>
      <link href="/posts/3760e113/"/>
      <url>/posts/3760e113/</url>
      
        <content type="html"><![CDATA[<p>这里总结了 macOS 环境下命令行代理配置方案，使用的代理软件是 <code>ClashX</code> 不过应该对于大多数代理软件都是可以的；还介绍了 VMware 中的 Ubuntu 虚拟机的系统和命令行代理方式。</p><span id="more"></span><ul><li>对于 Windows 虚拟机来说，实现系统代理的方法和 Ubuntu 是类似的，对于 Windows 环境下的命令行代理方式，可参考 <a href="https://zcdll.github.io/2018/01/27/proxy-on-windows-terminal/">给 Windows 的终端配置代理</a> 一文；用不来 Windows 就不去尝试了。</li></ul><h2 id="vmware-虚拟机代理设置">VMware 虚拟机代理设置</h2><p>【20201101 更新：一直以来也被虚拟机如何使用代理的问题搞得很头痛，最近突然想通了，总结如下。】</p><p>这篇 <a href="https://www.shuzhiduo.com/A/rV57YanWzP/">文章</a> 介绍了在 <strong>VMware 上的 Ubuntu</strong> 的系统代理配置方法。</p><ul><li>先在本机上使用 <code>ifconfig</code> （win 下则是 <code>ipconfig /all</code>）查看VMware 生成的虚拟网卡，名字一般是 <code>vmnet1</code> 等形式，记下它的地址；</li><li>在宿主机上的代理软件中打开「允许来自局域网的连接」选项，记住端口号，例如在 ClashR 中的 HTTP/Socks5 的混合端口号为 7890；</li><li>打开虚拟机，在网络设置中直接可以配置系统带来，将不同协议的代理内容，分别填上前面两步得到的地址和端口号即可；</li></ul><p>打开浏览器，不出意外现在可以使用宿主机上的代理服务了。</p><p>当然，这是 Terminal 还是无法使用代理的；但我灵光一闪，上面的流程，核心是在虚拟机上使用宿主机（本地网络）上的代理服务，那么对于虚拟机命令行的代理，和宿主机上的命令行配置代理是一样的。</p><p>尝试了一下思路正确，具体配置的命令和下面一节的代码基本一致，只需要将地址 <code>127.0.0.1</code> 修改为在上面第一步中得到的 VMware 虚拟硬件地址即可；另外，由于我在 Ubuntu 上没有安装 oh my zsh ，因此将配置内容放在 <code>~./bashrc</code> 中，修改好之后 <code>source ~/.bashrc</code> 即可使用；可以尝试 <code>curl www.google.com</code>。</p><p>另外，试了一下在 Windows 虚拟机中也可以进行相应设置，实现系统代理。</p><p>【对于为终端设置代理，自己走了很多弯路，最终发现简单地设置 http_proxy, https_proxy, all_proxy 即可解决大多数问题（用的是 ClashX），也不知道之前为啥出了那么多的乱子。最终的解决方案参考 <a href="https://www.xbug.me/post/60589.html">此文</a>，仅修改了 <code>.zshrc</code> 和 SSH 配置；这样可完美解决大多数问题了；后面的对 git 单独配置代理，修改 Homebrew 源，proxychains 等方案均已不用，仅供参考。】</p><h2 id="终端代理配置">终端代理配置</h2><p>参见： <a href="https://www.xbug.me/post/60589.html">MAC 配置终端（Shell）走代理，Git 走代理，加速网络</a></p><blockquote><p>在执行一些非 ssh 协议的命令，比如 http(s) 协议的 curl 等等，我们也想走代理，这个时候怎么办呢？</p><p>拿我电脑举例子来讲，我的终端用的是 oh my zsh，那么打开 zsh 的配置文件 <code>vi ~/.zshrc</code> 在里面添加如下内容：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> https_proxy=http://127.0.0.1:7890</span><br><span class="line"><span class="built_in">export</span> http_proxy=http://127.0.0.1:7890</span><br><span class="line"><span class="built_in">export</span> all_proxy=socks5://127.0.0.1:7891</span><br><span class="line"><span class="comment">#上面的三行命令表示,每次新建一个终端会话时,默认让终端去走代理,这样就不需要每次都复制拷贝一下了,很方便,同时,代理程序去智能分流(国内 IP 直连,国外走代理)，避免了连接国内 IP 地址时“绕远”.</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> setproxy=<span class="string">&quot;export https_proxy=http://127.0.0.1:7890;export http_proxy=http://127.0.0.1:7890;export all_proxy=socks5://127.0.0.1:7891;echo \&quot;Set proxy successfully\&quot; &quot;</span></span><br><span class="line"><span class="built_in">alias</span> unsetproxy=<span class="string">&quot;unset http_proxy;unset https_proxy;unset all_proxy;echo \&quot;Unset proxy successfully\&quot; &quot;</span> </span><br><span class="line"><span class="built_in">alias</span> ipcn=<span class="string">&quot;curl myip.ipip.net&quot;</span></span><br><span class="line"><span class="built_in">alias</span> ip=<span class="string">&quot;curl ip.sb&quot;</span></span><br><span class="line"><span class="comment"># 上面这几个 alias 是自定义的命令</span></span><br><span class="line"><span class="comment"># unsetproxy 取消代理</span></span><br><span class="line"><span class="comment"># setproxy 设置代理</span></span><br><span class="line"><span class="comment"># ip &amp; ipcn  查看 IP</span></span><br></pre></td></tr></table></figure><p>另外，该文也介绍了 SSH（包括借由 SSH 的 git 服务）的配置方案，和下一章节是一致的</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#进入 ssh 配置目录</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line"><span class="comment">#编辑 config 文件,如果没有那就新建一个 config 文件</span></span><br><span class="line">touch config</span><br><span class="line">vi config</span><br></pre></td></tr></table></figure><p>配置如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host *</span><br><span class="line">    ProxyCommand nc -X 5 -x localhost:7891 %h %p</span><br><span class="line"><span class="comment">#解释一下</span></span><br><span class="line"><span class="comment">#第一行代表所有的 ssh 的主机</span></span><br><span class="line"><span class="comment">#第二行代表让所有的 ssh 的主机在连接的时候,通过你本地的端口为 7891 的 socks5 代理去连接,一般来讲,本地的 socks5 都是由翻墙工具提供,</span></span><br><span class="line"><span class="comment">#诸如 Surge  ClashX 或者 Ssr,所以,7891这个端口需要换成对应的服务端口即可</span></span><br></pre></td></tr></table></figure><h2 id="git-clone-速度慢的问题">git clone 速度慢的问题</h2><blockquote><p>并不需要怎么复杂，上面的命令行代理配置成功即可。</p></blockquote><p>是一个老生常谈的问题了，参见知乎上的一个<a href="https://www.zhihu.com/question/27159393">问题</a>。看到的解决方案有：1. 修改 hosts；2. 换用国内的镜像网站 <a href="http://github.com.cnpmjs.org" class="uri">http://github.com.cnpmjs.org</a> 和 <a href="http://git.sdut.me/" class="uri">http://git.sdut.me/</a> 等（显然都不优雅）。</p><p>更好的方案显然是采用本地的代理，然而知乎热门的那个回答试了下居然不行；直到看到 GitHub 上的 <a href="https://gist.github.com/chuyik/02d0d37a49edc162546441092efae6a1">一个回答</a>，发现原来是在本地代理端口上没有加引号；设置完毕后可从 4k 提速到 2m 左右👍。</p><p>注意有两种下载形式</p><ul><li><p>HTTP 形式：</p><blockquote><p>git clone <a href="https://github.com/owner/git.git" class="uri">https://github.com/owner/git.git</a></p></blockquote></li><li><p>SSH 形式：</p><blockquote><p>git clone <a href="mailto:git@github.com">git@github.com</a>:owner/git.git</p></blockquote></li><li><p>对于HTTP 形式，可以设置代理的代码是</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.proxy <span class="string">&quot;http://127.0.0.1:8080&quot;</span></span><br><span class="line">git config --global https.proxy <span class="string">&quot;http://127.0.0.1:8080&quot;</span></span><br></pre></td></tr></table></figure><p>若要换成 socks5（如 Shadowsocks） 直接将引号内的地址修改成相应形式即可。</p><p>还可以仅代理 GitHub：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy <span class="string">&quot;socks://127.0.0.1:7890&quot;</span></span><br><span class="line">git config --global https.https://github.com.proxy <span class="string">&quot;socks://127.0.0.1:7890&quot;</span></span><br></pre></td></tr></table></figure><p>取消代理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> http.proxy</span><br><span class="line">git config --global --<span class="built_in">unset</span> https.proxy</span><br></pre></td></tr></table></figure><p>另外，发现 git 的配置文件在 <code>~/.gitconfig</code> ，上述代理的配置等价于在该文件最后添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[http &quot;https://github.com&quot;]</span><br><span class="line"> proxy = socks5://127.0.0.1:7890</span><br><span class="line">[https &quot;https://github.com&quot;]</span><br><span class="line"> proxy = socks5://127.0.0.1:7890</span><br><span class="line">[http]</span><br><span class="line"> proxy = socks5://127.0.0.1:7890</span><br><span class="line">[https]</span><br><span class="line"> proxy = socks5://127.0.0.1:7890</span><br></pre></td></tr></table></figure><ul><li>SSH 形式的，可以修改 <code>~/.ssh/config</code></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 必须是 github.com</span></span><br><span class="line"><span class="string">Host</span> <span class="string">github.com</span></span><br><span class="line">   <span class="string">HostName</span> <span class="string">github.com</span></span><br><span class="line">   <span class="string">User</span> <span class="string">git</span></span><br><span class="line">   <span class="comment"># 走 HTTP 代理</span></span><br><span class="line">   <span class="comment"># ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=8080</span></span><br><span class="line">   <span class="comment"># 走 socks5 代理（如 Shadowsocks）</span></span><br><span class="line">   <span class="comment"># ProxyCommand nc -v -x 127.0.0.1:1080 %h %p</span></span><br></pre></td></tr></table></figure><h2 id="homebrew-国内源">Homebrew 国内源</h2><p>【事实上，采用 all_proxy 代理之后 Homebrew 下载速度已经非常好了，也就没有必要进行换源这样的「下策」，相关讨论参见 <a href="https://www.logcg.com/archives/1617.html" class="uri">https://www.logcg.com/archives/1617.html</a> ；因此下面的方案仅供参考。】</p><ul><li>清华源 <a href="https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/" class="uri">https://mirrors.tuna.tsinghua.edu.cn/help/homebrew/</a>；</li><li>中科大源 <a href="https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git/" class="uri">https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git/</a>。</li></ul><p>另外，可参考这篇文章： <a href="https://segmentfault.com/a/1190000019758638">为brew/git/pip设置代理&amp;为brew正确换源终极版</a> 。</p><h3 id="重新安装-homebrew">重新安装 Homebrew</h3><p>在调试 mbp 的过程中不知为为啥 Homebrew 验证错误，最后通过重装的方式解决了，参考 <a href="https://stackoverflow.com/questions/11038028/what-is-the-best-safest-way-to-reinstall-homebrew" class="uri">https://stackoverflow.com/questions/11038028/what-is-the-best-safest-way-to-reinstall-homebrew</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/<span class="built_in">local</span>/Cellar /usr/<span class="built_in">local</span>/.git &amp;&amp; brew cleanup</span><br><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install )</span>&quot;</span></span><br></pre></td></tr></table></figure><h2 id="proxychains">proxychains</h2><p>【之前一段时间用过 porxychains 体验非常好，不过今天试了下用来代理 git 好像不太来赛，不过 <code>proxychains4 curl www.google.com</code> 是可以的，不知道什么原因】</p><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install proxychains-ng</span><br></pre></td></tr></table></figure><p>配置相关文件 <code>/usr/local/etc/proxychains.conf</code> ，在最后添加本地代理，如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">socks5 127.0.0.1 1086</span><br><span class="line"><span class="comment">#对应的是协议，地址，端口</span></span><br></pre></td></tr></table></figure><p>由于 mac os 有个安全保护，无法直接使用 proxychains，需要关闭某个安全保护才可以使用，可以</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxychains4 curl www.google.com</span><br></pre></td></tr></table></figure><p>测试一下是否能工作。 重启电脑，出现白屏的时候按着 Command+R，等出现了系统管理页面后打开 Terminal，这时候的 Terminal 是管理员模式，使用命令 csrutil disable 来关闭服务。关闭后可用 csrutil status 查看是否关闭了。关闭服务器重启系统就可以用proxychains了。更多的内容在 <a href="http://osxdaily.com/2015/10/05/disable-rootless-system-integrity-protection-mac-os-x/" class="uri">http://osxdaily.com/2015/10/05/disable-rootless-system-integrity-protection-mac-os-x/</a></p><p>proxychains 后面可以接很多命令，<code>curl</code>、<code>wget</code>、<code>git</code> 等等，当要下载国外资源的时候这个能提速很多，特别是链接 github。</p><p>proxychains 后面接 <code>ping</code> 命令是不可以的，因为 proxychains 是在 tcp 层，ping 命令是基于 icmp 在 ip 层，所以使用 proxychains 后面接 ping 命令是没有的。</p><h2 id="网速测试speedtest-cli">网速测试：speedtest-cli</h2><p>最后，推荐一款终端快带测试工具 <a href="https://github.com/sivel/speedtest-cli">speedtest-cli</a> ；mac 下仅需</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install speedtest-cli</span><br></pre></td></tr></table></figure><p>即可安装使用。</p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> 网络 </tag>
            
            <tag> proxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人日志笔记软件比较</title>
      <link href="/posts/6243aa20/"/>
      <url>/posts/6243aa20/</url>
      
        <content type="html"><![CDATA[<p>【这篇短小的文章写于一年多前了，现在的笔记方案也发生了一些改变，在不断更换记录软件或是平台的过程中，自己也在不断反思究竟应该如何打造个人知识体系，并在此基础上进行整理和输出；频繁的平台转换耗费心力，但在一次次的变换中却也是在对于之前的内容的不断精简和吸收；工具永远不可能成为目的，更重要的还是个人的使用。最近在写一篇关于这个话题更为系统的总结，先把这一年前的未完稿发出来作为参考。】</p><span id="more"></span><p>记录的手段，便利如 icity 给人无脑的使用和迅捷的编辑方式，而 notion 则是更为优雅的写作体验。一众软件和平台纷至沓来，妖娆妩媚多姿多彩，眼花缭乱心乱神迷。 曾对于各平台/app的定位和抉择很纠结，在此作简单小结。</p><ul><li>iCity，一个非常简单的、基于社交的日记软件，提供了一种迅速记录生活的手段，可以作为日记软件，照片的排布规整而优雅，而 四叶新媒体 公司提供的服务业足以让人信赖，可作为记录生活的一种方法。</li><li>Notion，昨天才发现这款软件，真是被惊艳到——优雅，全平台兼容，少数派称之为“来自未来的笔记协助工具”，或许有其独到之处。妙处还有待挖掘，来讲讲小瑕疵：1. 软件打开的速度比较慢，可能是因为软件基于网页，在这个半秒钟的速度差别可以很大程度上决定产品留存度的年代可以说是一个缺点了；2. 对于数学公式的支持有待考察；3. 网页采集的能力目前还无法和Evernote相比，不论是转化的速度还是效果，如数学公式就直接消失了（当然网页美观性远胜于Evernote）。可以看出这款产品的定位吧，偏向于文艺向的个人空间记录，用作笔记等功能还有待考察。</li><li>Onenote：至今还在Onenote2016和Win10原生之间纠结，喜欢原生的启动速度和简洁的编辑能力，但功能性上却原差于Onenote2016，另外更新后的侧边栏无法自动隐藏也成为用户体验差的一点（更新后已解决 ——20191011），另外无法做到小屏状态下无边框编辑也是一大困扰；而对于Onenote2016，功能上强大的同时带来了笨重的特点，还有无法忍受的是其页面无法使用触摸板左右滑动而只能选择用手指对触屏进行操作（Surface Pro 4，不知道是否为个例），这也是后来转向Win10自带版的原因，而微软也完全抛弃了Onenote2016。最后的最后，说说个人对它的定位：课堂笔记和知识整理平台，文字性的内容在全屏操作的如书写般的编辑体验中可以得到较好的展开。</li><li>Evernote，作为网页和内容采集的软件吧，现在看来其对于各平台的支持是在各类产品中做得较好的，问题在于界面审美比较粗糙，操作的便捷性上有待加强。</li></ul><p>以上。关于上述的几个软件，如何高效优雅使用可以看看 <a href="https://sspai.com/">少数派</a> 的相关测评，上面有很多关于软件推荐和使用的教程和评测。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> MWeb </tag>
            
            <tag> Software </tag>
            
            <tag> Notion </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows To Go 安装记录</title>
      <link href="/posts/fa8ab620/"/>
      <url>/posts/fa8ab620/</url>
      
        <content type="html"><![CDATA[<p>说起来又是一个很长的故事，反正结果就是又花了一个周末的时间折腾了 <code>Windows To Go</code>，最终顺利安装好了，中间遇到了挺多的坑，总结如下。</p><span id="more"></span><h2 id="安装">安装</h2><p>最开始用的教程是这个 <a href="https://sspai.com/post/44699" class="uri">https://sspai.com/post/44699</a> ，不过里面很大的一个坑就是，苹果 T2 安全芯片的问题在该文中从始至终没有提到，导致我失败了很多次。</p><p>最后几乎走投无路了，在同学的帮助下找到了这篇文章 <a href="https://www.jianshu.com/p/7ac84adb3562">mac-Windows to go安装（带Parallel虚拟机引导全过程）</a> ；才发现是 T2 芯片的锅。</p><h3 id="t2安全芯片">T2安全芯片</h3><p>可以 按住「Option」时点左上角苹果标志，在「System Information」（当然也可以通过 Spotlight 搜索打开该工具）中的「Hardware-Controller」中查看是否有 T2 芯片；一般带指纹解锁的都是有的；</p><p>解锁的方式的，开机时长按「Command+R」进入 Recovery 模式，在「实用工具」中打开「启动安全性实用工具」，「安全启动」设置为 <code>无安全性</code>，「外部启动」设置 <code>允许</code></p><p>关于这一步的话，我之前试了很多次重启之后又回到「完整安全性」选项，不知道是否是因为，我当时是从外置 SSD 启动失败之后进入的 Recovery 模式；所以，在设置完成之后，记得重新打开「启动安全性实用工具」确认一下是否已经保存设置。</p><h3 id="关于-wtga-工具安装驱动">关于 WTGA 工具安装驱动</h3><p>第一次下载的是 <code>Windows 企业版 LSTC 2019</code>，配合的 WTGA 版本不知道是否是最新的，试着用 Mac 安装的时候出了问题，卡在一个选项上来外置鼠标都无法使用；</p><p>于是重新下了文章中推荐的 <code>1909 business</code>，中间因为硬件的问题又是一阵折腾，好在最终成功安装；</p><p>不过进入系统后还是无法使用鼠标键盘，也即教程中将驱动文件放在 WTGA 的 Driver 文件夹的操作失败了；于是采用了其他教程的方法，在整个从 Mac 下载到的文件夹中，找到 <code>Setup.exe</code> 安装驱动。</p><h2 id="安装之后">安装之后</h2><ul><li>重启之后触摸板和键盘可以基本正常使用，不过显示的效果还是很糟糕；</li><li>可能是 Windows 没有激活的关系，我也是忍了很久，最后激活完成后感觉显示效果明显变好，大概是未激活状态无法自定义显示；</li><li>不知道是不是哪里出了问题，驱动安装完成后，还是无法使用声卡。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Joplin 尝试 &amp; 资源汇总</title>
      <link href="/posts/3105dffb/"/>
      <url>/posts/3105dffb/</url>
      
        <content type="html"><![CDATA[<p>【汇总了之前学习 Joplin 阶段用到的一些技巧和资源，并记录了使用一段时间后的感想。】</p><span id="more"></span><p>20201025 更新：目前已经使用 Joplin 一段时间了，也与其他的笔记软件进行了一些比较，目前的使用小结如下：总体而言，Joplin 取代了之前 Evernote 的地位——作为信息采集端的 APP，原因如下</p><ul><li>相较于 Evernote 有着更为开放的 API，全平台免费非常良心（主要是因为贫穷）；</li><li>更重要的原因自然是本地化存储，不会因为网络原因出现卡顿；</li><li>支持 WebDAV，配合 NAS（或者坚果云）使用同步很棒；</li><li>原本的界面一般，更新到现在已经非常好看了（1.2.6）（吐槽一下，Joplin 的更新较为频繁而且时不时会跳出来，虽然是好事但次数多了还是有些厌烦的）；</li><li>对于 Markdown 的支持更好，当然其和 Evernote 的定位完全不一样，当相对于 Evernote 的「大而全」来说 Joplin 的「小而精」的定位，至少对于我来说是体验更棒的；</li></ul><p>另外，最近在尝试使用 DEVONthink，有被惊艳到，但其网页剪辑为 HTML 好像没有将图片资源一起下载下来，保存成其他格式也或多或少有响应时间上的问题；而 Joplin 直接简化为 Markdown 格式反而更加清爽，对于图片下载之后统一管理的方案也更令人放心；因此，我目前对于 DEVONthink 的定位是「专业相关」，希望发挥其知识管理和全面搜索等方面的优势，对于日常文章的收集来说目前还是在使用 Joplin。</p><p>因此，现在把 Joplin 相关资源分享出来，还是有意义的，以下是刚开始接触 Joplin 时的教程汇总：</p><hr /><p>偶然间看到知乎上的一篇文章 <a href="https://zhuanlan.zhihu.com/p/110370114">一个免费实用炫酷的笔记系统推荐</a>，谈到笔记系统，顺势找到了作者的博客，里面有一系列的 Joplin 教程 <a href="http://lightzhan.xyz/index.php/category/software-installation-and-use/joplin/">Jonlin 教程系列</a>。于是心痒了，准备折腾一下，这是 <a href="https://joplinapp.org/">官网</a>，直接下载即可，几乎支持全平台，有时间慢慢看教程。</p><ul><li>WebDAV 同步</li></ul><p>配合 NAS 使用可以全平台同步，Synology 的 <a href="https://www.synology.com/zh-tw/knowledgebase/DSM/tutorial/File_Sharing/How_to_access_files_on_Synology_NAS_with_WebDAV">WebDAV 指南</a> ；另外可参考这篇文章 <a href="https://www.ioiox.com/archives/42.html">群晖NAS基础服务 - 配置WebDAV服务</a>。</p><ul><li>坚果云同步</li></ul><p>没有用过坚果云不过据说体验不错，官方教程在 <a href="http://help.jianguoyun.com/?p=5633" class="uri">http://help.jianguoyun.com/?p=5633</a>。</p><ul><li>外部编辑器</li></ul><p>Joplin 原生支持外部的编辑器，可以到 <a href="http://lightzhan.xyz/index.php/2020/03/02/typoraandjoplin/">这里</a> 看一下教程，配合Typora 使用，不过不能用到 Typora （较为垃圾）的文档管理了。</p><ul><li>网页剪辑</li></ul><p>看 <a href="http://lightzhan.xyz/index.php/2020/03/18/joplin-web-clipper-tutorial/">这里</a>，刚刚试了一下，可以进行剪辑为 MD，极为实用的功能（当然也肯定有局限），爱了~</p><ul><li>相关插件</li></ul><p>这里的两篇详细介绍了 Joplin 插件的使用，其实可以看成是对 Markdown 语法的拓展，<a href="http://lightzhan.xyz/index.php/2020/03/31/joplin-extension-usage/" class="uri">http://lightzhan.xyz/index.php/2020/03/31/joplin-extension-usage/</a> 和 <a href="http://lightzhan.xyz/index.php/2020/04/03/joplin-extension-usage-2/" class="uri">http://lightzhan.xyz/index.php/2020/04/03/joplin-extension-usage-2/</a> 。讲得很详细了，其中的一部分功能和 Typora 类似，挺实用的，但这也是两相权衡的事情了，越多的功能也就决定了普适性越差，目前觉得还是简约一点比较好。</p><ul><li>Mermaid</li></ul><p>在 Joplin 和 Typora 中都支持 Mermaid，以代码块的形式。可参考 <a href="http://lightzhan.xyz/index.php/2020/04/06/markdown-mermaid-tutorial/">Markdown Mermaid 绘制流程图和时序图教程（以Joplin为例）</a> 和 <a href="http://lightzhan.xyz/index.php/2020/05/10/markdown-mermaid-tutorial-2/">系列二</a> 两篇文。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> Joplin </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据可视化 Note</title>
      <link href="/posts/b0748cbe/"/>
      <url>/posts/b0748cbe/</url>
      
        <content type="html"><![CDATA[<h2 id="数据">1 数据</h2><ul><li>数据属性特征<ul><li>数据值类别<ul><li>Nominal (labels)</li><li>Ordinal (ordered)</li><li>Interval (location of zero arbitrary)</li><li>Ratio (zero fixed)</li><li>注意区<strong>分区间型和比值型</strong>，后者可以定义乘除法</li></ul></li><li>属性间的距离<ul><li>比值型下的各种定义</li></ul></li></ul></li><li>数据预处理<ul><li>缺失值</li><li>噪声值：回归分析、离群点分析</li><li>可视化数据清洗</li><li>数据整合：多数据源</li></ul></li><li>数据存储<ul><li>文件形式：CSV、HTML、XML</li><li>数据库</li><li>数据仓库 data warehouse</li></ul></li></ul><h2 id="image-图像">2.0 Image 图像</h2><ul><li>从图像到数字图像<ul><li>天文、医学……</li><li>采样 sampling</li><li>量化 quantization</li></ul></li><li>分辨率<ul><li>Radiometric resolution 量化的大小</li><li>Geometric resolution 通常意义下的分辨率</li><li>Image resolution 图片尺寸</li></ul></li><li>存储形式<ul><li>数字图像表达：<span class="math inline">\(f(X)=Y\)</span></li><li>Pixel</li><li>Coordinates</li><li>Gray level</li></ul></li><li>亮度和对比度<ul><li>视觉：brightness adaptation level</li><li>Weber ratio</li><li>Contrast</li></ul></li><li>坐标系/医学影像坐标系<ul><li>医学影像中不同的坐标系</li><li>图像坐标-世界坐标的变换</li><li><span class="math inline">\([w_x,w_y,w_z,1]&#39;=M_{I2W}\times [i,j,k,1]&#39;\)</span></li><li>右侧是图像坐标系中的坐标，注意 M 是一个 <span class="math inline">\(3\times 4\)</span> 矩阵，另加的一个维度用于平移。</li></ul></li></ul><h2 id="pixel-operation-图像像素操作">2.1 Pixel operation 图像像素操作</h2><ul><li>Matrix persentation 以矩阵的形式对于图像进行表示</li><li>Neighbors of a pixel</li><li>Distance between pixels</li><li>Elementwise ops</li><li>Pixel ops<ul><li>Single pixel op 如下面的灰度值变换</li><li><strong>Neighbothood op</strong> 基于邻域的操作，很多算法的思想都有设计，如局部的直方图算法、插值等</li><li>Geometric spatial transformation 空间变换，在 9.0 中讲到</li><li>Image intensity as r.v.</li></ul></li></ul><h2 id="intensity-transform-灰度值变换">3.1 Intensity transform 灰度值变换</h2><ul><li>Contrast enhancement</li><li>Negative 灰度值取反</li><li>Logarithmic</li><li><p><strong>Power-law transformation</strong> 通过控制系数 γ 来调节凸显的部分，例如 γ 越大，灰度值高的区域对比度越高</p></li><li><p>Contrast stretching 自定义变换曲线 <span class="math inline">\(T(r)\)</span></p></li><li><p>Intensity-Level Slicing 凸显灰度值在一定区间内的部分，其余部分置零或是原样输出</p></li></ul><p><img src="16051953690223.jpg" /></p><h2 id="histogram-based-transform">3.2 Histogram-based transform</h2><ul><li>Histogram/nD joint histogram</li></ul><h3 id="histogram-equalization">Histogram equalization</h3><ul><li>主要的想法是：灰度值集中的某个区域内，导致那部分的图像没有区分度，因此考虑做一个转换使得 Histogram 均匀分布；自然想到了👇的累积分布的转化（叫什么名字来着，统计好像学过）：</li></ul><p><img src="16051953823865.jpg" /></p><ul><li>连续情况是很理想的，但在离散状态下，若过多的像素点灰度值为同一个值，效果可能还是不够好</li></ul><h3 id="histogram-matching-hm">Histogram matching HM</h3><ul><li>均衡化是对于全局进行的操作，然而有时我们仅仅需要突出某一区间内的灰度值细节，这就是 HM 的思想，将直方图再变换为所需的分布形式</li></ul><p><img src="16051953907669.jpg" /></p><ul><li>其中 T 是把原直方图均衡化，G 是把目标直方图均衡化；这里借由中间的均匀分布进行二次转换</li></ul><h3 id="local-histogram-processing">Local Histogram processing</h3><ul><li>一些场景下对于整张图片来进行 HM 是不合适的</li></ul><p><img src="16051954061259.jpg" /></p><ul><li>局部直方图均衡化：对于每一个关注的像素点 <span class="math inline">\(p_i\)</span> ，根据其附近的区域 <span class="math inline">\(RoI_i\)</span> 的直方图，计算转换 <span class="math inline">\(T_i\)</span> ，对于点 <span class="math inline">\(p_i\)</span> 进行更新；</li><li>显然，我们对于每个点直接计算其 RoI 的直方图分布是低效的；也即需要 <strong>Efficient update of local histogram</strong>，比如我们把点向右移动一个像素点，可以发现其 RoI 的的变化仅仅是左右的两列，我们利用这些变化的像素点对于 Histogram 进行更新。</li></ul><h2 id="basic-thresholding">4.0 Basic Thresholding</h2><ul><li>之间的直方图变换是为了增强对比度，而这里的 Threshold 可以看成是一种特殊的变换：二值化</li><li>我们设定一个区间，在这个区间内的像素点灰度值变换为 1，其余部分变换为 0</li><li>下面介绍了一些二值化算法（fix threshold），即仅确定通过在数轴上设立一个点分成两部分</li></ul><h3 id="basic-global-thresholding-bgt">Basic Global Thresholding (BGT)</h3><ul><li>A simple iterative threshold method, referred to as the <strong>Basic Global Thresholding (BGT)</strong> algorithm</li></ul><p><img src="16051954459903.jpg" /></p><ul><li>其实还挺迷的，想法是，根据这个 threshold 分割出来的直方图，左右两部分的两个均值的平均值正好等于我们设定的 threshold，迭代计算即可；不知道其背后有什么思想</li></ul><h3 id="otsu-algorithm-大津算法">OTSU Algorithm 大津算法</h3><ul><li>这个的想法比较简单：想要使得两类像素点之间的类间方差尽可能大</li></ul><p><img src="16051954535602.jpg" /></p><p><img src="16051954645210.jpg" /></p><ul><li>定义了几个量 ω 和 μ 分别是灰度值在一定区间内的频率和均值；m 是直接用 <span class="math inline">\(p(i)\)</span> 计算的结果，没有进行归一化，因此有 <span class="math inline">\(m=\omega\mu\)</span> 的关系（下面的符号上进行了简化）</li><li>我们的目标是组间方差 <span class="math inline">\(\delta_{bet}^2\)</span> ，好像和机器学习里的定义是一致的？以某一个的频率为权重对 <span class="math inline">\((\mu_{i}-\mu)^2\)</span> 进行求和；</li><li>计算的时候，我们希望尽量减少需要计算的量；这里第一行把 <span class="math inline">\(\mu\)</span> 的形式带进去，上下同乘；第二三行进行变换，把 front 类的变量消去；可以看到最终的结果仅包含了 <span class="math inline">\(\mu, \omega_0, m_0\)</span> 三个需要计算的量.</li></ul><h3 id="entropy-method">Entropy Method</h3><ul><li>最大化划分出来的两部分灰度值分布的熵之和</li></ul><p><img src="16051954723764.jpg" /></p><ul><li>这里用 b,w 的符号有点混淆，反正就是前景和背景部分各自的熵；</li><li>其实和大津算法很相似，后者是以组内/组间方差方差为准则，希望最大化组间方差，即最小化组内方差；而这里的熵算法则是最大化了两个分组内部的熵，同样也是希望是的组内的变异尽可能小。</li></ul><h3 id="adaptive-thresholding">Adaptive Thresholding</h3><ul><li><p>also called local (or regional) thresholding</p></li><li><p>显然，全局的 threshold 会出现之前 HE 一样的问题，考虑局部处理</p></li></ul><p><img src="16051954832737.jpg" /></p><ul><li>还是一个简单的快速更新均值的公式（一维形式）；另外需要对于边缘进行细致的处理；</li><li>可以采用简单的和 RoI 均值的比较设定阈值，公式的常数 C 可能是基于经验的；也可以用如大津算法等自动设定阈值；</li></ul><h2 id="interpolation-插值">5.0 Interpolation 插值</h2><ul><li>Four concepts<ul><li>Single-pixel operation</li><li>Neighborhood ops</li><li>Geometric spatial transformation</li><li>Image intensity as random variables</li><li>单像素的操作如 2.1 节的灰度值变换；邻域操作如平均模糊化，以及这里的图像插值；</li></ul></li><li>采样和量化<ul><li>Sampling：digitizing the coordinate values</li><li>Quantization: digitizing the amplitude values</li><li>如前所述采样和量化有其分辨率</li></ul></li><li>Interpolation is the process of using known data to <strong>estimate values ar unknown locations</strong><ul><li>Image interpolation is an image resampling methods for image <strong>resizing</strong> (shrinking and zooming)<ul><li>up-sampling and down-sampling</li></ul></li></ul></li><li><strong>Gray-level interpolation</strong> methods for images<ul><li><p>Nearest neighbot interpolation 找最近的那个点即可</p></li><li><p>Bilinear interpolation 线性插值，例如，在二维情况下，插值结果是四周各个点的平均，权重的其对角的矩形的面积</p></li></ul></li></ul><p><img src="16051955010731.jpg" /></p><ul><li>Cubic polynomial interpolation 上面用了周围的四个点，这里用四周的 16 个点</li><li>空间标量场插值<ul><li>图像描述可能不止矩阵等形式，对于一个空间标量场来说，其插值的思想和在正常的笛卡尔系下是一样的，无非是利用连续性的假设，利用周围点对于目标位置加权求和，权重随距离增加而衰减</li></ul></li></ul><p><img src="16051955208350.jpg" /></p><ul><li>当然，没有在上面的线性插值那么标准的算法了，例如这里的三角面片来说的，这里定义了两个方向，用了这样的形式定义了权重；注意到这里应该是和矩阵方式的存储一样各条边的长度为 1（尽管现实上不是等长的）；注意到，不同的两根轴的选取所得的结果有所不同；</li><li>当然，例如像 cell 为六边形标量场，可以直接以目标点到各定点之间的距离，其倒数的 e 次方为权重进行衰减，考虑到发散情况加上一个平滑项 <span class="math inline">\(({1\over r_i}+\epsilon)^e\)</span> 。</li></ul><h2 id="filter">5.1 Filter</h2><ul><li><p>Spatial filter 空间滤波</p><ul><li>Filter: passing, modifying or rejecting specific frequency</li><li>Contrast &amp; Enhancement</li><li>Spatial filtering: Linear or Nonlinear</li></ul></li><li><p>Convolution &amp; Spatial correlation</p></li></ul><p><img src="16051955293140.jpg" /></p><ul><li>有下面的一些性质</li></ul><p><img src="16051955362098.jpg" /></p><h3 id="smoothing-noise-reduction">Smoothing (noise reduction)</h3><ul><li><p>平滑操作的背景是为了去噪，例如 X-ray image of a circuit board 中的 salt-and pepper noise 椒盐噪声</p></li><li><p>最简单的如 <strong>Averaging filter</strong>，选取卷积核为取平均的大小为 3 的矩阵；</p></li><li><p>再如 <strong>Gaussian Filter</strong> 基于二维高斯分布，取不同方差的高斯核，kernel 的大小也会不同； <span class="math display">\[  w(s,t)=G(s,t)=Ke^{-{s^2+t^2\over 2\sigma^2}}  \]</span> 一般可取三倍方差范围内的点，例如取 <span class="math inline">\(\sigma=7\)</span>，则 kernel size=21</p></li><li><p>再如 <strong>Order-Statistics filter</strong>，如取 Median，这是 nonliner 的；在图像原本没有噪声的情况下，用前两者会有<strong>模糊化</strong>的效果，而这个相对来说好一些。</p></li></ul><h3 id="edge-detectation">Edge detectation</h3><ul><li>不同类型的边缘，前面的两个是快速和缓慢变化的边缘，最后一个可以理解成一条线/缝；它们的一些一阶导数和二阶导数呈现右边的形态</li></ul><p><img src="16051955509084.jpg" /></p><ul><li>Image gradient：因此考虑借助图像梯度的信息进行边缘检测；在这样的离散状态下，可以通过不同的方式（只要合理）来定义梯度，都可以描述成一个 kernel</li></ul><p><img src="16051955587707.jpg" /></p><ul><li>这里用单独一个方向的导数矩阵变换可以得到一个方向上的边缘（实现的时候可以不用 kernel 的形式直接算出来即可）；分别计算两个方向的导数，汇总成<strong>梯度值</strong>图像可以实现多方向上的边缘检</li></ul><h3 id="sharpening-锐化">Sharpening 锐化</h3><ul><li>（上面的边缘检测似乎只是用到了一阶梯度信息？）这里的锐化是想要凸显出图像的细节特征。一个典型的算法是 <strong>Laplacian filter</strong> 拉普拉斯滤波，用到了二阶梯度的信息，对于「边缘检测」一节中的（一维）边缘图像全部二阶求导；例如对于上一节中的 Step edge，原本直接只要一个单峰的一阶梯度图像，经过求导后会变成有一个正、紧接着一个负的两个小峰；若我们将其取反叠加到原图像上，那么这个边缘会变得更加「明显」。对于其他的情况可以有类似的结论。</li></ul><p><img src="16051955670240.jpg" /></p><ul><li>这是一个例子，可以看到 Laplacian 变换之后提取到了边缘信息，叠加之后月球的细节部分更为清晰。</li></ul><p><img src="16051955744023.jpg" /></p><ul><li><p>这里用上面的一种梯度公式推导出了 Laplacian kernel，形式上比较好理解；用不同的导数定义可以得到多种形式的 kernel。</p></li><li><p><strong>Unsharp masking and highboost filtering</strong>：除了上面的借助二阶梯度的算法，我们可以从另外的角度来进行锐化——之前讲到的 smoothing 可以消去图像中尖锐的信息，现在我们取两者之差即可得到「残差图」，包含了原本图像中尖锐部分的信息；将其叠加在源图像上也可以达到锐化效果，称为 <strong>highboost 算法</strong></p></li></ul><p><img src="16051955825298.jpg" /></p><p><img src="16051955886201.jpg" /></p><ul><li><p>总结</p><p>Laplacian: <span class="math inline">\(f-w\nabla^2f\)</span></p><p>Highboost: <span class="math inline">\(f+k(f-\bar f)\)</span></p><p>另外，如果我们采用之前的定义方式，那么 <span class="math display">\[\nabla^2f=f(-1,0)+f(1,0)+f(0,-1)+f(0,1)+f(0,0)-5f(0,0)=-5(f-\bar f)\]</span> 于是，两者在一定条件下是等价的。</p></li></ul><h2 id="频域变换概念">7.0 频域变换概念</h2><blockquote><p>关于傅立叶变换的部分，之前课上的时候查阅了一些材料，整理了单独的一篇笔记，见 <a href="https://www.cnblogs.com/easonshi/p/12676491.html" class="uri">https://www.cnblogs.com/easonshi/p/12676491.html</a> 。因此在下面简单罗列不加以说明。</p></blockquote><ul><li><p>傅立叶级数 Fourier Series</p></li><li><p>傅立叶变换 Fourier Transform</p></li><li><p>傅立叶逆变换</p><ul><li>统一利用欧拉公式写成指数形式，<strong>注意到傅立叶级数的本质是将一个函数分解到一个函数空间上，其中的系数是对应的表示向量；不断增加周期，原本离散的系数/向量就变成了一个连续的函数，即为「傅立叶变换」，将原本的时空域函数 <span class="math inline">\(f(t)\)</span> 变换到了频率域上的表示 <span class="math inline">\(F(u)\)</span>，而原本的级数公式就变为傅立叶逆变换的形式，两者组成一个傅立叶变换对。</strong></li></ul></li></ul><p><img src="16051955972537.jpg" /></p><h3 id="傅立叶变换对">傅立叶变换对</h3><ul><li><p>频域和时空域（图像域）</p></li><li><p>正弦、余弦项的频率由 u 决定，称傅里叶变换域为频率域；</p></li><li><p>对于图像，t 成为时空域</p></li><li><p><strong>频谱 frequency spectrum</strong>: <span class="math inline">\(|F(u)|\)</span></p></li><li><p><strong>相位 phase angle</strong>: <span class="math inline">\(\theta(u)=arctan[I(u)/R(u)]\)</span></p></li><li><p>上面用的是指数形式，虽然简洁但变换后每一个点的函数值都是复数；<strong>我们还是回到经典的基函数为常值函数、正弦、余弦的形式，并且可以看到 <span class="math inline">\(c_n\)</span> 的实部和虚部 <span class="math inline">\(a_n, b_n\)</span> 分别对应了周期相同的正余弦函数上的系数；在此基础上我们定义了频谱和相位</strong>。</p><p>下图展示了两张图像的频谱图和相位图</p></li></ul><p><img src="16051956062909.jpg" /></p><h3 id="常用的变换">常用的变换</h3><ul><li>首先介绍了 <strong>冲击函数 impulse</strong> <span class="math inline">\(\delta(t)\)</span>，即仅某点有取值，积分为 1；</li><li>其具有 <strong>sifting property</strong>，即和某个函数作积分可以「筛选」出其某个点的函数值；</li></ul><p><img src="16051956130905.jpg" /></p><ul><li>离散状态下表现为仅在一点取值为 1；<strong>冲击序列 Impulse train</strong>，即一系列的在 <span class="math inline">\(k\Delta T\)</span> 处的单位冲击 <span class="math display">\[s_{\Delta T}(t)=\sum_{-\infty}^\infty \delta(t-\Delta T)\]</span></li></ul><ol type="1"><li><strong>box function</strong> 的傅立叶变换，是一个 sinc 函数形式；证明的话利用欧拉公式直接推</li></ol><p><img src="16051956374537.jpg" /></p><ol start="2" type="1"><li><strong>常值函数</strong> <span class="math inline">\(f(t)=1\)</span> 的傅立叶变换是一个连续冲击函数，可利用逆变换的唯一性证明</li><li>冲击函数的傅立叶变换就相当于作用 shifting property；冲击串的傅立叶变换还是一个冲击串</li></ol><p><img src="16051956438277.jpg" /></p><h3 id="卷积定理">卷积定理</h3><ul><li><p>两个函数的卷积 <span class="math display">\[f(t)*h(t)=\int f(s)h(t-s)ds\]</span></p></li><li><p>一维状态下的卷积定理 <span class="math display">\[f(t)*h(t)\Leftrightarrow H(u)F(u)\\f(t)h(t)\Leftrightarrow H(u)*F(u)\]</span> 即两函数卷积的傅立叶变换等于其对应的变换后函数的乘积；乘积的傅立叶变换等于量函数变换后的卷积。证明的话用到一次变元，在后面二维情况下进行了证明这里略去。</p></li></ul><h2 id="离散频域变换">7.1离散频域变换</h2><h3 id="sampling-reconstruction">Sampling &amp; Reconstruction</h3><ul><li>采用上面提到的冲击串进行间隔为 <span class="math inline">\(\Delta T\)</span> 的采样，于是采样得到的结果是下面的形式，注意到其可以表示为原函数和采样函数的乘积；</li></ul><p><img src="16051956611716.jpg" /></p><p>对于采样的结果进行傅立叶变换，利用到<strong>卷积定理</strong>和上面冲击串的卷积形式，可以得到如下结果</p><p><img src="16051956690940.jpg" /></p><ul><li>注意到，对于这一结果，由于对于 n 从负无穷到正无穷进行了求和，所以是一个<strong>周期为 <span class="math inline">\(1/\Delta T\)</span> 的周期函数</strong>；<ul><li>由于这一特性，假设原函数的傅立叶变换结果有上下限，若我们的采样率过小，可能会出现下面的这张图中的混淆现象</li></ul></li></ul><p><img src="16051956875568.jpg" /></p><ul><li><p><strong>Sampling theorem （取样定理）</strong></p><p>带限函数：<span class="math inline">\(F(u), u\in[-u_{max}, u_{max}]\)</span></p><p><strong>奈奎斯特（Nyquist）采样率</strong>：<span class="math inline">\(2u_{max}\)</span></p><p>采样间隔：<span class="math inline">\({1\over \Delta T}&gt;2u_{max}\)</span></p><ul><li>在这样的情况下，我们可以根据变换后的结果重建出原信号而不损失信息</li><li>恢复过程中，我们抽取出 <span class="math inline">\([-u_{max}, u_{max}]\)</span> 区间内的部分并乘以 <span class="math inline">\(\Delta T\)</span> 消除系数，就得到了原始的连续函数傅立叶变换结果；要从频域空间恢复时空域信号，施加逆变换即可；</li></ul></li></ul><h3 id="dft-discrete-freqfourier-transform">DFT: discrete freq/Fourier transform</h3><ul><li>在图像处理中，我们用的显然是离散状态下的傅立叶变换，即取一个周期内的 M 个样本点；注意到在离散状态下需要多出来一个系数以满足相互变换的一致性；</li></ul><p><img src="16051956954943.jpg" /></p><h3 id="dft-for-2d">DFT for 2D</h3><ul><li><strong>2D impulse &amp; sifting property</strong> 同样介绍了二维状态下的冲击函数</li><li>2D continueous FT pair</li></ul><p><img src="16051957037352.jpg" /></p><h4 id="d-sampling-sampling-theorem-采样定理">2D sampling &amp; sampling theorem 采样定理</h4><ul><li><p>在二维状态下，冲击串 <span class="math inline">\(s_{\Delta T\Delta Z}(t,z)-\sum\sum \delta(t-m\Delta T, z-n\Delta Z)\)</span> ，若取样间隔满足 <span class="math display">\[\Delta T&lt;{1\over 2u_{max}}\\\Delta Z&lt;{1\over 2v_{max}}\]</span> 则<strong>连续带限函数可由其一组样本基本无误地恢复</strong>。</p></li><li><p>DFT for 2D/3D，注意到同连续形式相比，同样多出来了一个系数</p></li></ul><p><img src="16051957463148.jpg" /></p><h4 id="一些性质">一些性质</h4><p>没有细讲，不过在后面的处理当中必要的部分是将频谱图平移到中心，即这里的对于时空域图像做 <span class="math inline">\((-1)^{x+y}\)</span> 变换</p><p><img src="16051957543099.jpg" /></p><ul><li>频率域的<strong>频谱和相位角</strong></li></ul><p><img src="16051957618456.jpg" /></p><p>下面可视化地分析了傅立叶变换后得到的结果中，频谱图和相位图的一些性质；我们记下面的一个 box 函数图像为 alpha，图 2 是中心化后的频谱图，图 3 进行了 Log 变换，图 4 是相位图；分别对于 alpha 做平移和卷积，傅立叶变换的结果也相应展示如下，在频谱上的结果是比较直观的，而我们很难从相位图上直观地观察到原图的一些信息；</p><p><img src="16051957760904.jpg" /></p><p>然而，事实上，（在图像重建上）相位所带的信息要比频谱更为重要。这里记👇的图 1 为 A，图 2 为其相位图，图 3 是仅保留其相位，经过傅立叶逆变换之后重建的图像，可以看到一些边缘的信息；图 4 是仅保留其频谱信息重建出来的结果；更有意思的最后两张图，图 5 用了 A 的相位信息，而频谱没有置零而用了上面的 alpha 的，最后的结果可以模糊地看到小孩；图 6 用了 A 的频谱和 alpha 的相位，最后重建的结果从形态上更像 alpha。</p><p><img src="16051957875658.jpg" /></p><h4 id="二维状态下的离散卷积定理">二维状态下的离散卷积定理</h4><p>要注意同样是在卷积定理中前面的一个系数</p><p><img src="16051957954059.jpg" /></p><blockquote><p>2 证明二维变量的离散傅里叶变换的卷积定理即：</p></blockquote><p><span class="math display">\[\begin{gathered}f(x,y)*h(x,y) &lt;==&gt; F(u,v)H(u,v)\\f(x,y)h(x,y) &lt;==&gt; {1\over MN}F(u,v)*H(u,v)\end{gathered}\]</span></p><p>其中, <span class="math inline">\(*\)</span> 表示卷积运算。</p><p>根据卷积和傅立叶变换公式： <span class="math display">\[\begin{gathered}F(u,v) = \sum_{x,y}f(x,y)e^{-j2\pi(ux/M+vy/N)}\\f(x,y)*h(x,y) = \sum_{m,n}f(m,n)h(x-m,y-n)\end{gathered}\]</span></p><p>方便起见省略了加和的上标。参考一维情况，先证第一条</p><p><span class="math display">\[\begin{aligned}\mathbf{F}\{f * g\}(u, v) &amp;=\sum_{x, y}\left(\sum_{m, n} f(m, n) h(x-m, y-n)\right) e^{-j 2 \pi(u x / M+v y / N)} \\&amp;=\sum_{m, n} f(m, n) e^{-j 2 \pi(u m / M+v n / N)} \sum_{x, y} h(x-m, y-n) e^{-j 2 \pi(u(x-m) / M+v(y-n) / N)} \\&amp;=\sum_{m, n} f(m, n) e^{-j 2 \pi(u m / M+v n / N)} \sum_{i, j} h(i, j) e^{-j 2 \pi(u i / M+v j / N)} \\&amp;=F(u, v) H(u, v)\end{aligned}\]</span></p><p>即 <span class="math display">\[f(x,y)*h(x,y) &lt;==&gt; F(u,v)H(u,v)\]</span></p><p>下通过逆 FT 公式证第二条</p><p><span class="math display">\[\begin{aligned}\mathbf F^{-1}\{\frac{1}{MN}F*H\}(x,y)&amp;=\frac{1}{M N} \frac{1}{M N} \sum_{u, v}\left(\sum_{m, n} F(m, n) H(u-m, v-n)\right) e^{j 2 \pi(u x / M+v y / N)} \\&amp;=\frac{1}{M N} \sum_{m, n} F(m, n) e^{j 2 \pi(m x / M+n y / N)} \frac{1}{M N} \sum_{u, v} H(u-m, v-n) e^{j 2 \pi(x(u-m) / M+y(v-n) / N)} \\&amp;=\frac{1}{M N} \sum_{m, n} F(m, n) e^{j 2 \pi(m x / M+n y / N)} \frac{1}{M N} \sum_{i, j} H(i, j) e^{j 2 \pi(x i / M+y j / N)} \\&amp;=f(x, y) h(x, y)\end{aligned}\]</span></p><p>即 <span class="math display">\[f(x,y)h(x,y) &lt;==&gt;{1\over MN} F(u,v)*H(u,v)\]</span></p><h2 id="filters-in-frequency-domain">8.1 Filters in frequency domain</h2><ul><li><p>在时空域中，我们之前讲过 Filter 操作，如简单的平滑操作、Laplacian operator 等</p></li><li><p>Basics of filtering in frequency domain</p><ul><li><p>观察上面的二维傅立叶变换公式，我们可以看到：</p><p>当 u=v=0 的时候，傅立叶变换得到的实际上是整个图像的平均灰度值； 当 u,v 较小的时候，低频，对应的是图像中灰度值变换比较缓慢的信息；</p></li><li><p>例如，对于👇的这张图来说，我们可以看到频谱图的对角线方向有两个比较明显的高频分量，对应了原图像中的斜向的边缘（灰度值变化大）的信息。</p></li></ul></li></ul><p><img src="16051958143754.jpg" /></p><ul><li>频域滤波公式</li></ul><p><img src="16051958214260.jpg" /></p><p>在图像域内，我们的滤波操作是采用了卷积操作；而根据卷积定理，相应的我们可以在频率域进行两张图像的点积操作，再将其变换到图像域，即上面的公式；</p><ul><li>下面直观的展示了低通和高通滤波器；低通滤波器可以达到 smooth 的效果；高通滤波器可以进行锐化；第三张图直接上图 2 的高通滤波器上加了一个常数，修正了最终处理结果的亮度；</li></ul><p><img src="16051958298161.jpg" /></p><p>另外，若直接对原图像进行操作，可能出现 <strong>缠绕错误 wraparound error</strong> ，因此需要将进行 zero padding</p><h3 id="频率域步骤五步骤">频率域步骤五步骤</h3><ol type="1"><li>给定大小为 <span class="math inline">\(M\times N\)</span> 的图像 <span class="math inline">\(f(x,y)\)</span> ，填充成大小为 <span class="math inline">\(P\times G\)</span> 的图像 <span class="math inline">\(f_P(x,y)\)</span> ，一般可取为原图像大小的 2 倍；</li><li>以 <span class="math inline">\((-1)^{x+y}\)</span> 乘以 <span class="math inline">\(f_p\)</span>，计算 DFT，得到中心化 <span class="math inline">\(F(u,v)\)</span> ；</li><li>生成实对称中心化滤波函数 <span class="math inline">\(H(u,v)\)</span>，<span class="math inline">\(G(u,v)=H(u,x)F(u,v)\)</span> ；</li><li>计算 IDFT <span class="math inline">\(g_p(x,y)={real[F^{-1}(G(u,v))]}(-1)^{x+y}\)</span> ，逆变换，取其实数部分，在进行去中心化操作；</li><li><span class="math inline">\(g_p\)</span> 左上象限提取 <span class="math inline">\(M\times N\)</span> 图像 <span class="math inline">\(g(x,y)\)</span> ；</li></ol><p>上述过程如下所示，图 1 为原图；图 2 进行了 padding；图 3 进行中心化；图 4 为傅立叶变换结果；应用图 5 的低通滤波器后得到图 6 的结果；逆变换得到图 7，再去除之前施加的中心化算子，取左上角的那部分图像得到图 8</p><p><img src="16051958400574.jpg" /></p><h3 id="image-smoothing">Image smoothing</h3><ul><li><p>Ideal lowpass filter，理想低通滤波，即一个类似 box function 的圆柱</p></li><li><p><strong>Ringing effect</strong>，直接用的话会出现 Ringing effect 效果；类似于时空域里的 box function 经过变换后得到 sinc 函数的特征，在频率域内的这种函数经过逆变换也会有类似的效果；</p></li><li><p><strong>Gaussian lowpass filter GLPF</strong>，常用的是高斯低通滤波 <span class="math display">\[H(u,v)=e^{-D^2(u,b)/2\sigma^2}\]</span> 设置不同的方差，可以得到不同的滤波效果；</p></li></ul><h3 id="image-sharpening">Image sharpening</h3><ul><li>高通滤波器，简单的可取 <span class="math inline">\(H_{HP}(u,v)=1-H_{LP}(u,v)\)</span></li><li>于是有理想高通滤波，高斯高通滤波</li><li>对于频率域中的 Laplacian 算子和 Highboost 滤波算子，在频率域中分别有如下的等效算子</li></ul><p><img src="16051958497040.jpg" /></p><h3 id="选择性滤波">选择性滤波</h3><ul><li><p>Bandreject and bandpass filters 带阻/带通滤波器</p></li><li><p>Notch filters 陷波滤波器</p><p>用一个例子来进行说明，我们得到的图片 1 可能出现一些条纹，这在时空域显然是很难去除的；我们转换为频率域得到图 2，横向条纹对应的频谱图分量类似于图 3；因此设计图 4 的滤波器；滤波结果如图 5 所示；图 6 是对于图 3，也即横向条纹对应的频谱分量进行逆变换，直观地展示了这些杂纹；</p><p>作业中用到了这个算法，不过找到对应的频谱分量真的有点难 Orz，可能是基于 Python 的手动实现的原因吧，这时候才意识到在图像处理领域中，交互式的设计有多重要；</p></li></ul><p><img src="16051958580883.jpg" /></p><h2 id="spatial-transform-图像变换">9.0 Spatial Transform 图像变换</h2><h3 id="linear-transformation">Linear transformation</h3><ul><li><p>Rigid transformation 刚性变换：Rigid transformation preserves the angels and distances within the model</p><p>包括了平移和旋转</p></li></ul><p><img src="16051958702079.jpg" /></p><ul><li><p>Similarity transformation 相似变换：Similarity transformation adds scaling {s}</p><p>增加了伸缩</p></li></ul><p><img src="16051958788724.jpg" /></p><ul><li><p>Affine transformation 仿射变换：Affine transformation applies a function between affine spaces which preserves points, straight lines and planes.</p><p>增加了 Shear？</p><p>可以用矩阵来表示；保持平行关系</p></li></ul><p><img src="16051958886420.jpg" /></p><h3 id="nonlinear-transformation">Nonlinear transformation</h3><ul><li>Thin-Plate Spline 薄板样条</li><li>FFD Free-form deformation 自由形变变换</li><li>Locally affine 局部仿射</li></ul><h4 id="ffd-free-form-deformation-自由形变变换">FFD Free-form deformation 自由形变变换</h4><ul><li>想法还是一个局部效应求和的过程；设定网格状的控制点 P，每个控制点可以发生一个形变 <span class="math inline">\(\Phi\)</span>；这里的想法就是 <span class="math inline">\(X&#39;=X+Q\)</span>，其中的「形变」部分由 X 周围的一些控制点决定；</li></ul><p><img src="16051959087044.jpg" /></p><p>常见的是三次 B 样条核函数，一个类似于高斯分布的形式（忽略里面的导数曲线）；可以看到 B 样条函数只在 <span class="math inline">\([-2,2]\)</span> 区间内取值；对于一个目标点 X，划出这个区间可以找到与其相邻的四个点，对着四个点的形变量 <span class="math inline">\(\Phi\)</span> 以 X 到控制点的距离所对应的 B 样条核函数的值为权重（注意这四个点之和=1）求和；最后将形变量加到原来的 X 上即可；</p><p><img src="16051959171381.jpg" /></p><p><img src="16051959246179.jpg" /></p><h4 id="locally-affine-局部仿射">Locally affine 局部仿射</h4><p><img src="16051959327691.jpg" /></p><ul><li>这里可以在多个区域内进行仿射仿射变换，作为看参考的区域，对于此外的像素点，按照其离这些参考区域的距离倒数的 e 次方衰减作为权重，把这些变换汇总起来；实现各个区域的局部仿射在算法上还是比较复杂的，作业里面用的是一些参考点而非区域。下面是一些效果图</li></ul><p><img src="16051959407222.jpg" /></p><h3 id="transform-an-image">Transform an image</h3><ul><li><p>Forward VS Backward (inverse)</p></li><li><p>在具体实现的时候，若是前向进行，即对原图像上的每一个像素点，做 T 变换到新的图像，则可能出现其中很多的点没有被映射到的问题；</p></li><li><p>因此，更多时候用的是<strong>反向图变换</strong>，对于目标图像的每一个像素点位置，填充原图像上 <span class="math inline">\(T^{-1}(x&#39;)\)</span> 位置的颜色。注意变换之后需要用到插值。</p></li><li><p>作业实现了局部仿射的逆变换，摘录报告中的表述如下</p><blockquote><p>具体而言，算法的输入包括人脸和猩猩脸两张图片，需要利用两者的相关特征，将人脸 <span class="math inline">\(X\)</span> 风格化为猩猩的面部特征，记输出图像为 <span class="math inline">\(Y\)</span>。考虑到图像存储的离散性，采用逆向变换，即若 <span class="math inline">\(X\)</span> 到 <span class="math inline">\(Y\)</span> 的变换为 <span class="math inline">\(Y=T(X)\)</span>，则算法实现其逆变换 <span class="math inline">\(S(Y)=T^{-1}(Y)=X\)</span> 。</p><p>对于原图像的若干控制点 <span class="math inline">\(X_i\)</span>，设其经过各自变换后新的坐标点为 <span class="math inline">\(Y_i=G_i(X_i)\)</span> ，则基于局部仿射变换，对于图像中的任意点 <span class="math inline">\(X\)</span>，其变换结果为个变换的加权平均，权重根据该点与各控制点的距离衰减。即 <span class="math display">\[T(X)=\sum_{i=1}^n w_i(X)G_i(X_i)\\w_i(X) = {1/d_i(X)^e\over \sum 1/d_i(X)^e}\\\]</span> 其中 <span class="math inline">\(d_i(X)\)</span> 表示 <span class="math inline">\(X\)</span> 到各控制点 <span class="math inline">\(X_i\)</span> 之间的距离，权重根据距离倒数的 <span class="math inline">\(e\)</span> 次方衰减，并进行归一化。</p><p>记 <span class="math inline">\(G_i(X_i)\)</span> 的逆变换为 <span class="math inline">\(G&#39;(Y_i)\)</span> ，则逆变换过程可近似表为 <span class="math display">\[S(Y)=\sum_{i=1}^n w&#39;_i(Y)G&#39;_i(Y_i)\\ \tag{2.1}w&#39;_i(Y)={1/d_i&#39;(Y_i)^e\over \sum1/d_i&#39;(Y_i)^e}\]</span> 其中 <span class="math inline">\(d&#39;_i(Y_i)\)</span> 为 <span class="math inline">\(Y\)</span> 到各控制点 <span class="math inline">\(Y_i\)</span> 的距离。</p></blockquote></li></ul><h2 id="颜色和彩色图像">10.0 颜色和彩色图像</h2><ul><li><p>颜色、色彩空间</p><ul><li>光谱</li><li>人眼：视杆细胞、视锥细胞</li><li>基色：RGB、红黄蓝、青品红黄黑 CMYK（Cyan, Magenta）</li><li>颜色视觉障碍</li><li>色彩空间<ul><li><strong>RGB 加色法系统</strong> 采用笛卡尔坐标系定义颜色，用处如显示器</li><li><strong>CMYK 减色法系统</strong> 白色减去某个颜色，多用于打印机</li><li><strong>HSL/HSI 颜色空间</strong><ul><li>Hue 色调，人类认为的颜色</li><li>Saturation 饱和度，纯度，与灰色的距离</li><li>Lightness/Intense 亮度，从黑色到亮色</li></ul></li><li>Lab颜色空间&lt;L,a,b&gt;<ul><li>感知上均匀分布</li><li>a, b用来近似“红/绿” 和“黄/蓝”通道</li></ul></li></ul></li><li>色彩转换：颜色空间的转换 #Further reading</li></ul></li></ul><h3 id="彩色图像处理">彩色图像处理</h3><p><img src="16051959517375.jpg" /></p><ul><li>根据不同的色彩空间，需要用不同的函数进行变换，例如要对降低一张图像的亮度，在 RGB 空间中对每一个通道进行收缩即可；仅是 CMY 减色法系统中，统一增加数值即可（加起来是黑色）；而在 CMYK 空间中，仅需要调节 K 通道；在 HSL 空间中，单独调节亮度通道即可。</li></ul><p><img src="16051960296991.jpg" /></p><ul><li><p>而要计算补色，在 RGB 空间内转置即可；而在 HSI 空间中，将亮度转置（白变黑），纯度不变，而对于色调，想象一个色环，我们要将其映射到「对面」去，或者说变换保持 1/2 的距离，如上图所示。</p></li><li><p>注意到，一些算法对于不同的色彩空间需要有不同的设计；例如，对于<strong>基于 Histogram 的算法</strong>，分别在 RGB 通道上操作会有问题，可在 HSI 空间中进行，仅调节亮度 I。</p></li><li><p>图像的 <strong>Filter 操作</strong>，下图展示了在 RGB 空间和 HSI 空间的结果：</p></li></ul><p><img src="16051959610206.jpg" /></p><h2 id="plot---basics">10.1 Plot - basics</h2><ul><li><p>视觉基础</p><ul><li><p>视觉：低阶（物理性质）、高阶（识别、分类等，属于认知能力重要组成部分）</p></li><li><p>格式塔 Gestalt 理论（可以<strong>指导视觉设计</strong>）</p><ul><li><p>强调经验和行为的整体性</p><p>感知的事情大于眼睛见到的事物</p></li><li><p>贴近原则</p><p>相似原则</p><p>对称性原则</p><p>经验原则</p><p>连续原则</p><p>闭合原则</p><p>共势原则 common fate，方向同？</p><p>好图原则 good figure</p></li></ul></li><li><p>视觉感知的相对性：相对性&amp;绝对性，介绍了而一些常见的错视效应</p></li></ul></li><li><p>视觉编码</p><ul><li><p>标记和视觉通道</p><ul><li><strong>标记</strong>：是数据属性到可视化元素映射（图形元素：点线面）</li><li><strong>视觉通道</strong>：是数据的值到标记的视觉表现属性的映射（位置、大小、形状、方向、色调、饱和度、亮度……）</li></ul></li><li><p>视觉通道的概念</p><ul><li><p><strong>表现力</strong>：视觉通道在编码数据信息时，需要表达且仅表达数据的完整属性</p><p>要求视觉通道准确编码数据包含的所有信息；在对数据进行编码的时候，需要尽量忠于原始数据</p></li><li><p>不同类型的数据选取不同的通道进行可视化</p></li></ul></li></ul></li></ul><p><img src="16051959704098.jpg" /></p><ul><li><p>视觉通道的特性</p><ul><li>不同的视觉通道，人眼对其的感知能力是不同的；如<strong>尺寸/长度</strong>是先行感知的话，<strong>平面位置、颜色</strong>是超线性的，<strong>角度、形状</strong>等式亚线性的。</li></ul></li></ul><h2 id="plot">11.0 Plot</h2><ul><li><p>统计图介绍</p><ul><li>部分占整体比例：<strong>饼状图</strong></li><li>比较与比例：<strong>柱状图</strong>为例</li><li><strong>堆叠图</strong>：相对于柱状图，可以同时加上时间维度</li><li><p>趋势与模式：<strong>折线图</strong></p></li><li><strong>散点图</strong></li><li><p><strong>盒须图/箱线图</strong></p></li><li><p>其他…</p></li></ul></li><li>设计原则<ul><li>数据到可视化的直观映射：确定数据类型、合适编码方式、优先级</li><li>视图选择与交互设计：滚动和缩放、颜色修改、更改映射方式</li><li>信息密度--数据的筛选</li><li>美学因素：坐标轴刻度、网络；标注、图例、标题；正确使用颜色</li><li>颜色与透明度：颜色的混合（线性加和）</li><li><strong>可视化隐喻</strong>：拟物？</li><li>动画与过渡：时间换取空间</li></ul></li></ul><h2 id="map">11.1 Map</h2><ul><li>地图和地图投影<ul><li>地理坐标表示：经纬度系统</li><li>经纬度系统，实质上是用二维坐标描述了一个三维球体表面的位置；然而我们要可视化到二维的屏幕上，就涉及到如何选择<strong>投影</strong>；根据不同的优化原则，有不同的选择（<strong>等角度/正形投影、等面积、等距离/等方位角</strong>）</li></ul></li><li>著名的<strong>墨卡托投影</strong>，可以保证等角度。因此多用于各种航海地图，导航地图（百度地图，高德地图）；然而，由于不具备等面积特性，所以在远离赤道的区域，两个点之间的距离会远远超过真实值，容易给人带来混乱</li></ul><p><img src="16051960933882.jpg" /></p><ul><li><p><strong>亚尔勃斯投影</strong>，又称等面积圆锥投影，由德国人亚尔勃斯于 1805 年发明，按照原则将地图投影到圆锥面上；由于其保持了等面积，常用于表现国家疆域面积大小的图示中</p></li><li><p><strong>等方位角 azimuth 投影</strong>，属于等距投影的一种，地图上任何一点沿着经度线到投影中原点的距离保持不变。</p></li><li><p><a href="https://en.wikipedia.org/wiki/List_of_map_projections" class="uri">https://en.wikipedia.org/wiki/List_of_map_projections</a></p></li></ul><h2 id="地理数据可视化">12.0 地理数据可视化</h2><ul><li>点数据可视化</li><li>线数据：长度属性、连接关系</li><li>区域数据可视化，简单介绍了一些<ul><li><strong>Choropleth 地图（等值区间地图）</strong>，在区域内部均匀分布，填上一致的颜色；有时候的问题在于，区域内的数据和数据大小不一致；</li><li>于是有了 <strong>Cartogram</strong>，克服了对空间实用的不合理性，它按照地理区域的属性值对各个区域进行适当的变形；有些不同的形变</li></ul></li></ul><h2 id="地图地理数据可视化实现">12.1 地图地理数据可视化实现</h2><p>初步讲了两类</p><ul><li>Python Basemap+Matplotlib</li><li>Baidu Echart and PyEchart</li></ul><h2 id="空间标量场可视化介绍">12.2 空间标量场可视化介绍</h2><ul><li>一维数据</li><li>二维数据：颜色映射、高度映射、等值线映射 iso-contour</li><li>三维标量场<ul><li>截面可视化：如三个正交平面或任意角度切片</li><li>间接体绘制：等值面提取</li><li>直接体绘制</li></ul></li></ul><h2 id="空间标量场可视化-等值线面的计算">13.0 空间标量场可视化 等值线/面的计算</h2><ul><li>等值线 (isocontour)<ul><li>类似于线性插值的想法，若一条边两端分别大于和小于所关注的值，线性找到所需要的点；把一个正方形中边上至少两个等值线上的点连起来；</li><li>分治思想，分出正方形单元；每个点和 C 比较；线性插值；连接线</li></ul></li><li>等值面 (isosurface)<ul><li>根据不同的点大小分布，等值线计算有 4 种不同的情况；而等值面的计算中，立方体共有 14 中不同的情况。注意这时候，一个 cell 里的分割面不是平面而是一些三角面片。</li></ul></li><li><strong>Marching Cubes Algorithm</strong> MC<ul><li>对于各点相较于 C 的大小，变成一个二值向量，映射到最终的分割方式；</li><li>需要注意的是歧义性问题 <strong>Ambiguity</strong>，例如在二维情况下，对角线上两组点分别是大于/小于 C 的话，可能出现两种分割方式；在三维情况下，可能出现不匹配的问题，从而出现「洞」；解决算法 #further reading</li></ul></li></ul><h2 id="直接体渲染">14.0 直接体渲染</h2><ul><li><p>直接计算最终可视化里的每一个像素，体绘制中所有体素对最后的图像亮度都有贡献；因此，其在计算量上的需求要高于面渲染</p></li><li><p>基于光线投射的直接体绘制方法 Ray casting</p><ul><li><p>采样重建：体采样</p><p>数据分类：体分类，<strong>传输函数设计</strong></p><p>光照计算：体光照模型</p><p>光学积分：体积分</p></li></ul></li><li><p>采样的话，除了网格点之外，更为理想的<strong>自适应采样</strong>，即平缓均匀区域增大采样间隔</p><ul><li>对于采样率的要求：每个体素至少需要 2 个采样点（之前的定理）</li></ul></li><li>体分类和传输函数<ul><li>我们拿到的数据多为灰度值数据，因此我们需要决定每个体素吸收的值（不透明度α）和发射的部分颜色(RGB）</li><li><strong>Transfer funciton</strong>: 一组定义了数据值及其相关属性，不透明度等视觉元素之间的映射关系的函数</li><li>主要是其中不透明度函数的设计，原则是：高不透明度对应重要特征、感兴趣的区域；而颜色的设计可以帮助我们进行区域分割；</li><li>我们可以利用体素的<strong>标量值、梯度模</strong>等信息构建传输函数，当然还可以加入一些其他的信息帮助设计；</li><li>例如，用上面的两个属性构建二维直方图，进行 1. 映射规则设计；2. 光学属性设计。</li><li>注意到传输函数的设计很大程度上决定了最终渲染的好坏，用户交互的传输函数是一个很好的方案。</li></ul></li><li>体光照模型<ul><li>面绘制中的 Phong 光照模型：最终的 <strong>Result color = Ambient color + Diffuse color + Specular color</strong> 即环境光、散射光和反射光的共同作用；</li></ul></li></ul><p><img src="16051961058456.jpg" /></p><ul><li>从公式可以看到，最终的颜色三个因素都有影响；环境光仅和物体的属性相关；漫反射和物体法线与光线方向、物体颜色有关，而与视线方向无关；而镜面反射光与光照方向、物体法线方向、视线方向头有关，而与物体颜色无光，还有一个高光系数。</li><li><p>这里需要计算法向量，类似之前的「边缘检测」可以表示为 spatial correlation 的形式；当然，更为常用的是<strong>中心差分</strong>，kernel 仅仅是概念上的存在；</p></li><li><p>体积分</p></li></ul><p><img src="16051961867425.jpg" /></p><ul><li><p>这里是把视线/屏幕作为原点，连续情况下是进行积分，对于每一个点的颜色值，其权重为从该点发射的光线，经过了前面的所有体素阻隔之后的剩余部分，即式中指数上面对于不透明作积分，取负指数衰减；</p></li><li><p>这是一种思路，而在下面的离散情况下（似乎和连续情况并非对应关系），积分变为求和，这里的视角从「不透明度」变为「透明度」，直接以连乘的透明度作为权重作用到发射点的颜色值上；</p></li><li><p>工程上，显然直接用上式求 <span class="math inline">\(D_M\)</span> 之前的所有点的一个体积分需要两次循环，复杂度 <span class="math inline">\(O(M^2)\)</span> ；下面讲了两种简化的思路：</p></li><li><p>一种是「从后向前积分」，采用 <span class="math inline">\(D_i=C_i+D_{i+1}(1-a_i)\)</span> ，物理意义是从后向前不断有光线叠加，并透过「玻璃」吸收掉一部分，累加到最前面，这样的复杂度变为线性；</p></li><li><p>更高效或许是「从前向后积分」 <span class="math display">\[  D_i=D_{i-1}+C_i(1-A_i)\\  A_i=A_{i-1}+(1-A_{i-1})a_i=a_i+A_{i-1}(1-a_i)  \]</span> 这里维护了一个 <span class="math inline">\(A_i\)</span>，是从前向后累计下来的对当前像素的<strong>「总吸收率」</strong>，我们按照从前向后的顺序进行加总；这里的好处是，当总吸收率较大的时候，我们就不需要再计算后面的体素了。下面是伪代码</p></li></ul><p><img src="16051961159892.jpg" /></p><ul><li>根据合成顺序的不同，体绘制方法分为<ul><li><strong>图像空间</strong>扫描的体绘制方法（屏幕），想象屏幕发出视线</li><li><strong>物体空间</strong>扫描的体绘制方法（数据），这里是针对数据的每个像素点，叠加到屏幕上</li></ul></li><li>上面的光线投影法数据图像空间方法，其他的还有一些比较直观的算法</li></ul><p><img src="16051961674866.jpg" /></p><ul><li>这里的 First，即第一次遇到感兴趣的数值 C 时停下来，记录该点深度；也就是通过体绘制的方式所构成的等值面；</li><li><p>取 Max，在医学影像中用到如最大密度投影法，进行血管造影/显像。</p></li><li><p>下面的「splitting」属于物体空间扫描的体绘制方法，想法也很直观</p></li></ul><p><img src="16051961525336.jpg" /></p><p>总结如下</p><p><img src="16051961423897.jpg" /></p><h2 id="三维数据场渲染实现-vtk-nifty-python可视化">14.1 三维数据场渲染实现 VTK + NIFTY + Python可视化</h2><ul><li><p>这里讲了 VTK <a href="http://www.vtk.org/" class="uri">http://www.vtk.org/</a>，当然用的 Python 版本</p></li><li><p>面渲染，用了 MC 算法</p></li></ul><p><img src="16051962348797.jpg" /></p><ul><li><p>体绘制</p><p>直接调用的 vtkVolumeRayCastMapper 类，相关的设置挺流程化的，所以真正实现的时候最为关键的应该是<strong>传输函数的设计</strong>；实验的时候似乎环境光系数、漫反射系数、镜面反射系数等参数也挺重要的。</p></li></ul><p><img src="16051962450569.jpg" /></p><h2 id="向量张量场数据可视化">15.0 向量张量场数据可视化</h2><ul><li>这一讲简单介绍了张量场的可视化技巧</li></ul><h3 id="张量场可视化">张量场可视化</h3><ul><li>向量场的可视化：包括<strong>图标法、几何法、纹理法、拓扑法</strong>等</li></ul><h4 id="图标法">图标法</h4><ul><li>采用的图标主要有：线条、箭头、方向标志符，经典方法：<strong>hedge hogs（刺猬）</strong>，用带方向线段来表示矢量场的一个点图标；</li><li>此外，我们可以用其他的视觉通道表示向量场的其他信息，例如对于向量的方向，不同的方向赋予一些颜色</li></ul><p><img src="16051962864812.jpg" /></p><ul><li>这一算法的优点在于实现简单、直观、灵活；然而，缺点也很明显：<ul><li>可视混乱</li><li>无法解释数据的内在连续性</li><li>难以表达结构特征如涡流等</li></ul></li></ul><h4 id="几何法">几何法</h4><ul><li>几何法指采用不同类型的几何元素，如线、面、体模拟向量场的特征</li><li>这里讲了三类曲线的可视化：<strong>流线、迹线、脉线</strong></li><li><strong>流线 stream line</strong> 主要面向的是稳定的向量场，或许不稳定向量场的某一时刻；即在一个静止的向量场中，在某处放下一个点（不考虑质量？），其运动轨迹；</li><li><strong>迹线 path line</strong> 是在一个动态的向量场中，某处放置一个点，其运动轨迹；</li><li><strong>脉线 streak line</strong> 的意思是，在某一个点持续释放粒子，经过一段时间之后，各个粒子所连成的曲线（在稳定场中，迹线和脉线相同？）；因此这里和上面的两种「轨迹」不太一样，可以想象「烟圈」；</li><li>设在 0-3 时刻向量场的方向分别如下所示，则流线迹线脉线区别如下</li></ul><p><img src="16051962546881.jpg" /></p><h4 id="纹理法">纹理法</h4><ul><li>点噪音法（spot noise），按照局部流场方向对圆点变形</li><li>线积分卷积（line integral convolution, LIC），在流线方向进行卷积操作</li></ul><h3 id="张量-tensor-场可视化">张量 Tensor 场可视化</h3><ul><li>主要面向二阶（对称）张量场</li><li>想法是对其作特征分解；根据三个特征值的大小关系，可以有 spherical, linear, planar 三种情况</li><li>几何图标法，用球、椭球、线等方式可视化这些特征值</li></ul><p><img src="16051962989851.jpg" /></p><ul><li>几何：纤维追踪法 Fiber Tracking #further reading</li></ul><h3 id="多变量空间数据场可视化">多变量空间数据场可视化</h3><ul><li>降维</li><li>对于特定的应用，必须根据数据自身的特点为其选择和设计适用的特征抽取方法和可视化表达方式。</li><li>例如，选取不同的视觉通道</li><li>图标法可清晰编码多个变量属性，尤其是可表达方向信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> major </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 可视化 </tag>
            
            <tag> 图像处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交网络挖掘-Note3</title>
      <link href="/posts/26740dc2/"/>
      <url>/posts/26740dc2/</url>
      
        <content type="html"><![CDATA[<h2 id="用户行为分析-behavior-analytics">9-用户行为分析 Behavior Analytics</h2><p>目标是：To <strong>analyze, model, and predict</strong> individual and collective behavior</p><h3 id="个体行为分析">个体行为分析</h3><p><img src="16092895370746.jpg" /></p><p><img src="16092895451043.jpg" /></p><p>对于一个用户行为分析，我们需要：可观测的行为、一些特征、发现他们之间的相关性、以及如何度量这些模型。</p><p>原 PPT 上介绍了一下格兰杰因果检验，没学过时间序列不太了解 Orz</p><p><img src="16092895528137.jpg" /></p><h3 id="个体行为建模">个体行为建模</h3><p><img src="16092895601377.jpg" /></p><h3 id="个体行为预测">个体行为预测</h3><p>上面的三种个体行为分类，其实都可以看作是一个 <strong>链路预测问题</strong>。</p><p>大体上可以分为两类：一类基于两个节点之前的相似性，一类基于两个节点之间的路径特征。</p><h4 id="node-neighborhood-based-methods">Node Neighborhood-Based Methods</h4><p>可以根据 node 之间的相似性来度量，下面枚举了一些结构等价性（基于邻居节点的关系）的度量指标</p><p><img src="16092895689274.jpg" /></p><p><img src="16092895767771.jpg" /></p><h4 id="path-based-measures">Path-Based Measures</h4><p>这里给出了一些思路：一是考虑两个节点之间的路径长度，按照路径的长度指数衰减；二是考虑随机游走，计算从一个节点随机游走到另一个节点的概率</p><p><img src="16092895849378.jpg" /></p><h4 id="机器学习方法">机器学习方法</h4><p>当然，连接预测的问题等价于一个二分类问题，可以采用一些经典的分类模型：决策树、KNN、贝叶斯、SVM、NN……</p><h3 id="群体行为-collective-behavior-分析">群体行为 Collective Behavior 分析</h3><p>群体⾏为是指⼀个群体中的个体表现出相似的⾏为⽅式，这 种相似⾏为可以是计划并协调好的，也可以是⾃发形成的。通常将群体分成多个个体，对这些个体单独分析后，将分析结果汇聚成⼀个群体的⾏为结果</p><p>例如，社交媒体上的群体迁移⾏为 Users migrate</p><ul><li><p>网站迁移：在t1时刻，某⽤户同时是网站1和网站2的成员，但在t2&gt;t1时刻，该 ⽤户只是网站2的成员，则说明该⽤户从网站1迁移到了网站2</p></li><li><p>注意⼒迁移：在t1时刻，某⽤户同时是网站1和网站2的成员，且都属于活跃状态， 但在t2&gt;t1时刻，该⽤户仅在网站2保持活跃，则说明该⽤户的注意 ⼒从网站1迁移到了网址2</p></li></ul><p>注意⼒迁移⽐网站迁移更容易观测到</p><p>迁移行为的特征</p><ul><li>活跃度越高的用户迁移概率越小</li><li>社交圈越大的用户迁移概率越小</li><li>等级 Rank 越高的用户迁移概率越小</li></ul><p>群体⾏为模型</p><ul><li><p>线性/逻辑回归模型</p></li><li><p>网络模型</p></li><li><p>⼩世界模型</p></li><li><p>侧重表达较⼩的平均最短路径</p></li><li><p>优先链接模型</p></li><li><p>侧重表达幂律分布</p></li></ul><h3 id="用户画像">用户画像</h3><p>用户画像过程</p><p>1、确定画像的⽤户对象和目标</p><ul><li>给谁画像？画什么像？为什么画像？期望画像的结果/⺫标是什么？</li></ul><p>2、收集画像数据</p><ul><li><p>网络⾏为数据：活跃⼈数、⻚⾯浏览量、⻚⾯停留时间、访问时⻓、 社交数据等</p></li><li><p>⽤户偏好数据：浏览/收藏的内容、点评内容、品牌偏好等</p></li><li><p>⽤户交易数据：订单量、订单价、回头率、流失率等</p></li></ul><p>3、⽤户建模</p><ul><li>对上阶段收集到的数据进⾏处理，⽤统计模型等机器学习⽅法产⽣ ⽤户的画像标签，以备后续的应⽤使⽤</li></ul><p>用户画像的应用价值</p><ul><li><p>精准营销：通过画像将⽤户群体切割成更细的粒度，辅以短信、推 送、邮件、活动等⼿段，驱以关怀、挽回、激励等策略，以提⾼营 销业绩</p></li><li><p>客户关系管理（CRM）：精准的⽤户画像为设计有效的企业与客 户互动策略提供科学指导，能有效提⾼⽤户黏度和企业品牌⼒</p></li><li><p>数据应⽤：⽤户画像是很多数据产品的基础，如推荐系统、⼲告系 统，精准的⼲告投放基于⼀系列⼈⼝统计相关的标签，性别、年龄、 学历、兴趣偏好、⼿机等</p></li><li><p>⽤户分析：早期，产品经理通过⽤户调研和访谈的形式了解⽤户各 种属性特征，在产品⽤户量扩⼤后，应以⽤户画像配合传统的⽤户 研究，以进⾏深⼊、精准的统计与分析</p></li><li><p>数据挖掘：⽤户画像可以理解为业务层⾯的数据仓库，各类标签是 多维分析的天然要素，分析系统的数据查询平台要和这些数据打通</p></li></ul><p>用户标签的一般来源</p><ul><li><p>⽤户⾃⼰打的标签</p><ul><li>⽆论是⽤户给⾃⼰打的标签（如新浪微博标签）还是⽤户对各类网络 资源（新闻、电影、⾳乐等）打的标签</li></ul></li><li><p>利⽤⽤户注册数据</p><ul><li>网站或App⼀般都需要新注册⽤户填⼀些个⼈基本信息，甚⾄选择⼀ 些个⼈偏好标签，这些是基本画像标签的来源</li></ul></li><li><p>利⽤⽤户社交网络数据</p><ul><li>所在社交群的名称、类型，借⽤好友的特征标签等</li></ul></li><li><p>利⽤⽤户发⾔数据</p><ul><li>关于⽤户对新闻的评论、对购买商品/服务的评论等⽂字内容，都可 从中抽取关键词（例如⽤TF-IDF）作为标签</li></ul></li><li><p>利⽤⽤户网络“消费”的物品</p><ul><li><p>⽤户看过的电影所属的类型、演员、导演、国别等</p></li><li><p>⽤户点赞过的图⽚标签（如Flickr这样的图⽚社区都提供了图⽚标注 服务）</p></li><li><p>⽤户听过/下载过的歌曲类型、演唱者、作者、语⾔等</p></li><li><p>⽤户购买过的商品（⼿机、Pad等）品牌、国别等</p></li><li><p>⽤户经常浏览网站的类型、主题等</p></li><li><p>⽤户的POI/LBS所属的类型、⻛格等</p></li><li><p>⽤户玩过的游戏类型，所扮演⾓⾊类型等</p></li></ul></li></ul><p>用户/项目标签画像的挑战</p><ul><li><p>标签缺失</p><ul><li>很多⽤户出于隐私保护的考虑不使⽤标签</li></ul></li><li><p>标签不准、不细</p><ul><li><p>“宝强”“宝宝”是指王宝强？</p></li><li><p>“球迷”有⾜够的个性刻画能⼒么？</p></li></ul></li><li><p>标签不完整</p><ul><li>“埃航”“失事⻜机”能否补充“波⾳”“737MAX”？</li></ul></li><li><p>标签语义失配</p><ul><li>“旅游”与“摄影”，“复旦”与“交⼤”能否做到语义关联？</li></ul></li></ul><p><img src="16092896014533.jpg" /></p><p><img src="16092896094971.jpg" /></p><p><img src="16092896173761.jpg" /></p><p><img src="16092896249841.jpg" /></p><h2 id="博弈论">10-博弈论</h2><p>复杂社会系统（网络结构）中连通性的含义体现在 两⽅⾯</p><ul><li>网络结构：通过个体（结点）之间的联系（边）来体现， 包括社会关系、相互协作与交互等等</li><li>个体之间的相互依存：任何⼈的⾏为结果⾄少潜在地依赖 于其他⼈的联合⾏为，亦可看作是 <strong>⾏为层次的关联性</strong></li></ul><p>后面这一点是博弈论的研究内容，因此课程这一部分介绍了一些博弈论。</p><h3 id="博弈策略">博弈策略</h3><ul><li>博弈论的基本要素</li></ul><p>1、存在不少于两⼈的博弈参与⼈ <strong>参与⼈</strong> 2、每个参与⼈都有⼀组⾏为决策的备选项 <strong>策略集</strong> 3、每种⾏为决策都会让参与⼈得到⼀个收益（回报），该收益也受其他参与⼈的决策影响，每个参与⼈都倾向于获得更⼤的收益 <strong>回报</strong></p><ul><li><p>博弈论⼯具就是⽤来推理参与⼈如何进⾏⾏为决策</p></li><li><p>⼀般⽽⾔，⼀个参与⼈都会在预测其他参与⼈的⾏ 为决策后才做出使⾃⼰收益最⼤的⾏为决策</p></li></ul><p>下面介绍了两点经典的案例：其一为囚徒困境；其二很类似，「复习-报告」博弈，即你和搭档都可以选择准备考试/Pre，若不论对方选择什么，你选择考试总是一个较优的策略，那么最终的结果两个人都会准备考试，而这样可能并非一个最佳的结果。</p><p>这里的核心问题和囚徒困境一样，<strong>双方无法交流/达成共识，因此在个体的私利之下很难建立合作</strong>。</p><p><img src="16092896369858.jpg" /></p><p>下面形式化的介绍一些概念</p><p>设 S 和 T 表示两个人的策略，<span class="math inline">\(P_1(S,T), P_2(S,T)\)</span> 分别表示两人在策略组 <span class="math inline">\((S,T)\)</span> 时的收益</p><ul><li><p>若对于 2 的策略 T，1 选择策略 S 取得的收益达到最大，则称其为 <strong>最佳应对</strong> <span class="math display">\[P_1(S,T)\ge P_1(S&#39;,T)\]</span></p></li><li><p>1 的最佳应对可能不止一个，若上面的不等式严格成立，则称策略 S 为 <strong>严格最佳应对</strong></p></li><li><p>参与⼈1的 <strong>占优策略</strong> 是指该策略对参与⼈2的每⼀项策略都是最佳应对</p></li><li><p>参与⼈1的 <strong>严格占优策略</strong> 是指该策略对参与⼈2的每⼀项策略都是严格 最佳应对</p></li></ul><p>严格占优策略最多只有⼀个，⽽占优策略可能会有多个。如果⼀个参与 ⼈存在严格占优策略，则很容易预测其⾏为决策</p><h3 id="纳什均衡">纳什均衡</h3><p>定义：假定参与⼈1选择策略S，参与⼈2选择 策略T，若S是T的最佳应对，同时T也是S的最 佳应对，则称策略组(S,T)是⼀个纳什均衡</p><p>⾯对纳什均衡，任何参与⼈都没有动⼒选择 其他策略</p><p>如果每个参与⼈都相信对⽅在博弈中实际会 采取构成纳什均衡的某个策略，则他/她就有 动机采⽤能达成这个纳什均衡的相应策略</p><p><img src="16092896468943.jpg" /></p><p>上面是一个简单化的例子，即仅存在一个纳什均衡；而当存在多个均衡策略的情况下，就涉及到 <strong>协调博弈</strong></p><p><img src="16092896572219.jpg" /></p><ul><li><p>聚点理论focal point</p><ul><li><p>学者谢林指出，当出现多重均衡时，如果还有某种⾃然原因使 得参与⼈倾向于选择其中某个均衡策略时，就能解决决策困惑</p></li><li><p>⽰例：⼀条没有划线的较窄的道路上有两辆⻋相向⽽⾏，到底是 ⾛左边还是⾛右边才能避免碰撞呢？</p></li><li><p>如果是两个中国⼈开⻋会避免碰撞么？</p></li><li><p>如果是⼀个中国⼈，⼀个⽇本⼈呢？</p></li></ul></li></ul><p><img src="16092896672655.jpg" /></p><p><img src="16092896751816.jpg" /></p><p><img src="16092896834852.jpg" /></p><p>总结一下，上面区分了几种不同的存在多重均衡的情况</p><ul><li>将两个人的选择相同的情况理解成「合作」，而相反则是「不合作」，不合作的收益为 0，这就存在两个均衡点。若两个均衡点中，其一对于双方都是好的，则为 <strong>聚点相同</strong>；若两人的 <strong>习惯偏好</strong> 不同，则演变为所谓 <strong>性别战</strong></li><li>两种策略之间存在着差异，其中一个策略有着较高的风险（对应于高收益），与上面不同的是，这里若是「不合作」选择第风险的一方仍然可以得到一定的回报而选择高风险则略的一方则一无所获；观察上面的收益矩阵，其与囚徒困境不一样的地方在于其不存在严格占优策略，双方并没有陷入那样的困境中；然而在这种 <strong>猎⿅博弈</strong> 的场景下，双方还是因为担忧对方所选的策略而更倾向于选择风险低的那个决策，即成为 <strong>懦夫博弈</strong></li><li>资源总量是有限的，因此只能进行分配，而这里有趣的一点在于，双方均选择鹰派策略的话，收益均为 0，而一方鹰派一方鸽派，双方都会有一定的收益；这里的困境在于，当一方选择鹰派策略的情况下，另一方的 最佳应对 是选择鸽派（不然是一无所获），感觉像是面对流氓的无可奈何；这被称为 <strong>鹰鸽博弈</strong></li></ul><h3 id="混合策略">混合策略</h3><ul><li><p>对于不存在纳什均衡的博弈，在参与⼈的策略集中 引⼊随机性，可以更准确地预测其决策⾏为</p></li><li><p>纳什的研究结果认为：<strong>当参与⼈的策略选择中引⼊ 随机性后，博弈总会存在均衡</strong></p></li><li><p>攻防博弈</p><ul><li><p>攻击⽅有A与B两种攻击策略，防守⽅对应有防守A与B两 种策略</p></li><li><p>如果防守⽅的策略正好对应攻击⽅的策略，则防守⽅获得 较⾼收益；没有对应上，则攻击⽅获得较⾼收益</p></li></ul></li></ul><p>看一个例子：两人各一枚硬币，若相同则 1 获胜，若相反则 2 获胜；这里，参与人的总收益为 0，是 <strong>零和博弈</strong> ；这个时候，明显不存在纳什均衡。</p><ul><li><p>收益矩阵表明，任何参与⼈知道了对⽅策略后都会做出相应 举措来使⾃⼰收益成为+1，两⼈不可能达成⼀致</p></li><li><p>因此，参与⼈都希望能迷惑对⼿，使其难以预测⾃⼰的⾏为</p><ul><li>现实案例：诺曼底登陆</li></ul></li></ul><p>如果每个参与⼈不是选择纯策略H或T，⽽是选择⼀个出⽰H 的概率（引⼊随机性），⼜会产⽣怎样的博弈？</p><ul><li><p>假设参与⼈1选择H策略的概率为p，则其选择T的概率为1-p</p></li><li><p>同理，假设参与⼈2选择H策略的概率为q，其选择T的概率为 1-q</p></li><li><p>两个参与⼈的策略表⽰变成了选择概率p与q，涉及H与T的混 合，因此称为 <strong>混合策略</strong></p></li><li><p>在此设定下，即便某个参与⼈选择了某种纯粹策略H或T，其 收益仍然是随机的</p><ul><li><p>假设参与⼈1选择H，则其收益期望是</p><p>-1q+1(1-q)=1-2q</p></li><li><p>假设参与⼈1选择T，则其收益期望是</p><p>1q+(-1)(1-q)=2q-1</p></li></ul></li><li><p>混合策略博弈中，能否产⽣纳什均衡？怎样才能产⽣纳什均 衡？</p></li><li><p>若1-2q≠2q-1，则参与⼈1要么选择H要么选择T（回到了 <strong>纯策略博弈</strong>）， 此时不会有纳什均衡。</p></li><li><p>只有1-2q=2q-1，即q=1/2时，才会产⽣纳什均衡</p></li><li><p>当q=1/2时，参与⼈1选择H或T的收益都没有区别，即占不到便宜</p></li></ul><p><strong>该结论解释了为什么博弈的⼀⽅希望通过随机化⾃⼰的⾏为来让 其⽆法准确判断⾃⼰的⾏为，使得对⽅对两个策略的取舍⽆差异， 从⽽不让对⽅占便宜</strong></p><ul><li><p>现实时间中的混合策略博弈案例</p><ul><li><p>猜拳是⽯头、剪⼑还是布？</p></li><li><p>发球到对⽅哪个区域？</p></li><li><p>打牌时出什么牌？</p></li></ul></li></ul><h2 id="推荐系统-recommendation-in-social-media">11-推荐系统 Recommendation in Social Media</h2><p>If interested, see two recent conference tutorials</p><ul><li><p>SIGKDD2014, Recommendation in Social Media</p></li><li><p>RecSys2014, Personalized Location Recommendation</p></li></ul><h3 id="推荐系统简介">推荐系统简介</h3><p>推荐算法的本质是通过⼀定的⽅式将⽤户和物品联系起来，⼀个推荐算法可以理解为学习如下的函数 <span class="math display">\[\arg\max_{i\in I}p(i|u)\\\]</span> 或者是 <span class="math display">\[f:U\times I\to \mathbf{R}\]</span> 推荐系统的挑战</p><ul><li><p>冷启动(cold-start)</p><ul><li>新加⼊系统的⽤户和物品没有历史信息（如购买、评价记录），因此很 难推断⽤户的喜好，或者物品(项目)会被哪些⼈喜欢</li></ul></li><li><p>数据稀疏</p><ul><li>系统整体缺乏充⾜的历史信息，⽽不仅是缺少某(⼏)个⽤户的历史信息； 例如，如果系统中只有少数⽤户有很多评分记录，⼤多数⽤户只有很少 的评分记录，则系统⾯临数据稀疏问题</li></ul></li><li><p>网络攻击</p><ul><li>例如⿊客伪造评分记录</li></ul></li><li><p>隐私保护</p><ul><li>⽤户个⼈的信息被系统知道得越多，推荐就越准确，但这和个⼈隐私保 护⽭盾</li></ul></li><li><p>解释说明</p><ul><li>系统缺少向客户解释推荐某些物品的原因</li></ul></li></ul><h3 id="经典推荐算法">经典推荐算法</h3><h4 id="基于内容的推荐-content-based">基于内容的推荐 content-based</h4><p><img src="16092897003820.jpg" /></p><p>例如，在豆瓣电影中，已有对于每部电影的标签，而我们可以基于用户的历史记录得到用户的个性化标签，从而基于用户和电影之间的相似度做推荐。</p><h4 id="协同过滤collaborative-filtering">协同过滤(collaborative filtering)</h4><p>Collaborative filtering: the process of selecting information or patterns using techniques involving collaboration among multiple agents, viewpoints, data sources, etc.</p><p><strong>Advantage</strong>: we don’t need to have additional information about the users or content of the items. Users’ rating or purchase history is the only information that is needed to work</p><p>更为著名的应该是协同过滤，其可以分为</p><ul><li>基于记忆 Memory-based : Recommendation is directly based on previous ratings in the stored matrix that describes user-item relations<ul><li>基于用户：基于⽤户的历史评分记录 来刻画⽤户间的相似性，相似⽤户对某 项⺫的评分可以作为⺫标⽤户对该项项的评分依据</li><li>基于项目：基于项目历史的被评分记 录来刻画项目间的相似性，目标⽤户对相似项目的评分可以作为目标⽤户对本项目的评分依据</li></ul></li><li>基于模型：学习出能刻画⽤户评分⾏为的模型 Assumes that an underlying model (hypothesis) governs how users rate items.</li></ul><p><img src="16092897094599.jpg" /></p><h4 id="item-based-cf">Item-based CF</h4><p>基于 memory 的协同过滤比较简单：比如对于一个用户 u 来说，我们希望预测其对于项目 i 的打分；那么我们可以考虑和这个用户最相近的若干用户，计算这些用户对于项目 i 的打分，具体公式如下：</p><p><img src="16092897188557.jpg" /></p><p><img src="16092897266012.jpg" /></p><h4 id="model-based-collaborative-filtering">Model-Based Collaborative Filtering</h4><p>在基于 memory 的 CF 中，We predict the missing ratings based on similarities between users or items，可以说是 model-free 的；自然，在基于 model 的 CF 中，We assume that an underlying model governs how users rate</p><p>因此，我们需要基于历史数据（评分矩阵）训练这一模型，一个比较常见的方式是 SVD 分解。下面先介绍一些数理基础</p><p><img src="16092897364145.jpg" /></p><p><img src="16092897439175.jpg" /></p><p><img src="16092897522653.jpg" /></p><p>想法就是对于已有的评分矩阵 X，不考虑其稀疏性，我们希望通过，我们希望得到该矩阵的一个低秩近似；想法类似于 SVD 分解，考虑到算法复杂度，更常用的可能是矩阵分解 MF 的算法，得到 loss 的形式化表述（一般还要加上一个正则项），并利用 GD 算法近似求解。</p><p><img src="16092897595730.jpg" /></p><blockquote><p>课上还介绍了另一种基于矩阵分解的模型：贝叶斯个性化排序 BPR，和上述矩阵分析的不同在于目标函数上的区别。具体见相关材料</p></blockquote><h4 id="群体推荐">群体推荐</h4><p>有时候我们需要对一个群体进行推荐：例如和朋友一起看的电影、家庭的旅游地点、同事聚餐的餐厅等。想法自然是从个体的满意程度（评分）出发进行综合，可以有一下的几种考量</p><p><img src="16092897717730.jpg" /></p><h3 id="社会化推荐-recommendation-using-social-context">社会化推荐 Recommendation Using Social Context</h3><p><img src="16092897806999.jpg" /></p><p>包括三种面向</p><ul><li><p>Recommendation Using Social Context Alone：仅仅利用网络信息，参见第 9 章中个体行为分析，即链路预测/推荐</p></li><li><p>Extending Classical Methods 使⽤评分记录和社会信息：采用公式 <span class="math display">\[r_{u,i}=\sum_{v\in N(u)}w_{u,v}r_{v,i}\]</span> 与基于用户的 CF 相比，区别只是将用社交关系来刻画两个用户之间的相似程度。</p></li><li><p>Recommendation Constrained by Social Context 使用社会信息限制推荐： <span class="math display">\[r_{u,i}=\bar r_{u}+{\sum_{v\in N(u)\cap F(u)}sim(u,v)(r_{v,i}-\bar r_{v})\over\sum_{v\in N(u)\cap F(u)}sim(u,v)}\]</span> 其中 <span class="math inline">\(F(u)\)</span> 表示与 u 评分记录相近的用户，即这里协同过滤要求从评分相近的用户中，基于社交网络删选出那些邻居用户，以此来估计 u 对于 i 的评分。</p></li></ul><h3 id="基于知识的推荐">基于知识的推荐</h3><p>引入额外的知识</p><p><img src="16092897901028.jpg" /></p><ul><li>基于约束：设计人际交互界面，让用户输入或者选择其想要的物品属性，将其组成约束条件（规则集合），使得推荐变成一个从候选物品中选择满足约束条件集合的问题。例子如京东/淘宝的搜索</li><li>基于个案：先通过某种传统推荐算法产⽣⼀组推荐候选物品给⽤户，让⽤户从候选组中先选择⼀个相对满意的物品作为待推荐物品的参照，系统通过物品间的相似性计算找出其他与参照物品⾼度相似的候选物品，推送给⽤户让其再进⾏评价，通过多次与⽤户的迭代交互，最终产⽣⽤户最想要的物品。想法是根据反馈进行多次推荐？</li></ul><p><img src="16092897990395.jpg" /></p><p>上面的一些思路其实还是基于物品的标签属性，其面临一些问题</p><ul><li>物品知识的获取：系统需要人工构建知识，对长尾实体的覆盖有限</li><li>用户知识的获取：系统需要用户输入信息，甚至要反复交互，体验感差</li></ul><p>于是出现了基于 <strong>知识图谱</strong> 的推荐。形式化定义 <span class="math display">\[\arg\max_{i\in I}p(i|u, knowledge(i))\]</span> 算法分类：</p><ul><li>显式画像：从知识图谱中直接找到的关联（例如两部电影 的共同属性）作为刻画两个物品相关性的依据</li><li>隐式画像：利⽤基于深度神经⺴络的嵌⼊embedding向 量来表⽰物品，物品间的相似度计算基于其对应嵌⼊向量在向量空间中的距离</li></ul><p><img src="16092898079606.jpg" /></p><p><img src="16092898178234.jpg" /></p><p><img src="16092898252400.jpg" /></p><p><img src="16092898357837.jpg" /></p><h3 id="跨领域推荐">跨领域推荐</h3><p><img src="16092898446180.jpg" /></p><h3 id="可解释推荐">可解释推荐</h3><p>推荐系统的可解释性很重要</p><p><img src="16092898520097.jpg" /></p><p><img src="16092898602775.jpg" /></p><h3 id="推荐性能评价">推荐性能评价</h3><ul><li>离线实验<ul><li><p>通过⽇志系统获得⽤户⾏为数据，产⽣统⼀数据(样本)集</p></li><li><p>将数据集分为训练集和测试集</p></li><li><p>⽤训练集训练出模型后在测试集上检验推荐效果</p></li></ul></li><li><p>⽤户调查</p><ul><li>为了获取⽤户真实的满意度</li></ul></li><li><p>在线实验</p><ul><li><p>将推荐系统(算法)上线做 <strong>AB测试</strong>，与其他算法进⾏⽐较</p></li><li><p>测试⽤户会被分组，体验不同的推荐算法</p></li></ul></li><li><p>⼀个新的推荐算法最终上线，需要完成上述3步：</p><ul><li><p>⽤离线实验证明其在离线指标上优于现有算法</p></li><li><p>通过⽤户调查确定⽤户对其满意度不低于现有算法</p></li><li><p>通过AB测试确定其在核⼼指标上优于现有算法</p></li></ul></li></ul><p>把推荐看成是不同的任务，可能有不同的指标</p><ul><li>Predictive accuracy - Metrics measure error rate</li></ul><p><img src="16092898739846.jpg" /></p><ul><li>Classification Accuracy: Precision and Recall</li></ul><p><img src="16092898823342.jpg" /></p><ul><li>Evaluating Ranking of Recommendation</li></ul><p><img src="16092898906336.jpg" /></p><h2 id="应用案例">12-应用案例</h2><p>这一章介绍了一些应用案例，和课程 PJ 联系起来</p><h3 id="flickr社交网络分析">Flickr社交网络分析</h3><blockquote><p>Cha M, Mislove A, Gummadi K P. A measurement-driven analysis of information propagation in the flickr social network. In WWW2009.</p></blockquote><ul><li><p>分析问题（目标）</p><ul><li><p>How widely does information spread in the Flickr social network? Do popular pictures gather fans from different parts of the network or is their popularity limited to a certain region?</p></li><li><p>How quickly does information spread through the social network? How long after the upload of a photo do fans mark it as a favorite?</p></li><li><p>Does information in Flickr flow along its social network links? What fraction of a photo’s fans discovered the photo through a friend? How long does this process take? By what other mechanisms do fans discover their favorite photos?</p></li></ul></li><li><p>爬取⽅式</p><ul><li>Start with a randomly selected Flickr user and followed all of the friends links in the forward direction in a breadth first search fashion.</li><li>To capture the dynamics of friends’ relationships, visit all users in the previous day’s social network graph and recorded any newly created or removed friend links or users.</li><li>Collect information on the favorite photos of the Flickr users.</li></ul></li></ul><p><img src="16092899028392.jpg" /></p><p><img src="16092899094230.jpg" /></p><ul><li><p>分析结果：流⾏图⽚涨粉的⻓期趋势</p><ul><li>First, many photos do show an active rise in popularity during the first few days after they are uploaded.</li><li>Second, after the first few (10-20) days, most pictures, enter a period of steady linear growth. The median growth rate does not show any sign of slowing down even after 1 or 2 years</li><li>For a majority of pictures, over 40% of fans were acquired after the first 100 days. Conversely, our analysis suggests that Flickr users take a long period of time to find out about interesting pictures.</li><li>A majority of the less-popular photos attract their limited fan population early on during their lifetime, and they become dormant after the first few months.</li></ul></li></ul><p><img src="16092899201059.jpg" /></p><h3 id="twitter-社交网络分析">Twitter 社交网络分析</h3><blockquote><p>Kwak, H, et al. “What is Twitter, a Social Network or News Media?.” In Figure 1: Number of followings and followers WWW2010.</p></blockquote><p><img src="16092899322214.jpg" /></p><p>下面的两个案例主要给我们的 PJ 提供了一些思路</p><h3 id="微博好友推荐">微博好友推荐</h3><ul><li><p>数据获取</p><ul><li><p>利⽤微博提供的API或⾃⼰写爬⾍来获取</p></li><li><p>数据爬取策略</p><ul><li><p>网络关系爬取：先选取种⼦⽤户结点，再⽤⼲度优先策略爬取邻 居结点（爬⼏之内的邻居结点？）</p></li><li><p>⽤户发⾔内容爬取</p><ul><li><p>将目标⽤户的微博列表全都爬下来</p></li><li><p>通过关键词定位⼀些微博热帖，将其转发/回复的微博⽤户信息爬下 来，包括转发路径数</p></li></ul></li></ul></li></ul></li><li><p>基于共现的tag embedding</p><ul><li><p>利⽤word embedding模型(word2vec)为每个标签⽣成反映 标签共现特征的embedding向量</p></li><li><p>每个⽤户的表⽰向量可以⽤其所有tag embedding的加权均 值表⽰</p></li><li><p>没有标签的⽤户可以应⽤标签传播算法为其⽣成标签</p></li><li><p>基于⽤户表⽰向量产⽣推荐结果</p><ul><li><p>两个⽤户的表⽰向量余弦距离⾮常接近的话就值得相互推荐为好友</p></li><li><p>两个⽤户的表⽰向量前后串联，每⼀维作为分类模型的特征套上经 典分类模型来产⽣预测结果（逻辑回归或SVM），即预测两⼈之间 是否应该存在⼀条好友链接</p></li><li><p>两个⽤户的表⽰向量灌⼊深度神经网络产⽣预测结果</p></li></ul></li></ul></li><li><p>样本获取</p><ul><li><p>正负样本⽐例设置</p></li><li><p>对于测试集中的⼀个⽤户，选取其多少（⽐例）的微博好 友作为未知待测的正样本，剩下的则作为已知的好友关系？</p></li></ul></li><li><p>实验评测</p><ul><li><p>对于⼀个推荐问题，应该以⼀个⽤户为单位，基于推荐给 该⽤户的所有好友真假来计算推荐性能得分，最后取全体 测试⽤户的得分均值</p></li><li><p>有多少条推荐记录的测试⽤户才考虑？</p></li><li><p>对于⼀个⼆分类问题（预测链接存在or不存在），则可以 采⽤相关的⼆分类预测指标，则基于所有⽤户对（“⽤户 -项目”对）的真假来计算总体性能分数</p></li></ul></li></ul><h3 id="瓣电影推荐">⾖瓣电影推荐</h3><ul><li>数据获取<ul><li>利⽤网站提供的API或者公开的知识图谱</li><li>⾃⼰写爬⾍<ul><li>数据爬取策略<ul><li>从⽤户出发：通过某种原则选择种⼦⽤户，将这些⽤户评论(评分) 过的电影都爬下来</li><li>从电影出发：通过某种原则选择种⼦电影，将评论(评分)这些电影 的所有⽤户数据都爬下来</li><li>若不能爬取全集（代价太⼤），则需设定⼀个爬取范围（终⽌条件）</li></ul></li><li>除了评论（评分），还有什么价值数据可以爬？<ul><li>⽤户/电影标签、电影导演/演员/制⽚等信息、⽤户的关注列表…</li></ul></li></ul></li></ul></li><li>推荐⽅法与特征提取<ul><li>基于协同过滤</li><li>基于内容</li><li>混合⽅法</li></ul></li><li>基于DNN嵌⼊内容特征与历史信息<ul><li>如何提取⽂本语义（知识）信息？：CNN</li><li>如何集成历史观影记录⽣成⽤户偏好：RNN(LSTM, GRU)</li></ul></li><li>再利⽤已知的评分记录来指导神经网络的学习</li><li>样本获取与⽣成<ul><li>正负样本如何判定？什么是喜欢的电影？什么是不喜欢的电影？那没有评分过的电影 是喜欢还是不喜欢？</li><li>有多少条电影推荐记录的测试⽤户才考虑？</li><li>正负样本的⽐例怎样才合适？</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> major </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社交网络 </tag>
            
            <tag> 图 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交网络挖掘-Note2</title>
      <link href="/posts/51733d54/"/>
      <url>/posts/51733d54/</url>
      
        <content type="html"><![CDATA[<h2 id="数据挖掘概论">5-数据挖掘概论</h2><p>两大派别</p><ul><li>计算机科学家<ul><li>认为机器学习是人工智能的一个重要分支，机器学习作为实现人工智能的一个重要途径</li></ul></li><li>统计学家<ul><li>往往认为机器学习就是统计学习，是统计学中偏向应用的一个分支，对统计学习之外的手段（基于代数的、逻辑的、几何的学习等）会比较排斥</li></ul></li></ul><p>三大流派</p><ul><li><strong>符号主义</strong><ul><li>又称逻辑主义、心理学派或计算机学，其原理主要为物理符号系统（即符号操作系统）假设和有限性原理。符号主义者最早在1956年首先提出了“人工智能”术语，又发展了启发式算法-专家系统-知识工程理论与技术，并在20世纪80年代取得很大发展，代表人物纽厄尔、西蒙等。</li></ul></li><li><strong>连接主义（联结主义）</strong><ul><li>又称为结构主义、仿生学派或生理学派，主要原理为神经网络及神经网络间的连接机制与学习算法。代表性成果是1943年由生理学家麦卡洛克和数理逻辑学家皮茨创立的脑模型，60-70年代出现的以感知机为代表的脑模型研究，1986年鲁梅哈特等人提出多层网络中的反向传播算法（BP）。</li></ul></li><li><strong>行为主义</strong><ul><li>又称为进化主义或控制论学派，其原理为控制论即感知-动作型控制系统。控制论把神经网络系统的工作原理与信息理论、控制理论、逻辑以及计算机联系起来。</li></ul></li></ul><h3 id="数据与特征">数据与特征</h3><ul><li>数据的结构与表示<ul><li>非结构化数据：文档、图片、音频、视频</li><li>半结构化数据：HTML, HTML5, XML, RDF、图、树</li><li>RDF（资源描述框架）：<strong>SPO（subject，predicate，object）</strong>三元组，RDF 是知识图谱常用的存储格式</li><li>知识图谱：实体（）、概念（）</li></ul></li><li>数据与特征<ul><li>名词性/类别特征 nominal/categotical</li><li>序数特征 ordinal</li><li>间隔特征 interval</li><li>比例特征 ratio</li></ul></li></ul><p>例如，通过新浪微博一组用户的标签，找出他们的共同特征和个性标签挖掘，可以用 TF-IDF 框架。</p><h3 id="数据预处理">数据预处理</h3><ul><li><strong>数据聚合</strong>：将多个特征合并成单个特征</li><li><strong>数据集成</strong>：将来自多个数据源的数据统一表示——同一属性被明明不同，书写习惯不同（姓名简写、时间表示）</li><li><strong>数据离散化</strong>：连续数据转化成离散值</li><li><strong>特征筛选</strong>：找出关键特征（如主成分分析），选取与模型目标（如分类）相关的特征</li><li><strong>特征提取</strong>：将原来的特征集，以提高数据挖掘的性能，数据聚合可视为一种特征提取。</li><li>数据采样</li><li>大规模社交网络的用户采样：采样一个较小规模的网络G’来代表整个网络G</li></ul><h3 id="频繁模式关联挖掘">频繁模式/关联挖掘</h3><p>频繁模式是频繁地出现在数据集中的模式（项集、子序列或是子结构）；用 D 表示事务/交易集合，项可理解为一种商品，项集就是包干某种商品的集合。蕴含式 <span class="math inline">\(A⇒B\)</span> 的<strong>支持度</strong>和<strong>置信度</strong>分别为 <span class="math display">\[support(A⇒B)=P(A\cup B)\\confidence(A⇒B)=P(B|A)={support(A\cup B)\over support(A)}\]</span> 可以理解为，support 表示的是 AB 一起出现的次数，而 confidence 则表示 A 可以推导出 B 的可能性，即 A 相较于其与其他项的关联性来说，和 B 的关联性有多大。</p><p>显然，我们要找到频繁模式，就要求 1. 找到的项集必须是频繁的，即有支持度的要求；2. 找到的关联规则必须是强关联的，即有置信度的要求。此外，这样的规则可能有很多，我们希望找到比较大的项集，因此定义</p><ul><li>闭项集：X，不存在 X 的超集 <span class="math inline">\(Y\sub Y\)</span>，使得 D 中 Y 的支持度与 X 相同，即 Y 的支持度要小于 X</li><li>最大频繁项集： X，这个是和「频繁」的概念联结起来的，即设定一个<strong>最小支持数 min_sup</strong> 不少于这个数的项集是「频繁的」，我们要找到最大的那个闭的频繁项集</li></ul><p>下面是一个直观的找到频繁项集的算法 <strong>Apriori 算法</strong></p><p><img src="16092888336789.jpg" /></p><p>一图胜千言，先放一个具体的计算例子。前面两个初始化的步骤的频繁的；在每一轮中，从大小为 <span class="math inline">\(k-1\)</span> 的项集 <span class="math inline">\(L_{k-1}\)</span> 扩充到 <span class="math inline">\(k\)</span> 的项集 <span class="math inline">\(L_k\)</span>。以 <span class="math inline">\(k=3\)</span> 为例，原本的是第二行最后的那张表 <span class="math inline">\(L_2\)</span>，通过其和自己连接产生新的候选项集 <span class="math inline">\(C_3\)</span>，然而考虑到扫描一次的代价可能比较高，我们希望事先剪枝，其利用的一个性质就是，对于一个大小为 <span class="math inline">\(k\)</span> 的项集，若其是频繁的，则其所有的 <span class="math inline">\(k-1\)</span> 子项集都是频繁的。于是，如蓝色方框所示，可以对连接的结果进行剪枝，最终得到 <span class="math inline">\(C_3\)</span> ，然后进行计数，筛选得到 <span class="math inline">\(L_3\)</span>。</p><p>这里还涉及到的一个步骤是如何进行连接，我们事先对所有的项进行排序，然后，考虑到我们要从大小为 <span class="math inline">\(k-1\)</span> 的项集得到 <span class="math inline">\(k\)</span> 项集，这就要求连接的两个项集他们差别的项数仅能为 1；另外，事实上可能产生 <span class="math inline">\(k\)</span> 频繁项集的两个 <span class="math inline">\(k-1\)</span> 项集，其前 <span class="math inline">\(k-2\)</span> 项必然是完全相同的，还是之前的想法，<span class="math inline">\(k\)</span> 项集其所有子项集必然是频繁的，<strong>我们这样连接的方式仅仅是一种简单地进行有效筛选的方案</strong>。</p><p>我们需要综合地来看连接步和剪枝步，他们合起来要做的，就是要从这些 <span class="math inline">\(k-1\)</span> 项集出发，找到所有的 <span class="math inline">\(k\)</span> 项集，要求满足其所有子项集均为频繁的（在之前得到的 <span class="math inline">\(k-1\)</span> 项集中）。</p><p><img src="16092888424730.jpg" /></p><h3 id="分类">分类</h3><p><img src="16092888509868.jpg" /></p><p>回到了经典的及其学习部分。下面讲了一下一些概念和比较</p><h4 id="生成式模型与判别式模型">生成式模型与判别式模型</h4><ul><li>生成式模型 Generative ，会对 X 和 Y 的联合分布 <span class="math inline">\(P(X,Y)\)</span> 建模，然后通过贝叶斯公式得到 <span class="math inline">\(P(Y_i|X)\)</span>，以选取最大概率的那个 <span class="math inline">\(Y_i\)</span>。常见的有<strong>隐马尔科夫 HMM、朴素贝叶斯 NB、高斯混合模型 GMM、LDA</strong> 等。</li><li>判别式模型 Discriminative，直接对条件概率 <span class="math inline">\(P(Y_i|X)\)</span> 建模。常见的有<strong>线性回归 LR、支持向量机 SVM、神经网络 NN</strong> 等。</li></ul><p><img src="16092888609186.jpg" /></p><p><img src="16092888725595.jpg" /></p><h4 id="决策树">决策树</h4><h4 id="朴素贝叶斯">朴素贝叶斯</h4><h4 id="k-最近邻">k-最近邻</h4><h4 id="基于辅助社交的分类">基于辅助社交的分类</h4><p>核心思想是：社交网络中的用户行为会受到其邻居的影响，或因其有有邻居相似属性（兴趣、职业等），采取和邻居相同的行为或具有同类别的标签。</p><p><strong>社会影响与同质性</strong></p><p>该思想与推荐算法中基于用户的<strong>协同过滤</strong>思想一致。</p><p><span class="math display">\[P(Y_i=1)={\sum_{j\in N(i)}w_{ij}P(Y_j=1)\over |N(i)|}\]</span> 这里的权重是 0-1 的。</p><h3 id="回归">回归</h3><ul><li><p>线性回归 <span class="math display">\[Y=wx+\epsilon\]</span></p></li><li><p>逻辑回归 <span class="math display">\[P(Y=1|x)={1\over e^{-\beta x}+1}\]</span></p></li></ul><h3 id="模型评估">模型评估</h3><p><img src="16092888829678.jpg" /></p><p><img src="16092888904503.jpg" /></p><h3 id="聚类">聚类</h3><ul><li>K-means</li><li>层次聚类</li></ul><p>对于聚类结果的评估来说，可由以下的准则</p><ul><li><p>内聚性：组内的方差越小越好</p></li><li><p>离散性：我们希望得到的类之间有更大差异，这里用的一个指标是各个类中心的方差，越大越好</p></li><li><p>sihouette 指数：基本想法还是上面两个，希望组内尽可能靠近，组间尽可能差距大</p></li></ul><p><img src="16092889012431.jpg" /></p><h2 id="社区挖掘">6-社区挖掘</h2><p>在这一章节中我们讨论</p><ul><li>怎样发现社区？</li><li><p>社区怎样演化？如何研究社区演化？</p></li><li><p>如何评价发现的社区是否准确/合理？</p></li></ul><p>Social Media <strong>Communities</strong></p><p><img src="16092889123140.jpg" /></p><p>定义</p><ul><li>现实社会：具有共同经济、社会或政治兴趣/特点的个体组成的团体</li><li>虚拟社会：社交网站/媒体中由志趣相投的用户通过链接或交互关系组成的团体</li></ul><p>相较于显式社区（有一个明确的边界，用户知道自己所述什么社区，社区有哪些人），隐式的社区可能包含了某些信息，其挖掘更具有意义和挑战性。</p><h3 id="社区发现-community-detection">社区发现 Community detection</h3><p>比较了社区发现和聚类：一个是基于 feature 的，一个则基于网络关系</p><p><img src="16092889238580.jpg" /></p><p><img src="16092889314558.jpg" /></p><p>总结如下</p><p><img src="16092889384909.jpg" /></p><p>下面是几个基于群组 group 的社区发现算法。思想是：<strong>具有某种群组特点的子图是社区</strong>。群组的特点包括：平衡性、鲁棒性、模块化、高密度、层次化等。不难发现这些性质和基于成员 member 的社区发现，以及聚类等概念有着密切关联，以下就从这些角度分别讲一下这些算法。</p><p><img src="16092889473107.jpg" /></p><h4 id="均衡社区-balanced-communities-spectral-clustering-谱聚类">均衡社区 Balanced Communities, Spectral Clustering 谱聚类</h4><p>社区发现，可以被看成我们对节点进行分类/分割，也即，需要找到对图的分割，使得分割的代价最低。然而，简单定义的 cut 的代价会有一些问题，比如划分的社区不均衡，多把离群点分为单独的一类。</p><p><img src="16092889557657.jpg" /></p><p>为实现均衡社区的发现，考虑根据所得到的社区的大小做惩罚，具体为下面的 Ratio cut, Normalized cut 的形式，两者实现的思想和效果是类似的。</p><p><img src="16092889647900.jpg" /></p><p>下面通过矩阵表示的形式来计算一些 cut 的大小 <span class="math inline">\(c(P_i, \bar P_i)\)</span> ，设 A 为网络表示矩阵，X 为社区关系矩阵，每一行表示某结点所在社区，每一列表示某个社区包含的成员。于是 <span class="math display">\[(X&#39;AX)_{ii}=\sum_{j,k}x_{ji}A_{jk}x_{ki}=x_i&#39;Ax_i\\=\sum_{jk}y_jy_kA_{jk}\]</span> 其中， <span class="math inline">\(x_i\)</span> 表示社区关系矩阵的第 i 行。我进一步记 <span class="math inline">\(y=x_i\)</span> 最终写成了第二行的形式，观察该式，项 <span class="math inline">\(y_jy_kA_{jk}\)</span>只有当结点 j 和 k 同属于社区 i，并且两者有边相连时才等于 1，因此此第 i 个对角元的含义是：the number of edges that are inside community i。</p><p>而根据我们定义的度矩阵 D，可以得到 <span class="math display">\[(X&#39;DX)_{ii}=x_i&#39;Dx_i=\sum_{jk}y_jy_kD_{jk}=\sum_{j}y_j^2D_{jj}\]</span> 也即，对于所有属于社区 i 的元素（<span class="math inline">\(y_j^2=1\)</span>），求其度数和，所以此第 i 个对角元的含义是：the number of edges that are connected to members of community i。</p><p>两者相减，即为此分割的大小。</p><p>基于 cut 的大小，我们可以进一步得到比例割、归一化割的形式；因此，我们最终将此社区分割问题转化为一个求矩阵最小迹的问题</p><p><img src="16092889739673.jpg" /></p><p><img src="16092889869010.jpg" /></p><ul><li>但这样的一个问题是 NP-hard 的，我们采用 spectral relaxation；利用谱聚类，我们可以通过计算拉普拉斯矩阵 L 的最小的前 k 个特征向量得到所需的 <span class="math inline">\(\hat X\)</span> ；</li><li>但这样得到的结果中矩阵 X 中的元素并不是整数了；</li><li>为了从我们 <span class="math inline">\(\hat X\)</span> 中恢复 X，我们可以在 <span class="math inline">\(\hat X\)</span> 上做一遍 K-means 聚类。</li></ul><p><img src="16092889989828.jpg" /></p><p>emmm 到后面那部分其实有点不太理解，数学是硬伤 Orz（原 slides 中似乎给出了一些说明），下面给了一个例子，帮助直观理解</p><p><img src="16092890104545.jpg" /></p><h4 id="稳定社区-robust-communities">稳定社区 Robust Communities</h4><p>这个和之前的团/簇的想法类似，即希望这个社区内部是紧密的：移除其中的边/结点，不会使得这个社区分成两部分。具体有</p><ul><li>K-vertex connected (k-connected) graph: 至少要移除 k 个节点才能 disconnect 这个图</li><li>K-edge connected: 至少要移除 k 条边</li></ul><p>例如，大小为 n 的完全图为 n-connected graph；一个 cycle 为 2-connected graph</p><h4 id="模块化社区-modular-communities">模块化社区 Modular Communities</h4><p>这里的考量是，假设我们固定了节点的<strong>度分布</strong>，考虑各个节点之间随机连接，那么这个大小的社区之内会有一个期望的边数；这是随机情况下，而现实中我们假定社区是高度结构化的 far from random，因此我们度量真实的边数与这一期望值的差距。</p><p>先考虑节点 <span class="math inline">\(v_i, v_j\)</span> 之间的边数，对于节点 i 的一条边来说，其连接到 j 的概率为 <span class="math inline">\({d_j\over \sum_i d_i}={d_j\over 2m}\)</span>，于是总的期望边数为 <span class="math inline">\({d_id_j\over 2m}\)</span> （分母上做了一些近似处理）。于是，对于一个分区 <span class="math inline">\(P_x\)</span>，我们可以定义其与「期望值」的距离 <span class="math inline">\(\sum_{i,j\in P_x}A_{ij}-{d_id_j\over 2m}\)</span> 。整个划分 <span class="math inline">\(P=(P_1,...,P_k)\)</span> 的距离就是 <span class="math inline">\(\sum_{x=1}^k\sum_{i,j\in P_x}A_{ij}-{d_id_j\over 2m}\)</span> 。最后归一化处理，得<strong>到模块度 Modularity</strong> <span class="math display">\[Q={1\over 2m}\sum_{x=1}^k\sum_{i,j\in P_x}A_{ij}-{d_id_j\over 2m}\]</span> 同样，我们利用矩阵对上式进行表达，定义模块度矩阵 <span class="math display">\[B=A-{dd&#39;\over 2m}\]</span> 则 <span class="math display">\[Q={1\over 2m}Tr(X&#39;BX)\]</span> 这里的形式和之前谱聚类的形式是一样的，不同之处在于这里要去最大的那些特征值；此外，在 Modularity 上，这前 k 个特征值必须是正数。</p><p><img src="16092890203511.jpg" /></p><p>PPT 上还介绍了一些计算方法，Louvain Method</p><h4 id="高密度社区-dense-communities">高密度社区 Dense Communities</h4><p>我们利用一个子图与团 clique 的接近程度来定义其密度： <span class="math display">\[\gamma={|E|\over \binom{|V|}{2}}\]</span> 我们说一个子图 G 是 <span class="math inline">\(\gamma\)</span>-dense (or quasi-clique) 的，若其满足 <span class="math inline">\(|E|\ge \gamma \binom{|V|}{2}\)</span>。</p><p>这里简要介绍了定义，但没有细展开，相关的算法和寻找 clique 类似：</p><p><img src="16092890301993.jpg" /></p><h4 id="层次化社区hierarchical-communities">层次化社区Hierarchical Communities</h4><p>感觉思想和聚类算法里面的层次聚类相似，也同样包括两种思路</p><ul><li>Divisive Hierarchical Clustering</li><li>Agglomerative Hierarchical Clustering</li></ul><p><img src="16092890474418.jpg" /></p><p>课上介绍了 Newman 算法，是一种自顶向下的思路：从原本的图开始，计算每一条边的「边介数 edge betweenness」，移除其中最大的那些边；迭代下去。</p><p>这里的想法是，要找到那些最重要的边，定义边介数的定义为：最短路径经过该条边的节点对数量</p><p><img src="16092890585820.jpg" /></p><h3 id="社区演变-community-evolution">社区演变 Community Evolution</h3><p>社区演变的三种形式</p><ul><li>分裂 Network Segmentation</li><li>致密化 Graph densification</li><li>缩径 Diameter shrinkage</li></ul><p>其中第一点比较有意思：大规模网络随时间推移分解成三个部分：巨大结构（超大连通分支）、星状结构、单元素</p><p><img src="16092890754187.jpg" /></p><p>此外，还有其他的演化路线</p><p><img src="16092890843225.jpg" /></p><h3 id="社区评价">社区评价</h3><p>另外一方面，我们需要对于所找到的社区进行评价，可以分成两类：是否有 Ground Truth。</p><p>在有 GT 的情况下，指标包括</p><ul><li><strong>Precision and Recall, or F-Measure</strong></li><li><strong>Purity</strong></li><li><strong>Normalized Mutual Information</strong> 归一化互信息</li></ul><p><img src="16092890949720.jpg" /></p><p>注意到这里的各种指标的计算，以下面的例子来看，我们关注的是<strong>两两之间</strong>的关系。在一个类中：两个相同类别的节点对属于 TP，不同类别的节点对属于 FP；在两个类之间：不同类别的节点对属于 TN，相同类别的节点对属于 FN。</p><p><img src="16092891050974.jpg" /></p><p>下面纯度的定义比较简单：即对于 GT 的每一个类来说，找到我们划分出来的社区中包含最多这个类的社区，累计这些数字。</p><p><img src="16092891141108.jpg" /></p><p>这里涉及到 <strong>互信息 MI</strong> 的概念，参见 <a href="https://en.wikipedia.org/wiki/Mutual_information" class="uri">https://en.wikipedia.org/wiki/Mutual_information</a>；简言之，互信息衡量的是两个随机变量之间的关联程度 <span class="math display">\[I(X;Y)=D_{KL}(P_{(X,Y)}||P_X\times P_Y)\]</span> 从 KL 散度的定义式来看，即为联合分布相对于边际分布乘积的差异程度，这个值越高说明 <span class="math inline">\(X,Y\)</span> 之间的关联性越大。（比相关系数（描述线性关系）更为普遍？）</p><p>这里是把 GT 和预测结果都看成是一个分布，计算其互信息，因此注意到 log 内的分子上会有一个 n；为了统一指标，采用 NMI，即除以 <span class="math inline">\(\sqrt{H(X)H(Y)}\)</span>。</p><p>下面介绍了一些在没有 GT 下的指标</p><p><img src="16092891254806.jpg" /></p><p>比较粗略地提了一些，一方面，可以借助社区成员的属性发现其相似度（发帖内容、个人描述、标签语义等）；另一方面，基于聚类质量的评价指标。</p><h2 id="社交网络的信息传播">7-社交网络的信息传播</h2><p>信息扩散 Information diffusion: process by which a piece of information (knowledge) is spread and reaches individuals through interactions.</p><p>一个传播过程需要包括：Sender, Receiver, Medium 三个部分</p><h3 id="计算传播学简介-coumputational-communication">计算传播学简介 Coumputational Communication</h3><ul><li>是计算社会学的重要分支，与计算新闻学、网络科学等密切相关，是典型的的较差学科研究</li><li>研究对象：关注人类传播行为的可计算基础</li><li>研究工具：以网络分析、文本挖掘、数据采集、数学建模等为主要分析工具来大规模地手机并分析人类传播行为数据</li><li>研究目标：挖掘人类传播行为背后的模式和法则，分析模式背后的生成机制与基本原理</li><li>应用场景：可悲广泛的应用于<strong>数据新闻、舆情监测、计算广告</strong>等场景</li></ul><h4 id="信息传播的测量维度">信息传播的测量维度</h4><p><img src="16092891415276.jpg" /></p><p><img src="16092891512055.jpg" /></p><h4 id="结点传播力测量">结点传播力测量</h4><ul><li>社交用户影响力的量化方法<ul><li>激发回复：回复数量</li><li>激发对话：帖子所激发的他人的相互讨论</li><li>语义扩散：用户帖子中使用的词语被他人沿用</li></ul></li><li>度中心性</li><li>特征向量中心性</li><li>PageRank 中心性</li><li>中间/中介中心性</li><li>权威性、中枢性</li><li>群体的相关度量</li></ul><h4 id="信息传播对于社交网络结构演化的作用">信息传播对于社交网络结构演化的作用</h4><p><img src="16092891654415.jpg" /></p><h3 id="社会网络的信息传播模型-information-diffusion">社会网络的信息传播模型 Information Diffusion</h3><p>这里借用了 SMM 的 Silde 上的图</p><p><img src="16092891747426.jpg" /></p><p>这里主要是从网络是否可见（explicit/observable）、信息的可获得性两个角度进行划分的，例如羊群效应是在网络可观测、可以得到 public information 的假设下的。</p><h4 id="羊群效应-herd-behavior">羊群效应 Herd Behavior</h4><p><img src="16092891840198.jpg" /></p><p>描述的是，个体观察所有其他人的行为后，采取与其一致的行为效应，即「随大流/跟风」。</p><p>传播实验需要的条件有</p><ul><li>个体的选择决定需要遵从一定的顺序</li><li>个体是在掌握一定的信息后才做出决定</li><li>个体之间无法传递信息：一个人无法知道他人掌握的信息，但是可以通过观察他人的行为来推断他人掌握的信息</li></ul><p>典型的例子包括：食客对餐馆的选择（实现看到 A 的评价更好，但实际到了的时候发现 A 没有人而 B 参观人很多）；Milgram’s Experiment（街上静止抬头）；Solomon Asch’s Experiment（1956 推断棒子的长度是 ABC 中哪一个）</p><p>介绍了一下羊群效应的贝叶斯建模，即一个 Urn 中放了一红二蓝或是一蓝二红三个球，依次抽取，结合之前的人的推测得到自己当前的推测；在这种情况下，若是前面两个人推测为蓝，那么从第三个人开始无论其抽到什么一个合理的结果都应该是蓝。</p><ul><li>Herding: we only have access to public information</li><li>Herding may be intervened by <strong>releasing private information</strong> which was not accessible before</li></ul><p>羊群效应出现的原因在于，每个人仅能得到他人的 public 信息，而其<strong>干预手段</strong>也是直观的：需要有人公开他的信息；一个经典的例子，就是皇帝的新衣中的孩子。</p><blockquote><p>老师课上还讲了「沉默的螺旋」，描述的内容和羊群效应类似。</p><p>该词最早见于伊丽莎白·诺埃勒-诺依曼于1974年在《传播学刊》上发表的一篇论文<strong>《重归大众传播的强力观》</strong>，她在1980年《沉默的螺旋：舆论一我们的社会皮肤》一文中进一步发展了该理论，认为：</p><ul><li>舆论的形成与大众传媒营造的意见气候有着直接的关系，大众传媒为公众营造了一个意见气候，而人们由于对于社会孤立的恐惧会采取<strong>集体趋同</strong>的行为，导致一方意见的越来越大声疾呼，另一方意见的越来越沉默的螺旋式过程。</li><li><strong>意见领袖</strong>能够唤醒“沉默的螺旋”</li><li>意见领袖具有强大的网络互动能力和影响力，社交媒体中的大多数网民只是充当“狂欢”者，在与自己利益无关的议题讨论中以“围观者”的身份参与。意见领袖通过转发和评论，在庞大粉丝群中起到了示范作用，带动了“沉默的大多数”选择了集体发声，表达自己的意见与看法。粉丝在意见领袖的唤醒作用之下，不再是一群“乌合之众”，成为具有批判能力和思考能力的活跃群体。</li></ul></blockquote><h4 id="信息级联-information-cascade">信息级联 Information Cascade</h4><p>An information cascade: a piece of information/decision cascaded among some users, where</p><ul><li><p>individuals are connected by a network and</p></li><li><p>individuals are only observing decisions of their immediate neighbors (friends).</p></li></ul><p>定义：信息或决策在一群个体中扩散的过程，例如在社会网络中，个体经常转发（或采取相同决策）邻近好友的发布内容。</p><p>类似于人际传播，存在一个「网络」上。在之前的「羊群效应」的例子中，我们假想了一个全局的「公告板」，而现实中每个人不可能共享一个消息源，而是呈现出一个较大的松散的网络形态。这种情况下更类似信息级联，其传播实验需要条件：</p><ul><li>个体存在于一个社会网络中；</li><li>个体只能观察到邻近好友的决策行为（可获得的信息比羊群效应少）</li></ul><p>PPT 上给的经典例子是 1996/1997 年的 Hotmail，其获得用户增长，原因在于，By inserting the tagline "Get your free e-mail at Hotmail" at the bottom of every e-mail sent out by its users.</p><p>下面介绍了几个模型</p><h5 id="独立级联模型-independent-cascade-model-icm">独立级联模型 Independent Cascade Model (ICM)</h5><p>想象一个社交网络，每个节点仅有 active/inactive 两种状态，有一个信息源（初始集合），收到信息的邻居以一定的概率成为 active 的，即再次传播该信息，这一概率是随机的。</p><ul><li>也正因此，称之为 Senter-centric model，以此区别于线性阈值模型，其为 receiver-centric 的</li></ul><p><img src="16092892015794.jpg" /></p><h5 id="线性阈值模型-linear-threshold-model-ltm">线性阈值模型 Linear Threshold Model (LTM)</h5><p>上面的模型对于接收者的建模有点粗糙了，这里对于 receiver 有了更为细致的描述：其为每一个待激活的节点设定一个阈值 <span class="math inline">\(\theta_i\)</span>，若其接收到的周围 active 节点的信号超过了此阈值就会被激活；这里带来的一个好处就是可以建模不同邻居对它的影响，即适用于<strong>有向带权网络</strong>，另外为了简洁起见，我们对于每个节点的入度权重都做了归一化（即下面的第一个不等式）。</p><p><img src="16092892124896.jpg" /></p><p><img src="16092892207520.jpg" /></p><h5 id="级联传播的平衡与颠覆">级联传播的平衡与颠覆</h5><p>考虑上面的线性阈值模型，我们做一些简化处理：每个入度邻居的影响都是一样的，阈值也就是一样的，例如假定每个加点的激活原则是有超过 2/5 个邻居被激活。在这一假设下，我们容易观察到以下的现象：</p><ul><li>一种网络的平衡往往会被一个级联传播颠覆，即该信息完全扩散到了整个网络中；</li><li>但有些网络中有维持稳定的平衡</li></ul><p>我们关注的是，什么能够让级联停止？阻止完全级联的产生？为此，我们定义<strong>聚簇</strong>：</p><p><img src="16092892306604.jpg" /></p><p>容易证明，若激活概率为 q，则该信息不会在一个密度大于 1-q 的聚簇中传播。</p><h5 id="级联范围最大化">级联范围最大化</h5><p>与之相关的一个问题是，初始是用最少的激活结点，达到最终是激活最多的结点。</p><p>其应用价值很广泛，如产品营销，用最低的广告代价/预算达到最大的广告效果。</p><p>我们形式化地定义该问题：给定一个参数 k（budget），找到一个初始集合 S，以最大化传播效果 <span class="math inline">\(f(S)\)</span> 。</p><p>注意到这里的函数 f 是定义在一个集合上的，当然我们可以理解为是定义在一个维度为 N 的高维空间上的，其满足如下性质</p><p><img src="16092892408386.jpg" /></p><p>其中，第三个性质，即「次模函数」，用一个经济学的概念来简单解释，就是「边际效益递减」。</p><p>对于该问题，不加证明地说明以下 facts</p><p><img src="16092892532892.jpg" /></p><p>简言之，就是原问题已被证明为 NP-hard，而替代的方案是采取贪婪算法，每次加一个节点进去使得新的集合可以产生更好的效果。</p><p>最后，对信息级联的干预手段总结</p><ul><li>限制信息（决策）发布者的出链</li><li>限制接收者的入链</li><li>降低网络节点（个体用户）的激活概率 <span class="math inline">\(p_{v,w}\)</span></li><li>网络中形成密度较高的聚簇</li></ul><h4 id="创新扩散-diffusion-of-innovations">创新扩散 Diffusion of Innovations</h4><p>创新扩散的理论试图回答 <strong>why and how</strong> innovations spread</p><p>下面介绍了几个理论。</p><p>Ryan and Gross studied the adoption of hybrid seed corn by farmers in Iowa. 新的杂交玉米有耐病虫、耐干旱等优良特性；但是也会有价格高、不能留种（仅能从 provider 中购买）的问题。</p><p>根据观察，区分了<strong>五类受众</strong>：创新者 innovator、早期采用者 early adopter、早期大众 early majority、晚期大众 late majority、落后者 laggard。</p><p><img src="16092892672266.jpg" /></p><p>第二个理论是 Katz 的二级传播理论。</p><p><img src="16092892778770.jpg" /></p><p>第三个是 Rogers 提出的创新扩散的过程说：分为了解、兴趣、评估、试验、采纳五个阶段。</p><p><img src="16092892893309.jpg" /></p><p>接下来，是对于创新扩散的过程进行数学建模，核心公式是下面的这条</p><p><img src="16092892991499.jpg" /></p><p>其中 <span class="math inline">\(i(t)\)</span> 衡量的是 t 时刻的扩散因子， <span class="math inline">\(A(t)\)</span> 是 t 时刻的采纳人数。根据扩散因子的形式不同，可以细化为三种模型。emmm 下面经过积分可得 <span class="math inline">\(A(t)\)</span> 的具体形式，不给我的微积分只是都还给高数老师了……</p><h4 id="流行病模型-epidemics">流行病模型 Epidemics</h4><p>和创新扩散理论一样，流行病模型建模的也是一个隐式网络，或者说我们关心的是整体上的<strong>传播趋势和人群感染速率</strong>，而不是观察具体的传播路径。</p><p>一般来说流行病的研究方法包括</p><ul><li><p>接触网络 Using Contact Network：通过观察宿主如何接触来涉及描述流行病在人群网络中发生的方法</p></li><li><p>全混合 Fully-mixed Method：只分析传染者感染、恢复的速度而不考虑接触网络的相关信息，这是下面的模型所研究的（我们无法得到接触网络，无法了解感染机制）。</p></li></ul><p>根据不同的假设，可以分为下面的四种模型</p><p><img src="16092893098439.jpg" /></p><p>考虑总人数为 N。在 SI 模型中，仅有 susceptible 和 infected 两类，对于每一个 I 来说，其接触的人数为 <span class="math inline">\(\beta N\)</span>，于是会感染 <span class="math inline">\(\beta S\)</span>，于是在这一轮次的总感染人数为 <span class="math inline">\(\beta IS\)</span> ，用箭头的方式来写，则乘子为 <span class="math inline">\(\beta I\)</span>。显然满足等式 <span class="math inline">\(S(t)+I(t)=N\)</span>，根据微分式 <span class="math inline">\({dS\over st}=-\beta IS\)</span> 可积分得到最终结果。</p><p>在 SIR 模型中加入了 recover，并假设感染恢复后不再易感，建立三变量微分方程。</p><p>SIS 模型假设患者恢复后仍然易感；SIRS 则假设一部分康复后易感一部分保持免疫，满足微分式 <span class="math inline">\({dR\over dt}=\gamma I-\lambda R\)</span></p><p>最后介绍了一些干预手段，不过偏向实证，不再赘述。</p><h2 id="影响力和同质性-influence-and-homophily">8-影响力和同质性 Influence and Homophily</h2><p>我们观察到，在社交网络中连接的个体通常更加相似。</p><p>三种原因：影响力、同质性、混杂/混淆</p><ul><li>其中，影响力是 connection 造成了 similarity</li><li>同质性是 similarity 造成了 connection</li><li>混杂则可以看成是环境因素，对于 similarity 和 connection 都有影响</li></ul><p><img src="16092893266020.jpg" /></p><p>在这一节中，我们研究：</p><ul><li>how can we measure <strong>assortativity 同配性</strong> ?</li><li>Measure influence or homophily?</li><li>model influence or homophily?</li><li>Distinguish between the two?</li></ul><h3 id="度量同配性">度量同配性</h3><h4 id="符号属性-nominal-attributes">符号属性 Nominal Attributes</h4><p>相同属性的节点之间有更大的概率相连</p><p><img src="16092893393033.jpg" /></p><p>考虑到符号属性的不均衡性，考虑采用 assortativity significance，即实际上同配的边的比例如期望的随机连接的边的比率</p><p><img src="16092893476106.jpg" /></p><p>进一步作归一化处理</p><p><img src="16092893604819.jpg" /></p><p>下面是对于模块度的矩阵表示的推导，课件上写得很完整直接搬过来~</p><p><img src="16092893709903.jpg" /></p><p><img src="16092893782309.jpg" /></p><h4 id="序数属性-ordinal-attributes">序数属性 Ordinal Attributes</h4><p>不同于之前的每一个节点是符号属性，这里的节点属性为 Ordinal 的，这时我们用「相关系数」来衡量模块度。</p><p>具体来说，对于排列好的所有的边，我们把出节点和入节点组合起来分别写为 <span class="math inline">\(X_L, X_R\)</span> ，然后计算它们之间的相关系数——相关系数越高，说明属性值越高的节点，越倾向于和其他属性值高的节点连接。</p><p>另外，注意到对于无向边来说， <span class="math inline">\(X_L, X_R\)</span> 都含有 2m 个属性值，只是其排列不同，因此 <span class="math inline">\(EX_L=EX_R, \sigma(X_L)=\sigma(X_R)\)</span> 。</p><p>先来算 Covariance</p><p><img src="16092893895315.jpg" /></p><p>归一化即得到 <strong>Person correlation</strong></p><p><img src="16092893967316.jpg" /></p><h3 id="影响力-influence">影响力 Influence</h3><p>定义：在没有明显的强制措施和直接命令的情况下影响他人的行为或能力。</p><h4 id="度量影响力">度量影响力</h4><p>进一步，我们需要度量影响力</p><p><img src="16092894064459.jpg" /></p><p>这里给出了一个度量 Blog 影响力的方式，根据入链、出链、长度、评论数四个指标，反映出四种因素，主要最下面的那条式子，而其中如何结合入链和出链，又定义了一个「影响力传播值」Influence Flow: Influence flow describes a measure that accounts for inlinks (recognition) and out-links (novelty). 不太理解这里「新颖性」的度量，引用了很多重量级的博客，同样可能有很高的创新度吧？</p><p><img src="16092894181667.jpg" /></p><p>我们可以构建不同的指标来度量影响力，从而给每一个用户（如 Twitter）进行排名，对于不同的排名，利用 Spearman 系数比较两者的相关性。</p><p><img src="16092894263374.jpg" /></p><h4 id="影响力建模">影响力建模</h4><p>可以分为两个部分</p><ul><li>显示网络影响力建模：参考第 7 节中线性阈值模型等</li><li>隐式网络影响力建模：我们不知道网络结构，不知道谁影响了谁，只能对于某个用户的影响力随着时间的变化建模（和激活时刻有关）。把每个用户的效应综合起来就得到最终的模型，线性影响力模型 LIM，不过公式没咋看明白。</li></ul><p><img src="16092894366779.jpg" /></p><h3 id="同质性-homophily">同质性 Homophily</h3><p><img src="16092894482949.jpg" /></p><h4 id="度量同质性">度量同质性</h4><p>简单看网络的同配性系数随着时间的变化情况</p><p><img src="16092894572436.jpg" /></p><h4 id="同质性建模">同质性建模</h4><p>书上说用的是类似独立级联模型 ICM 的 variation，但似乎和 ICM 的区别还挺大的？而且这个建模好没意义……</p><p><img src="16092894669427.jpg" /></p><h3 id="区分影响力和同质性-distinguishing-influence-and-homophily">区分影响力和同质性 Distinguishing Influence and Homophily</h3><p>我们需要度量一个同配网络中是影响力还是同质性起到了重要作用，用一些统计方法来 test，以下都假设我们可以得到网络的几个 temporal shapshot</p><h4 id="shuffle-test-洗牌测试-influence">Shuffle Test 洗牌测试 (Influence)</h4><p>注意到，如果是用之前的基于网络结构中心性之类的方式来定义影响力，那么这样的度量肯定是 静态的；而我们试图基于网络的 时序特征 来进行分析，所以这里关注的是信息的传播，或者说网络上的节点 <strong>active/inactive</strong> 比例随时间变化的情况。</p><p>回过头来理解究竟什么是 影响力？它和同质性的区别在于，<strong>其使得网络上节点的属性发生了变化</strong>，这里的属性我们很难得到社会学意义上的那种人际关系，比较简单的是看这种 active/inactive 关系。而洗牌测试的思想，就是如果是影响力起到了作用，那么已经起影响作用的节点一定要比被影响的节点在时间上提前被激活；因此，网络 snapshot 的 timestamp 是有意义的，我们调换时间片，观察这种是否会对一些指标发生影响。</p><blockquote><p>初步看下来是这样的，但还是有些难以理解：这里对于影响力的度量，还是采用了 active/inactive 的方式，在我看来更类似于信息的传播，这样的话直观来说网络上的变化肯定是在时序上有意义的，那么这样的测试如何进行（例如，打乱 timestemp 后这里的 <span class="math inline">\(p(a)\)</span> 怎么计算？）</p></blockquote><p>具体来说，对于一个节点受影响概率的建模采用了 Logistics 回归，并利用 ML 进行参数估计。</p><p><img src="16092894829905.jpg" /></p><p><img src="16092894904957.jpg" /></p><h4 id="边反向测试-the-edge-reversal-test-influence">边反向测试 The Edge-reversal Test (Influence)</h4><p><img src="16092894978958.jpg" /></p><h4 id="randomization-test-influencehomophily">Randomization Test (Influence/Homophily)</h4><p><img src="16092895067758.jpg" /></p><p>这个还是比较容易理解的：既然我们有网络的时序变化记录，那么希望能根据这一变化直接进行度量。变化包括两方面</p><ul><li>网络结构的变化：对应于同质性</li><li>节点属性的变化：对应于影响力</li></ul><p>那么我们可以分别固定其中的一个变量（网络结构或节点属性），看在下一时刻同配性度量的变化影响，得出是否存在同质性或影响力。下式中，<span class="math inline">\(A(G_t, X_t)\)</span> 表示利用时刻 t 的网络 G 和时刻 t 的属性 X 计算出来的同配性系数。</p><p><img src="16092895155799.jpg" /></p><p>下面给出了具体的对于影响力的测试算法，这里进行了属性的随机化操作，重复了 n 次，从而得到了测试的 significance level</p><p><img src="16092895225008.jpg" /></p><p>对于同质性的测量是类似的，不过这里随机化的是图的结构。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> major </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社交网络 </tag>
            
            <tag> 图 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>社交网络挖掘-Note1</title>
      <link href="/posts/c87a6cee/"/>
      <url>/posts/c87a6cee/</url>
      
        <content type="html"><![CDATA[<h2 id="概论">1-概论</h2><p>从社会的角度去分析和理解个人的行为。</p><blockquote><p>“人的本质并不是单个人所固有的抽象物。在 其现实性上，它是一切社会关系的总和”——马克思《关于费尔巴哈的提纲》</p><p>“社会不是由个人构成，而是表示这些个人彼 此发生的那些联系和关系的总和”—— 《马克思恩格斯全集》V.46, P.220, 人民出版社, 1979年</p></blockquote><p>相关应用</p><ul><li>精准营销：用户画像、个性化推荐、社会化营销</li><li>舆情管理：危机预警、观点挖掘、情感分析</li><li>分析预测：市场研判、新闻热点预测、用户行为画像与预测</li><li>刑侦反恐：潜在关系挖掘、犯罪社团挖掘</li></ul><p>用的教材主要是《社会媒体挖掘》一书，英文版 PDF 和 Slides 见 <a href="http://dmml.asu.edu/smm/" class="uri">http://dmml.asu.edu/smm/</a></p><p>主要内容包括</p><ul><li>图论基础</li><li>网络度量：网络权威/中心用户查找</li><li>网络挖掘：小世界现象</li><li>数据挖掘：社区（团）挖掘</li><li>社交网络的信息传播：影响力最大化、热门话题预测</li><li>影响力和同质性</li><li>用户行为分析：网络学、社会学、经济学、博弈论</li><li>推荐系统</li></ul><p><img src="16092884441698.jpg" /></p><p>参考书目</p><p>• 《社会媒体挖掘》，Reza Zafarani等</p><p>• 《网络、群体与市场》，⼤卫·伊斯科，乔恩·克莱因伯格</p><p>• 《Pajek蜘蛛: 社会网络分析技术》，沃特·德·诺伊等</p><p>• 《社会网络分析：⽅法与应⽤》，沃瑟曼等</p><p>• 《在线社交网络分析》，⽅滨兴等</p><p>• 《社会网络分析法》，约翰·斯科特</p><p>• 《社交网站的数据挖掘与分析》，Russell</p><p>• 《Web数据挖掘》，Bing Liu</p><h3 id="社交网络概述">社交网络概述</h3><blockquote><p>由英国⽜津⼤学的⼈类学家罗宾·邓巴（Robin Dunbar）于2009年 提出：根据猿猴的智⼒与社交⺴⽹网络推断出：⼈类智⼒将允许⼈类拥有 稳定社交⺴⽹网络的⼈数是148⼈，四舍五⼊⼤约是150⼈。因此，150⼜ 称<strong>邓巴数字</strong>。</p><p>该定律指出：⼈的⼤脑新⽪层⼤⼩有限，提供的认知能⼒只能使⼀个 ⼈维持与⼤约150个⼈的稳定⼈际关系，这⼀数字是⼈们拥有的、与 ⾃⼰有私⼈关系的朋友数。也就是说，⼈们可能拥有150名好友，甚 ⾄更多社交⺴⽹网站的“好友”，但只维持好与现实⽣活中⼤约150个⼈ 的“内部圈⼦”。⽽“内部圈⼦”好友在此理论中指⼀年⾄少联系⼀ 次的⼈。</p></blockquote><h3 id="社会网络分析">社会网络分析</h3><p>为理解⼈类各种社交关系的形成、⾏为特点以及信息传播 的规律，采⽤相关的分析⽅法，涉及信息学、数学、社会 学、管理学、⼼理学等多学科的融合理论和⽅法</p><p>社会网络分析⽅法基于⼀个直觉性观念，即⾏动者嵌⼊在 其中的<strong>社会关系的模式</strong>对于他们的⾏动结果有重要的影响， 社会网络分析者则⼒求揭⽰不同类别的模式</p><p>社会网络分析的特点包括</p><ul><li><p>源⾃于联系社会⾏动者关系基础之上的结构性思想</p></li><li><p>以系统的经验数据为基础</p></li><li><p>⾮常重视关系图形的绘制</p></li><li><p>依赖于数学或计算模型的使⽤</p></li></ul><h3 id="社会计算">社会计算</h3><p>2009年2⽉，美国哈佛⼤学⼤卫·拉泽（David Lazer）等15位美国学者 在《Science》上联合发表了⼀篇具有⾥程碑意义的⽂章 《Computational Social Science》</p><p>社会计算（Social Computing），⼜称计算社会学（Computational Social Science）。 ⼀般指社会⾏为和计算系统交叉融合⽽成的⼀个研究领域，研究如何利⽤计算 系统帮助⼈们进⾏沟通与协作，如何利⽤计算技术研究社会运⾏的规律与发展 趋势。</p><p>社会计算的研究目标</p><p>1）在深⼊理解当前社会问题动态性、快速性、开放性、 交互性、数据海量性和复杂性的基础上，为解决新兴社会 问题建⽴统⼀的<strong>社会科学基础模型和理论框架</strong>；</p><p>2）社会科学基础模型和理论“计算化”或建⽴其<strong>到计算 技术的映射机制</strong>，研究与社会相关应⽤中的建模与计算⽅ 法，⾃下⽽上地为解决新兴社会问题提供整套理论和技术 ⽀撑；</p><p>3）深化学科交叉研究，为⺴⽹网络化社会背景下的社会科学 研究提供实验⽅法；同时，以新兴问题促进相关研究领域 内涵和内容的延拓，推动基础理论和⽅法的创新和突破。</p><p>而社交网络挖掘是社会计算的研究内容的一部分。</p><h3 id="社交网络挖掘">社交网络挖掘</h3><p><strong>Social Media Mining</strong> is the process of representing, analyzing, and extracting meaningful patterns from social media data</p><p>社交网络挖掘的挑战：</p><ul><li>大数据悖论<ul><li>个体数据是往往是稀疏的，因此才需要汇聚群体/整体的⼤大数据<ul><li>举例：社会推荐中的冷启动问题</li></ul></li><li>个体⾏行为模式不能简单等同于整体，因此不能是个体的简单相加来代表整体，也不能整体的简单拆分来刻画个体</li></ul></li><li><p>数据采集与获取：爬虫、API等需要掌握的重要技术⼿手段</p></li><li>数据清理与噪⾳音消除<ul><li>⼤大数据可以允许个体数据的错误，但不等于不需要数据清理</li><li>消除噪⾳音个体trade-off 个体数据价值挖掘</li></ul></li><li>性能/作⽤用评价<ul><li>ground truth（事实/标准答案）如何获取？</li><li>没有客观标准答案的如何评价？</li><li>数据挖掘出来的模式/结果能否解答“为什么”？</li></ul></li></ul><p><strong>数据分析/挖掘的结果往往能较好地解释</strong> <strong>what/where/when/how many/how often</strong> <strong>但较难回答why</strong></p><p><strong>我们面对的是社会学的问题，我们⽤用交叉的思想去寻找解决方案，并利⽤数学和信息学的手段来解决它</strong>。</p><h2 id="图论基础">2-图论基础</h2><p>图是网络结构的数学模型</p><p>网络问题一般可以转化成一个图论的问题</p><ul><li>微博信息传播网络：Given a piece of information, a network of individuals, and the cost to propagate information among any connected pair, find the minimum cost to disseminate the information to all individuals.</li><li>科尼斯堡问题：奇点的数目不是0个(起点即终点)就是2个（一个是起点，一个是终点）</li><li><strong>欧拉环路</strong>：途经每条边恰好 一次，起点=终点</li><li><strong>哈密顿回路</strong>（点之间只能遍历一次</li><li>四色猜想/问题（<strong>拓扑学topology</strong> 原意“地质学”）</li></ul><h3 id="图的基本结构">图的基本结构</h3><ul><li>结点/节点 vertex/node：用户 user/actor、组织、网络、各类资源item/resource（商品、电影、音乐、论文）</li><li>边 edge：有向图，入度邻居 Nin，出度邻居 Nout<ul><li>边的重数：具有相同始点和终点的边称为平⾏边，平⾏边的条数称为 边的重数</li></ul></li><li>度 degree<ul><li>度数为1的结点是悬挂结点，其关联的边是悬挂边</li><li>度数为0的结点是孤⽴点</li><li>度分布</li></ul></li><li>图的密度：实际边数与理论上最⼤的边数之⽐<ul><li>对无向图，<span class="math inline">\({L\over n(n-1)/2}\)</span></li><li>有向图，没有系数 2</li></ul></li></ul><p>一些简单的结论</p><ol type="1"><li>无向图中，所有节点的度数之和是其图中边数的两倍</li><li>无向图中，度数为奇数的节点有偶数个</li><li>有向图中，所有节点的入度和等于出度和</li></ol><h3 id="图的表示">图的表示</h3><p><strong>图的同构 graph isomorphism</strong></p><ul><li>如果图 G 中的结点集 V 与图 G’ 中的结点集 V’ 具有一一对应的关系，并且对应的边都具有相同的重数，则称 G 与 G’ 同构，记作 <span class="math inline">\(G\cong G&#39;\)</span>。</li><li>因此，两图同构必须满足下列关系：节点数、边数相同、度数相同的节点相同。（必要非充分）</li><li>判断：双射函数</li></ul><h3 id="图的类型">图的类型</h3><ul><li><p>零图 null graph：没有节点没有边</p></li><li><p>空图 empty graph：边集空，节点集可以非空——零图是空图</p></li><li><p>完全图 complete graph：任何节点之间有边</p></li><li><p>无向/有向/混合图</p></li><li><p>补图：由图G中的所有结点和构成完全图需添加的边所组成的图称为G的补 图，记作 <span class="math inline">\(\bar G\)</span></p></li><li><p>简单图：两节点间最多一条边</p></li><li><p><strong>多重图 multigraph</strong>：可以多条边</p></li><li><p>带权图/赋权图</p></li><li><p>标号图：权重用+/-或0/1等二元表示</p></li><li><p>树与森林：</p><ul><li>树是特殊的⽆无向图，没有回路</li><li>树的任意两点之间恰好有⼀一条路径</li><li>森林由多个互不相连的树组成</li></ul></li><li><p><strong>生成树 spanning tree</strong></p><ul><li>包含图中<strong>所有结点</strong>的树型子图</li><li>带权图中，权重最小的生成树为<strong>最小生成树</strong>（也可能多个）</li></ul></li><li><p><strong>斯坦纳树 steiner tree</strong></p><ul><li>对于带权图的一个结点子集 V’，包含这个子集中所有结点且权重之和最小的子树即斯坦纳树</li><li>与最小生成树的区别在于，由于关注的一个图的子集，也就意味着在所给定的节点之外<strong>利用额外的节点</strong>以减少网络的代价</li></ul></li><li><p><strong>正则图</strong>：所有结点的度数相同，k-正则图</p></li><li><p><strong>二分图/二部图</strong> <strong>bipartite graph</strong></p><ul><li>所有的结点分为两个集合，每条边的两个端点分别在这两个集合中，即同一集合的结点间没有边相连</li><li><strong>An affiliation network</strong> is a bipartite graph. If an individual is associated with an affiliation, an edge connects the corresponding nodes.</li><li>例如这样的隶属关系网络，还比如，推荐算法：找出连个兴趣相似的人，以购买的书的数量决定，在图中表现为（用户间）通路数量</li></ul></li><li><p><strong>多分图多部图</strong> <strong>multipartite graph</strong></p><p>用户-标签-电影（三类结点）</p></li></ul><h3 id="图的连通性">图的连通性</h3><ul><li>相邻节点 adjacent<ul><li>一条边联结的两个点</li></ul></li><li>相邻边 incident<ul><li>无向图：具有相同端点</li><li>有向图：一条边终止结点必须是另一条便的开始结点，即两条边方向一致</li></ul></li><li><strong>路径 path</strong><ul><li>依次遍历相邻边产⽣的<strong>结点序列</strong>称为路径</li><li><strong>简单路径</strong> path：<strong>不包含重复节点</strong>（所以也没有重复边）的路径称之为简单路径<em>（本课程重点）</em></li><li>起点和终点相同，但其他结点都不重复，且至少包含三条边的路径称之为<strong>回路/圈（cycle）</strong>，即闭合 path</li></ul></li><li>通路 walk: sequence of incident edges visited one after another<ul><li>依次遍历相邻边产生的<strong>边序列</strong>称之为通路</li><li><strong>开通路</strong> open walk：起始结点不同于终止结点</li><li><strong>闭通路</strong> closed walk：起始结点和终止结点是同⼀个结点（圈）</li><li>通路长度 length of walk：通路中遍历的边数量</li><li><strong>简单通路</strong> trail：每条边只遍历一次的通路</li><li><strong>环路</strong> tour/circuit：闭合简单通路</li></ul></li></ul><p>哈密顿回路 Hamiltonian Cycle：遍历了图中所有结点的回路</p><p>欧拉环路 Eulerian Tour：图中所有边均只被遍历⼀次，Konigsberg bridges</p><ul><li>连通性<ul><li>图中任意两个结点间存在一条路径，则为连通图</li><li>有向图中，图中任何两个结点都有路径（不考虑沿边的方向前进），则为<strong>弱连通图</strong></li><li>有向图中，考虑沿着边的方向前进，图中任何两个结点存在有向路径，则为强连通图</li></ul></li><li><strong>连通分支</strong><ul><li>若子图中任意两个结点间存在一条路径，则该子图为连通分支（连通分量）</li><li>有向图中，连通分支内任何两个结点u, v，无论是 u 到 v 还是 v 到 u，都存在有向路径连通，则为强连通分支</li></ul></li><li>最短路径<ul><li>连通图中任何两个结点之间长度最短的路径为最短路径，其长度为该两个结点间的最短距离</li><li>图中所有结点对的最短路径平均值为图的平均路径长度，或称之为<strong>特征路径长度</strong></li><li>结点 v 的 n 阶邻居（n-hop neighbor）是指所有到 v 的最短路径不大于 n 的结点</li></ul></li><li>直径<ul><li>图中任何两个结点之间最短路径的最大值为图的直径（社交，聚拢程度）</li><li>直径只定义在连通图中</li></ul></li><li>桥<ul><li>移除某条边会导致图中连通分支增加，这样的边为桥</li><li>桥是<strong>超大连通分⽀</strong>形成的关键</li></ul></li></ul><h3 id="图算法">图算法</h3><ul><li>随机游走：带权图上的</li><li>图/树遍历 Traversal：BFS、DFS</li><li>最短路径：Dijkstra 算法，针对非负带权图，建立一个优先队列</li><li>最小生成树：Prim 算法，从一个初始节点，每次在边缘中找最小的那条边</li><li>网络流算法：给定一个图 <span class="math inline">\(G(V,E,C)\)</span> 其中 C 是每条边的容量 capacity，有向，要求从 <span class="math inline">\(s\)</span> 到 <span class="math inline">\(t\)</span> 的最大流，注意其需要满足，1. 网络上的流是有方向限制的；2. 对于每个节点的流量守恒。<ul><li>Ford-Fulkerson 算法</li><li>基本思想：寻找⼀条从源点到汇点的路径，使路径中的所有 边都有未使⽤的容量，使⽤该容量（路径上所有边中未使⽤ 的最⼩容量）去增加流，不断迭代直⾄没有其他路径可⽤。</li><li>核心就是定义一个<strong>残流网络</strong>：对于某一条边 <span class="math inline">\((u,v)\)</span> 来说，若是还有剩余容量则画出 <span class="math inline">\((u,v)\)</span> 边和剩余流量；若是有流经过此边则画反向的边 <span class="math inline">\((v,u)\)</span> 权重是流过这条边的流量；注意后者是关键，对于正向流入此边的流来说，若是其他边满足条件，可以产生相反的流从而得到增量。</li></ul></li><li>二分图的最大匹配<ul><li>⽤⼆分图 G 表⽰⽤户和商品，以及他们之间的兴趣关系</li><li><strong>匹配M</strong>是 G 中边集合 E 的⼀个⼦集， 使得 G 中每个结点⾄多出现在 M 的⼀条边上（即每个⽤户⾄多买⼀个 商品/每个商品⾄多卖给⼀个⽤户）</li><li>何以在二分图的前后分别加 <span class="math inline">\(s,t\)</span> 利用最大流算法解决。</li></ul></li></ul><h2 id="网络度量">3-网络度量</h2><p>我们需要从网络中找出核心的节点。</p><h3 id="中心性度量"> 中心性度量</h3><ul><li><p>Degree centrality: ranks nodes with more connections higher in terms of centrality</p><ul><li>有向图中，可以用</li></ul><p><span class="math inline">\(C_d(v_i)=d_i^{in}\)</span> , prestige</p><p><span class="math inline">\(C_d(v_i)=d_i^{out}\)</span> , gregariousness</p><ul><li>Normalized Degree Centrality：可以用理论最大度/图中最大度/图中度之和进行归一化</li></ul></li><li><p>特征向量中心性</p><ul><li><p>Eigenvector centrality generalizes degree centrality by incorporating the importance of the neighbors (undirected) 朋友多不一定重要，要有重要的朋友才是关键</p></li><li><p>计算公式 <span class="math display">\[  C_e(v_i)={1\over \lambda}\sum_{j=1}^nA_{j,i}C_e(v_j)\\  \lambda C_e=A&#39;C_e  \]</span> 其中 A 为邻接矩阵，于是就变成了求特征向量的问题，其中 <span class="math inline">\(\lambda\)</span> 为对应的特征值</p></li></ul><p>每个节点的中心性应该都为正，而根据 Perron-Frobenius 定理，可以通过求 A 的<strong>最大特征值对应的特征向量</strong>得到</p><ul><li><img src="16092884992998.jpg" /></li></ul></li><li><p>Katz Centrality</p><ul><li><p>注意到上面的 Theo 中似乎要求是在连通图的情况下，所以特征向量中心性一般在无向图中较为稳定；而在有向图中，中心性将从有向边中流出，在一定情况下，例如图是 acyclic 的，则可能出现某一个节点有很多入边但是中心性为零的情况</p></li><li><p>在此基础上加了偏置项 <span class="math inline">\(\beta\)</span> <span class="math display">\[  C_{Kate}(v_i)=\alpha\sum_{j}A_{j,i}C_{Kate}(v_j)+\beta\\  C_{Kate}=\alpha A&#39;C_{Kate}+\beta\mathbf 1\\  C_{Kate}=\beta(\mathbf I-\alpha A&#39;)^{-1}\mathbf1  \]</span> 其中第一行加了偏置项；整体写成第二行的形式；解析解是第三行的样子，注意到涉及到矩阵求逆，而我们知道当选取 <span class="math inline">\(\alpha={1\over\lambda}\)</span> 时 <span class="math inline">\(det(I-\alpha A&#39;)=0\)</span> ，会出现问题，所以一般会取一个小一点的数值。</p></li></ul></li><li><p>PageRank 中心性</p><ul><li><p>想法是「权威的出边并不一定是权威」，因此对传递的权重进行衰减，于是有 <span class="math display">\[  C_p(v_i)=\alpha\sum_{j}A_{j,i}{C_p(v_j)\over d_j}+\beta\\  C_p=\alpha A&#39;D^{-1}C_p+\beta 1\\  C_p=\beta(I-\alpha A&#39;D^{-1})^{-1}1  \]</span></p></li><li><p>类似的，若 <span class="math inline">\(\lambda\)</span> 为 <span class="math inline">\(A&#39;D^{-1}\)</span> 的最大特征值，我们要求 <span class="math inline">\(\alpha&lt;{1\over\lambda}\)</span></p></li><li><p>当然，这和我们熟悉的 PageRank 公式不太一样，差别只是两个权重的形式，我们可以从随机浏览的角度来理解。</p></li></ul></li><li><p>Betweenness Centrality 中间/中介中心性</p><ul><li>从一个节点在网络上连接其他节点意义上的重要性 <span class="math display">\[  C_b(v_i)=\sum_{s\ne t\ne v_i}{\sigma_{st}(v_i)\over\sigma_{st}}  \]</span> 其中分母是从 <span class="math inline">\(s\)</span> 到 <span class="math inline">\(t\)</span> 的最优最短路径，分子是这些路径中经过 <span class="math inline">\(v_i\)</span> 的数量；这样定义的中心性可能对大于 1，因此需要进行归一化操作，最好情况下，对于所有的 <span class="math inline">\(s\)</span> 和 <span class="math inline">\(t\)</span> 来说分式均为 1，于是极大值为 <span class="math inline">\(2\binom{n-1}{2}=(n-1)(n-2)\)</span> 除掉即可 <span class="math display">\[  C_b^{norm}(v_i)={C_b(v_i)\over 2\binom{n-1}{2}}  \]</span></li></ul></li><li><p>Closeness Centrality 接近中心性</p><ul><li><p>想法是你距离其他节点有多远</p></li><li><p>因此，考虑公式 <span class="math display">\[  C_c(i)=1/({1\over n-1}\sum_{j\ne i}l_{i,j})  \]</span> 其中 <span class="math inline">\(l_{i,j}\)</span> 为 i 到 j 的最短路径长度</p></li><li><p>接近中心性高的节点往往是社交网络信息传播的关键人物</p></li></ul></li></ul><p><img src="16092885126882.jpg" /></p><h4 id="群体中心性">群体中心性</h4><p>基于上面的对于单个节点的中心性讨论，可以将这些概念拓展到一组结点的中心性度量</p><p><img src="16092885346405.jpg" /></p><h3 id="传递性与相互性-transitivity-and-reciprocity">传递性与相互性 Transitivity and Reciprocity</h3><h4 id="传递性">传递性</h4><p><strong>传递性和相互性用于表示社交网络总个体间的连接行为</strong>。</p><p>其中，传递性的思想是：若 BC 两人拥有一个共同的朋友 A，则 BC 之间未来成为朋友的可能性也会提高，即，我朋友的朋友也是我的朋友（考虑现实场景下的情况，可以联系到社会学、经济学的各种理论）。从网络结构的角度来看，就是容易形成紧密连接的三角形，<strong>三元闭包</strong>。</p><p>三元闭包的数量体现了图的传递性强弱，通常用 <strong>聚类/聚集系数</strong> cluster coefficient 来表示传递性。</p><p>以下定义 <strong>Global Cluster Coefficient</strong>: Count paths of length two and check whether the</p><p>third edge exists <span class="math display">\[C={|Closed\ Paths\ of \ Length\ 2|\over |Paths\ of\ Length\ 2|}, or\\C={(Number\ of\ Triangles)\times6\over |Paths\ of\ Length\ 2|}\]</span> 这里关注的是 path，因此计算起来是有方向的，更为简单的计算方法是根据 <strong>三元组</strong> Triple，即关注一组结点，没有方向，一个三角形中包含三个不同的 Triple <span class="math display">\[C={(Number\ of\ Triangles)\times3\over Number\ of\ Connected\ Triples\ of\ Nodes}\]</span> 基于上面的思想，还可以定义 <strong>Local Clustering Coefficient</strong>: Computes how strongly neighbors of a node 𝑣 (nodes adjacent to 𝑣 ) are themselves connected</p><p><span class="math display">\[C(v_i)={Number\ of\ Pairs\ of\ Nerghbors\ of\ v_i\ That\ Are\ Connected\over Number\ of\ Pairs\ of\ Neighbors\ of\ v_i}\]</span></p><p><img src="16092885481322.jpg" /></p><h4 id="相互性">相互性</h4><p>相互性是传递性在 <strong>有向图</strong> 中的简化表示。例如，在微博上好友之间的相互关注，即，如果你是我的朋友，那么我也是你的朋友。</p><p><img src="16092885600766.jpg" /></p><h3 id="结构平衡与社会地位-balance-and-status">结构平衡与社会地位 Balance and Status</h3><h4 id="结构平衡">结构平衡</h4><p><img src="16092885704457.jpg" /></p><p>结构平衡理论由 Cartwright 和 Harary(1956) 在 Heider(1946) 提出的平衡理论基础上形成的；该理论认为，由于不平衡的三角关系是心理压力和心理失调的原因，人们在人际关系总试图让他们尽量少地出现，因此在显示社交网络中，不平衡三角关系要比平衡三角关系少。</p><p><img src="16092885795202.jpg" /></p><p><img src="16092885884091.jpg" /></p><h4 id="社会地位">社会地位</h4><p><strong>Status</strong>: how prestigious an individual is ranked within a society</p><p>既然社会地位是一个 rank，其满足不等关系的传递性。例如下面的左图即不符合社会地位理论，而右图则是符合的；另外，需要注意到，虽然这里都用符号图来进行表示，但要注意 Status 图和 Balance 图之间没有什么关系。</p><p><img src="16092885980443.jpg" /></p><h3 id="相似性-similarity">相似性 Similarity</h3><p>网络节点相似性的度量有着重要的意义，</p><ul><li>可以判定/预测结点间关联的重要程度<ul><li>进行用户行为预测（第 9 章）：电影票房/产品市场预测、精准营销、个性化推荐</li><li>用户类别判定：垃圾用户识别、潜在用户预测、用户影响力估计</li></ul></li></ul><h4 id="structural-equivalence">Structural Equivalence</h4><p>在结构等价性中，We look at the neighborhood shared by two nodes; The size of this shared neighborhood defines how similar two nodes are.</p><p>下面的几个指标直接利用了节点 i 和 j 之间的共同邻居，并用不同的方式进行了归一化处理</p><p><img src="16092886135428.jpg" /></p><p>还有另外的出发点：我们计算两点之间的共同邻居的数量，与其在随机连接下的期望值之间的差距。图中共有 <span class="math inline">\(d_j\)</span> 的节点为 j 的邻居，而对于任一个结点，其与 i 的邻居的概率为 <span class="math inline">\(d_i\over n\)</span> ，于是两者的共同邻居的期望值为 <span class="math inline">\({d_id_j\over n}\)</span> ；而实际 i 与 j 的邻居数为 <span class="math inline">\(|N(v_i)\cap N(v_j)|=\sum_kA_{i,k}A_{j,k}\)</span> ，于是</p><p><img src="16092886223768.jpg" /></p><p>可以看到将 i 和 j 的连接关系表示向量看成随机变量的形式，则上面的差值可以写成两个随机变量 Covariance 的形式，进一步作归一化处理，得到 Pearson correlation coefficient</p><p><img src="16092886320482.jpg" /></p><h4 id="regular-equivalence">Regular Equivalence</h4><p>在规则等价性中，我们不再关注两节点的共同邻居数量，而关注的是 How neighborhoods themselves are similar。其显示的考量是，例如两个运动员之间可能并不认识，但事实上其存在着很高的相似性（社交圈子，相似的教练、队友、经理人、球迷），这可以体现在社会网络上。</p><p>其代表性的度量模型为 SimRank，<strong>基于邻居节点之间的相似度来递归定义两个节点的相似度</strong>；基于递归度量的代价比较高，可以做适当放宽。</p><p><img src="16092886431006.jpg" /></p><p>然后我们设法将其写成矩阵形式。这里的想法很巧妙，将求两个节点的邻居之间相似度的计算转化为了节点 j 和节点 i 的邻居之间的相似度（这样的转换是否会有一定误差？），然后就可以写成下面的矩阵形式；进一步基于相似性的意义加上一个 Identity matrix，从而得到最终的表达式。</p><p><img src="16092886550033.jpg" /></p><p>和之前在 Katz 中心性时的讨论一样，我们一般假定选取的 <span class="math inline">\(\alpha\)</span> 要小于 A 的最大特征值的倒数，从而使得该矩阵可逆。</p><h4 id="其他度量方式">其他度量方式</h4><p>课上还介绍了其他的一些度量方式，例如</p><ul><li>基于结点间路径<ul><li>Katz 度量：参考路径长度，相似度与路径长度成反比</li><li>Hitting/Commute Time：考虑一个节点随机游走到另一个节点的概率</li><li>Rooted PageRank/Personalized PageRank</li></ul></li><li><strong>基于图/网络嵌入的向量表示</strong></li></ul><h2 id="网络模型-network-models">4-网络模型 Network Models</h2><h3 id="网络属性-properties-of-real-world-networks">网络属性 Properties of Real-World Networks</h3><p>这些介绍一些能在不同的网络中使用一致方法来计算的属性，包括</p><ul><li>度分布</li><li><p>聚类系数：衡量网络的 <strong>传递性</strong></p></li><li><p>平均路径长度：衡量节点之间信息传播路径的长度 <strong>可达性</strong></p></li></ul><h4 id="度分布">度分布</h4><p>来看一些现实生活中的客观现象</p><p><img src="16092886667193.jpg" /></p><p>更为常见的表述的 <strong>帕累托法则</strong>（二八定律）；更为精确的描述则是 Power-Law Degree Distribution <strong>幂律分布</strong> ；注意到这里归一化成了概率分布的形式，因此也称之为 <strong>Zipf 分布</strong>，来源于一个语言学家对于词汇使用频率的发现。</p><p><img src="16092886773091.jpg" /></p><p>PPT 中介绍了 Zipf 分布的一些性质，在此略过。</p><p><img src="16092886863585.jpg" /></p><p>补充：符合 Zipf 分布是 <strong>无标度网络</strong> （scale-free network）的重要特征，即少数重要节点连接了很多的节点。在无标度网络中，数据存在着明显的 <strong>长尾现象</strong>。</p><h4 id="聚类系数-clustering-coefficient">聚类系数 Clustering Coefficient</h4><h4 id="平均路径长度-average-path-length">平均路径长度 Average Path Length</h4><p><img src="16092886980328.jpg" /></p><h3 id="随机图模型-random-graphs">随机图模型 Random Graphs</h3><p>即图中任意两点之间的边的产生是随机的。</p><p>具体又可分为两类</p><ul><li><span class="math inline">\(G(n,p)\)</span> 模型，假设网络中有 n 个节点，对于所有可能的 <span class="math inline">\(\binom{n}{2}\)</span> 边中，每一条边产生概率为 p</li><li><span class="math inline">\(G(n,m)\)</span> 模型，固定图的边数为 m 从所有可能的边中随机选取 m 条</li></ul><p>下面主要研究第一种情况，事实上当图较大的时候，我们可以选取 <span class="math inline">\(p={m\over \binom{n}{2}}\)</span> ，两者是类似的。</p><p>我们可以证明以下的一些性质</p><ul><li>在模型 <span class="math inline">\(G(n,p)\)</span> 中，连接到一个节点的边的期望数为 <span class="math inline">\((n-1)p\)</span> 条</li><li>整张图的期望边数为 <span class="math inline">\(\binom{n}{2}p\)</span></li><li>观察到 m 条边的概率为 <span class="math inline">\(P(|E|=m)=\binom{\binom{n}{2}}{m}p^m(1-p)^{\binom{n}{2}-m}\)</span></li></ul><p><img src="16092887198806.jpg" /></p><p>在随机图的演化过程中，有一个有趣的现象：当随机图的节点平均度数 <span class="math inline">\(c=1\)</span> 时，会有大部分的结点被连接在一起，出现 大连通分支 giant component，这时候的图直径很大，平均路径长度较长。</p><p>称之为 <strong>相变点</strong> Phase Transition: the point where diameter value starts to shrink in a random graph</p><p><img src="16092887321713.jpg" /></p><h4 id="度分布-1">度分布</h4><p>对于一个随机图来说，其每一个节点的度数的分布显示服从二项分布 <span class="math inline">\(Binom(p, n-1)\)</span> ；当 n 很大的时候，可以近似为泊松分布 <span class="math inline">\(Poisson(c), c=p(n-1)\)</span> 。</p><p>因此，随机图的度分布满足平均值为 c 的泊松分布，有明显的 <strong>尺度特征</strong>，其产生的网络 <strong>不是无标度网络</strong>。</p><p><img src="16092887418036.jpg" /></p><blockquote><p>另外，基于近似的泊松分布，PPT 中给出了「第二相变点」，即 When the graph is connected there are no nodes with degree 0 ，这里的假定是 <span class="math inline">\(P(d_v=0)=e^{-c}\le {1\over n}\)</span> ，则据此计算得到的 <span class="math inline">\(c=\ln n, p={1\over n-1}\ln n\)</span></p></blockquote><h4 id="聚类系数">聚类系数</h4><ul><li>对于随机图来说，每个结点的聚类系数为 p。</li></ul><p>可以通过条件期望公式来说明：假定其中一个节点的度数为 d，则去聚类系数为 <span class="math display">\[E(C(v)|d_v=d)={number\ of\ connected\ pairs\ of\ v&#39;s\ neighbors\over number\ of\ pairs\ of\ v&#39;s\ neighbors}={p\binom{d}{2}\over \binom{d}{2}}=p\]</span> 利用条件期望公式 <span class="math display">\[E(C(v))=E(E(C(v)|d_v))=\sum_{d=0}^{n-1}E(C(v)|d_v=d)P(d_v=d)=p\sum_{d=0}^{n-1}P(d_v=d)=p\]</span></p><ul><li>类似的，随机图的全局聚类系数也为 p</li></ul><h4 id="平均路径长度">平均路径长度</h4><ul><li>在随机图中，平均路径长度为 <span class="math inline">\(l\approx {\ln|V|\over \ln c}\)</span></li></ul><p><img src="16092887564204.jpg" /></p><p>随机图模拟现实网络的能力</p><ul><li>度分布并不遵从幂律分布</li><li>聚类系数远低于真实网络</li><li>只有平均路径长度接近真实网络</li></ul><h3 id="小世界模型-small-world-model">小世界模型 Small-World Model</h3><p>也叫做 Watts-Strogatz (WS) model，由此二人在 1998 的 Nature 上提出来</p><p><img src="16092887691825.jpg" /></p><p>模型的想法起源于 <strong>规则网/规则格</strong> ，每一个节点连接其相邻的 c 个邻居。</p><p>规则网具有 <strong>较长的平均路径长度和较大的聚类系数</strong>（均要高于真实网络）</p><ul><li>规则网中任一结点的邻居节点之间连接数量为 <span class="math inline">\({3\over8} c(c-2)\)</span> （分为左右两种情况）</li><li><p>因此，其聚类系数为 <span class="math inline">\({3(c-2)\over 4(c-1)}\approx {3\over4}\)</span></p></li><li><p>规则网的平均路径长度为 <span class="math inline">\(n\over 2c\)</span></p></li></ul><p>对规则网采用 <strong>边重连</strong> 的方法，可以让规则网逐渐过渡到随机网络。即对规则网中每一条边以概率 p 重新连接（固定其中一个端点）。若 p=0 则为完全规则网络；若 p=1 则为完全随机网络。</p><p>我们关心的是，如何选择合适的 p，使得重连后的网络能够近似真实世界的网络性质。下图绘制了聚类系数和平均路径长度在不同 p 值情况下的变化</p><p>可以看到 L 的下降比较快，我们可以选择合适的区间作为「小世界」模型，使得即能保证 L 比较小，又能维持较大的聚类系数</p><p><img src="16092887797124.jpg" /></p><p><img src="16092887909821.jpg" /></p><h3 id="优先链接模型-preferential-attachment-model">优先链接模型 Preferential Attachment Model</h3><p>Proposed by Albert-László Barabási and Réka Albert，因此也叫 BA 模型；其想法类似于经济学的 <strong>马太效应</strong>：新加入网络的节点倾向于链接网络中度数比较高的节点。其可以较好地反映现实网络中的度分布（幂律分布）。新节点连接已有网络中任一节点的概率为 <span class="math inline">\(d_j\over \sum_kd_k\)</span> 。该模型有以下性质</p><ul><li>度分布：<span class="math inline">\(P(d)={2m^2\over d^3}\)</span></li><li>聚类系数：<span class="math inline">\(C={m_0-1\over8}{(\ln t)^2\over t}\)</span></li><li>平均路径长度：<span class="math inline">\(l\sim {\ln|V|\over\ln(\ln|V|)}\)</span></li></ul><p>PA 模型的构建详见相关材料，其中 m 为期望度数。</p><p><img src="16092888016912.jpg" /></p><h3 id="马太效应">马太效应</h3><p>下面简单介绍了马太效应。1968 年 Robert K. Merton 提出这一效应来概括一种社会心理现象：「相对于那些不知名的研究者，声名显赫的科学家通常得到更多的声望，即使他们的成就是相似的，同样地，在一个项目上，声誉通常给予那些已经出名的而研究者。」</p><p>名字起源于新约圣经「马太福音」第二十五章：「凡有的，还要加给他叫他多余；没有的，连他所有的也要夺过来。」</p><p>流行度的上升，在初始阶段是比较脆弱的；一旦一开始就被充分肯定，在富者越富 the Rich-Get-Richer Effects 的推动下，其流行度可能变得更高。</p><p><img src="16092888124298.jpg" /></p><p>详见论文。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> major </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社交网络 </tag>
            
            <tag> 图 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 新解决方案：Typora+本地备份+GitHub 图床</title>
      <link href="/posts/f723941c/"/>
      <url>/posts/f723941c/</url>
      
        <content type="html"><![CDATA[<p>Typora编辑+图片本地备份+GitHub图床</p><span id="more"></span><p>回想一下自己接触 Markdown 已经有一年多了，在这段时间内也感觉到自己到前往码农的道路上飞奔着，MD 以其简洁、优雅、精准让我放弃了几乎其他所有的记录方案，成为自己的主要输出形式。</p><p>当然在这一过程中，自己也面临着一些问题，其中最主要的就是对于图片的处理，这里给出了 <strong>本地备份+GitHub 图床</strong> 的解决方案，目前来看是比较理想的，因此记录如下。其好处就是结合了本地存储不会出现图床失效、加载缓慢等问题，又能方便地上传生成网络图片链接版本方便输出到其他的平台。</p><p>另外，趁此机会总结了一下自己使用 Markdown 的场景，以及使用规范，比较个人向，若是没有兴趣的可以直接跳转到第三部分阅读。</p><h2 id="markdown-应用场景">Markdown 应用场景</h2><p>进入大学以来，事实上自己记录文字的经验完全经历一场电子化的转变。因此，首先来整理一下自己使用 Markdown 的需求：</p><p>在进入大学以前，书写问题的场景有二：1. 个人记录；2. 学习笔记。前者主要是放在一个专门的本子上，而后者的呈现形式则是各种笔记本。在当时的学习场景下，自己还没有整理、输出文字的习惯，所以出现的问题可能在于笔记很乱，零散，并且很多时候不会去看第二遍，效率低下。</p><p>而进入大学以来，使用场景主要转变为：1. 个人记录；2. 课程笔记；3. 整理输出。第一点还是没有变，不过形式是从实体✍️转为电子记录。第二点也一直在发生变化，事实上关于这个话题可以另开一篇，在此略过，不给主要的趋势还是电子化。第三点是新增加的需求，逐渐发现文字输出是对于自我认知的再整理，有助于自己对于某一事物的理解（当然也方便之后的回顾），另外也不再一味从网络上白嫖内容而更多了些内容生产的意识。</p><p>对于这三种需求，总结起来其实是一个问题：<strong>内容的输出，而我在这里的选择是全部转向 Markdown</strong>。</p><p>接下来的一个问题，自然就是软件的选择问题，在这一点上我经过了各种尝试之后，最终还是回到了 Typora 的怀抱中，满足了绝大部分的对于 Markdown 编辑器的想象，减少了工具选择的烦恼。</p><blockquote><p>此外，与输出之相关联的问题自然是 <strong>内容的输入</strong>，这里的需求问题就比较简单了：<strong>需要清晰地对于各个方面的内容分门别类，最好能统一到一个软件/生态/流程中，从而构建自己的知识体系</strong>。但是实现起来却比输出部分难了很多，自己也在不断探索中，这里涉及到的更多是软件取舍的问题，有机会另外写一篇~</p></blockquote><h2 id="markdown-使用规范">Markdown 使用规范</h2><p>相较于富文本，MD 对于标记语法完全做了减法，在保障一些必要的形式之外删去了其他所有的形式，这样带来的好处是：1. 可以让人完全沉浸在写作过程中而不需要去关注排版等细节，整个流程是连续的不会出现被打断的情况；2. 因其通用的语法而具备通用性，除了在本地编辑之外可以支持博客（例如基于 Hexo 的），并且被一些网站原生支持（例如我常用的 CNblog）。</p><p>当然，其也会带来一些不便，但就我目前的使用习惯来说都是 <strong>可以解决的</strong> ，在此总结一下使用 Markdown 书写的解决方案：</p><ul><li>语法标记的单调性：<ul><li>例如对于强调语法来说，仅支持 <em>斜体</em> 和 <strong>加粗</strong> ；初体验可能不太习惯，但使用了之后其实完全取决自己的使用习惯，养成良好的书写语法很重要，对于每一种语法需要有自己的理解；</li><li>我之前的使用其实也存在着一些问题，例如几乎不会用到 <strong>斜体</strong>（可能是我眼睛不太好？区分度有限），多用「引号」、<strong>加粗</strong>、<code>行内代码</code> 语法；</li><li>规范一下使用习惯：对于句子级别的标注来说，区分出重要程度，适度采用 <em>斜体</em> 和 <strong>加粗</strong>（虽然我还是认为中文斜体的使用并不是很舒服）；</li><li>对于字词/概念级别的标注，采用 <strong>加粗</strong> 或者是「引号」，而尽量少用 <code>行内代码</code> 显示；</li><li>行内代码的使用，应用场景应该是 代码段、标记一些符号 等时候进行使用的；</li><li>最后，在字词级别的强调、代码块的使用前后，均加上空格进行区分；</li></ul></li><li>对于表格的支持较弱<ul><li>本身就不怎么会用如 Word 的表格，操作起来很容易出现问题，可以说表格本身的复杂性就很高；</li><li>而就 MD 的简单语法来说（当然其实用的是 Typora），应付简单的表格是完全够用的（记得李如一好像在「一天世界」里讨论过中文表格/表单的问题，似乎也是认为表格很难做得好看，慎用）；</li><li>而如果有更为复杂的标记/严谨的表格需求的话，我会采用 PowerPoint 或者是 Latex 写好再截图到 MD 中；</li></ul></li><li>图片排版问题<ul><li>行间插入很符合我的使用习惯，不需要复杂的图文排版，适合大多数的场景；</li><li>偶尔需要多张图片并排的场景，如上使用 PowerPoint 排好后截图插入；</li></ul></li></ul><p>在整理这部分的时候，看到了 <a href="https://sspai.com/post/37270" class="uri">https://sspai.com/post/37270</a> 这篇文章，介绍了不同 Markdown 的语法，讲得很详细；其实自己在使用的时候用得最多的自然是原生 Markdown 语法，对于那些语法还是需要抱着审慎的态度使用的。初步看了一下这一系列的文章质量都很高，而这篇 <a href="https://sspai.com/post/37271" class="uri">https://sspai.com/post/37271</a> 提到的书写建议，对于一些基础的规范来说是很有意义的。</p><h2 id="本地备份-github-图床-解决方案">本地备份 + GitHub 图床 解决方案</h2><p>从一开始接触到 Markdown 以后，似乎没有用过多久本地存储，就直接转向图床，然而在其选择方面却是几经波折。</p><ul><li>一开始是在 macOS 上用 PicGo + GitHub 的方案，本地改名后上传，复制链接到 Typora，其面临的一个问题就是 GitHub 的链接访问有时候会出现问题，甚至需要开全局才能加载出来图片；另外上传复制链接也存在着操作上的中断；</li><li>在软件方面，后来尝试过 iPic，仅有 macOS 版本；一个更为良心的软件是 uPic，Windows 和 macOS 均提供了流畅且免费的使用体验（微信产品交流群的讨论也很棒）；</li><li>但一个问题就是图床的选择：GitHub 有上面说的一些问题，SMMS 的上传和加载太慢太慢了，新浪的似乎挂了？Gitee 挺棒的，不过有图片大小的限制（似乎是 1M）超过就无法加载；</li><li>自己对于图床的想象，自然是希望稳定性高、省心、最好能是免费的；到最后排除法下来，其实也就剩下了 GitHub，优点在于，虽然 Typora 下有时加载会有问题（不过最近没有出现过），Chrome 下是没问题的；</li></ul><p>因此，若是能够本地存储，同时快速上传到 GitHub 生成网络版本（以便发表到网络上），无疑是较为完美的方案。</p><p>以下的方案受到了 <a href="https://zhuanlan.zhihu.com/p/106836441" class="uri">https://zhuanlan.zhihu.com/p/106836441</a> 的启发，对其进行了一定的补充和说明（主要是加入了之前图片的转移）。以下是总体的思路：</p><ul><li>Github 新建图片仓库，同步到本地目录 A</li><li>Typora 中设置图片保存到 A</li><li>Python 读取Markdown文件完成图片链接替换</li></ul><p>想法就是本地建立一个图片文件夹；同步到 GitHub 上；手动修改 Markdown 文件中的图片链接生成新的网络版本。</p><p>第一步，在 GitHub 上新建一个 repository，由于此方案不需要配合图床软件，因此没有必要生成 key 等操作，简单创建一个即可；</p><p>然后 clone 到本地，我用的是 GitHub Desktop 操作简单速度也比较快，注意选取一个合适的位置，之后的所有图片均保存在此目录下；例如，假设我有一个单独的 <code>Markdown</code> 目录，repo 名为 <code>BlogImg</code> ，则我会把图片放在 <code>Markdown/BlogImg/imgs/</code> 下；</p><p>在 Typora 中进行相应的配置</p><ul><li>「插入图片」时设定路径</li><li>勾选「对本地」「对网络位置的图片应用上述规则」以自动保存网络图片</li></ul><blockquote><p>用相对位置，还是绝对位置纠结了挺久。相对位置的好处是整个 Markdown 文件夹可以整体迁移；但考虑到自己的文件管理还不够规范，可能面临文件结构调整的问题，还是选择了用绝对位置。</p></blockquote><p>图片转移的部分我放在下一节介绍。</p><p>下面是从本地上传至 GitHub，自己也是第一次接触，写得详细些，在本地文件下发生变动后，左侧会显示出具体的变化情况；若需要合并，需要在左下角填上 commit，点击下面的按钮后，左侧链表清空，但此时并未进行上传，右上方的那个 <code>Fetch origin</code> 会变成 <code>Push origin</code>，点击此完成上传。</p><p>完成上传后，核心的步骤是将本地图片版本的 Markdown 文件转为网络版本的链接形式，这里附上 <a href="https://zhuanlan.zhihu.com/p/106836441" class="uri">https://zhuanlan.zhihu.com/p/106836441</a> 中的源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"><span class="comment"># 线上线下图床位置已经确定不变</span></span><br><span class="line">path_offline = <span class="string">r&quot;E:\我的坚果云\我的坚果云\博客图床\One-click-picgo\imgs&quot;</span> + <span class="string">&#x27;\\&#x27;</span> <span class="comment"># 本地图床目录</span></span><br><span class="line">path_online = <span class="string">&quot;https://raw.githubusercontent.com/your_github_id/repo_name/master/imgs/&quot;</span> <span class="comment"># 线上图床目录</span></span><br><span class="line"></span><br><span class="line">path_out = <span class="string">&#x27;notes/&#x27;</span> <span class="comment"># 转换完成后的md文件保存路径</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(path_out):</span><br><span class="line">    os.mkdir(path_out)</span><br><span class="line"></span><br><span class="line">ap = argparse.ArgumentParser()</span><br><span class="line">ap.add_argument(<span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--path&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;the path of your md file&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    args = ap.parse_args()</span><br><span class="line">    path_md = args.path</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 被处理的md文件可以和本py文件处于同一目录，也可以处于py文件的下一级文件夹内</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;\\&#x27;</span> <span class="keyword">in</span> path_md:</span><br><span class="line">        folder, name = path_md.split(<span class="string">&#x27;\\&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        name = path_md</span><br><span class="line">    path_out_md = <span class="string">&quot;notes\\&quot;</span> + name</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;在线版markdown文件生成在目录：&quot;</span>, path_out_md)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path_md, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f: <span class="comment"># 需要手动指定解码的格式</span></span><br><span class="line">        lines = f.readlines()</span><br><span class="line"></span><br><span class="line">    out = [l.replace(path_offline, path_online) <span class="keyword">for</span> l <span class="keyword">in</span> lines]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path_out_md, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.writelines(out)</span><br></pre></td></tr></table></figure><p>放置在存储 Markdown 文件夹下，输入相应的命令即可完成转换。</p><h2 id="本地文档迁移">本地文档迁移</h2><p>上文给出的方案是默认所有的链接已经保存在了本地 Git 文件夹下的，若原本的本地保存地址并未在这一文件夹下，就涉及到 <strong>图片的转移问题</strong>，比如我用从存储 Markdown 的文件夹下的 <code>img</code> 转移到 <code>./BlogImg/imgs</code> 下.</p><p>因此，需要做的是事先转移图片，然后批量替换文本中的链接，简单写了个 Python 文件以实现：对于所需的某个文件夹下的 Markdown 文件进行遍历，修改图片链接形式，并输出到新的文件夹中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">g = os.walk(<span class="string">&quot;path_to_markdown/99-CNblog-专业笔记/&quot;</span>)       <span class="comment"># 需要遍历的文件夹</span></span><br><span class="line">new_store_location = <span class="string">&quot;path_to_markdown/BlogImg/imgs&quot;</span></span><br><span class="line">out_fold = <span class="string">&#x27;out&#x27;</span>            <span class="comment"># 输出文件夹，原本的要求是替换，不过终究还是不放心，先缓存在新的文件夹中</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> path,dir_list,file_list <span class="keyword">in</span> g:</span><br><span class="line">    <span class="keyword">for</span> file_name <span class="keyword">in</span> file_list:</span><br><span class="line">        <span class="keyword">if</span> file_name.endswith(<span class="string">&quot;.md&quot;</span>) <span class="keyword">and</span> <span class="keyword">not</span> file_name.startswith(<span class="string">&quot;.&quot;</span>):     <span class="comment"># 检测是否为 MD 内容文件</span></span><br><span class="line"></span><br><span class="line">            in_filepath = os.path.join(path, file_name)</span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(in_filepath, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                lines = f.readlines()</span><br><span class="line"></span><br><span class="line">            out_filepath = os.path.join(out_fold, file_name)</span><br><span class="line"></span><br><span class="line">            out = [l.replace(<span class="string">&quot;../img&quot;</span>, new_store_location) <span class="keyword">for</span> l <span class="keyword">in</span> lines]  <span class="comment"># 修改链接中的图片位置</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">with</span> <span class="built_in">open</span>(out_filepath, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">                f.writelines(out)</span><br></pre></td></tr></table></figure><h2 id="others">Others</h2><ul><li>另外，看到这篇大佬文： 巧用 GitHub 当图床，一键上传资源，一键获取链接地址 <a href="https://1ili.github.io/2018/04/12/upload-resource-to-github/" class="uri">https://1ili.github.io/2018/04/12/upload-resource-to-github/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 新开始</title>
      <link href="/posts/e6f44ed5/"/>
      <url>/posts/e6f44ed5/</url>
      
        <content type="html"><![CDATA[<h2 id="安装-windows">安装 Windows</h2><h3 id="微-pe-安装">微 PE 安装</h3><p>用的是微 PE，相对来说最为省心的一种安装方式了</p><ul><li>若是第一次安装建议全文阅读 <a href="http://www.wepe.com.cn/ubook/" class="uri">http://www.wepe.com.cn/ubook/</a>，没啥好说的，但若是第一次尝试的话总会心慌慌；</li></ul><h3 id="下载源版本问题">下载源&amp;版本问题</h3><p>最推荐的自然是从官网下载，不过有速度的问题；这就涉及了第三方的下载，不推荐直接从不明的百度云等渠道下载，自己在用 <a href="https://msdn.itellyou.cn/" class="uri">https://msdn.itellyou.cn/</a></p><ul><li>其实困扰最多应该是 win 的版本问题，教育版不要装了，但其他专业版或是企业版等的问题就众说纷纭了</li><li>之前用过专业版，可能是来源的问题不是很纯净，系统体验一般，例如说自带应用商店等，会带一些基本的软件，例如自带的 Onenote；</li><li>现在用的是企业版，直观感受就是很自由，然后也没有应用商店、Onenote 等，很纯净</li><li>「操作系统-Windows 10 Enterprise LTSC 2019」，选择最新的相应版本即可，我用的是 「Windows 10 Enterprise LTSC 2019 (x86) - DVD (Chinese-Simplified)」</li></ul><h3 id="关闭-windows-defender">关闭 Windows Defender</h3><p>由于某些原因，还是需要关闭 Windows Defender 的， <code>Win+R</code> 中输入 <code>gpedit.msc</code> 打开「本地组策略编辑器」，在 「计算机配置-管理模板-Windows组件-Windows Defender 防病毒程序」中（右侧）找到「关闭 Windows Defender 防病毒程序」，双击，设置为 「已启用」，确定即可。</p><h3 id="设置开机启动">设置开机启动</h3><ul><li>简言之，就是打开 <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code>，把想要的软件创建一个快捷方式即可。</li></ul><p><a href="https://jingyan.baidu.com/article/00a07f38187de382d028dce5.html">开机启动程序如何设置</a></p><ul><li><p>事实上可以设置注册表（可惜我在 Enterprise 版本中没找到 Start Menu），仅做参考</p><blockquote><p>将需要开机自动启动的软件的快捷方式粘贴到“系统启动文件夹”里，位置为 <code>C:\ProgramData\Microsoft\Windows\Start Menu\Programs\StartUp</code> 。</p></blockquote></li></ul><h3 id="uninstall-tool">Uninstall Tool</h3><ul><li>一个好用到我需要放在这一部分记录的软件，简洁、高效、干净；</li><li>Portable 版本，单独放在一个文件夹，「固定到『开始』菜单」方便使用；</li></ul><h3 id="windows-相关设置">Windows 相关设置</h3><blockquote><p>这部分不过是个人审美和习惯</p></blockquote><ul><li>关于背景，MacOS 下有一张非常爱的。<a href="https://rooteto.com/yosemite-4k-duvar-kagitlari">这里</a> 最后一张，配合 Retina 屏的质感真的很棒；不过只有 355K 的照片放在 27 寸的 4K 屏上像素不是很好，显示效果也一般，遂放弃；</li><li>触摸板：三指点击设为鼠标中键【在台式上就不存在的了】</li><li>添加 <code>This PC</code> 到桌面： <code>Settings-Personalisation-Themes-Desktop icon settings</code></li></ul><h3 id="安装-microsoft-store">安装 Microsoft Store</h3><blockquote><p>专业版在很纯净的同时，附带的一个烦恼就比如是没有应用商店；当然自己几乎也不用，但是自己日常使用频率很高一个软件就是 OneNote；当然，下面说的 Office 套餐里带有 OneNote2016，也是最后一版了（之后的全部内置到到 win10 应用商店，并且强制关联 OneDrive。</p><p>不可否认当时应用版 OneNote 的强大之处，但也带来了过于臃肿的毛病。1. 软件卡顿，使用体验不流畅；2. 比如说自己遇到很多次开启时要等很久「清理上次关闭内容」的菜单，并且往往是直接卡死；3. 界面一体化比较差，网上说是诈尸更了下黑色模式，可以自己开了之后发现仅仅是边框黑色而页面还是白色；4. 另外短暂用了一下似乎同步也不太行。</p><p>于是，最终放弃 OneNote2016 怀抱 win10 版 OneNote</p></blockquote><ul><li>可以参考这篇文章 <a href="https://www.cnblogs.com/jhxxb/p/10521496.html">Windows LTSC、LTSB、Server 安装 Windows Store 应用商店</a> ，思路就是下载安装包之后 CMD 安装；然而自己失败了，原因是这些包的名字真的傻傻分不清楚；</li><li>于是找到了下面的参考链接 <a href="https://github.com/kkkgo/LTSC-Add-MicrosoftStore">LTSC-Add-MicrosoftStore</a> ，集成了比较全面的依赖项和安装包，并且直接写了个 <code>cmd</code> 文件；运行过程中报了写错，不过发现程序部分已经找到 <code>Micorsoftt Store</code> 了，于是没有在意，成功安装；</li><li>搜索安装 OneNote 即可；最后，强迫症还是要删除 OneNote2016 的，这里又出了点波折，想看的见下面 软件部分-Office套餐；</li><li>此外，除了上面的方法，还看到了 <a href="https://pockies.github.io/2018/02/08/ltsb-install-uwp/">Windows10 LTSB/LTSC版安装应用商店与UWP</a> 这篇文章，思路是从和专业版版本号一致的普通版中爬到相关软件，之后手动安装，思路更为清晰；然而这样做的问题在于涉及反复的文件权限操作，更为复杂。</li><li>另外，关于 MicrosoftStore 下载速度很慢的问题，参考知乎的一个帖子找到了 <a href="https://www.dogfight360.com/blog/475/">UsbEAm Hosts Editor [多平台hosts修改] V3.50</a> 这个软件，不怎么会用随便试了下（因为自己也不用）；后来发现下载的速度是可以升上去的，从原来的几十 K 可以到几十 M，时间消耗最多的倒是之前的定位和检测过程，不知道是不是经过修改之后的效果。</li></ul><h2 id="网络连接-下载传输">网络连接 &amp; 下载/传输</h2><h3 id="科学上网">科学上网</h3><ul><li>SSR：可以参考这个项目 <a href="https://github.com/qingshuisiyuan/electron-ssr-backup" class="uri">https://github.com/qingshuisiyuan/electron-ssr-backup</a>；另外，今天才发现 SSR 右键-选项 是可以直接设置为「开机启动」的，不需要像上面讲到的那样自行设置了。</li></ul><h3 id="浏览器chrome">浏览器：Chrome</h3><ul><li>浏览器已经习惯了 Chrome 了（可能自己的隐私意识还没有那么强吧），直接下载安装即可，当然科学上网之后下载才比较快——以及更为重要的登录和同步。</li></ul><h4 id="关于在-win-上使用-icloud">关于在 win 上使用 iCloud</h4><p>这个问题再用了一段时间的 MBP 之后就显得有点紧迫了：苹果家的生态绑架有点可怕。</p><ul><li>少数派的 <a href="https://sspai.com/post/37126">多种方法让你在Windows上优雅的使用iCloud服务</a> 这篇文章给出了 3 年前的一个完备的解决方案，不过现在有点落伍了；</li><li>核心的解决方案就是要把网页编程独立的软件，目前的 Chrome 可以比较轻松的做到：「更多-更多工具-创建快捷方式」，具体可参见 <a href="https://zhuanlan.zhihu.com/p/59692068" class="uri">https://zhuanlan.zhihu.com/p/59692068</a></li></ul><h3 id="下载工具">下载工具</h3><ul><li>当然是 IDM 啦，win 下绝对的神器；</li></ul><h3 id="共享文件夹">共享文件夹</h3><ul><li>事实上这个折腾了挺久的，虽然之前折腾过 NAS 但似乎没啥用，发现一个比较完善的参考 <a href="https://www.jianshu.com/p/4b650b48c643">Mac OS X 访问 Windows共享文件夹</a> ；</li><li>还是挺复杂的，不过一步一步来就可以了；采用 SMB 连接；</li><li>最后一步中「一般需要输入Windows对应用户的名称和密码」，指的是 <strong>Microsoft 账户</strong>，即用户名是账号邮箱（而非电脑登录时 Administrator 和 PIN）加上密码（吐槽一下微软家的密码还必须包含大小写）；【顺带一提，若需要添加账户的话，是在「设置-账户-家庭和其他应用」中添加的 Microsoft 账户，从这一点似乎可以看出来 Win 是针对单用户而非 Linux 逻辑的？】</li></ul><h3 id="mac-远程控制-windows">Mac 远程控制 Windows</h3><p>考虑到 MBP 的便携性，之前在学校也是只带 MBP 而把 Surface 留在寝室的；考虑到买的是乞丐版 Mac，内存和硬盘的原因多需要其他电脑的配合。</p><ul><li>试过了 TeamViewer，发现更为好用的是 <code>MS Remote Desktop</code> 。（注意，这款 APP 国区没有）</li></ul><h2 id="记录markdown">记录&amp;Markdown</h2><h3 id="typorapicgo">Typora+PicGo</h3><ul><li>可以参考 <a href="https://zhuanlan.zhihu.com/p/102594554">PicGo + Gitee(码云)实现markdown图床</a> 进行配置；</li><li>Typora：最爱的 Markdown 软件了，除了文档管理外几乎满足了我对于一个个人记录软件的想象。当然需要一定的个性设置才会用的更舒服；</li><li>相关设置可以另外开一篇了，这里将现阶段对自己最重要的（也最麻烦的）部分：图片处理；</li><li>之前在这里纠结了很久走了些坎坷，总结一下。Typora 是默认支持自动上传到图床的，Mac 上有一个开源项目 uPIC，而在 Win 则是 PicGo（其实 Mac 也有之前用的就是这个，不过因为要安装 Gitee 的插件安不上所以转而用起了 uPIC；</li><li><code>设置-图像</code> 部分设置为 自动上传，在 Typora 上的部分是比较直观的，下面选择 PicGo；</li><li>然后是安装 PicGo，默认不支持 Gitee 需要需要在「插件」部分搜索 <code>gitee</code> 安装对应的两个，注意之前要装好 Node.js，上官网下载即可；这部分可能是因为网络部分不太稳定，开关机了几次还安好，相关配置可以查文档</li></ul><h3 id="截图">截图</h3><ul><li>Win 自带的 <code>Win+Shift+S</code> 超级简单好用，不过最近和上述解决方案似乎不太相容，保存什么的不太方面；</li><li>Shipaste：下载 <a href="https://zh.snipaste.com/download.html" class="uri">https://zh.snipaste.com/download.html</a></li></ul><h2 id="专业计算机">专业/计算机</h2><h3 id="sublime-text">Sublime Text</h3><ul><li>这个就不用多说了，简洁和快速而情有独钟；</li><li>另外，对其的设置也有很多的个性化，不过自己默认就差不多了；</li><li>下载 <a href="https://www.sublimetext.com/3" class="uri">https://www.sublimetext.com/3</a></li></ul><h2 id="wsl">WSL</h2><p>这是之前用 Ubuntu 作子系统的时候的摘录了，现在还是喜欢用双系统，复制如下</p><ul><li><a href="https://zhuanlan.zhihu.com/p/35735513">从安装到基本设置——Win10子系统入门简明教程</a> 简单有效的安装指南</li><li><a href="https://linux.cn/article-10972-1.html">在 Windows 中运行 Linux：WSL 2 使用入门</a></li><li><a href="http://www.githall.com/portal.php?mod=view&amp;aid=52">http://www.githall.com/portal.php?mod=view&amp;aid=52</a></li><li><a href="https://zhuanlan.zhihu.com/p/35711429">生物信息学100个基础问题 —— 番外2: 用Anaconda快速搭建生物信息学分析平台</a></li><li><a href="https://zhuanlan.zhihu.com/p/35081633">Windows subsystem for Linux(WSL) &amp; SSH</a></li></ul><h2 id="软件部分">软件部分</h2><ul><li>还有一个问题是用「安装版」还是「便携版」，两者的区别没有深究过，不过想来包括：<ul><li>便携版若需要管理员权限（例如我常用的 Everything）并且是经常要用的，那么每次使用需要进行确认，影响使用体验（所以这种情况下一般用安装版比较好）；</li><li>安装版的配置等迁移会比较麻烦，而便携版直接复制粘贴即可，对于一些配置很繁复或者经常要变动的软件来说，倾向于用便携版；</li></ul></li><li>我目前是把便携版软件都单独放在了一个文件夹中，对于一些必要的软件设置开机启动；</li></ul><h3 id="输入法">输入法</h3><p>更新：已用回原生。</p><blockquote><p>原生的输入法有着很棒的输入体验，包括：１. 响应速度；２.配色很赞．但有两个致命的问题：１. 全半角极为死板，在中文下按 <code>shift</code> 切换为英文会出现奇怪的全角英文字母，这无法忍；2. 字典和词汇学习能力极弱。</p><p>之前还倔强过一段时间Google输入法（至今仍保留着其安装包），但信仰自己也放弃了这个产品，年久失修的东西用起来毕竟有些不顺手。遂投入了搜狗的怀抱。</p></blockquote><ul><li><p>搜狗：由于一些输入习惯的原因，win 自带的这里就需要很多设置了。还是使用了搜狗，用的是微信的账号，<strong>以便同步词库和设置</strong>。</p><p>设置部分包括：<code>程序-设置-常用</code> 部分，记得设置为「半角」。Orz 看了下相较于 Mac 版本的差别有点大啊，很多功能都没有了，只好曲线救国。（由于之前设置过部分，有些遗忘，以下是并不完全罗列）</p><ul><li>考虑到搜狗在 win 版本上的状况，记得把一些无关功能<strong>全部禁用</strong>；</li><li>中英文切换还是熟悉的 <code>Shift</code> ；</li><li>居然找不到中英文之间插入空格的选项，只好手动输入，还好问题不大；</li><li>标点符号可以在「常用-标点符号-自定义标点符号」中进行设置，而且更为细化，目前配置<ul><li><code>'第一次</code> 为 <code>「</code>，<code>'第二次</code> 为 <code>」</code> ，以实现自动匹配；</li><li>左上角的那个 点号 设置为 Markdown 行内行代码符号（即英文状态下的默认输入）；</li></ul></li><li>记得<strong>把浏览器那个搜狗联想给关了</strong>，「设置-搜索」选项，或者直接在浏览器输入的时候到鼠标到下面的选框进行设置；</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> list </tag>
            
            <tag> star </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu 笔记</title>
      <link href="/posts/c9014219/"/>
      <url>/posts/c9014219/</url>
      
        <content type="html"><![CDATA[<p>2020-05-20 更新</p><p>关于如何删除双系统中的 Ubuntu，参考 <a href="https://houkaifa.com/2019/08/15/ubuntu-uninstall/">如何科学卸载 Ubuntu？</a> 。只需要用 <a href="http://www.xue51.com/soft/13219.html">EasyUEFI企业破解版 v3.2</a> 删除 Ubuntu 启动引导，之后再删除系统分区即可。</p><ol type="1"><li><a href="https://www.jianshu.com/p/4adbfd83b29f">Linux平台常用软件总结（Ubuntu版）</a></li><li><a href="https://blog.51cto.com/skypegnu1/1538371">Linux基础：利用SSH上传、下载（使用sz与rz命令）</a></li><li><a href="https://learnku.com/articles/18619">那个程序员的 Linux 常用软件清单 | Linux 工具篇</a></li><li><a href="https://www.cnblogs.com/weixuqin/p/10046465.html">Ubuntu 安装后的配置及美化（一）</a><br /></li><li><a href="https://www.cnblogs.com/weixuqin/p/10050563.html">Ubuntu 安装后的配置及美化（二）</a></li></ol><p>【这里太混乱了，主体部分是大二上 ICS 课程之后对于 Linux 心向往之开始的一些尝试，然而 Surface 上双系统使用总是体验欠佳；再之后到了大三入手 MBP，从此投入 macOS 怀抱，甚至一并丢弃了 Windows，对于 Linux 也就兴致缺缺；再到了大三下半学期由于 分布式系统 课程的需要又简单安装了 Ubuntu，就是下面这一部分的记录，所以思路应该要稍微清晰些；但总体上文章一片混乱，留待日后整理吧~】</p><h2 id="软件安装-基本配置">软件安装 &amp; 基本配置</h2><p>由于课程需要，重新安装一次双系统，因此重新记录一下 Ubuntu 的配置方案。</p><ul><li><p>总体的思路是按照林子雨的教程安装 Linux 进一步配置 Hadoop <a href="http://dblab.xmu.edu.cn/blog/285/" class="uri">http://dblab.xmu.edu.cn/blog/285/</a>。</p></li><li><p>制作启动盘</p></li></ul><p>参考 <a href="https://jingyan.baidu.com/article/59703552e0a6e18fc007409f.html" class="uri">https://jingyan.baidu.com/article/59703552e0a6e18fc007409f.html</a>，选择 UltraISO 进行写入，选择「便捷启动--MBR--USB-HDD+」，接着写入即可。</p><blockquote><p>关于 BIOS 和 UEFI 的区别，可以参考 <a href="https://zhuanlan.zhihu.com/p/31365115" class="uri">https://zhuanlan.zhihu.com/p/31365115</a></p></blockquote><ul><li>安装系统</li></ul><p>接着是安装双系统，也没什么好说的。林子雨给的推荐是 <a href="https://jingyan.baidu.com/article/dca1fa6fa3b905f1a44052bd.html" class="uri">https://jingyan.baidu.com/article/dca1fa6fa3b905f1a44052bd.html</a>。不过略有出入，首先 Surface 进入 BIOS 的方式是关机后同时按「电源+音量加」；由于其特殊性，引导的选择使用触屏，选择从 U 盘启动，然后「左滑」即可。</p><p>另外，安装的时候<strong>断网</strong>是常识，不然因为源的问题会非常慢；如果不小心连接了网络，可以在安装一些软件的时候选择跳过。</p><p>这样的话，安装就比较迅速，十分钟左右就可以搞定。</p><ul><li>修改源</li></ul><p>也是必备的步骤了，<a href="https://www.linuxidc.com/Linux/2018-08/153709.htm" class="uri">https://www.linuxidc.com/Linux/2018-08/153709.htm</a>。<code>sudo gedit /etc/apt/sources.list</code>，可以备份也可以直接修改，之后<code>sudo apt-get update</code>更新即可，似乎不需要 upgrade（以免更新）。</p><ul><li>安装输入法</li></ul><p>原本如果是英文系统的话还需要安装搜狗，参考 <a href="https://www.bilibili.com/video/av18528447?from=search&amp;seid=7231170107038547679">here</a></p><p>然而，如果选择了中文版，你会发现居然自带的输入法可以用，有点良心。</p><ul><li>关于系统更新</li></ul><p>血泪教训，<strong>没事儿别乱更新系统</strong>，容易出现各种各样的问题：如因为显卡驱动的问题无法进入桌面、联网失败等。</p><ul><li>Linux将中文目录名改为英文</li></ul><p>两种方案，其一是从系统语言开始</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.修改系统当前语言环境</span></span><br><span class="line"><span class="built_in">export</span> LANG=en_US</span><br><span class="line"><span class="comment">#2.更新家目录的文件命名</span></span><br><span class="line">xdg-user-dirs-gtk-update</span><br><span class="line"><span class="comment">#跳出对话框，提示是否更新成英文，同意即可</span></span><br><span class="line"><span class="comment">#3.修改系统当前语言环境为中文</span></span><br><span class="line"><span class="built_in">export</span> LANG=zh_CN.UTF-8</span><br></pre></td></tr></table></figure><p>其二是修改系统配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#1.当前用户的家目录配置文件位置：</span></span><br><span class="line">vim ~/.config/user-dirs.dirs</span><br><span class="line"><span class="comment">#2.打开看一下应该就知道如何修改了，关键的一点是：先把中文目录重命名，在去user-dirs.dirs相应的信息</span></span><br></pre></td></tr></table></figure><ul><li>时间不一致</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先在ubuntu下更新一下时间，确保时间无误：(可选)</span></span><br><span class="line">sudo apt-get install ntpdate</span><br><span class="line">sudo ntpdate time.windows.com</span><br><span class="line"><span class="comment"># 然后将时间更新到硬件上：</span></span><br><span class="line">sudo hwclock --localtime --systohc</span><br></pre></td></tr></table></figure><p>重新到 win 即可。</p><ul><li>七七八八<ul><li>关于蓝牙：不知道为什么连接 DesignerMouse 出现了问题，遂放弃。</li><li>触摸板方向：设置--鼠标和触摸板--自然式滚动(N)</li><li>截图：<a href="https://jingyan.baidu.com/article/4853e1e5756b681909f726e2.html" class="uri">https://jingyan.baidu.com/article/4853e1e5756b681909f726e2.html</a> ；事实上我只用到<strong>「Shift+PrtScn」</strong>选取截图。</li></ul></li><li>SSR</li></ul><p><a href="https://github.com/qingshuisiyuan/electron-ssr-backup" class="uri">https://github.com/qingshuisiyuan/electron-ssr-backup</a>。按照指南顺利安装，不过启动之后出现了 1080 端口被占用的情况，「配置--通用设置--本地监听端口」修改一下即可（当然还可以「配置--打开配置文件」用 Gedit 编辑 gui-config.json，将「localPort」修改即可）。</p><ul><li>Markdown：Typora</li></ul><p>Typora 全平台，到 <a href="https://typora.io/#linux" class="uri">https://typora.io/#linux</a> 按照相应代码添加 repository，之后用 apt 安装即可。</p><ul><li>文件传输：Telegram</li></ul><p><a href="https://www.linuxdashen.com/2种方法在debian8系统上安装telegram即时聊天工具">安装指南</a> 注意在登录需要设置 Proxy，采用 SOCK5 127.0.0.1:1080 端口号可在 SSR 中自行设置。</p><ul><li>快捷键</li></ul><p><code>win + a</code>：不同于<code>win</code>打开默认进行搜索，这个组合键打开第二个<strong>软件菜单</strong>方便找到不常用的软件。</p><h2 id="查看软件安装目录及版本">查看软件安装目录及版本</h2><p>1.查询版本 1)aptitude show 软件名 例如：aptitude show kde-runtime</p><p>2)dpkg -l软件名 例如：dpkg -l gedit</p><p>2.查询安装路径 1)dpkg -L 软件名 例如：dpkg -L gedit</p><p>2)whereis 软件名 例如：whereis gedit</p><h2 id="chmod-修改权限">chmod 修改权限</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod -（代表类型）×××（所有者）×××（组用户）×××（其他用户）</span><br><span class="line">sudo chmod 600 ××× （只有所有者有读和写的权限）</span><br><span class="line">sudo chmod 644 ××× （所有者有读和写的权限，组用户只有读的权限）</span><br><span class="line">sudo chmod 700 ××× （只有所有者有读和写以及执行的权限）</span><br><span class="line">sudo chmod 666 ××× （每个人都有读和写的权限）</span><br><span class="line">sudo chmod 777 ××× （每个人都有读和写以及执行的权限）</span><br></pre></td></tr></table></figure><h2 id="dpkg-安装-deb-包">dpkg 安装 <code>deb</code> 包</h2><h3 id="安装">安装</h3><p>Ubuntu软件包格式为deb，安装方法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i package.deb 安装包</span><br><span class="line">dpkg -r package 删除包</span><br><span class="line">dpkg -P package 删除包（包括配置文件）</span><br><span class="line">dpkg -L package 列出与该包关联的文件</span><br><span class="line">dpkg -l package 显示该包的版本</span><br><span class="line">dpkg –unpack package.deb 解开 deb 包的内容</span><br><span class="line">dpkg -S keyword 搜索所属的包内容</span><br><span class="line">dpkg -l 列出当前已安装的包</span><br><span class="line">dpkg -c package.deb 列出 deb 包的内容</span><br><span class="line">dpkg –configure package 配置包</span><br></pre></td></tr></table></figure><p>根据Ubuntu中文论坛上介绍，使用apt-get方法安装的软件，所有下载的deb包都缓存到了 <code>/var/cache/apt/archives</code> 目录下了，所以可以把常用的deb包备份出来，甚至做成ISO工具包、刻盘，以后安装Ubuntu时就可以在没有网络环境的情况下进行了</p><h2 id="apt-get-apt-管理包">apt-get apt 管理包</h2><p>另参见apt使用参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">apt-cache search <span class="comment"># ------(package 搜索包) </span></span><br><span class="line">apt-cache show <span class="comment">#------(package 获取包的相关信息，如说明、大小、版本等) </span></span><br><span class="line">sudo apt-get install <span class="comment"># ------(package 安装包) </span></span><br><span class="line">sudo apt-get install <span class="comment"># -----(package - - reinstall 重新安装包) </span></span><br><span class="line">sudo apt-get -f install <span class="comment"># -----(强制安装?#&quot;-f = --fix-missing&quot;当是修复安装吧...) </span></span><br><span class="line">sudo apt-get remove <span class="comment">#-----(package 删除包) </span></span><br><span class="line">sudo apt-get remove - - purge <span class="comment"># ------(package 删除包，包括删除配置文件等) </span></span><br><span class="line">sudo apt-get autoremove --purge <span class="comment"># ----(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）) </span></span><br><span class="line">sudo apt-get update <span class="comment">#------更新源 </span></span><br><span class="line">sudo apt-get upgrade <span class="comment">#------更新已安装的包 </span></span><br><span class="line">sudo apt-get dist-upgrade <span class="comment"># ---------升级系统 </span></span><br><span class="line">sudo apt-get dselect-upgrade <span class="comment">#------使用 dselect 升级 </span></span><br><span class="line">apt-cache depends <span class="comment">#-------(package 了解使用依赖) </span></span><br><span class="line">apt-cache rdepends <span class="comment"># ------(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧...) </span></span><br><span class="line">sudo apt-get build-dep <span class="comment"># ------(package 安装相关的编译环境) </span></span><br><span class="line">apt-get <span class="built_in">source</span> <span class="comment">#------(package 下载该包的源代码) </span></span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean <span class="comment"># --------清理下载文件的存档 &amp;&amp; 只清理过时的包 </span></span><br><span class="line">sudo apt-get check <span class="comment">#-------检查是否有损坏的依赖 </span></span><br></pre></td></tr></table></figure><h3 id="卸载">卸载</h3><p><strong>浏览已安装的程序</strong> 要查看已安装的软件包列表，请输入以下命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg --list</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get --purge remove &lt;programname&gt;  <span class="comment"># 卸载程序和所有配置文件</span></span><br><span class="line">sudo apt-get remove &lt;programname&gt;          <span class="comment"># 如果你移除程序但保留配置文件</span></span><br></pre></td></tr></table></figure><h2 id="软件整理">软件整理</h2><p>from <a href="https://github.com/alicfeng/note/blob/master/Linux/%E9%82%A3%E4%B8%AA%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84Linux%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E6%B8%85%E5%8D%95.md">那个程序员的 Linux 常用软件清单</a></p><h3 id="日常工具">日常工具</h3><h4 id="gparted">1.3、Gparted</h4><p><a href="http://gparted.org/">GParted</a> 是一个分区工具，它可以用于创建、删除、移动分区，调整分区大小，检查、复制分区等操作。可以用于调整分区以安装新操作系统、备份特定分区到另一块硬盘等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gparted -y</span><br></pre></td></tr></table></figure><h4 id="filezilla">1.5、FileZilla</h4><p><a href="https://filezilla-project.org/">FileZilla</a> 是一个免费开源的 FTP 软件，分为客户端版本和服务器版本，具备所有的 FTP 软件功能。可控性、有条理的界面和管理多站点的简化方式使得 Filezilla 客户端版成为一个方便高效的 FTP 客户端工具。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install filezilla</span><br></pre></td></tr></table></figure><h4 id="vlc">1.9、VLC</h4><p><a href="http://www.videolan.org/">VLC</a> 是一款自由、开源的跨平台多媒体播放器及框架，可播放大多数多媒体文件，以及 DVD、音频 CD、VCD 及各类流媒体协议。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vlc -y</span><br></pre></td></tr></table></figure><blockquote><p>附带暗转媒体解码框架</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-add-repository ppa:mc3man/trusty-media</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install Ubuntu-restricted-extras ffmpeg gstreamer0.<span class="number">10</span>-plugins-ugly libavcodec-extra-<span class="number">54</span> libvdpau-va-gl1 libmad0 mpg321 gstreamer1.<span class="number">0</span>-libav</span><br></pre></td></tr></table></figure><h4 id="gedit">1.16、gedit</h4><p><a href="https://gedit.en.softonic.com/">gedit</a> 是一个基于 GNOME 桌面环境下兼容 UTF-8 的文本编辑器。它使用 GTK + 编写而成，因此它十分的简单易用，有良好的语法高亮，对中文支持很好，支持包括 gb2312、gbk 在内的多种字符编码。甚至你可以配置成用于开发的 IDEA，我才不折腾这个呢。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gedit</span><br></pre></td></tr></table></figure><p>我还是经常习惯使用 ElementaryOS 自带的 scratch-text-editor 编辑器，不过它在 ElementaryOS 中使用搜狗输入法有一个 bug：就是在非 root 下不能输入中文。 解决方案：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#将原来的</span></span><br><span class="line">Exec=scratch-text-editor %U</span><br><span class="line">X-GNOME-Gettext-Domain=scratch-text-editor</span><br><span class="line"><span class="comment">#改成如下</span></span><br><span class="line">Exec=env GTK_IM_MODULE=xim scratch-text-editor %U</span><br><span class="line">X-GNOME-Gettext-Domain=env GTK_IM_MODULE=xim scratch-text-editor</span><br></pre></td></tr></table></figure><h4 id="shadowsocks-qt5">1.18、Shadowsocks-qt5</h4><p><a href="https://github.com/shadowsocks/shadowsocks-qt5">Shadowsocks-qt5</a> 是一个科学上网利器工具。在天朝莫谈国情，说说 Shadowsocks 原理就好，它是将原来 ssh 创建的 Socks5 协议拆开成 Server 端和 Client 端，两个端分别安装在境外服务器和境内设备上。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:hzwhuang/ss-qt5</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install shadowsocks-qt5 -y</span><br></pre></td></tr></table></figure><h4 id="transmission">1.23、 Transmission</h4><p>Transmission 是一个 BitTorrent 客户端软件，它支持速度限制、制作种子、远程控制、磁力链接、数据加密、损坏修复、数据来源交换等功能。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install transmission</span><br></pre></td></tr></table></figure><h4 id="thunderbird">1.24、 thunderbird</h4><p>thunderbird 是又是一个简洁易用的邮箱客户端。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install thunderbird</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE</span><br><span class="line">sudo add-apt-repository <span class="string">&#x27;deb https://typora.io linux/&#x27;</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install typora</span><br></pre></td></tr></table></figure><h2 id="ubuntu-安装后的配置及美化">Ubuntu 安装后的配置及美化</h2><h3 id="更新为阿里云">1. 更新为阿里云</h3><p><code>软件和更新</code> 更新源为阿里云的源，在 <code>其他软件</code> 中将 <code>Canonical合作伙伴</code> 勾选。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><h3 id="安装搜狗输入法">2. 安装搜狗输入法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install fcitx-bin       <span class="comment"># 安装fcitx-bin</span></span><br><span class="line">sudo apt-get update --fix-missing    <span class="comment"># 如果安装失败，执行修复命令</span></span><br><span class="line">sudo apt-get install fcitx-bin       <span class="comment"># 失败后执行，重新安装fcitx-bin</span></span><br><span class="line">sudo apt-get install fcitx-table     <span class="comment"># 安装fctix-table</span></span><br></pre></td></tr></table></figure><p>然后在 <a href="https://pinyin.sogou.com/linux/?r=pinyin">搜狗输入法Linux官网</a> 下载 64位程序，解压并移动到当前目录下，执行如下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i sogoupinyin*.deb   <span class="comment"># 安装搜狗拼音</span></span><br><span class="line">sudo apt-get install -f         <span class="comment"># 如果安装失败，执行此指令修复</span></span><br><span class="line">sudo dpkg -i sogoupinyin*.deb   <span class="comment"># 重新安装搜狗拼音</span></span><br></pre></td></tr></table></figure><p>然后重启。</p><p>重启后我们打开 <strong>设置</strong> ，选择 <strong>区域和语言</strong> ，点击 <strong>管理已安装的语言</strong> , 将键盘输入法系统改为 <strong>fcitx</strong> , 然后选择 <strong>应用到整个系统</strong> 。</p><p>然后再在应用程序中找到 <strong>Fcitx Configure</strong> ，将搜狗拼音添加到输入法中。</p><h3 id="安装wps">3.安装WPS</h3><p>虽然ubuntu也有自带的 offfice 工具，但我个人用不习惯，还是WPS舒服一些。</p><p>首先先卸载 自带的 <strong>LibreOffice</strong></p><p>终端中输入命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge libreoffice?</span><br></pre></td></tr></table></figure><p>不要漏掉通配符 "?"，否则无法清除/卸载全部 LibreOffice 软件包。</p><p>安装 <strong>WPS</strong></p><p>进入 <a href="http://www.wps.cn/product/wpslinux/">WPS_Linux官网</a> ，下载 deb 文件。</p><p>移动到下载 deb 的目录下，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i wps*.deb</span><br></pre></td></tr></table></figure><p>如果报错或者没有安装成功，我们执行下列执行修复并安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -f</span><br><span class="line">sudo dpkg -i wps*.deb</span><br></pre></td></tr></table></figure><p>至此， wps已经安装成功。由于 Linux 版权原因，安装好的 WPS 我们还需要安装字体文件才能使用。下载 <a href="https://pan.baidu.com/s/1Zkcm1Ttss4x6LjYqLQOF_A">wps字体</a> ，解压后移动到当前目录执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/share/fonts/WPS-Fonts   <span class="comment"># 新建wps字体存储文件</span></span><br><span class="line"><span class="built_in">cd</span> ~/Downloads                          <span class="comment"># 进入下载好的字体目录</span></span><br><span class="line">sudo apt-get install unzip              <span class="comment"># 安装zip解压软件</span></span><br><span class="line">sudo unzip wps_symbol_fonts.zip -d /usr/share/fonts/WPS-Fonts/  <span class="comment">#解压字体到指定文件夹</span></span><br><span class="line">sudo mkfontscale                        <span class="comment"># 生成字体索引</span></span><br><span class="line">sudo mkfontdir                          <span class="comment"># 生成字体索引</span></span><br><span class="line">sudo fc-cache                           <span class="comment"># 更新字体缓存</span></span><br></pre></td></tr></table></figure><h3 id="截图软件-shutter">4.截图软件 Shutter</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install shutter</span><br></pre></td></tr></table></figure><p>或者可以直接在ubuntu软件市场中搜索 shutter安装。</p><p>但是安装完成后打开shuter，发现编辑按钮是灰色的，是由于缺失一些包。</p><p>下载下列中的包：</p><ul><li><a href="https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas-common_1.0.0-1_all.deb">libgocanvas-common</a></li><li><a href="https://launchpad.net/ubuntu/+archive/primary/+files/libgoocanvas3_1.0.0-1_amd64.deb">libgoocanvas3</a></li><li><a href="https://launchpad.net/ubuntu/+archive/primary/+files/libgoo-canvas-perl_0.06-2ubuntu3_amd64.deb">libgoo-canvas-perl</a></li></ul><p>执行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i libgoocanvas-common*.deb</span><br><span class="line">sudo dpkg -i libgoocanvas3*.deb</span><br><span class="line">sudo dpkg -i libgoo-canvas-perl*deb</span><br></pre></td></tr></table></figure><h3 id="视频和音频">5.视频和音频</h3><p>安装VLC视频播放器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install vlc browser-plugin-vlc</span><br></pre></td></tr></table></figure><h3 id="安装-chrome">6.安装 Chrome</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - https://raw.githubusercontent.com/longhr/ubuntu1604hub/master/linux_signing_key.pub | sudo apt-key add</span><br><span class="line">sudo sh -c <span class="string">&#x27;echo &quot;deb [ arch=amd64 ] http://dl.google.com/linux/chrome/deb/ stable main&quot; &gt;&gt; /etc/apt/sources.list.d/google-chrome.list&#x27;</span></span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install google-chrome-stable</span><br></pre></td></tr></table></figure><h2 id="美化参考">美化参考</h2><ol type="1"><li><a href="https://blog.diqigan.cn/posts/ubuntu-18-10-beautify.html">Ubuntu 18.10 美化</a></li><li><a href="https://zhuanlan.zhihu.com/p/37314255">Ubuntu 18.04 LTS 安装、美化</a></li><li><a href="https://www.cnblogs.com/feipeng8848/p/8970556.html">给Ubuntu18.04(18.10)安装mac os主题</a></li></ol><h2 id="快捷键">快捷键</h2><ol type="1"><li><a href="https://zhuanlan.zhihu.com/p/32878307">最全整理 | 121个Ubuntu终端常用快捷键</a></li></ol><h3 id="terminal">Terminal</h3><p><code>CTRL+ALT+T</code>：打开终端</p><p><code>CRTL+SHIFT+V</code>：粘贴</p><h3 id="desktop">Desktop</h3><ol type="1"><li><code>Alt+F2</code> : Run console</li><li><code>Super</code> : Opens Activities search</li><li><code>Super+L</code> or <code>Ctrl+Alt+L</code> : Locks the screen</li><li><code>Super+D</code> or <code>Ctrl+Alt+D</code> : Show desktop 显示桌面、隐藏桌面</li><li><code>Super+A</code> : Shows the application menu</li><li><code>Super+Tab</code> or <code>Alt+Tab</code> : Switch between running applications</li><li><code>Super+Arrow</code> : Snap windows</li><li><code>Super+M</code> : Toggle notification tray</li><li><code>Super+Space</code> : Change input keyboard (for multilingual setup)</li><li><code>Ctrl+Alt+arrow</code> : Move between workspaces 切换工作区</li><li><code>ALT+F4</code> : 关闭窗口</li></ol><h3 id="chrome">Chrome</h3><p><code>Ctrl + +/-</code>：放大/缩小</p><h3 id="file">File</h3><ol type="1"><li><code>Super+F</code>：打开主文件夹</li><li><code>Space</code>：预览</li><li><code>Shift_Ctrl+N</code>：创建新文件夹</li></ol><h2 id="rhythmbox">Rhythmbox</h2><p><a href="https://wiki.ubuntu.org.cn/Rhythmbox">Rhythmbox</a></p><h2 id="一些小问题">一些小问题</h2><h3 id="解决windows10与ubuntu16.04双系统时间不一样问题">解决Windows10与Ubuntu16.04双系统时间不一样问题</h3><p>UTC即Universal Time Coordinated，协调世界时（世界统一时间）</p><p>GMT 即Greenwich Mean Time，格林尼治平时</p><p>Windows 与 Mac/Linux 看待系统硬件时间的方式是不一样的：Windows把计算机硬件时间当作本地时间(local time)，所以在Windows系统中显示的时间跟BIOS中显示的时间是一样的。Linux/Unix/Mac把计算机硬件时间当作 UTC， 所以在Linux/Unix/Mac系统启动后在该时间的基础上，加上电脑设置的时区数（ 比如我们在中国，它就加上“8” ），因此，Linux/Unix/Mac系统中显示的时间总是比Windows系统中显示的时间快8个小时。所以，当你在Linux/Unix/Mac系统中，把系统现实的时间设置正确后，其实计算机硬件时间是在这个时间上减去8小时，所以当你切换成Windows系统后，会发现时间慢了8小时。就是这样个原因。</p><p>第一种解决方法：</p><p>在Ubuntu中把计算机硬件时间改成系统显示的时间，即禁用Ubuntu的UTC：（需要重启）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">timedatectl set-local-rtc 1 –adjust-system-clock</span><br></pre></td></tr></table></figure><p>提示： 在 Ubuntu 16.04 版本以前，关闭UTC的方法是编辑/etc/default/rcS，将UTC=yes改成UTC=no， 但在Ubuntu 16.04使用systemd启动之后，时间改成了由timedatectl来管理</p><p>第二种解决方法：</p><p>修改 Windows对硬件时间的对待方式，让 Windows把硬件时间当作UTC：（需要重启）</p><p>在命令提示符下输入：</p><p>Reg add HKLM/v RealTimeIsUniversal /t REG_DWORD /d 1</p><p>提示 : 命令提示符需要管理员权限，所以需要在管理员权限的命令提示符下执行命令。</p><h3 id="ubuntu一般软件安装在什么目录">ubuntu一般软件安装在什么目录</h3><p>一般的deb包（包括新立得或者apt-get下载的）都在 <code>/usr/share</code> 。自己下载的压缩包或者编译的包，有些可以选择安装目录，一般放在 <code>/usr/local/</code> ，也有在 <code>/opt</code> 的。</p><h3 id="surface-等部分电脑安装后wifi无法连接的问题">Surface 等部分电脑安装后WIFI无法连接的问题</h3><p>Reference: <a href="https://askubuntu.com/questions/85214/how-can-i-prevent-iwconfig-power-management-from-being-turned-on">How can I prevent iwconfig power management from being turned on?</a></p><p>Type <code>iwconfig</code> and look at the output. You should see the name of your chip-set as well as the whether power management is off or on. If it doesn't say, it is probably off.</p><p>To turn off power management, go to <code>/etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</code> and you will see</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[connection]</span></span><br><span class="line"><span class="attr">wifi.powersave</span> = <span class="number">3</span></span><br></pre></td></tr></table></figure><p>Change the <code>3</code> to a <code>2</code> and reboot.</p><p>Then run <code>iwconfig</code> and if it worked you should see <code>Power Management:off</code>.</p><h3 id="linux-desktop下文件管理中导航文件夹设置">Linux Desktop下文件管理中导航文件夹设置</h3><p>问题是这些导航的文件夹的路径可以更改么？ 答案是：可以的。 配置文件在</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">home/.config/user-dirs.dir1</span><br></pre></td></tr></table></figure><p>配置后重启即可。</p><h3 id="搜狗拼音输入法候选栏无法显示中文英文乱码删除配置文件">搜狗拼音输入法候选栏无法显示中文（英文乱码）（删除配置文件）</h3><p>输入中文时，若候选栏显示英文乱码、无法显示中文，如下图所示，可按如下方式处理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/.config</span><br><span class="line">rm -rf SogouPY* sogou*12</span><br></pre></td></tr></table></figure><p>然后注销重新登录即可。</p><h3 id="修改host">修改HOST</h3><p>修改完之后要重启网络。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> list </tag>
            
            <tag> star </tag>
            
            <tag> Ubuntu </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论基础（四）随机变量的数学特征</title>
      <link href="/posts/cbde0a5/"/>
      <url>/posts/cbde0a5/</url>
      
        <content type="html"><![CDATA[<blockquote><p>心血来潮填了好久之前埋下的坑，虽然感觉还是有点潦草；不过反正这些东西日常也是会用到的，之后及时更新吧~</p></blockquote><p>这部分内容包括</p><ul><li>数学期望</li><li>方差<ul><li>Markov 不等式</li></ul></li><li>协方差和相关系数<ul><li>协方差阵</li></ul></li></ul><h2 id="随机变量的数学期望">随机变量的数学期望</h2><blockquote><p>这里仅仅给出一些定义、常用的性质的介绍；在实际应用中，更为常用的是各中分布，要记住它们的分布、期望、方差等性质，更重要的是会推导的过程；在此不列出，在下面的链接中给出了较为全面的推导：<a href="https://blog.csdn.net/STcyclone/article/details/84310450#_8">常用概率分布的矩母函数、特征函数以及期望、方差的推导</a></p></blockquote><p>一元情况下略，注意按照定义期望存在需要满足绝对可积，是为了保障期望这个积分有明确的数学意义。下面仅给出随机向量的数学期望：</p><p><strong>定理</strong>：设 <span class="math inline">\(X=(X_1,...X_n)\)</span> 是随机向量，若 X 有联合 pdf，以及实函数 <span class="math inline">\(g(X)\)</span> 使得 <span class="math display">\[\int_{\mathbb{R}^n}|g(\mathbf x)|f(\mathbf x)d\mathbf x&lt;\infty\]</span> 则 <span class="math inline">\(Y=g(\mathbf x)\)</span> 有数学期望 <span class="math display">\[E(Y)=\int_{\mathbb{R}^n}g(\mathbf x)f(\mathbf x)d\mathbf x&lt;\infty\]</span> 离散情况下有类似的表达。</p><p>数学期望有性质：</p><ul><li><p><span class="math inline">\(EX\)</span> 有限的充分必要条件是 <span class="math inline">\(E|X|&lt;\infty\)</span></p></li><li><p>设 <span class="math inline">\(E|X_j|&lt;\infty\)</span> 则<strong>随机向量的线性组合/乘积的期望为对应的期望的线性组合/乘积</strong>。 另外，若 <span class="math inline">\(X_1\le X_2\)</span> 则 <span class="math inline">\(EX_1\le EX_2\)</span> 。可以通过简单的定义（积分）证明。</p></li></ul><p>e.g. （<strong>以概率 1 发生</strong>）证明 <span class="math inline">\(E|X|=0\)</span> 的充分必要条件为 <span class="math display">\[P(X=0)=1\tag{1.1}\]</span> 充分性是显然的，下证必要性：用 <span class="math inline">\(I_{\{n|X|&gt;1\}}\)</span> 表示事件 <span class="math inline">\(\{n|X|&gt;1\}\)</span> 的<strong>示性函数</strong>，根据上面的性质，有 <span class="math display">\[P(|X|&gt;1/n)=P(n|X|&gt;1)=E(I_{\{n|X|&gt;1\}})\\\le E(n|X|I_{\{n|X|&gt;1\}})\le n|X|=0\]</span> 其中，利用示性函数将一个事件的概率转化为期望；第一个不等式成立是因为当示性函数取 1 时 <span class="math inline">\(n|X|&gt;1\)</span> ；第二个不等式成立是根据示性函数的性质。因此，由概率的连续性得到 <span class="math display">\[P(|X|&gt;0)=P(\cup_{n=1}^\infty \{|X|&lt;1/n\})=\lim_{n\rightarrow\infty}P(|X|&lt;1/n)=0\]</span> 即 <span class="math inline">\(P(|X|=0)=1\)</span>。</p><ul><li>当 <span class="math inline">\(P(X = 0) = 1\)</span>, 我们称 <span class="math inline">\(X = 0\)</span> 以概率 1 发生, 记做 <span class="math inline">\(X = 0, wp1\)</span>. 这 里 wp1. 表示 with probability 1.</li><li>完全类似地, 我们把 <span class="math inline">\(P(X ≤ Y ) = 1\)</span> 记做 <span class="math inline">\(X ≤ Y , wp1\)</span>.</li><li>以概率 1 发生又称作几乎处处或几乎必然 (almost surely) 发生, 用 <span class="math inline">\(a.s.\)</span> 表示.</li></ul><h2 id="随机变量的方差">随机变量的方差</h2><p><strong>定义</strong>： 若果随机变量 X 的期望 <span class="math inline">\(\mu=EX\)</span> 有限，就称 <span class="math inline">\(E(X-\mu)^2\)</span> 为 X 的方差。</p><p>性质：</p><ul><li><span class="math inline">\(Var(a + bX) = b^2 Var(X)\)</span></li><li><span class="math inline">\(Var(X) = E(X − \mu)^2 &lt; E(X − c) ^2\)</span> , 只要 <span class="math inline">\(c ≠ \mu\)</span> （说明随机变量 X 在均方误差意义下距离 <span class="math inline">\(\mu\)</span> 最近）</li><li><span class="math inline">\(Var(X) = 0\)</span> 的<strong>充分必要条件</strong>是 <span class="math inline">\(P(X = \mu) = 1\)</span> （根据上一节中的例子）</li><li><span class="math inline">\(Var(\sum_{ j=1}^n X_j ) =\sum_{i=1}^n\sum_ {j=1}^n [E(X_i X_j ) − \mu_i \mu_j ]\)</span></li><li>当 <span class="math inline">\(X_1 , X_2 , · · · , X_n\)</span> 相互独立, <span class="math inline">\(Var( \sum_{j=1}^n X_j ) = \sum_{j=1}^n Var(X j )\)</span></li></ul><h3 id="markov-不等式">Markov 不等式</h3><p><strong>定理</strong>：对随机变量 X 和 <span class="math inline">\(ε &gt; 0\)</span>, 有 <span class="math display">\[P(|X| ≥ ε) ≤ {1\over \varepsilon^\alpha}E|X|^α , α=1,2...\tag{2.1}\]</span> 取 <span class="math inline">\(X-EX\)</span>，并另 <span class="math inline">\(\alpha=2\)</span> 就得到了<strong>切比雪夫 (Chebyshev) 不等式</strong> <span class="math display">\[P(|X − EX| ≥ ε) ≤{1\over\varepsilon^2} Var(X), ε &gt; 0. \tag{2.2}\]</span> 证明如下，利用示性函数 <span class="math display">\[P(|X|\ge\varepsilon)=EI(|X|\ge ε)\le E{|X|^\alpha\over ε^\alpha}I(|X|\geε)\\\le{1\over \varepsilon^\alpha}E|X|^α\]</span> 和上一节的证明一样第一个不等式利用了示性函数取 1 时 <span class="math inline">\({|X|^\alpha\over ε^\alpha}&gt;1\)</span> ；第二个不等式消去了示性函数。</p><h2 id="协方差和相关系数">协方差和相关系数</h2><p><strong>定义</strong>：当 <span class="math inline">\(E|(X − \mu_X )(Y − \mu_Y )| &lt; ∞\)</span> 时，称 <span class="math display">\[E(X − \mu_X )(Y − \mu_Y )\tag{3.1}\]</span> 为随机变量 <span class="math inline">\(X, Y\)</span> 的<strong>协方差 (covariance)</strong>, 记做 <span class="math inline">\(Cov(X, Y )\)</span> 或 <span class="math inline">\(σ_{XY}\)</span> . 当 <span class="math inline">\(Cov(X, Y ) = 0\)</span> 时, 称 <span class="math inline">\(X, Y\)</span> 不相关. 实际计算中，更为常用的计算协方差的公式是 <span class="math display">\[\sigma_{XY}=EXY-EXEY\tag{3.2}\]</span> 另外，仅从公式就可以看出，一个随机变量的方差可以看成是它和自己的协方差。</p><p><strong>定义（相关系数）</strong>：当 <span class="math inline">\(0 &lt; σ_X σ_Y &lt; ∞\)</span>, 称 <span class="math display">\[\rho_{XY}={\sigma_{XY}\over \sigma_X\sigma_Y}\tag{3.2}\]</span> 为 <span class="math inline">\(X, Y\)</span> 的 <strong>相关系数 (correlation coeﬃcient)</strong>. 有时也用 <span class="math inline">\(ρ(X, Y )\)</span> 表示相关系数 <span class="math inline">\(ρ_{XY}\)</span> .</p><p>容易得到相关系数的一些性质（证明参见 C-S 不等式）：</p><ul><li><span class="math inline">\(|\rho_{XY}|\le1\)</span></li><li><span class="math inline">\(|ρ_ XY | = 1\)</span> 的充分必要条件是有常数 <span class="math inline">\(a, b\)</span> 使得 <span class="math inline">\(P(Y = a + bX) = 1\)</span></li><li>如果 <span class="math inline">\(X, Y\)</span> 独立, 则 <span class="math inline">\(X, Y\)</span> 不相关</li></ul><p>需要说明的是，协方差和相关系数刻画的仅仅是变量之间的一阶性质；而独立则意味着两者的任意阶都没有关系，所以<strong>不相关并不意味着两者独立</strong>。需要<strong>区分相关和独立之间的区别</strong>，最好的方式就是牢记两者的定义。</p><p>e.g. （不相关也不独立）设 <span class="math inline">\((X,Y)\)</span> 在单位圆 D 内均匀分布，则 X 和 Y 不相关和不独立。</p><p>不独立可以从边际分布 <span class="math inline">\(Y|X=x\)</span> 的表达式中看出来（含有 x）。下面说明不相关：易知 <span class="math inline">\(EX=EY=0\)</span> ，因此 <span class="math display">\[Cov(X,Y)=\int\int_D xyf(x,y)dxdy={1\over\pi}\int_{-1}^1ydy\int_{-\sqrt{1-y^2}}^\sqrt{1-y^2}xdx=0\]</span> 所以 X 和 Y 不相关。</p><ul><li>然而有特殊情况：<strong>在正态分布中，不相关和独立等价</strong>。</li></ul><h3 id="协方差阵">协方差阵</h3><p><strong>定义</strong>：如果随机向量 <span class="math inline">\(X=(X_1,...,X_n)\)</span> 的数学期望 <span class="math inline">\(\mathbf{\mu} =E\mathbf X\)</span> 存在且每个 <span class="math inline">\(X_i\)</span> 的方差有限，则称 <span class="math display">\[\Sigma=E(X-\mu)&#39;(X-\mu)=(\sigma_{ij})_{n\times n}\]</span> 为 X 的协方差矩阵，其中 <span class="math inline">\(\sigma_{ij}\)</span> 是 <span class="math inline">\(X_i,X_j\)</span> 的协方差。</p><p>显然，协方差阵是对称。</p><p><strong>定理</strong>：对于协方差阵来说</p><ul><li><span class="math inline">\(\Sigma\)</span> <strong>非负定</strong></li><li><span class="math inline">\(\Sigma\)</span> 退<strong>化的充分必要条件</strong>是存在不全为零的一组常数使得 <span class="math inline">\(P(\sum_{i=1}^na_i(X_i-\mu_i)=0)=1\)</span> （矩阵退化即使指其行列式=0）</li></ul><p>证明：任取一个 n 为向量 a ，有 <span class="math display">\[\begin{aligned}a\Sigma a&#39;&amp;=\sum_i\sum_ja_ia_j\sigma_{ij}=\sum_i\sum_ja_ia_jE(X_i-\mu_i)(X_j-\mu_j)\\  &amp;=E[\sum_i\sum_ja_ia_j(X_i-\mu_i)(X_j-\mu_j)]=E(\sum_ia_i(X_i-\mu_i)^2)\\  &amp;=Var(\sum_ia_i(X_i-\mu_i))\ge0\end{aligned}\]</span> 证明了协方差阵非负定。而对于其退化条件，即存在一个非零向量 a 使得上面的等号成立，利用式（1.1）的结果即可得到。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论基础（三）随机向量</title>
      <link href="/posts/364e0280/"/>
      <url>/posts/364e0280/</url>
      
        <content type="html"><![CDATA[<blockquote><p>由于疫情在家，之间参考的陈老的那本教材留在学校了，所以从这部分开始主要参考了北大李东风教授的公开讲义，见 <a href="http://www.math.pku.edu.cn/teachers/lidf/course/probstathsy/probstathsy.pdf" class="uri">http://www.math.pku.edu.cn/teachers/lidf/course/probstathsy/probstathsy.pdf</a> 。因此也对于笔记结构稍做了些调整。</p></blockquote><p>这部分主要包括</p><ul><li>随机向量的概念</li><li>离散随机向量</li><li>连续随机向量</li><li>随机向量函数的分布</li><li>条件分布</li></ul><h2 id="随机向量">随机向量</h2><ul><li>随机向量 <span class="math inline">\((X,Y)\)</span></li><li>联合概率分布 <span class="math inline">\(F(x,y)=P(X\le x,Y\le y)\)</span></li><li>边缘分布 <span class="math inline">\(F_X(x)=P(X\le x,Y\le\infty)=F(x,\infty)\)</span></li></ul><p><strong>随机向量，或者说是向量之间的独立性</strong>：对于事件我们已经定义过了其独立性，显然为了自洽我们需要根据事件的独立性来进行定义。对于 <span class="math inline">\(\forall x,y\)</span> ，事件 <span class="math inline">\(\{X\le x\}, \{Y\le y\}\)</span> 独立，则称随机变量 X 和 Y 独立。显然，对于这个定义，我们用概率的形式写出来就是 <span class="math display">\[P(X\le x,Y\le y)=P(X\le x)P(Y\le y)\tag{1.1}\\F(x,y)=F_X(x)F_Y(y)\]</span> 上面的两条概率分布的形式对于判断离散或者连续的随机变量的独立性都是适用的。（然而事实上我们无法得到一些分布函数的形式，所以更常用的是之后会提到的 pmf/pdf 形式）</p><p>这是两个变量独立性的式子，事实上我们可以推导出更高维的式子，<strong>即其联合分布函数可以写成各自的边缘分布的乘积的形式</strong>。另外，对于独立性，我们有性质</p><ul><li>对于数集 <span class="math inline">\(A_1,...,A_n\)</span> ，事件 <span class="math inline">\(\{X_1\in A_1\}, ...,\{X_n\in A_n\}\)</span> 也独立。</li><li>一元/多元函数变换后独立，例如 <span class="math inline">\(\varphi(X_1,...,X_k), g_{k+1}(X_{k+1}),...,g_n(X_n)\)</span> 之间也独立。</li></ul><h2 id="离散随机向量">离散随机向量</h2><p><strong>独立性</strong>： <span class="math display">\[X\perp \!\!\! \perp Y\Leftrightarrow \forall x_j,y_j, P(X=x_i,Y=y_j)=P(X=x_i)P(Y=y_j)\]</span> e.g. <strong>多项分布</strong>：对于二项分布的拓展，每一次实验的结果可能有 r 种。其 pmf 为 <span class="math display">\[P(X_1=k_1,...,X_r=k_r)={n!\over k_1!...k_r!}p_1^{k_1}...p_r^{k_r}\]</span></p><h2 id="连续随机向量">连续随机向量</h2><ul><li><p>Def：若对于随机向量 <span class="math inline">\((X,Y)\)</span> 有 <span class="math inline">\(P((X,Y)\in D)=\int\int_Df(x,y)dxdy\)</span> ，则称 <span class="math inline">\((X,Y)\)</span> 为<strong>连续型随机向量</strong>，并称 <span class="math inline">\(f(x,y)\)</span> 为其<strong>联合密度函数</strong>。</p></li><li><p><strong>边缘 pdf</strong>：离散情况下简单相加，连续时换成积分 <span class="math inline">\(f_X(x)=\int f(x,y)dy\)</span></p></li></ul><p>由定义可知，仅仅是取值连续并不能保障其为连续型随机向量，因为我们要求其具有联合 pdf 才算。下面给出一个例子，来说明<strong>有连续的联合分布，并不一定是连续型随机向量</strong>。假定 <span class="math inline">\(X\sim Unif(0,1), Y=X\)</span> ，则这时候 <span class="math display">\[F(x,y)=P(X\le x,Y\le y)=P(X\le\min\{x,y\})=\min\{x,y\}, 0&lt;\min\{x,y\}\le 1\]</span> 也就是说，<span class="math inline">\((X,Y)\)</span> 只在直线 <span class="math inline">\(D=\{(x,y)|0\le x=y\le1\}\)</span> 上取值，显然在这上的积分=0。若<span class="math inline">\((X,Y)\)</span> 有联合 pdf，则会出现 <span class="math display">\[1=P((X,Y)\in D)=\int_Df(x,y)dxdy=0\]</span> 的矛盾。</p><ul><li>独立性</li></ul><p>对于连续型随机向量来说，其独立性除了根据 1.1 式来判定外，还有 pdf 的形式，即 <span class="math inline">\(f(x,y)=f_X(x)f_Y(y)\)</span> 。也就是说，我们若能将联合 pdf 分解成不同的变量乘积的形式，就能说明这些随机变量独立。</p><h2 id="随机向量函数的分布">随机向量函数的分布</h2><ul><li>设 <span class="math inline">\(Z=X+y\)</span> ，则其 pdf 为 <span class="math inline">\(f_Z(z)=\int f(x,z-x)dx\)</span></li><li>设 <span class="math inline">\(V=X+y\)</span> ，则其 pdf 为 <span class="math inline">\(f_V(v)=\int f(x,x-v)dx\)</span></li></ul><p>e.g. <strong>Rayleigh 分布</strong>。假设 <span class="math inline">\(X,Y\overset{iid}{\sim} N(0,1)\)</span> ，求脱靶量 <span class="math inline">\(Z=\sqrt{X^2+Y^2}\)</span> 的分布 <span class="math display">\[\begin{aligned}F_Z(z) &amp;= P(\sqrt{X^2+Y^2}\le z)=\int\int_{\sqrt{X^2+Y^2}\le z}{1\over 2\pi}\exp(-{x^2+y^2\over 2})dxdy\\  &amp;= {1\over 2\pi}\int _0^{2\pi}d\theta\int_1^z e^{-r^2/2}dr\\  &amp;= \int_0^z e^{-r^2/2} rdr\end{aligned}\]</span> 其中，第二行用了极坐标变换，且 Jacobian 行列式为 r。于是，<span class="math inline">\(f_Z(z)=z e^{-z^2/2}, z\ge 0\)</span></p><p>上面举的例子是变换为一元函数，现在考虑变换为二元函数的情况，类似随机变量的变换，我们有定理：</p><p><strong>定理</strong>： <span class="math inline">\(f(x,y), U=u(X,Y), V=v(X,Y)\)</span> ，若在 D 上有 <span class="math inline">\(P((U,V)\in d)=1\)</span> ，且存在逆变换 <span class="math inline">\(x=x(u,v), y=y(u,v)\)</span> ，Jacabian 行列式 <span class="math inline">\({\partial(x,y)\over\partial(u,v)}\ne 0\)</span> 则 <span class="math inline">\((U,V)\)</span> 有联合 pdf <span class="math display">\[g(u,v)=f(x(u,v), v(u,v))\bigg|{\partial(x,y)\over\partial(u,v)}\bigg|, (u,x)\in D\]</span> 这里简化了一些条件的表达，总之就是要求存在逆变换；类似一元情况，也可推广到分区域可逆的情况，最终的表达式变为累加即可（下面有个例子）。</p><p>e.g. <span class="math inline">\(X,Y\sim N(0,1), (R,\Theta)\)</span> 由 <span class="math inline">\(\bigg\{\begin{matrix}X=R\cos(\Theta)\\Y=R\sin(\Theta)\end{matrix}\)</span> 决定，求 <span class="math inline">\((R,\Theta)\)</span> 的联合 pdf</p><p>显然上面的表达式就构建了一个逆变换，Jacobian 行列式值为 r，于是有联合 pdf <span class="math display">\[g(r,\theta)=f(x,y)|{\partial(x,y)\over\partial(u,v)}|={1\over 2\pi}re^{-r^2/2}\]</span> 分别积分，可得边缘分布 <span class="math inline">\(R\sim Rayleigh\)</span> 即脱靶量； <span class="math inline">\(\Theta\sim Unif(0,2\pi)\)</span></p><p>e.g. <span class="math inline">\(X,Y\sim N(0,1),\bigg\{ \begin{matrix}U=X/Y\\V=X^2+Y^2\end{matrix}\)</span> ，求 <span class="math inline">\((U,V)\)</span> 的 pdf</p><p>定义 <span class="math inline">\(D=\{(u,v)|v&gt;0\}\)</span>，满足 <span class="math inline">\(P((U,V)\in D)=1\)</span> （忽略了为零的部分）。</p><p>而对于任意 <span class="math inline">\((u,v)\in D\)</span> 我们定义函数 <span class="math display">\[x = u \sqrt{\frac{v}{1+u^2}} , y = \sqrt{\frac{v}{1+u^2}}\]</span></p><p>于是事件 <span class="math display">\[\begin{aligned}  \{U=u,V=v\}=\{X/Y=u, X^2+Y^2=v\}\\  =\{X=x,Y=y\}+\{X=-x,Y=-y\}\end{aligned}\]</span> 另外，可计算 Jacobian 行列式 <span class="math inline">\(={1\over 2(1+u^2)}\)</span>，于是联合 pdf <span class="math display">\[g(u,v)=f(x,y)|J|+f(-x,-y)|J|={1\over 2}e^{-v/2}{1\over\pi(1+u^2)}\]</span> 从表达式可见，U 和 V 独立，并且 <span class="math inline">\(V\sim Exp({1\over 2}), U\sim Cauchy\)</span></p><h2 id="条件分布">条件分布</h2><p>离散时，直接根据（事件的）条件概率公式即可得到条件分布。下面推导连续时的条件分布： <span class="math display">\[\begin{aligned}  \lim_{\epsilon\rightarrow0^+}P(Y\le y|x-\epsilon&lt;X\le x)&amp;=\lim_{\epsilon\rightarrow0^+}{P(Y\le y, x-\epsilon&lt;X\le x)\over P(x-\epsilon&lt;X\le x)} \\  &amp;= \lim_{\epsilon\rightarrow0^+}{F(x,y)-F(x-\epsilon,y)\over F_X(x)-F_X(x-\epsilon)}\\  &amp;=\frac{\frac{\partial{F(x,y)}}{\partial{x}}}{F&#39;_X(x)} = \frac{\frac{\partial}{\partial x}\int_{-\infty}^x\int_{-\infty}^yf(s,t)dtds}{f_X(x)}\\  &amp;=\int_{-\infty}^y{f(x,t)\over f_X(x)}dt\end{aligned}\]</span> 于是，在条件 <span class="math inline">\(X=x\)</span> 下，Y 的<strong>条件分布函数</strong> <span class="math inline">\(F_{Y|X}(y|x)=P(Y\le y|X=x)=\int_{-\infty}^y\frac{f(x,t)}{f_X(x)}dt\)</span> ，另外称 <span class="math inline">\(f_{Y|X}(y|x)=\frac{f(x,t)}{f_X(x)}\)</span> 为条件 <span class="math inline">\(X=x\)</span> 下，Y 的<strong>条件 pdf</strong>。（注意到，这里我们用事件 <span class="math inline">\(\{x-\epsilon&lt;X\le x\}\)</span> 取极限，从而得到连续状态下的条件分布，并定义了条件密度函数。）</p><p>e.g. （<strong>二维正态的条件分布</strong>） 我们知道二维正态分布 <span class="math inline">\((X,Y)\sim N(\mu_1,\mu_2,\sigma_1^2,\sigma_2^2,\rho)\)</span> 有联合 pdf <span class="math display">\[\begin{aligned}  f(x,y) &amp;={1\over 2\pi\sigma_1\sigma_2\sqrt{1-\rho^2}}\exp\{-{1\over 2\sqrt{1-\rho^2}}\big({(x-\mu_1)^2\over\sigma_1^2} \\  &amp;- {2\rho(x-mu_1)(y-\mu_2)\over2\sigma_1\sigma_2}  + {(y-\mu_2)^2\over\sigma_2^2}\big)\}\end{aligned}\]</span> 又知 X 的边缘分布为 <span class="math inline">\(X\sim N(\mu_1,\sigma_1^2)\)</span> ，于是 <span class="math inline">\(Y|X=x\)</span> 的条件密度为 <span class="math display">\[f_{Y|X}(y|x)={f(x,y)\over f_X(x)}={1\over \sqrt{2\pi(1-\rho^2)}\sigma_2}\exp(-{(y-\mu_x)^2\over 2(1-\rho^2)\sigma_2^2})\]</span> 即 <span class="math inline">\(Y|X=x\sim N(\mu_x, (1-\rho^2)\sigma_2^2)\)</span>，其中 <span class="math inline">\(\mu_x=\mu_2+{\rho\sigma_2\over\sigma_1}(x-\mu_1)\)</span></p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintosh 入门+软件配置+个人向软件推荐</title>
      <link href="/posts/e6ef2203/"/>
      <url>/posts/e6ef2203/</url>
      
        <content type="html"><![CDATA[<p>近期新配了套 PC，也勉勉强强装上了 Catania10.15.4，算是正式踏入了黑苹果的大门。 从安装开始，到全新的软件配置，折腾了整整两天，把过程都记录在这里，下面也包括自己安装的软件，重要的是相关配置，避免之后可能出现的重装机/更换设备时候的浪费时间。</p><p>所以本文的性质，应该是个人存档，本不该发出来；但考虑到自己零零散散写了也有近万字，其中包含了众多的资源链接，本身具有较大的容量，同时出现的一些问题也可能是常见的，因此有兴趣的话可以参看；然而，这里毕竟都是个人的配置，也不免存在诸多谬误，直接套用显然是不可取的，这也是我为什么在其中添加了无数🔗的原因，请在配置/安装软件时阅读参考链接并自行查阅官方材料，祝阅读愉快~</p><span id="more"></span><p>你可以看到</p><ul><li>入门版安装 Hackintosh</li><li>如何进行 USB 定制</li><li>支持蓝牙和 Airdrop</li><li>支持 Handoff</li><li>macOS 个性化配置：原则是简明有效</li><li>个人向的软件推荐</li><li>相关软件使用/配置的建议</li></ul><h2 id="黑苹果资源链接">黑苹果资源链接</h2><h3 id="综合">综合</h3><ul><li><a href="https://zhuanlan.zhihu.com/p/59202039">黑苹果（hackintosh）技术整合指南</a> 知乎上的一套整合资源</li><li><a href="https://sleele.com/category/%e9%bb%91%e8%8b%b9%e6%9e%9c/">sleele 博客的黑苹果部分</a></li><li>黑果小兵的部落格 <a href="https://blog.daliansky.net/" class="uri">https://blog.daliansky.net/</a> 这个当然是少不了的</li><li>tonymacx86 <a href="https://www.tonymacx86.com/" class="uri">https://www.tonymacx86.com/</a> 想要纯净版安装的话仔细研究一下</li><li>OpenCore 简体中文参考手册 <a href="https://oc.skk.moe/" class="uri">https://oc.skk.moe/</a> 若是用 OpenCore 的话，这个是中文版翻译（需要一定基础才能看）</li></ul><h3 id="安装部分">安装部分</h3><ul><li><a href="https://sleele.com/2019/07/14/gettingstartedtutorial/">黑苹果入门教程</a> 这是此次安装主要参考的 sleele 博客教程，写的比较简洁</li><li><a href="https://blog.daliansky.net/Lenovo-Xiaoxin-Air-13-macOS-Mojave-installation-tutorial.html">联想小新Air 13安装黑苹果兼macOS Mojave安装教程</a> 当然还有黑果小兵的这篇入门教程</li><li><a href="https://mrmad.com.tw/hackintosh-macos-high-sierra">踏上黑蘋果(Hackintosh)之路：從購買至安裝macOS系統教學</a> 这里是基于 Tonymac 的一个全流程安装指南，之后有机会尝试一下吧</li><li><a href="https://zhuanlan.zhihu.com/p/55256660">完美黑苹果之技嘉篇 —小白也能搞定 hackintosh</a> 这篇似乎也很全面，和符合自己的配置</li></ul><p>再来两份简书上 10.11.6 的教程，用的是 Tonymac 的方案 <a href="https://www.jianshu.com/p/529392e7b0f6">基础</a> <a href="https://www.jianshu.com/p/69cb2c3b86ef">进阶</a></p><h3 id="阅读列表">阅读列表</h3><p>这部分直接从安装教程那边盗了过来，之后有机会研究下；</p><ul><li><a href="https://sleele.com/2019/06/07/使用hackintool定制黑苹果usb驱动/">使用Hackintool定制黑苹果USB驱动</a></li><li><a href="https://sleele.com/2019/05/05/hackintosh-pcidevices/">黑苹果生成/显示 PCI信息</a></li><li><a href="https://sleele.com/2019/04/26/黑苹果激活imessage、facetime，handoff/">黑苹果激活iMessage、Facetime，Handoff</a></li><li><a href="https://sleele.com/2019/03/21/smbios/">为自己的黑苹果生成随机三码</a></li><li><a href="https://sleele.com/2018/10/31/用fbpatcher驱动uhd630/">用FBPatcher驱动UHD630</a></li><li><a href="https://sleele.com/2018/09/27/更新到macos-mojave后字体变细发虚的解决办法/">更新到macOS Mojave后字体变细发虚的解决办法</a></li></ul><h2 id="黑苹果安装">黑苹果安装</h2><p>安装之前请务必多看不同的几份教程，这样可以明确哪些步骤是必要的，出了问题也好排查。</p><h3 id="硬件列表">硬件列表</h3><p>感觉黑苹果重要的还是选对硬件，之后的安装还是挺顺畅的。我主要参考了 <a href="https://www.tonymacx86.com/buyersguide/building-a-customac-hackintosh-the-ultimate-buyers-guide/">Tonymac</a> ，原本的基准是 <code>CustoMac Pro</code> ；此外看到的比较好的硬件推荐有</p><ul><li><a href="https://heipg.cn/tutorial/diy-hackintosh-2020.html">2020年黑苹果硬件配置推荐表</a>，给出了常见的坑，另外良心地列出了几套配置；</li><li><a href="https://www.imacpc.net/?p=1267">MACOS CATALINA台式機黑蘋果硬件選購指南</a>：这也是一个不错的黑苹果硬件指南</li></ul><p>因此，在这里放一下自己的硬件清单</p><table><thead><tr class="header"><th>硬件</th><th>价格</th><th>渠道</th></tr></thead><tbody><tr class="odd"><td>I5 9600K</td><td>1000</td><td>咸鱼</td></tr><tr class="even"><td>技嘉Z390 AORUS PRO WIFI</td><td>1330</td><td>闲鱼</td></tr><tr class="odd"><td>蓝宝石 RX580 4G</td><td>578</td><td>4G</td></tr><tr class="even"><td>先马黑洞 6</td><td>188</td><td>188</td></tr><tr class="odd"><td>长城 G6 650 金牌</td><td>439</td><td>闲鱼全新</td></tr><tr class="even"><td>玄冰 400</td><td>70</td><td>闲鱼全新</td></tr><tr class="odd"><td>金士顿 Fury 2666</td><td>499</td><td>京东</td></tr><tr class="even"><td>三星 970EVO</td><td>559</td><td>559</td></tr><tr class="odd"><td>西数SN750</td><td>569</td><td>569</td></tr><tr class="even"><td>绿联 m.2 硬盘盒</td><td>100</td><td>闲鱼</td></tr><tr class="odd"><td>AOC U2790B</td><td>1600</td><td>闲鱼全新</td></tr><tr class="even"><td>耳机转接线</td><td>8.2</td><td>咸鱼</td></tr><tr class="odd"><td>罗技 M720 鼠标</td><td>195</td><td>京东</td></tr><tr class="even"><td>罗技 K780 键盘</td><td>296</td><td>京东</td></tr><tr class="odd"><td>SanDisk 128G Type-C 双头 U 盘</td><td>120</td><td>京东</td></tr><tr class="even"><td>fenvi T919 网卡</td><td>255</td><td>咸鱼全新</td></tr></tbody></table><p>放下之前娱乐大师的检测</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">------鲁大师 Build V5.1020.1190.515------</span><br><span class="line"></span><br><span class="line">电脑型号: 技嘉 Z390 AORUS PRO WIFI 台式电脑</span><br><span class="line">操作系统: Windows 10 64位</span><br><span class="line"></span><br><span class="line">  处理器: 英特尔 Core i5-9600K @ 3.70GHz 六核</span><br><span class="line">    主板: 技嘉 Z390 AORUS PRO WIFI-CF</span><br><span class="line">    内存: 16 GB ( 金士顿 DDR4 2666MHz )</span><br><span class="line">  主硬盘: 三星 SSD 970 EVO 500GB ( 500 GB / 固态硬盘 )</span><br><span class="line">    显卡: 英特尔 UHD Graphics 630 ( 128 MB / 技嘉 )</span><br><span class="line">  显示器: 冠捷 AOC2790 U2790B ( 27.2 英寸  )</span><br><span class="line">    光驱: Msft Virtual DVD-ROM DVD光驱</span><br><span class="line">    声卡: 瑞昱  @ 英特尔 High Definition Audio 控制器</span><br><span class="line">    网卡: 英特尔 Wireless-AC 9560</span><br></pre></td></tr></table></figure><h3 id="安装过程">安装过程</h3><p>这里首选的一份主要安装材料是 sleele 博客上的这篇</p><ul><li>黑苹果入门教程 <a href="https://sleele.com/2019/07/14/gettingstartedtutorial/" class="uri">https://sleele.com/2019/07/14/gettingstartedtutorial/</a></li></ul><p>主要的步骤包括：</p><ol type="1"><li><p>下载镜像制作安装 U 盘</p><ol type="1"><li>macOS 下格式化为 GUID 分区图，选择「Mac OS 拓展（日志式）」</li><li><p>去 App Store 下载镜像，教程多为 Mojave 版本，不过自己仅能搜到 Catalina？不知是否可选</p></li><li>在 Mac 下制作的话，用的是 <a href="https://sleele.com/2019/05/14/制作macos-安装u盘-教程/">制作macOS 安装U盘–教程</a> ，在 Terminal 中使用类似 <code>sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</code> 的命令</li><li><p>然后需要把在 GitHub 上找到的对应机型的 EFI 文件复制到启动盘的 EFI 分区下，直接替换即可；可以在 <a href="https://github.com/daliansky/Hackintosh">Hackintosh黑苹果长期维护机型EFI及安装教程整理</a> 中寻找，根据主板型号，我用的是这个 <a href="https://github.com/shiruken/hackintosh" class="uri">https://github.com/shiruken/hackintosh</a></p></li></ol></li><li><p>安装 macOS</p><ol type="1"><li>之后就可以开始安装了，细节参考黑果小兵的这篇入门 <a href="https://blog.daliansky.net/Lenovo-Xiaoxin-Air-13-macOS-Mojave-installation-tutorial.html">联想小新Air 13安装黑苹果兼macOS Mojave安装教程</a></li><li>BIOS 设置，<code>F2</code> 进入，我没动什么😂</li><li>开机，按 <code>F12</code> 选择 U 盘引导；</li><li>进入系统后用「磁盘工具」格式化需要安装的磁盘；</li><li>开始安装，进行相关的个性化设定，其中会重启若干次，若是本身有 Windows 系统的话若不调整启动项每次都有手动 <code>F12</code> 调整，我是在 BIOS 中调整了一下；</li><li>到这里就算顺利安装完成了，之后的修改部分结合了黑果小兵和主文档，简化处理；</li></ol></li><li><p>安装后配置</p><ol type="1"><li><p>安装之后，为了脱离 U 盘启动，需要将 U 盘中的 EFI 文件夹替换到系统 EFI 分区下；由于连了网线，所以是可以直接用 Safari 下载 Clover Configurator 进行的（当然可以直接放在 U 盘里）；黑果小兵那里介绍了用 <code>diskutil</code> 指令进行挂载</p><ol type="1"><li>查看磁盘分区表 <code>diskutil list</code></li><li>挂载磁盘和 U 盘分区表，类似于 <code>sudo diskutil mount disk0s1</code> 记得要选择正确的磁盘和分区（Orz 当时是因为分不清两个 EFI 分区所以又下了 Clover Configurator 来 check）</li><li>打开 Finder，可以采用 <code>open .</code> 指令</li></ol></li><li><p>添加 UEFI 引导选项</p><ol type="1"><li>教程中的设置是安装 Clover <a href="https://github.com/Dids/clover-builder/releases" class="uri">https://github.com/Dids/clover-builder/releases</a>，不过自己走了一遍之后没在 EFI 分区下看到 <code>nvram.plist</code>，用的 Clover 版本不一样设定也有所不同，不过万幸的是不影响系统使用，之后有机会在研究~</li><li>黑果小兵那里的方案不知道为什么转到了 Windows 下，用了 <code>BOOTICE</code> 进行配置，修改了启动项；</li></ol></li><li><p>摘录黑果小兵那里的「完善驱动」部分</p><blockquote><ol type="1"><li>声卡：型号为ALC236，注入ID：2，使用AppleALC仿冒，顺利加载；修正HDMI Audio输出信息；安装完系统后请安装 <a href="https://github.com/daliansky/Lenovo-Air13-IWL/tree/master/ALCPlugFix_for_ALC_node12_19">ALCPlugFix_for_ALC_node12_19</a> 声卡守护进程，耳麦工作正常；</li><li>网卡：REALTEK <code>10EC:B822</code>的无线网卡截止到目前还是无解，更换为DW1560/DW1830；</li><li>显卡：Intel HD Graphics 500，Whiskey Lake平台目前还没有驱动程序，使用Coffee Lake仿冒驱动，Platform-id为：<code>0x3e9b0009</code>，添加DVMT补丁；采用Devices-Properties方法注入；核显版外接HDMI显示器工作正常；睡眠唤醒正常；</li><li>蓝牙工作正常；睡眠唤醒工作正常；</li><li>电池信息正常；</li><li>触摸板：使用 <code>VoodooI2C</code> 驱动，多手势全功能正常工作；</li><li>显示器亮度调节正常；亮度调节快捷键：<code>F11</code> 和 <code>F12</code></li><li>USB端口识别，未进行端口订制；摄像头、无线网卡已内建，避免睡眠问题；</li></ol></blockquote></li></ol></li></ol><h3 id="关于定制-usb-驱动">关于定制 USB 驱动</h3><blockquote><p>这一部分需要解决的问题是 USB 驱动可能失效的问题。具体表现为：机箱 USB 无法使用或是使用异常；</p><p>当然，自己要解决这一问题的最根本起因，是自己想用 Airdrop 和蓝牙功能，新如的 T919 连接 USB 口没有反应，这才进行下面配置的~</p><p>如果你用的是黑果小兵的文件，那么很大程度上你不会遇到这一问题，因为会帮你打好完善的驱动了；如果你用的是从 App Store 下载的安装包，那么可能会遇到这一问题。</p></blockquote><p>主要参考的 sleele 大佬的 <a href="https://sleele.com/2019/06/07/%E4%BD%BF%E7%94%A8hackintool%E5%AE%9A%E5%88%B6%E9%BB%91%E8%8B%B9%E6%9E%9Cusb%E9%A9%B1%E5%8A%A8/">使用Hackintool定制黑苹果USB驱动</a> 这篇文。</p><p>不过在此之前，需要用到 <a href="https://heipg.cn/tag/usbinjectall">USBInjectAll.kext</a> 这一进行调试/注入 USB端口需要的驱动，以下引自 <a href="https://heipg.cn/tutorial/custom-usbports-for-hackintosh.html" class="uri">https://heipg.cn/tutorial/custom-usbports-for-hackintosh.html</a></p><blockquote><p>默认你已经把 USBInjectAll.kext 放到了该放的地方，如果没有，运行Clover Configurator，挂载EFI分区，并把USBInjectAll.kext 放到Clover的驱动文件夹：/EFI/Clover/kexts/other</p></blockquote><p>上面那份需要网站会员，随便搜一下网上可以找到公开资源如我用的 <a href="https://bitbucket.org/RehabMan/os-x-usb-inject-all/downloads/">这份</a>。</p><p>接下来，按照上文的方式用 Hackintool 配置引导，替换 <code>config.plist</code> 文件之后重启，似乎所有的 USB 口都已经能正常使用了？</p><p>下面的隐藏内容没看，再回到 sleele 大佬那篇定制 USB 驱动的方案，参考其中的「定制 USB」部分，写得很详细了，最后将相关配置放到 <code>EFI/CLOVER/ACPI/patched</code> 文件夹后，重启~</p><h3 id="支持蓝牙-airdrop">支持蓝牙 &amp; Airdrop</h3><blockquote><p>如上，用的是技嘉的 Z390 AORUS PRO WIFI，自带了一张英特尔的网卡，直接插上 T919 会有蓝牙冲突，因此需要在 BIOS 中禁用WIFI（当然更为粗暴的方案是直接拆掉板载网卡）。</p><p>之后才发现的问题就是👆的 USB 口缺驱动的问题，解决方案如上。</p></blockquote><p>要想使用蓝牙的话，主板自带的网卡大多是不行的（不过神奇的是，这张主板的网卡原生支持 WIFI）；从网上的主流方案，选的是 fenvi 的 T919，网卡是 BCM94360CD，用过 PCIE 口连接，另外蓝牙部分需要连 USB。</p><p>禁用主板 WIFI 的话，大致是在 BIOS 的「Setting-PCIE-WIFI」下，选择为「关闭」即可。</p><p>解决 USB 问题后，即可正常使用 Airdrop 和蓝牙的问题，不过 Handoff 似乎还要另外设置。</p><h3 id="支持-handoff">支持 Handoff</h3><blockquote><p>还不是太懂，不过暂且能用了</p></blockquote><p>可参考 sleele 大佬的 <a href="https://sleele.com/2019/04/26/%E9%BB%91%E8%8B%B9%E6%9E%9C%E6%BF%80%E6%B4%BBimessage%E3%80%81facetime%EF%BC%8Chandoff/">黑苹果激活iMessage、Facetime，Handoff</a> ，不过自己没怎么懂，另外需求仅仅是用到 Handoff，于是在另外一文中找到一个简单的解决方案，目前是成功了。</p><p>一步完成，仅需在 <code>Clover Configurator</code> 中 「ACPI 设置」中勾选「修复 LAN」和「修复 Airport」。试了一下，可以从 iphone 接收到 iMac 上的网页、Notes；也可以在 iMac 上看到手机上的 Notes，不过奇怪的是无法从 macOS 上看到手机 Safari 上的网页——不论是 Hackintosh 还是 MBP，奇怪~</p><h2 id="安装后一些设定疑问">安装后：一些设定&amp;疑问</h2><blockquote><p>这里记录了一些在安装之后出现不习惯的地方，并给出了部分解决方案；当然很多的设定都是个人喜好；随便罗列了下没有条理 Orz</p></blockquote><h3 id="简单设置">简单设置</h3><ul><li>设定时区<ul><li>话说为什么不会自动设定时区？还是自己安装时候哪里设定错误了？</li><li>简单的解决方案是到 设定-日期与实践-时区 里，手动设置时区为上海</li></ul></li><li>移除 Dock 里面一些没用的 APP（绝大部分）</li><li>非官方下载的软件无法打开的问题<ul><li>参考 <a href="https://www.jianshu.com/p/74f8a411c8b0" class="uri">https://www.jianshu.com/p/74f8a411c8b0</a></li><li>命令行执行 <code>sudo spctl --master-disable</code></li><li>然后到「系统偏好设置-安全性与隐私」解锁「允许以下位置下载的应用」中的「任何来源」</li></ul></li></ul><h3 id="快捷键">快捷键</h3><ul><li>Finder<ul><li><code>Cmd+C</code> 之后 <code>Opt+Cmd+V</code> ，可以实现移动到目标文件，类似于 Windows 下的「剪切」；当然，在一个磁盘下直接拖动文件即可，而不同磁盘之间的移动就可以用这个组合键；</li><li><code>Ctrl+Back</code> 删除文件，可实现 Windows 下的删除快捷键；</li></ul></li></ul><h3 id="如何备份">如何备份？</h3><blockquote><p>之后的折腾肯定是需要备份和还原的，不过目前没有合适的备份盘，这里仅供参考</p></blockquote><ul><li>Bilibili <a href="https://www.bilibili.com/video/BV1v7411K71H">给你的黑苹果一瓶后悔药！如何备份黑苹果？让折腾后顾无忧！</a>；</li><li>这里是时间机器的官方文档 <a href="https://support.apple.com/zh-cn/HT201250" class="uri">https://support.apple.com/zh-cn/HT201250</a> ；</li><li>少数派的这个系列 <a href="https://sspai.com/post/30550" class="uri">https://sspai.com/post/30550</a> 似乎有关于时间机器的完整论述</li></ul><h3 id="在-finder-中显示隐藏文件">在 Finder 中显示隐藏文件</h3><ul><li>快捷键 <code>Shift+Cmd+.</code> 即可，比偏好设置多了一个 <code>Shift</code> 还挺好记的</li></ul><h3 id="system-preferences">System Preferences</h3><blockquote><p>借着这个机会重新翻看了一下 System Preferences，把自己的设定全都记录了下来~</p></blockquote><ul><li><p>通用</p><ul><li>安装的时候就可以选「深色」；</li><li>「默认浏览器」选 Chrome；<br /></li><li>「关闭文稿时要求保存更改」选项开了更为保险，可以有点烦人，还是没有勾选；</li></ul></li><li><p>桌面与保护程序</p></li><li><p>这里设置一下桌面，其他没什么好选的；</p></li><li><p>Dock/程序坞</p><ul><li>调整为合适的大小，勾选了一定的「放大」效果；</li><li>「最小化窗口」选「缩放」，「神奇效果」有点太花里胡哨了；</li><li><del>目前设定「自动显示和隐藏程序坞」</del>（没有了，在 27 寸的显示器上直接放在下面就很好了）</li></ul></li><li><p>Siri</p><ul><li>Hi, Siri! 你给关着呢听不到~</li></ul></li><li><p>Spotlight/聚焦</p><ul><li>默认即可</li></ul></li><li><p><strong>语言与地区</strong></p><ul><li>也是一个之前纠结的地方，之前用了近一年的英文，这两天用了中文之后居然没有啥不习惯的；反而因为中文的表达方式，寻找重点起来更快一点；所以近期还是以中文为主；这也免了之前要在「语言与地区-APP」部分反复设定的麻烦；</li><li>目前困扰的一个问题大概是文件夹的中文显示问题，Mac 的文件夹本地化方案应该是在需要的下面新增 <code>.localized</code> 隐藏文件，然后由 Finder 渲染；所以要更改文英文的话，手动删去即可；当然，若是要重新变为中文，则 <code>touch ~/Downloads/.localized</code> 即可；</li><li>这个问题想在 「App」里面单独设置，但好像无法提供这样的选项？#搁置</li><li>这个问题关于文件夹的本地化，在 Linux 中应该是可以设定的，这里不知为什么难以找到，另外 <a href="https://havee.me/mac/2014-06/localizing-directory-name-on-mac-os-x.html">OS X 下本地化目录</a> 介绍了系统配置和用户目录下本地化的两种方式。</li></ul></li><li><p>通知</p><ul><li>可以对于所有要求通知权限的 APP 进行管理；</li><li>「勿扰模式」：从晚上十点到上午七点打「打开『勿扰模式』」</li></ul></li><li><p>拓展</p><ul><li>可以<strong>管理第三方拓展</strong>，其中最重要的应该是「Finder 拓展」，类似于 Windows 下的「右键管理」</li><li>还可以管理通知栏那边的「今天」组件，类似于 iOS 下的 Widget，但 Mac 下好像不怎么用；</li></ul></li><li><p><strong>安全性与隐私</strong></p><ul><li>很多有硬件或是其他数据请求的软件在第一次打开时都会弹出这一项的请求，需要到「安全性与隐私-隐私」里面去找对应的栏目允许；问题在于有些 APP 跳转得不够好，自己手动找还很难找到；</li></ul></li><li><p>软件更新</p><ul><li><p><strong>关闭系统更新</strong>：到「系统偏好设置-软件更新-高级」里面看着把所有的取消就行了</p></li><li><p>附带的一个强迫症的小问题：「软件更新」那里总会有个小红点，这个的话参考 <a href="https://www.douzi.link/remove-mac-system-and-new-red-dot/">这篇</a> 在终端运行 <code>defaults write com.apple.systempreferences AttentionPrefBundleIDs 0</code> 即可，或许需要重启一下 Dock <code>killall Dock</code></p></li></ul></li><li><p>网络</p><ul><li>目前仅有「以太网」「蓝牙 PAN」选项；</li><li>这部分真的了解不多，但也是用的多用的设置之一</li></ul></li><li><p>声音</p><ul><li>似乎没啥好设置的，不知道为啥 Apple 要把「声音效果-提醒声音」防在这么高的 Priority 上；</li><li>不过鉴于目前声卡的问题，#待补充</li></ul></li><li><p>鼠标</p><ul><li>这里可以简单设定，包括一些蓝牙的鼠标；</li><li>这里用的是 Logitech 的优联，单独在下面的 APP 里；</li></ul></li><li><p>显示器</p><ul><li>「缩放」选了第二个（共五个），调整到较为合适的字体大小</li><li>「颜色」部分应该也可以设定，不过自己没试过；</li><li>「夜览」，这个部分务必打开，这两天用下来眼睛的疲劳问题足以说明一切，目前设了晚上 8 点到早上 8 点</li></ul></li><li><p><strong>节能</strong></p><ul><li>电源设定，这里没有内置电池，也就简单设置「此时间段后关闭显示器」为 10 分钟</li></ul></li><li><p>日期与时间</p><ul><li>「时钟」部分，由于自己可能连今天是几号都可能不知道，需要启用「在菜单栏中显示日期和时间」，选「数码」，「日期选项」全部勾选；#显示日期</li></ul></li><li><p>共享</p><ul><li>文件共享部分 #待补充</li></ul></li></ul><h3 id="finder">Finder</h3><ul><li>「偏好设置」<ul><li>通用里面全部勾上；</li><li>新窗口的时候打开「下载」；</li><li>「边栏」部分，「个人收藏」目前剩下了 桌面、下载；<ul><li><strong>「位置」</strong> 部分，勾选第一个选项「iMac/MBP」的话，可以显示所有挂载了的硬盘盒网络地址，第二个「硬盘」会讲当前挂载的所有硬盘显示在边栏，相当于上一个选项的展开，显示的好处就是在需要去 <code>/Library</code> 等位置的时候就不需要「前往-前往文件夹」或快捷键 <code>Shift+Cmd+G</code> 了（因为自己是双系统，所以会有另一张硬盘下的三个分区，其中一个分区格式化为 exFat 用于交换文件，其他的两个只需要拖出去一段时间即可删去）</li></ul></li></ul></li><li>「显示」里面喜欢全部打开，大概是因为被 MBP 容量支配的恐惧吧</li></ul><h2 id="必备工具软件">必备/工具软件</h2><ul><li>装完黑苹果后必装的几个软件 <a href="https://sleele.com/2018/12/02/macsoftware1/" class="uri">https://sleele.com/2018/12/02/macsoftware1/</a> 由于之前的安装经历，理所当然地参考了这篇和下面的第二弹</li><li>macOS软件推荐·第二弹 <a href="https://sleele.com/2019/03/21/macsoftware2/" class="uri">https://sleele.com/2019/03/21/macsoftware2/</a></li><li>从零开始的 MacBook 配置教程 <a href="https://zhuanlan.zhihu.com/p/48207191" class="uri">https://zhuanlan.zhihu.com/p/48207191</a> 这篇从基本设置、常用软件等角度进行展开，涉及到的内容都极合我的胃口</li></ul><h3 id="科学上网">科学上网</h3><ul><li>SSX<ul><li>MacOS 下的版本是 <a href="https://github.com/qinyuhang/ShadowsocksX-NG-R/releases/download/1.4.4-r8/ShadowsocksX-NG-R8.dmg">这个</a></li><li>已下架</li></ul></li><li>现用 ClashX</li></ul><h3 id="浏览器chrome">浏览器：Chrome</h3><ul><li>安装 Chrome <a href="https://www.google.cn/intl/zh-CN/chrome/" class="uri">https://www.google.cn/intl/zh-CN/chrome/</a><ul><li>习惯了用Chrome，优点在于全平台同步，可玩性也很高；</li><li>大概也有自己对于隐私还没有太过关注/受困扰的原因吧</li></ul></li></ul><h3 id="远不止聊天软件telegram">远不止聊天软件：Telegram</h3><ul><li><strong>Telegram</strong>：<a href="https://desktop.telegram.org" class="uri">https://desktop.telegram.org</a><ul><li>记得人工设定，如果是用上面链接中下载的 SSX 的话，默认似乎是 127.0.0.1:1086，端口号不是常见的 1080，建议人工设定 SOCKS 之前去「高级设置」里 check 一下；</li><li>登录之后就可以作为文件传输工具啦~</li><li>下载默认会自建一个文件夹，个人喜欢设定地址为 <code>~/Downloads</code></li></ul></li></ul><h3 id="黑果-toolshackintoolclover-configuratoretcher-等">黑果 Tools：Hackintool、Clover Configurator、Etcher 等</h3><blockquote><p>不完全罗列，自己目前最常用的是 Clover Configurator，所以其他的有待补充</p></blockquote><ul><li><strong>Hackintool</strong>：<a href="https://github.com/headkaze/Hackintool/releases" class="uri">https://github.com/headkaze/Hackintool/releases</a><ul><li>Hackintool(原Intel FB-Patcher)使用教程及插入姿势 <a href="https://blog.daliansky.net/Intel-FB-Patcher-tutorial-and-insertion-pose.html" class="uri">https://blog.daliansky.net/Intel-FB-Patcher-tutorial-and-insertion-pose.html</a> 黑果小兵的这篇教程，挺硬核的</li></ul></li><li><strong>Clover Configurator</strong>：<a href="https://mackie100projects.altervista.org/download-clover-configurator/" class="uri">https://mackie100projects.altervista.org/download-clover-configurator/</a><ul><li>配置文件以及挂载 EFI 文件夹都需要，常备</li></ul></li><li><strong>Etcher</strong>：<a href="https://www.balena.io/etcher/" class="uri">https://www.balena.io/etcher/</a><ul><li>用来制作启动盘，不过自己没用上</li></ul></li></ul><h3 id="联网控制tripmode">联网控制：TripMode</h3><blockquote><p>之所以将这个独立起来写，是因为最近被各种网络问题烦扰甚剧；反思下来，网络也确实是计算机组成中 Priority 极高的几个成分了，而在硬件成本不断降低的过程中，网络所起到的作用无疑愈发重要，与此同时网络管制也越来越严格；抽象地说，其实我们的网络质量，我们能够浏览到的信息的质与量，决定了我们可以接触到的网络世界的向度。</p><p>而这款软件的话，可以显式地对于整台计算机的网络使用进行控制，细化到每个 APP，另外流量统计的功能也极为实用，是以专门进行讨论。</p></blockquote><ul><li>使用的话直接打开，默认是全部关着的，必须手动点击才能允许联网；然后在有未允许的应用请求网络的时候小火车图标会变红，就可以在下面的灰色应用中找到需要的进行设置了；</li><li>刚开始用的时候一个困惑大概是启用代理之后，需要启用 Chrome, ss-local, privoxy 之后才能在浏览器中使用，而 SSX 使用的流量很少；</li></ul><h3 id="系统工具monitorcontrolnewfilemenutencent-lemon">系统工具：MonitorControl、NewFileMenu、Tencent Lemon</h3><ul><li><strong>MonitorControl</strong>： <a href="https://github.com/the0neyouseek/MonitorControl/releases/tag" class="uri">https://github.com/the0neyouseek/MonitorControl/releases/tag</a><ul><li>在 macOS 下调节外接显示器的亮度、声音</li></ul></li><li><strong>NewFileMenu</strong>：App Store 有免费版<ul><li>右键「新建」，延续 Windows 风格的一款良心工具</li></ul></li><li><strong>Tencent Lemon</strong>：<a href="https://lemon.qq.com/" class="uri">https://lemon.qq.com/</a><ul><li>可以说是很良心的 Mac 下的<strong>应用管理+简单系统监控</strong>软件了，之前纠结了很多其他的，要么是很贵要么太过臃肿，这款符合自己的极简美学了；</li><li>用过上面的推荐第二弹中的 <code>AppCleaner</code> <a href="https://freemacsoft.net/appcleaner/" class="uri">https://freemacsoft.net/appcleaner/</a>，两者在清理上的功能差不多，而这款还有其他的（虽然自己不怎么用）也很美观；</li></ul></li></ul><h3 id="拓展应用popclipmoom">拓展应用：PopClip、Moom</h3><ul><li><p><strong>PopClip</strong>：<a href="https://pilotmoon.com/popclip/" class="uri">https://pilotmoon.com/popclip/</a> 【TG 备份】</p><ul><li>一款增强划词选项的软件，似乎支持很多插件 #待探索</li><li>似乎和 Eudic 的划词翻译功能相冲突，PopClip 自带了系统的字典选项，或是更好的选择；</li></ul></li><li><p><strong>Moom</strong>：<a href="https://manytricks.com/moom/" class="uri">https://manytricks.com/moom/</a> 窗口管理 【TG 备份】</p><ul><li>在 Windows 下有自带的靠边窗口管理选项，这算是一个增强版；原本以为在 mac 如此优秀的触摸板下是不需要这种窗口管理软件的，在黑苹果下就尝试了一下，结果试用之后停不下来；</li><li>设定部分，「general」选登录启动，以「menu bar」 application 的形式运行比较熟悉；</li><li>「mouse」中<ul><li>「Zoom Button Controls」中点选「Pop up controls when hovering over a Zoom button」可以增强 macOS 中缩放没有一个提示符的问题，开启「Enable <code>full screen</code> grid」 可以在全屏按钮上出现调整窗口大小的弹出；后面两个看不懂~</li><li>「Snap to Edges and Corners」中开启，可以达到 Windows 下一样的效果</li></ul></li><li>「keyboard」部分，自定义一个快捷键，可以实现更为精细的控制，我用的是 <code>Shift+Cmd+G</code> （emm 当时应该是想好了用一个合适的字母的，不过现在就忘了为啥选 G），其中的控制按自己欢喜挑选；</li><li>「Custom」部分，可以自定义几个喜欢的窗口方式，配合👆的快捷键使用；</li></ul></li></ul><h3 id="系统监测istat-menusmenubar-stats">系统监测：iStat Menus、MenuBar Stats</h3><p>这篇知乎文 <a href="https://zhuanlan.zhihu.com/p/90503124" class="uri">https://zhuanlan.zhihu.com/p/90503124</a> 给出了几款监控软件，不过自己仅用过👇的两个</p><ul><li><strong>iStat Menus</strong>：<ul><li>上面的🔗中给出的下载地址是 <a href="https://www.macdown.com/mac/2941.html" class="uri">https://www.macdown.com/mac/2941.html</a> 6.40；而我是从 <a href="https://mp.weixin.qq.com/s/mVxJYiGrfselJx1b9XdvYw" class="uri">https://mp.weixin.qq.com/s/mVxJYiGrfselJx1b9XdvYw</a> 这里下载的 6.30 版本；</li><li>用起来感觉清晰有效，比下面的 MenuBar Stats 更清爽；</li></ul></li><li><strong>MenuBar Stats</strong>：<a href="https://www.macdown.com/mac/4269.html" class="uri">https://www.macdown.com/mac/4269.html</a><ul><li>在本文之前的版本丢失之前先用的是这个，安装好后推荐去官网看一下教程之后再使用；</li><li>相较而言有点麻烦，而且若是需要（内存监测？）还要去官网下载 Plugins Manager 配合使用；</li></ul></li></ul><h3 id="包管理homebrew">包管理：Homebrew</h3><p>略</p><h3 id="播放器iina">播放器：IINA</h3><ul><li><strong>IINA</strong><ul><li>Mac 下必备的播放器了；</li><li>按照之前的想法，应该是用指令 <code>brew cask install iina</code> 安装的，然而，如上一节的🔗中所说，「因为<code>cask</code>是基于<code>GitHub</code>下载软件，所以目前是无法加速的」，所以带来的问题是速度还是非常慢……</li><li>或许直接从 Github 下载是更好的选择，<a href="https://github.com/lhc70000/iina/releases" class="uri">https://github.com/lhc70000/iina/releases</a></li></ul></li></ul><h3 id="quick-look-插件">Quick Look 插件</h3><ul><li>这个 <a href="https://github.com/sindresorhus/quick-look-plugins" class="uri">https://github.com/sindresorhus/quick-look-plugins</a> Github 页面收录了一些常见的 QuickLook 拓展，一般只要 <code>brew cask  install &lt;package&gt;</code> 即可安装，另外发现这些拓展是安装在 <code>~/Library/QuickLook</code> 目录下的<ul><li><a href="https://link.zhihu.com/?target=https%3A//github.com/Nyx0uf/qlImageSize">qlImageSize</a>： 预览的时候显示图片大小</li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/whomwah/qlstephen">QuicklookStephen</a>: 查看未知拓展名的纯文本文件</li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/toland/qlmarkdown">QLMarkdown</a>: 空格键预览 Markdown 文本效果</li><li><a href="https://link.zhihu.com/?target=https%3A//github.com/n8gray/QLColorCode">QLColorCode</a>： 预览代码高亮</li></ul></li></ul><h3 id="下载软件motrixfolxqbittorrent">下载软件：Motrix、Folx、qbittorrent</h3><blockquote><p>这一部分重要参考上面的推荐列表，目前仅用了 Motrix，其他尝试之后要么卸载要么搁置；下载也是需要需要反复折腾的方案，自己也还在不断尝试；</p><p>BT 的话，本身就不怎么用，更重要的或许是资源的质量？尝试了下面的 qbittorrent 和迅雷都不太行，想到自己没啥使用场景就不折腾了；</p></blockquote><ul><li><strong>Motrix</strong>：<a href="https://motrix.app/zh-CN/" class="uri">https://motrix.app/zh-CN/</a><ul><li>「全功能下载软件，封装了Aria2，下Bt不太行，Http还不错」；</li><li>下载后面要用的 Office 全家桶，速度乍一看就跑到了 30M/s，多线程无敌~</li><li><del>一直想要一款在 Mac 上类似 IDM 的软件，有时候甚至为了下载东西而专门到 Windows 平台，现在似乎找到了</del>~ 并没有，IDM 视频捕捉下载、浏览器下载接管 等功能还是没有找到合适的替代方案；</li></ul></li><li><strong>Folx</strong>：<a href="https://mac.eltima.com/cn/download-manager.html" class="uri">https://mac.eltima.com/cn/download-manager.html</a><ul><li>「macOS上最好的下载软件，但是也是Bt不太行」</li></ul></li><li><strong>qbittorrent</strong>：<a href="https://www.qbittorrent.org" class="uri">https://www.qbittorrent.org</a><ul><li>「Bt下载届的新一哥，我觉得可以说是目前最优秀的Bt下载软件，全平台」</li></ul></li></ul><h3 id="压缩软件ezipkeka">压缩软件：Ezip、Keka</h3><ul><li><strong>Ezip</strong>：<a href="https://ezip.awehunt.com" class="uri">https://ezip.awehunt.com</a><ul><li>下载界面有点好看；</li><li>「压缩解压软件，支持Quicklook，我一般和Keka一起使用，kaka负责解压和压缩，他负责预览」；预览这一点的话，在 Mac 下习惯直接点击解压缩了，用得不多；</li></ul></li><li><strong>Keka</strong>：<a href="https://www.keka.io/en/" class="uri">https://www.keka.io/en/</a><ul><li>「简单快捷的压缩解压缩软件，没有预览界面，点击压缩包就自动解压，可以看作是系统自带归档的扩展版」</li></ul></li></ul><h3 id="截图xnip">截图：Xnip</h3><ul><li><strong>Xnip</strong>：<a href="https://zh.xnipapp.com/" class="uri">https://zh.xnipapp.com/</a><ul><li>之前可以说是系统快捷键的死忠了，<code>Cmd+4</code> 选区截图，并保存到桌面，<code>Cmd+Ctrl+4</code> 选区截图并保存到剪切板；</li><li>看到这个小 APP 之后感觉好用至极，考虑换到这一方案下，快捷键设置为 <code>Shift+Cmd+X</code> ，自带简单实用的标注；#快捷键</li><li>解决了截长图的难点，注意必须是自行选区，然后滚轮移动，自己会生成，所以要注意选区必须完整；</li><li>配置<ul><li>需要勾选「单窗口截图阴影效果」，已消除白边；存储格式选 png 勾选透明背景，效果会比较好~</li><li>指定「保存位置」后可以直接保存而不需要再两步设置；</li></ul></li></ul></li></ul><h3 id="七七八八logitech-options搜狗输入法">七七八八：Logitech Options、搜狗输入法</h3><ul><li><p><strong>Logitech Options</strong>： <a href="https://support.logi.com/hc/zh-cn/articles/360025297893" class="uri">https://support.logi.com/hc/zh-cn/articles/360025297893</a></p><ul><li>由于用的是罗技的键鼠套餐，所以这个是必不可少的；之前在 win 上死活下不下来，这次居然很顺畅（即使用 IDM，下载速度真的是门玄学），登录账号之后就可以直接使用了</li><li>打开 Launchpad 的话，可以用 <code>F5</code> 【K780 可用】</li></ul></li><li><p><strong>搜狗输入法</strong>：<a href="https://pinyin.sogou.com/mac" class="uri">https://pinyin.sogou.com/mac</a></p><ul><li>登录之后可以自动同步设置，因此可以避免一些奇奇怪怪的设定，还算比较良心</li></ul></li></ul><h3 id="网盘baidunetdiskgoogle-driver">网盘：BaiduNetdisk、Google Driver</h3><ul><li><strong>百度云盘/BaiduNetdisk</strong>：<a href="http://pan.baidu.com/download#pan" class="uri">http://pan.baidu.com/download#pan</a><ul><li>为了一些同步工作，主要是因为之前入了百度云的会员</li></ul></li><li><strong>Google Driver</strong><ul><li>个人的话，免费仅有 15G，可以备份一些重要的文档；</li><li>不太懂那个（个人版）客户端，功能有限，下不了团队盘不知道如何；</li><li>用的话直接网页版就行了，搭配自家的 Chrome 很流畅；</li><li>通过某些渠道蹭了一个团队盘，可以用来做一些不重要的备份，这里 <a href="https://shikey.com/2020/03/04/free-google-drive-team-disk-unlimited-space-and-tutorials.html" class="uri">https://shikey.com/2020/03/04/free-google-drive-team-disk-unlimited-space-and-tutorials.html</a> 似乎有一份挺完整的教程，不过自己没细看；</li></ul></li></ul><h3 id="文字输出方案typoraupicoffice">文字&amp;输出方案：Typora、uPic、Office</h3><blockquote><p>这部分其实是放在自己很重要的位置上的，主要是 Typora+图床的配置，Office 的话，之前在 MBP 上直接用 WPS 替代也很好，不过现在空间充足就用微软爸爸的好了；</p><p>这套输出方案是此前的最优配置了，Mardown 的简洁，加上 Typora 优秀的界面和渲染；最难处理的应该是在线图床了，用图床的一大原因就是其便捷性——一个链接通行，在本地码完复制黏贴直接可以到 CNblog 上，无损显示，这是本地存储方案无法媲美的；理想很美好，不过（限于贫穷）在稳定性上就有很大的问题，尝试过用 NAS 来做图床，不过还是需要折腾，而且学校的网络环境估计也堪忧，当然也有很多云存储的方案提供，之后有机会尝试一下；之前用 GitHub，不过太不稳定了，经常只有在全局状态才能 load 出来。</p></blockquote><ul><li><strong>Typora</strong> ：<a href="https://typora.io/" class="uri">https://typora.io/</a><ul><li>这个自然是不能少的，不知道为啥在台式机上下载超级慢，最后还失败了，这里就是用 Telegram 从 MBP 上传输过来的；</li><li>设置中，「通用-启动选项」：因为自己是把所有 Markdown 文件放在一个文件夹下的，因此选择「重新打开上次使用的文件和目录」；在运行过程中，这一文件夹是常驻的，最小化；另外，在使用的时候，若打开了其他文件夹下的 MD 文件，则把其他的那个文件先关掉，这样就可以保障下次打开的时候还是你的 Markdown 文件夹；</li><li>「编辑器」部分<ul><li>「使用成对的符号」下点选所有；</li><li>「即时渲染-显示当前快元素的 Markdown 源码」若开启的话，当指针位于标题部分会显示源码，移出的时候又会重新渲染为显示形式，这对于在这样一个实时渲染的软件下会带来一些操作上的困惑，我把它给关了；</li></ul></li></ul></li><li><p>「Markdown」部分</p><ul><li>点选「Markdown 拓展语法」部分「内联公式」</li><li>点选「代码块」里的「显示行号」</li></ul></li><li>重新启动后生效</li><li><strong>uPic</strong>： <a href="https://blog.svend.cc/upic/" class="uri">https://blog.svend.cc/upic/</a><ul><li>一款免费的多平台图床工具，从原来 MBP 上的 IPic 转向这款 Windows 和 macOS 上都有的 APP 了；</li><li>是支持 <code>brew</code> 的，但和上面的 <code>IINA</code> 一样，由于下载速度的原因还不如直接从 GitHub 上用浏览器下载；</li><li>关于图床的使用的话，推荐用 <strong>Gitee</strong>，因为 Github 的上传和链接都需要在代理模式下才能使用，在找不到一款合适的系统级代理软件的情况下无法在 PAC 模式而只能在全局模式下上传，以及在 Typora 中使用，造成了很大的麻烦，相关配置见 <a href="https://blog.svend.cc/upic/tutorials/gitee/" class="uri">https://blog.svend.cc/upic/tutorials/gitee/</a>；<ul><li>发现有个问题：文件 &gt;1M 下 Gitee 只能登录后才可见，是个坑；</li></ul></li><li>我的「保存路径设置了」 <code>uPic/&#123;filename&#125;&#123;year&#125; &#123;month&#125; &#123;day&#125; &#123;hour&#125; &#123;minute&#125; &#123;second&#125; &#123;.suffix&#125;</code>；</li></ul></li></ul><h3 id="书影音neteastmusicgif-brewery">书影音：NeteastMusic、GIF Brewery</h3><ul><li><strong>网易云音乐/NeteastMusic</strong>：<a href="https://music.163.com/#/download" class="uri">https://music.163.com/#/download</a><ul><li>这个为啥不能是 App Store 版，版权问题吗？</li></ul></li><li><strong>GIF Brewery</strong> ：生成 GIF<ul><li>正好这次的作业想要生成一个 GIF 展示，找到了简书上的 <a href="https://www.jianshu.com/p/39beb685d38a" class="uri">https://www.jianshu.com/p/39beb685d38a</a> 一个简易教程：使用丝带的 QucikTime Player 进行屏幕录制；</li><li>然后就是用 GIF Brewery 转为 GIF，我用的是 <a href="http://www.sdifen.com/gifbrewery302.html" class="uri">http://www.sdifen.com/gifbrewery302.html</a> 这里的资源，版本号都是 3.0.2 但不知道为什么和上文中的截图界面不太一样，不过不影响使用~</li></ul></li></ul><h3 id="终端iterm2ohmyzsh">终端：iTerm2、ohmyzsh</h3><p>略，参见 <a href="mweblib://16197027224155">Terminal 配置/美化: iTerm, zsh</a></p><h2 id="专业软件">专业软件</h2><h3 id="vscode">VSCode</h3><ul><li><p>在这里安装以及学习教程 <a href="https://code.visualstudio.com/docs/?dv=osx" class="uri">https://code.visualstudio.com/docs/?dv=osx</a></p><ul><li>插件部分，最近发现一款从 Markdown 发布到知乎的插件，<code>Zhihu On VSCode</code> 教程在这里 <a href="https://marketplace.visualstudio.com/items?itemName=niudai.vscode-zhihu" class="uri">https://marketplace.visualstudio.com/items?itemName=niudai.vscode-zhihu</a> 非常好用</li></ul></li></ul><h3 id="sublime-text">Sublime Text</h3><ul><li>一款非常轻量级的代码编辑器，使用非常非常快，我用于打开各类的文本/配置文档；</li><li><code>View -show console</code> ，或者使用 <code>Control+~</code> 键显示或隐藏 Console ；</li><li>安装插件<ul><li>例如，一个场景就是默认状态打开 win 下的文档会乱码，需要安装插件 <code>ConvertToUTF8</code>；</li><li>为了顺利安装插件，首先需要一个插件管理，在 Console 下输入 <code>Install Package Control</code> 进行安装，参考 <a href="https://packagecontrol.io/installation" class="uri">https://packagecontrol.io/installation</a> ；</li><li>接着，在 <code>Preferences - Package Control</code> 下输入 <code>install package</code> （也可以直接 <code>Shift+Cmd+P</code> 进行搜索），打开一个搜索界面，在其中输入 <code>ConvertToUTF8</code> 选择合适的那一个就可以安装了；</li><li>在 Console 中可以看到安装进度，另外安装成功后在 <code>Package Control: Install Package</code> 中搜索不到那个包了；</li></ul></li></ul><h3 id="r-rstudio">R &amp; Rstudio</h3><ul><li>到清华源下载 R <a href="https://mirrors.tuna.tsinghua.edu.cn/CRAN/" class="uri">https://mirrors.tuna.tsinghua.edu.cn/CRAN/</a> ，直接安装即可，大小约为 100M；</li><li>到这里安装 Rstudio <a href="https://rstudio.com/products/rstudio/download/" class="uri">https://rstudio.com/products/rstudio/download/</a>，直接安装；</li><li>安装之后，可以到 <code>Option-Package</code> 下将 CRAN repository 源换成清华的 <code>China(Beijing 1)</code> ；另外推荐在 <code>Option-Code-Saving</code> 将 Default text encoding 换成 <code>UTF-8</code> 这样可以避免每次保存的时候提示 encoding 为何；</li></ul><h3 id="winbugsopenbugswinecrossover">WinBUGS：OpenBUGS+WINE/CrossOver</h3><ul><li><p>本来就可以愉快使用 Rstudio 了，可惜这次的生统作业还要用到 BUGS ，官网的页面是 <a href="https://www.mrc-bsu.cam.ac.uk/software/bugs/" class="uri">https://www.mrc-bsu.cam.ac.uk/software/bugs/</a>；</p></li><li><p>项目最先起源于 WinBUGS，如其名显然是在 Windows 下运行的；其延续是 OpenBUGS ，提供了 Windows 和 Linux 版本，不过 macOS 没有人权的吗，居然推荐的是用 WINE 进行类似虚拟机的运行；<a href="http://www.openbugs.net/w/Downloads" class="uri">http://www.openbugs.net/w/Downloads</a> 这里的官方描述是</p><blockquote><p>The Windows version of OpenBUGS has been successfully installed on Mac OS X (Intel) using WINE. The Windows installer currently produces an error message at shutdown, but appears to install the program successfully. Testing under WINE has been VERY limited so far.</p><p>The MAC binary version of R2OpenBUGS on CRAN (3.2-1.4) is out of date and will not work with OpenBUGS 3.2.2. For now, Mac users should use install.packages('R2OpenBUGS',type='source') to install the latest (3.2-2.1) version of R2OpenBUGS.</p></blockquote><p>没有更为具体的描述了；</p></li><li><p>这里有一份基于 WineSkin 的教程，安好之后可以直接用 GUI 进行操作，不给似乎不支持 <code>R2OpenBUGS</code> How to use OpenBUGS on Mac OS <a href="https://chenghanyu.wordpress.com/2014/03/26/how-to-use-openbugs-on-mac-os/" class="uri">https://chenghanyu.wordpress.com/2014/03/26/how-to-use-openbugs-on-mac-os/</a> ；</p><ul><li>使用 WineSkin 出了问题，所以试用了 <strong>CrossOver</strong> <a href="https://www.crossoverchina.com/" class="uri">https://www.crossoverchina.com/</a>，有一个月的试用期，成功；</li><li>可能的原因在于 WineSkin 暂定开发了？可以正常安装，但是更新下载到最后无法安装，看官网 <a href="http://wineskin.urgesoftware.com/tiki-index.php" class="uri">http://wineskin.urgesoftware.com/tiki-index.php</a> 也长时间没更新了；</li></ul></li><li><p>另外一种思路是基于完整的 WINE 的，同样可以参考「统计城」的这篇中文教程 Use OpenBUGS in R on Mac OS <a href="https://chenghanyu.wordpress.com/2014/03/27/use-openbugs-in-r-on-mac-os/" class="uri">https://chenghanyu.wordpress.com/2014/03/27/use-openbugs-in-r-on-mac-os/</a>；不过有点复杂，而且 WINE 有点大，不知道以后是否会用到</p><ul><li>需要安装 Wine 的话，可以参考 在 Mac OS X 上安装和配置 Wine <a href="https://beginor.github.io/2016/06/30/install-wine-and-winetricks-on-mac.html" class="uri">https://beginor.github.io/2016/06/30/install-wine-and-winetricks-on-mac.html</a> ，不过可能是配置问题 brew 找不到源，待考；</li><li>另外，还有 <a href="https://miao1007.github.io/mac%E4%B8%8B%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8wine4%E6%9C%80%E5%85%A8%E6%8C%87%E5%AF%BC/">Mac下安装与使用Wine4最全指导</a></li></ul></li><li><p>关于如何使用 <code>WinBUGS</code>，这里有一份简单的教程 WinBUGS 在统计分析中的应用（第一部分）<a href="https://cosx.org/2008/12/statistical-analysis-and-winbugs-part-1/" class="uri">https://cosx.org/2008/12/statistical-analysis-and-winbugs-part-1/</a>；</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Index </category>
          
      </categories>
      
      
        <tags>
            
            <tag> list </tag>
            
            <tag> star </tag>
            
            <tag> 软件 </tag>
            
            <tag> Hackintosh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMD 命令笔记</title>
      <link href="/posts/a360810/"/>
      <url>/posts/a360810/</url>
      
        <content type="html"><![CDATA[<p>【这里完全是对于下文的摘录，虽然感觉之后使用 Windows，尤其是 CMD 的机会已经很少了。】</p><ul><li><a href="https://zhuanlan.zhihu.com/p/67513308">Windows 用户需要知道的 CMD 常用命令总结</a></li></ul><span id="more"></span><h3 id="打开-cmd">打开 CMD</h3><ul><li>方法一：开始菜单 -&gt; Windows 系统 -&gt; 命令提示符。</li><li>方法二：按下快捷键 Win + R 打开运行，输入 cmd 回车。</li><li>方法三：点击任务栏搜索按钮，搜索 cmd 并打开。</li><li>方法四：在资源管理器的地址栏输入 cmd 并回车，cmd 打开后会自动定位到当前目录。</li><li>方法五：右键点击开始菜单的 Win 图标 -&gt; 命令提示符。</li></ul><p>每条命令输入后，回车运行。命令正确则执行完毕后回到 <code>&gt;</code> 状态；命令错误返回错误信息。</p><h3 id="关机重启注销休眠定时">关机、重启、注销、休眠、定时</h3><ul><li>关机：<code>shutdown /s</code></li><li>重启：<code>shutdown /r</code></li><li>注销：<code>shutdown /l</code></li><li>休眠：<code>shutdown /h /f</code></li><li>取消关机：<code>shutdown /a</code></li><li>定时关机：<code>shutdown /s /t 3600</code>（3600 秒后关机）</li></ul><h3 id="目录操作">目录操作</h3><p>切换目录，进入指定文件夹：</p><ul><li>切换磁盘：<code>d:</code>（进入 d 盘）</li><li>切换磁盘和目录：<code>cd /d d:/test</code>（进入 d 盘 test 文件夹）</li><li>进入文件夹：<code>cd \test1\test2</code>（进入 test2 文件夹）</li><li>返回根目录：<code>cd \</code></li><li>回到上级目录：<code>cd ..</code></li><li>新建文件夹：<code>md test</code></li></ul><p>显示目录内容：</p><ul><li>显示目录中文件列表：<code>dir</code></li><li>显示目录结构：<code>tree d:\test</code>（d 盘 test 目录）</li><li>显示当前目录位置：<code>cd</code></li><li>显示指定磁盘的当前目录位置：<code>cd d:</code> 【实测这个在 Powershell 下是切换目录】</li></ul><h3 id="网络操作">网络操作</h3><ul><li>延迟和丢包率：<code>ping ip/域名</code></li><li>Ping 测试 5 次：<code>ping ip/域名 -n 5</code></li><li>清除本地 DNS 缓存：<code>ipconfig /flushdns</code></li><li>路由追踪：<code>tracert ip/域名</code></li></ul><h3 id="进程服务操作">进程/服务操作</h3><p><strong>进程管理：</strong></p><ul><li>显示当前正在运行的进程：<code>tasklist</code></li><li>运行程序或命令：<code>start 程序名</code></li><li>结束进程，按名称：<code>taskkill /im notepad.exe</code>（关闭记事本）</li><li>结束进程，按 PID：<code>taskkill /pid 1234</code>（关闭 PID 为 1234 的进程）</li></ul><p><strong>服务管理：</strong></p><ul><li>显示当前正在运行的服务：<code>net start</code></li><li>启动指定服务：<code>net start 服务名</code></li><li>停止指定服务：<code>n</code></li></ul><h3 id="保存为-.bat-可执行文件">保存为 .bat 可执行文件</h3><p>我们可以将常用的命令输入记事本中，并保存为后缀为 <code>.bat</code> 的可执行文件。</p><p>以后只要双击该文件即可执行指定命令；将文件放入系统【启动】目录中，可以实现开机自动运行。</p><p>注：启动目录位置：[C:Menu]</p><p>例如，在资源管理器卡死时，我们可以使用 <code>taskkill</code> 命令重启。将下面命令保存为 <code>ReExplorer.bat</code>，在需要时双击即可强制重启资源管理器。或直接打开 CMD 运行命令也可以。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">taskkill /f /im explorer.exe &amp; <span class="built_in">start</span> explorer.exe</span><br></pre></td></tr></table></figure><p>迅雷会在后台自动运行 ThunderPlatform.exe 进程和 XLServicePlatform 服务，如果当前没有使用迅雷的话显然没必要。</p><p>我们可以将如下代码保存为 <code>killxl.bat</code>，并放入【启动】目录，开机后会自动运行该脚本，清除这两个进程。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop XLServicePlatform</span><br><span class="line">taskkill /F /im ThunderPlatform.exe</span><br></pre></td></tr></table></figure><h3 id="编辑文件">编辑文件</h3><p>使用<code>type</code>命令可以在<code>cmd</code>命令行下面浏览文本文件</p><p>安装好<code>VScode</code>之后,在<code>cmd</code>中的一个目录下输入<code>code .</code>即可用<code>vscode</code>打开这个目录；编辑结束时候,关闭<code>Vscode</code>即可在<code>cmd</code>中进行下一步的操作。</p><ul><li>若要直接用 VScode 打开当前目录下的一个文件，直接 <code>code 文件名</code>即可。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CMD </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Terminal 配置+美化 iTerm + zsh</title>
      <link href="/posts/64f7b7e2/"/>
      <url>/posts/64f7b7e2/</url>
      
        <content type="html"><![CDATA[<h2 id="基本配置">基本配置</h2><ul><li>终端软件用 iTerm2 <a href="https://iterm2.com/" class="uri">https://iterm2.com/</a></li><li>shell 用 zsh，macOS 默认<ul><li><code>cat /etc/shells</code> 查看有哪些，<code>echo $SHELL</code> 查看用的是哪个解释器</li><li>更改 shell 指令 <code>chsh -s /bin/zsh</code></li></ul></li><li>配合用 oh-my-zsh <a href="https://ohmyz.sh/" class="uri">https://ohmyz.sh/</a><ul><li>GitHub <a href="https://github.com/ohmyzsh/ohmyzsh" class="uri">https://github.com/ohmyzsh/ohmyzsh</a></li></ul><p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure></p></li><li>很多人用的 <code>powerline</code> <a href="https://github.com/powerline/powerline" class="uri">https://github.com/powerline/powerline</a><ul><li>是啥？「Powerline is a statusline plugin for vim, and provides statuslines and prompts for several other applications, including zsh, bash, fish, tmux, IPython, Awesome, i3 and Qtile.」</li><li>但原来的样式似乎也很好看，不准备折腾了</li><li>注意需要配合字体 <code>Meslo</code> <a href="https://github.com/powerline/fonts" class="uri">https://github.com/powerline/fonts</a></li><li>参见<a href="https://www.jianshu.com/p/246b844f4449">这里</a></li></ul></li></ul><h2 id="zsh">zsh</h2><h3 id="关于-zsh">关于 zsh</h3><p>摘自 MacTalk 的一篇介绍文章 <a href="http://macshuo.com/?p=676">终极 Shell</a></p><ol type="1"><li>兼容 bash，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。</li><li>强大的历史纪录功能，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。</li><li>智能拼写纠正，输入gtep mactalk * -R，系统会提示：zsh: correct ‘gtep’ to ‘grep’ [nyae]? 比妹纸贴心吧，她们向来都是让你猜的……</li><li>各种补全：路径补全. 命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全</li><li>智能跳转，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。</li><li>目录浏览和跳转：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。</li><li>在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。</li><li>通配符搜索：ls -l **/*.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。</li><li>更强的别名：请参考配置一节。</li><li>插件支持：请参考插件一节。</li></ol><h2 id="zshoh-my-zsh">zsh/oh-my-zsh</h2><p>oh-my-zsh GitHub <a href="https://github.com/ohmyzsh/ohmyzsh" class="uri">https://github.com/ohmyzsh/ohmyzsh</a> wiki <a href="https://github.com/ohmyzsh/ohmyzsh/wiki" class="uri">https://github.com/ohmyzsh/ohmyzsh/wiki</a> ###TODO</p><h3 id="zsh-主题">zsh 主题</h3><p>目前用了（默认的？） <code>robbyrussell</code> 也挺好看</p><h3 id="插件">插件</h3><p>Github: <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/" class="uri">https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/</a></p><h4 id="总论">总论</h4><ul><li>基本<ul><li>可以看到上面的GitHub列表或者 <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins">wiki</a> 中查看好用的插件；</li><li>其实在 <code>oh-my-zsh/plugins</code> 目录下也可看到，并且可以看到一些底层实现的影子；</li></ul></li><li>安装<ul><li>部分插件需要额外安装，思路：<ul><li>首先看 <a href="https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins">wiki</a>；</li><li>根据插件官网的方式进行安装，注意安装后（应该）可以不必根据那上面的指南 source 或者修改 <code>.zshrc</code>；<ul><li>目前倾向于可以直接安装的通过 <code>brew</code> （或者如 <code>pip</code> 安装） 进行 👍；</li><li>部分直接支持 <code>zsh</code>，可通过 <code>git</code> 下载，将其放在 <code>.oh-my-zsh/custom/plugins</code> 下；</li></ul></li><li>因为若是在 <code>oh-my-zsh/plugins</code> 中的插件，里面应该有激活的指令，因此只需要在配置中的 <code>plugins</code> 中添加名字即可。</li></ul></li></ul></li></ul><h3 id="需要安装的">需要安装的</h3><h4 id="zsh-syntax-highlighting">zsh-syntax-highlighting</h4><p>地址 <a href="https://github.com/zsh-users/zsh-syntax-highlighting" class="uri">https://github.com/zsh-users/zsh-syntax-highlighting</a></p><p>（似乎也可以 brew 安装之后 <code>source $&#123;(q-)PWD&#125;/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code>） 但如果用的是 Oh-my-zsh，这样安装似乎更方便：先 clone 到 zsh 的插件目录，然后进行配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br></pre></td></tr></table></figure><p>在 <code>~/.zshrc</code> 中配置</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>=( [plugins...] zsh-syntax-highlighting)</span><br></pre></td></tr></table></figure><h4 id="zsh-autosuggestions">zsh-autosuggestions</h4><p>地址 <a href="https://github.com/zsh-users/zsh-autosuggestions" class="uri">https://github.com/zsh-users/zsh-autosuggestions</a></p><p>试了下超级好用！</p><p>可以 <code>git</code> 安装到上述目录下，也可用brew：<code>brew install zsh-autosuggestions</code> 然后配置开启</p><h4 id="autojump">autojump</h4><p>plugin <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/autojump" class="uri">https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/autojump</a> GitHub <a href="https://github.com/wting/autojump" class="uri">https://github.com/wting/autojump</a></p><h5 id="安装一">安装一</h5><p>安装根据官网 <code>brew install autojump</code>，然后根据提示将下面这样加入配置即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[ -f /usr/<span class="built_in">local</span>/etc/profile.d/autojump.sh ] &amp;&amp; . /usr/<span class="built_in">local</span>/etc/profile.d/autojump.sh</span><br></pre></td></tr></table></figure><h5 id="安装二">安装二</h5><p>实测，可以 <code>brew install autojump</code> 之后，直接配置 <code>.zshrc</code> ，在 <code>plugins</code> 中加入 <code>autojump</code> 即可； 机制应该是在 <code>.oh-my-zsh/plugins/autojump/autojump.plugin.zsh</code> 中进行了检测。</p><h5 id="语法">语法</h5><p>试用：autojump 会记录你浏览过的目录列表，对于每个目录建立一个索引/权重，然后使用指令的时候跳转到匹配的权重最大的那一个。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">j foo       <span class="comment"># 打开包含 foo 的目录</span></span><br><span class="line">jc bar      <span class="comment"># 跳转到子目录下的含 bar 的目录下</span></span><br><span class="line">jo music    <span class="comment"># 用文件浏览器打开</span></span><br><span class="line">jco images  <span class="comment"># 用文件浏览器打开子目录</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 帮助</span></span><br><span class="line">j -h</span><br><span class="line"><span class="comment"># 查看目录存储情况</span></span><br><span class="line">j -s</span><br></pre></td></tr></table></figure><h3 id="无需安装的">无需安装的</h3><h4 id="git">git</h4><p>默认开启，GitHub <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git" class="uri">https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/git</a>。 记录一下常用的指令快捷键：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">g       git</span><br><span class="line"></span><br><span class="line">ga      git add</span><br><span class="line">gaa     git add --all</span><br><span class="line"></span><br><span class="line">gb      git branch </span><br><span class="line">gba     git branch -a</span><br><span class="line">gbd     git branch -d</span><br><span class="line"></span><br><span class="line">gc      git commit</span><br><span class="line"></span><br><span class="line">gco     git checkout</span><br><span class="line"></span><br><span class="line">gcp     git cherry-pick</span><br><span class="line"></span><br><span class="line">gf      git fetch</span><br><span class="line">gp      git pull</span><br><span class="line">gup     git pull --rebase</span><br><span class="line">gupv    git pull --rebase -v</span><br><span class="line">gupa    git pull --rebase --autostash</span><br><span class="line">gp      git push</span><br><span class="line"></span><br><span class="line">glg     git log</span><br><span class="line">glgg    git log --graph</span><br></pre></td></tr></table></figure><h4 id="extract">extract</h4><p>默认安装仅需要开启即可；并且配置了 <code>x: aliased to extract</code>。 试用：直接 <code>x filename</code> 即可</p><h4 id="sudo">sudo</h4><p>连按两下 <code>ESC</code> 在命令行首加上 <code>sudo</code>。</p><h2 id="iterm">iTerm</h2><h3 id="快捷键">快捷键</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">command + t          新建标签</span><br><span class="line">command + w          关闭标签</span><br><span class="line">command + 数字 command + 左右方向键    切换标签</span><br><span class="line">command + enter      切换全屏</span><br><span class="line">command + f          查找</span><br><span class="line">command + d          垂直分屏</span><br><span class="line">command + shift + d  水平分屏</span><br><span class="line">command + option + 方向键 command + [ 或 command + ]    切换屏幕</span><br><span class="line">command + ;          查看历史命令</span><br><span class="line">command + shift + h  查看剪贴板历史</span><br><span class="line">Control + u          清除当前行</span><br><span class="line">Control + l          清屏</span><br><span class="line">Control + a          到行首</span><br><span class="line">Control + e          到行尾</span><br><span class="line">Control + f/b            前进后退</span><br><span class="line">Control + p          上一条命令</span><br><span class="line">Control + r          搜索命令历史</span><br></pre></td></tr></table></figure><h3 id="iterm-主题">iTerm 主题</h3><p>GitHub <a href="https://github.com/mbadolato/iTerm2-Color-Schemes" class="uri">https://github.com/mbadolato/iTerm2-Color-Schemes</a></p>]]></content>
      
      
      <categories>
          
          <category> Code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Terminal </tag>
            
            <tag> zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课程作业：关于「Twitter 上的政治同质性」的两篇论文之评述</title>
      <link href="/posts/d431014c/"/>
      <url>/posts/d431014c/</url>
      
        <content type="html"><![CDATA[<blockquote><p>2020-04-02</p></blockquote><p>以 <code>Echo Chamber</code> 为关键词在 Google Scholar 中进行搜索，筛选了其中的 <a href="https://academic.oup.com/joc/article-abstract/64/2/317/4085994">Echo Chamber or Public Sphere? Predicting Political Orientation and Measuring Political Homophily in Twitter Using Big Data</a> 和 <a href="https://journals.sagepub.com/doi/abs/10.1177/0956797615594620">Tweeting From Left to Right: Is Online Political Communication More Than an Echo Chamber?</a> 两篇论文阅读，它们分别于2014 年和 2015 年被发表在 <code>Journal of communication</code> 及 <code>Psychological science</code> 上，两篇论文研究的对象都围绕着 Twitter 上的政治同质性，在研究内容和研究方法上有相似性。</p><h2 id="echo-chamber-or-public-sphere-predicting-political-orientation-and-measuring-political-homophily-in-twitter-using-big-data">Echo Chamber or Public Sphere? Predicting Political Orientation and Measuring Political Homophily in Twitter Using Big Data</h2><p>作者首先指出了研究网络传播中的政治同质性的重要性，因为这决定了数字媒体是作为「公共场所」（public sphere）提供了多元观点和信息的交互，还是作为「回音壁」增强了公民的固有成见。</p><p>造成政治讨论中观点分裂的原因在于同质性（Homophily）：相似的个体更有可能形成联系，这里理论所体现的思想可追溯到 Festinger 著名的「认知失调理论」（cognitive dissonance and selective exposure theories）[^cognitive dissonance] 。正是因为同质性的存在，人际关系之间容易形成相似的世界观政治观，从而可能造成政治观点的极化（political polarization）。</p><p>随着 SNS 的流行，这些平台提供了实时的、跨越地理限制的讨论的可能性，这些新媒介上的信息传播可能形成两种截然不同的模式，即有助于信息和观点的广泛传播从而起到「公共领域」（Public Sphere）的作用，另一方面则可能因为用户对于信息的筛选而导致他们不断接触到同质化的内容，形成「回音壁」（Echo Chamber）。Twitter作为其中一个典型的平台，有着<strong>「公共领域」和「回音壁」</strong>的双重特性：一方面，因为用户发布的内容是公开的，所有人可见可转发，另外 hashtags and mentions (#, @) 使得对于某一话题的讨论无需用户之间双向关注或者建立群聊，所以有着新闻媒体（newsy medium）的特性，即作为公共领域提供讨论的空间；另一方面， Twitter 也和 Facebook 一样拥有社交媒介（social medium）的特性，即允许一种双向的、对称的关注关系，从而可能形成回音壁效应，固化个人的观点或政治倾向。</p><p>那么，Twitter 在政治领域是更像公共领域还是回音壁呢？这是作者关注的焦点，即 Twitter 对于政治同质性起到了怎样的影响。另外，此前的研究对于民主派和共和派在政治同质性上是否存在差异有所纷争，部分学者认为共和派在某些心理因素的影响下有着更高的同质性，而另外一些研究则认为两者没有差异或者恰好相反，作者希望通过对于 2009 年所有的 Twitter 用户的研究，对于上述问题进行回应。总之，本文探究的主要问题有二：</p><ol type="1"><li><strong>Twitter 作为新的媒介是遏制还是促进了政治同质性（political homophily）；</strong></li><li><strong>民主派和共和派在政治同质性上有何差异。</strong></li></ol><h3 id="method">Method</h3><p>该文在方法上结合了基于机器学习的文本分析（machine learning-based analysis of textual content）和社交网络分析（social network analysis），对于分析 Twitter 作为一种政治传播的媒介提供了一套系统性的方法。</p><p>具体来说，作者分别基于不同的预先标注好的数据集训练出两个分类模型，其中使用 TF-IDF 对于语料进行编码；第一个分类器从测试数据集中找到政治文本，第二个分类器对于此政治文本是属于共和派还是民主派的观点进行区分；对于训练的结果用十折交叉验证（10-fold Cross-Validation）进行评估以验证其有效性。最后，根据用户所发 tweet 的性质对于其政治立场进行区分。</p><p>基于上述的机器学习算法，可以得到每个用户的标签（Republicans, Democrats, or nonpolitical），再根据用户之间的关注关系（网络，节点为用户，有向边为用户之间的关注关系），定义<strong>政治同质性</strong>为所有边中关注者和被关注者具有相同的政治倾向的那些边的比例。</p><h3 id="results">Results</h3><p>由于上述分类算法所得的共和派和民主派的人数不同，因此其政治同质性的基准是不同的；为此，根据每个的用户的关注数量、被关注数量等信息，可以计算出在没有政治偏好的情况下生成的网络的政治同质性，作为比较的基准（在下表中真实数据后的括号中标出）。</p><p>因为 Twitter 同时具有新闻媒体和社交媒介的双重属性，即是否是双向关注关系，作者将完整网络（general）中的双向关注的那部分和单向关注的部分抽取出来形成两个子网络（symmetric, nonsymmetric）。总的来看，双向网络中的政治同质性比单向网络中高出 16.1%，这说明，如果我们把 Twitter 看成是一个社交媒体而非新闻媒介，那么它更像是一个回音壁。</p><p>对于第二个问题，作者分别计算了那些被划分为民主派/共和派的 Twitter 用户的政治同质性（<code>表 5</code>），结果显示民主派似乎有着较高的政治同质性而共和派则更为开放。</p><p>注意到，上面的分类结果是基于用户所发表的 tweet 的，然而在美国社会中自由主义的思潮在社会文化上更占主流，因此单单从用户所发表的言论来看可能会产生偏差；或者说，我们仅仅能说该用户具有民主派的思想（“thinkers”）。为了得出更全面的结论，作者进行了第二组实验，筛选出所有用户中关注了民主党和共和党官方 Twitter 账户的那部分，重新计算其政治同质性。相较于之前的全部用户，这部分人清晰地表明了自己的党派归属，有理由相信这部分用户在政治活动和政治观点表达中更为积极，因此称其为活动者（“activists”）。结果如<code>表 6</code> 所示，有趣的是，这里的结果和上一次完全相反。</p><p><img src="16051735537774.jpg" /></p><p>总结讨论如下：</p><ul><li>对于 Twitter 更像是一个公共领域还是一个回音壁，这取决于我们如何分析这个媒体：如果我们把 Twitter 看做是一种新的社交媒体那么它更像是一个回音壁（高政治同质性），而如果我们将其认作是新的新闻媒体，则 Twitter 在一定程度上起到了公共领域的作用；</li><li>若我们从政治讨论的内容来看，民主派的思想者似乎比共和派的思想者有着更高的政治同质性；若我们仅关注那些有着明显的隶属关系（关注了党派的官方 Twitter 号）的用户，则可发现民主派的活动者比共和派的活动者有着更高的政治同质性；</li><li>作者对于上述现象给出了一定的解释：由于自由主义思想在美国文化中占据了更为主流的地位，因此这样的观点/用户更容易被浏览到/关注，所以在第一组结果中表现了更高的同质性；事实上共和派较之于民主派更多地关注了官方政党的 Twitter 号（分类为民主派的人数是共和派的 10 倍，而关注共和党官方 Twitter 号的人数却是民主党的 5 倍），在政治活动中表现得更为积极，所以在第二组结果中共和派显得更为同质化（在第一组结果中被低估了）。</li></ul><h2 id="tweeting-from-left-to-right-is-online-political-communication-more-than-an-echo-chamber">Tweeting From Left to Right: Is Online Political Communication More Than an Echo Chamber?</h2><p>这篇文章关注的领域同样是网络环境下的信息传播方式。作者指出，此前部分研究认为网络媒介可以带来信息的更广泛传播，从而促进公共讨论（public debate），而另外的一些研究则认为更简便更丰富的信息源反而会因为「选择性接受」（selective exposure）而造成「回音壁效应」，这种选择性的接受、观点的极化在政治领域中尤为显著。另外，对于自由主义者和保守主义者在信息的筛选上是否存在差异这一问题，不同的学者也有分歧，部分心理学家认为两者不存在差异而另一些则指出保守主义者出于心理上更排斥不确定性、威胁和社会冲突（uncertainty, threat, and social discord）而倾向于回音壁环境。总而言之，文章讨论了以下两个问题：</p><ol type="1"><li><strong>网络上的传播模式是更像回音壁（echo chamber）还是全国性讨论（national conversation），讨论的话题包括意识形态的隔离和极化（Ideological Segregation and Polarization）；</strong></li><li><strong>对于这种信息的选择性吸收和传播（selective exposure），意识形态的隔离和极化，在自由主义和保守主义者之间有着怎样的差异？</strong></li></ol><h3 id="method-1">Method</h3><p>在方法部分，该文综合了之前的几篇论文的思想，主要的逻辑是<strong>隐空间模型</strong>（latent space model）：该模型的目标是要学习到个人在一个隐式的社会空间中的位置，其认为这个位置可以根据该个体在社会网络中的连接关系来学习得到；背后的思想是「同质性」，即相似社会经济文化背景的人更有有关系（如朋友、社团等），这符合社会学中的理论，也与我们的日常经验相一致。形式上看，两个节点发生连接的概率为 <span class="math display">\[p(Y_{ij}=1|\alpha_i, \beta_j, d_{ij}) = Logistic(\alpha_i +\beta_j-d_{ij})\]</span> 即认为 <span class="math inline">\(i\)</span> 和 <span class="math inline">\(j\)</span> 之间发生联系的概率与两者之间的距离 <span class="math inline">\(d_{ij}\)</span> 负相关，距离越远，说明两者之间的相似性越小，发生联系的可能也越小；其中的 <span class="math inline">\(\alpha_i\)</span> 和 <span class="math inline">\(\beta_j\)</span> 则是个体的信息，如在单向的关注网络中，前者表征个体 <span class="math inline">\(i\)</span> 关注的账号数，后者表征个体 <span class="math inline">\(j\)</span> 的粉丝数。在参数估计的方法，传统上有极大似然（MLE）和马尔可夫链蒙特卡洛方法（MCMC）等，考虑到本数据集较大，这里采用了<strong>对应分析法</strong>（Correspondence Analysis, CA）[^ca]，以减少待估计的隐性参数和计算复杂度。</p><p>具体来说，作者希望得到每个用户在自由主义-保守主义（liberal-conservative ）两级上的倾向，也即目标是一个一维数值；根据上面模型中各用户之间的相对位置可选定一个原点，然后再对数据进行标准化（使得均值为 0，方差为 1），即可得到所需的<strong>「liberal-conservative 系数」</strong>—— 0 代表中立而负值和正值分别代表自由主义和保守主义，绝对值表示政治立场的偏激程度。</p><p>注意到，不同于第一篇论文仅仅给出了用户政治倾向的分类，这里对于用户的倾向给出了一个更为细致的数值。在对用户打上标签之后，前一篇文章直接通过网络结构的信息对于政治同质化进行了研究；而在本文中，作者关注的则是不同类型的新闻话题的传播模式。为此，作者筛选了 2012-2014 年之间被广泛讨论的 12 个话题，包括 6 个政治话题和 6 个非政治话题（参见 <code>图 2</code> ，不另行列出）；通过相应的关键词识别出讨论这些话题的 tweet，再利用这些 tweet 的转发关系对于意识形态的隔离和极化水平进行了分析。</p><h3 id="validation">Validation</h3><p>本文对于上述模型所得的「liberal-conservative 系数」之效度进行了较为细致的探讨，从三个层次用可视化的方法进行了验证：</p><ul><li><code>图 1a</code> 横轴是美国各个州的平均 liberal-conservative 系数，纵轴是传统的基于调查和社会人口统计学的结果，可见两者有很高的相关性（<span class="math inline">\(r=.87\)</span>），从平均的角度说明了该模型所得结果的有效性；</li><li><code>图 1b</code> 展示了政府高层的系数和他们的 Roll-Call Vote 之间的关系，并根据不同的党派进行了标记，也可以看到两者之间高度相关（<span class="math inline">\(r=.95\)</span>），说明至少对于这一部分人来说，该模型给出了较为理想的结果；</li><li><code>图 1c</code> 以箱线图的形式展示了注册为共和党或民主党的那部分用户的 liberal-conservative 系数分布，箱子中包括了分位数在 <span class="math inline">\([.25,.75]\)</span> 之间的样本，可以看到注册为共和党的那部分用户的系数大多大于零，而公民党的那部分则为负数，说明模型对于两类人起到了较好的区分作用。</li></ul><p><img src="16051735718773.jpg" /></p><h3 id="results-1">Results</h3><p>根据上述模型所得的结果，作者首先对于第一个问题进行了讨论：</p><ul><li>Twitter 上的转发模式</li></ul><p>对于每一个热点话题（包括 6 个政治性话题和 6 个非政治性话题），根据转发者和被转发者的 liberal-conservative 系数，对每一条被转发的 Twitter 进行分类，以热力图的形式进行展示（<code>图 2</code> ），横轴表示被转发者的系数，而纵轴表示转发者的系数。在对角线上的颜色越深，说明对于这一话题的讨论意识形态隔离越为显著。</p><p>可以看到，对于政治类的话题， Twitter 用户倾向于转发与自己的政治观点相一致的内容，体现为<code>图 2a</code> 中较为明显的深色对角线。另外，保守主义者相较于自由主义者在意识形态的隔离上更为显著，例如，对于 2012 年大选和政府停摆这一话题，系数为较大正值的那部分用户（强烈保守主义倾向）集中地转发保守程度同样较高的用户的 tweet，体现为右上角集中的深色区域。然而，对于非政治话题来说（<code>图 a2</code>），这种意识形态的区隔相对来说就没有那么显著，例如对于 2014 年超级碗、冬奥会， Twitter 转发在意识形态上没有呈现出明显的区隔现象。</p><p><code>3a, 3b</code> 两图从另一个角度对于上述现象进行了展示：这里用了 <code>Force-directed Layout</code> 算法进行可视化分析，将用户表示点，而转发关系则表示为边，该算法将各个用户映射到一个线性空间上，距离表示用户之间的相似度，相似的用户聚在一起形成「簇」（cluster, or clique）。图中的颜色深浅表示了 liberal-conservative 系数大小。这里选了2012 年大选和 2014 年超级碗的 Twitter 转发关系进行可视化，可以看到，对于前者，可视化结果出现了明显的两个「簇」，其中的成员分别代表了两种政治倾向；而对于后者来说，用户并没有显示出明显的大的类别，用户的转发模式更为分散，这与上面的「意识形态隔离与话题的类型有关」的结论是一致的。</p><ul><li>意识形态同质化程度</li></ul><p>作者又对于每个话题下的被转发者的平均 liberal-conservative 系数进行了计算并取绝对值，这一数值越高，说明对于这一话题的讨论，用户更倾向于传播那些政治观点更为强烈的 Twitter 账户的言论，也就表明对于这些话题的讨论更两极化（polarization），所得结果如<code>图 3c</code> 所示。</p><p>另外，在 Twitter 讨论中表现出来的观点极端化现象可能会因为某些原因而发生改变。以对于纽敦镇小学校园枪击事件[^shooting]的讨论为例，观察<code>图 3d</code> 中的紫色回归线，可见对于该事件的转发随着时间的推移呈现出极化程度增加的趋势。作者指出，这其中可能的原因是讨论的焦点从这场悲剧本身转为对于枪支控制这一政治性更强的话题中，讨论的方向的改变也引起了用户转发模式的变化，在这一案例中，Twitter 平台承担的身份从一个全国性的讨论空间（national conversation）转变为更接近于回音壁的空间。</p><p><img src="16051735931899.jpg" /></p><p><img src="16051736000399.jpg" /></p><p>其次，作者讨论了自由主义者和保守主义者在意识形态隔离和极化上的不同表现，即<strong>意识形态的不对称（ideological asymmetry）</strong>。<code>图 4</code> 展示了自由主义者和保守主义者在这 12 个话题上参与跨意识形态的讨论的程度，该数值越大，说明这些用户更有可能转发不同派别的用户的 tweet，从一定程度上表征了用户是否愿意接受更多元的观点。由下图可见：</p><ol type="1"><li>对于所有的政治性话题，自由主义者相较于保守主义者更有可能参与到跨意识形态的传播中（cross-ideological）（蓝色点普遍在红色点的右侧）；</li><li>对于非政治性的话题，跨意识形态的传播更为频繁，即表现为下面的六个话题跨意识形态的传播程度更高；</li><li>自由主义者和保守主义者的这种不对称性在政治性话题中体现得更为显著，即蓝色和红色两点的距离在上面六个话题中更大。</li></ol><p><img src="16051736076799.jpg" /></p><h2 id="comparison">Comparison</h2><p>所选的两篇文章研究的对象都是 Twitter 网络上的关注关系或是转发关系，实质都是信息在这样的新的传播媒介中发生了怎样的传播，最终造成了怎样的结果，是促进还是阻碍了观点的交流，是否形成了不同政治立场的用户之间的隔离，或是政治观点或立场的极化。</p><p>在方法层面上，两篇文章都使用了大数据集和创新的数据处理方式，但又存在者很多的差异。第一篇文章从用户的 tweet 出发，采用了文本分类的机器学习算法，从而希望对于用户的政治倾向进行区分，在此之后才使用社会网络分析的方式对于政治同质化水平进行研究。而第二篇文章则没有使用文本信息，直接从一组初始化的账户开始，利用网络中的关注关系对于用户进行划分，并在此基础上进行后续的分析。我认为两种方法各有利弊，前者可以综合利用用户的文本信息从而对于用户的倾向有更为清晰的把握，而后者则完全从关注关系出发，对于信息的挖掘相对较少，但也避免了文本处理的计算复杂度和其中的偏差。另一方面，不同的分析方法可能是出于实现的可能性：Twitter 用户数量在 2013 年从 2009 年底的 0.18 亿增长到了 2.41 亿，而所发 tweet 的数量增长则更大，若要在 2015 年采用第一篇文章中所使用的基于文本分析的方法来对如此巨大的数据进行分析，所需要的算力更大，在操作上很难实现。</p><p>在内容方面，两者都关注到了政治同质性的问题，以及不同政治倾向的公众在同质性上的差异，分析的侧重点却不同。第一篇文章聚焦的点更为集中，强调的是用户在关注关系中所体现出来的政治同质性，分析了 Twitter 作为新的传播媒介在实质上是作为公共领域促进了政治讨论还是更像一个回音壁固化了用户的政治观点，并使用了两种测量维度对于共和派和民主派在政治同质化上表现进行了细致辩证的比较。不同于第一篇通过关注关系来对同质化进行分析，第二篇文章考虑的是用户的转发行为，是更为直接的传播方式。另外，第二篇文章比较了政治内容和非政治内容在传播模式上的区别，主要筛选了 12 个有代表性的公众话题并且对于传播过程中的隔离和极化现象分别进行了研究，并在其中引入了时间的维度。</p><p>在分析的方法上，第一篇文章更重视数值性的比较，偏重定量结果；而第二篇则使用了不同的方式对于问题的多个方面展开了讨论，尤其是其中使用了多种可视化的方法，结论更为直观。</p><p>我认为第一篇论文可以改进的地方包括：所选用的数据集偏旧，那时 Twitter 还处在发展过程中，其用户不能代表普遍的美国公众，从而产生偏差；此外，文中对于「思想者」和「活动者」的判断标准似过于简单，削弱了其结果的可信度。而对于第二篇论文，其用户分类方法完全基于网络结构，利用的信息偏少，除此之外可以利用更新的文本处理技术，并结合用户的账号信息对于用户的政治倾向进行更为细致的处理；另外，该分类算法需要一个初始化的账号集合，所选的代表性话题及其关键词也需要人工的筛选，这可能带来一定的偏差，为此可以考虑另外的手段来减少这种偏差，例如分析更多的话题，从而使结果更具有普遍性。</p><p>[^cognitive dissonance]: https://en.wikipedia.org/wiki/Cognitive_dissonance [^ca]: https://en.wikipedia.org/wiki/Correspondence_analysis [^shooting]: https://en.wikipedia.org/wiki/Sandy_Hook_Elementary_School_shooting</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> PJ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 社交网络 </tag>
            
            <tag> 大数据传播 </tag>
            
            <tag> PJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + 搭建 Chevereto 图床 &amp; Typora 上传指南</title>
      <link href="/posts/2e391cc5/"/>
      <url>/posts/2e391cc5/</url>
      
        <content type="html"><![CDATA[<p>在 <a href="https://www.cnblogs.com/easonshi/p/13205857.html">Markdown 新解决方案：Typora+本地备份+GitHub 图床</a> 中，我给出的 Markdown 图片管理方案是采用本地备份加上 GitHub 同步的思路；简言之，为了保证图片的安全性采用了本地存储，需要进行分享的话将其中的图片连接改为 GitHub 图床，这种方案在稳定性上表现得很好，但是操作上到底还是有些繁琐（需要手动上传图片，并运行链接替换的代码）。</p><p>疫情在家，这样的方案也十分有效，最近回了学校，重新用起了 NAS，于是参考这篇文章 <a href="http://guiu.xyz/p/ab70f304.html" class="uri">http://guiu.xyz/p/ab70f304.html</a> 【已失效】，配合 Chevereto 探索了一套新的方案；相较于之前的那种，这里的优势在于配合代码实现了图片的自动上传，因此可以直接分享；但与此同时带来的问题在于，服务依赖于图床的稳定性，由于是自用的 NAS 所以相对来说还是可以的，用了一个多月下来体验不错（域名选择的话，直接用了 Synology 免费的那个 id.synology.me 还是比较可靠的）。</p><span id="more"></span><p>【20201119 更新：目前以全面转向 MWeb，参见 <a href="mweblib://16050695994993">MWeb 入门指南</a>】</p><h2 id="搭建-chevereto-图床">搭建 Chevereto 图床</h2><p>图床搭建的话，可以参考这一篇 <a href="https://post.smzdm.com/p/a3gvxnon/" class="uri">https://post.smzdm.com/p/a3gvxnon/</a> ，没什么好多说的，我把当时参考的链接放在下面。</p><ul><li>Chevereto 的 GitHub 主页在这里 <a href="https://github.com/Chevereto/Chevereto-Free" class="uri">https://github.com/Chevereto/Chevereto-Free</a> ；这是中文文档 <a href="https://ch.cndrew.cn/cn/Preface/Introduction/" class="uri">https://ch.cndrew.cn/cn/Preface/Introduction/</a></li><li>另外可能需要图片的转移，参见 <a href="http://guiu.xyz/p/1bcf5275.html" class="uri">http://guiu.xyz/p/1bcf5275.html</a> 【已失效】写的非常好</li><li>Typora 结合 Chevereto 方案：python编写typora插件实现传图到chevereto <a href="http://guiu.xyz/p/ab70f304.html" class="uri">http://guiu.xyz/p/ab70f304.html</a> 【已失效】。下文给出了自己基于此稍作修改后的代码</li></ul><p>搭建完成之后可以收获一个支持多账号的在线图床服务，可以自行探索，我不在用也就不多说了。</p><p><strong>注意</strong>：另外，在默认配置下基于 API 上传的图片是会保存在奇怪的账号下，可以自行设定所需要保存的用户和相册地址，官方说明见 <a href="https://ch.cndrew.cn/cn/API/API%20V1/">这里</a>；我在 <a href="mweblib://16050695994993">MWeb 入门指南</a> 中也给出了设置方法。</p><h2 id="利用-python-实现-typora-图片上传">利用 Python 实现 Typora 图片上传</h2><p>原始方案来自 <a href="http://guiu.xyz/p/ab70f304.html" class="uri">http://guiu.xyz/p/ab70f304.html</a> 不过网页已失效，<a href="https://zhuanlan.zhihu.com/p/150785463">这里</a> 有一个备份可供参考，下面也赘述一番。</p><p>在合适的文件夹下新建一个 <code>upload.py</code> 文件，内容如下（记得当时好像做了一点修改，原始的可参考上面的知乎链接）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># author: guiu</span></span><br><span class="line"><span class="comment"># data: 2020.2.28</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> mimetypes</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">APP_DESC = <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">一个上传图片到chevereto图床的命令行工具</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(APP_DESC)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">1</span>:</span><br><span class="line">    sys.argv.append(<span class="string">&#x27;--help&#x27;</span>)</span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser()</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-s&#x27;</span>, <span class="string">&#x27;--source&#x27;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, nargs=<span class="string">&#x27;+&#x27;</span>, <span class="built_in">help</span>=<span class="string">&quot;&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--config&#x27;</span>, default=<span class="string">&quot;./config.json&quot;</span>, <span class="built_in">help</span>=<span class="string">&quot;读取配置文件&quot;</span>, required=<span class="literal">True</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从参数中获取要上传的文件列表</span></span><br><span class="line">img_list = args.source</span><br><span class="line"><span class="comment"># print(img_list)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read_conf</span>(<span class="params">path</span>):</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(path,<span class="string">&quot;r&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        confstr = f.read()</span><br><span class="line">        conf = json.loads(confstr)</span><br><span class="line">    <span class="keyword">return</span> conf</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">up_to_chevereto</span>(<span class="params">img_list</span>):</span></span><br><span class="line">    <span class="comment"># 获得本地图片路径后，上传至图床并记录返回的json字段</span></span><br><span class="line">    <span class="keyword">for</span> img <span class="keyword">in</span> img_list:</span><br><span class="line">        <span class="comment"># 先判断传过来的是本地路径还是远程图片地址</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;http&quot;</span> == img[:<span class="number">4</span>]:</span><br><span class="line">            <span class="comment"># 非本地图片的话可以考虑下载到本地再上传，但是没这个必要</span></span><br><span class="line">            <span class="built_in">print</span>(img)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                res_json = upload(formatSource(img))</span><br><span class="line">                parse_response_url(res_json,img)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="built_in">print</span>(img+<span class="string">&quot;\t上传失败&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">upload</span>(<span class="params">files</span>):</span></span><br><span class="line">    <span class="comment"># 图床api</span></span><br><span class="line">    <span class="comment"># APIKey = &quot;THERE PUT YOUR APIKEY&quot;</span></span><br><span class="line">    conf = read_conf(args.config)</span><br><span class="line">    url = conf[<span class="string">&#x27;url&#x27;</span>] + <span class="string">&quot;?key=&quot;</span> + conf[<span class="string">&#x27;APIKEY&#x27;</span>]</span><br><span class="line">    r = requests.post(url, files=files)</span><br><span class="line">    <span class="keyword">return</span> json.loads(r.text)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">formatSource</span>(<span class="params">filename</span>):</span></span><br><span class="line">    imageList = []</span><br><span class="line">    mime_type = mimetypes.guess_type(filename)[<span class="number">0</span>]</span><br><span class="line">    imageList.append(</span><br><span class="line">        (<span class="string">&#x27;source&#x27;</span>, (filename, <span class="built_in">open</span>(filename, <span class="string">&#x27;rb&#x27;</span>), mime_type))</span><br><span class="line">    )</span><br><span class="line">    <span class="comment">#print (imageList)</span></span><br><span class="line">    <span class="keyword">return</span> imageList</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_response_url</span>(<span class="params">json, img_path</span>):</span></span><br><span class="line">        <span class="comment"># 从返回的json中解析字段</span></span><br><span class="line">    <span class="keyword">if</span> json[<span class="string">&#x27;status_code&#x27;</span>] != <span class="number">200</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;\tweb端返回失败,可能是APIKey不对. status_code &#123;&#125; .&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">            img_path, json[<span class="string">&#x27;status_code&#x27;</span>])</span><br><span class="line">        )</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        img_url = json[<span class="string">&quot;image&quot;</span>][<span class="string">&quot;url&quot;</span>]</span><br><span class="line">        <span class="built_in">print</span>(img_url)</span><br><span class="line"></span><br><span class="line">up_to_chevereto(img_list)</span><br></pre></td></tr></table></figure><p>可以看到需要调用 Chevereto 的 APIKEY。需要在 Chevereto 的 <code>仪表板-设置</code> 中，在设置旁边的下列菜单中选择 <code>API</code> ，即可找到 key，默认有一个也可以自定义。</p><p>新建一个 <code>config.json</code> 保存配置</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;APIKEY&quot;</span>: <span class="string">&quot;YOUR API KEY&quot;</span>, </span><br><span class="line">    <span class="attr">&quot;url&quot;</span>: <span class="string">&quot;http://your_website/api/1/upload/&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意将其中的 key 值和网址做相应的替换。</p><h2 id="typora-中进行相应设置">Typora 中进行相应设置</h2><p>在图片部分选择插入后自动上传；在图片上传设置中的代码如下。下面是我的配置，注意在使用的时候，将 Python 地址、代码地址、配置文件地址作相应的替换。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/miniconda3/bin/python ~/SynologyDrive/Markdown/upload.py -c ~/SynologyDrive/Markdown/config.json -s</span><br></pre></td></tr></table></figure><p>不知道为什么直接用 <code>python</code> 不可以，只好写了个全地址，上传的速度还是可以的。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> Typora </tag>
            
            <tag> 图床 </tag>
            
            <tag> Chevereto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + 域名申请实现外网访问群晖</title>
      <link href="/posts/a1c7dbec/"/>
      <url>/posts/a1c7dbec/</url>
      
        <content type="html"><![CDATA[<p>【这也是一篇旧文存档，当时买了一年的域名也已经到期；当时还没有学计算机网络所以对于整个流程也是一知半解，但按照这些教程磕磕绊绊也算是实现了，因此记录如下；现在建站转向了 CNblog，而其他的日常使用则是直接用了群晖自带的 DDNS，速度不是很快，不过就目前的需求来说也是 OK 的了。】</p><span id="more"></span><p>外网访问群晖有很多种方法：</p><ol type="1"><li>群晖本身有个QuickConnect，但貌似很多人反映访问速度不快，不知道现在这个问题解决了没。方案即是输入 <code>username.quickconnect.to</code> 或者 <code>quickconnect.to/username</code>； 实测在内网环境下会连接到内网的机器地址，而在外网下则是连接到 <code>domain:5001</code> （如果已绑定域名的话）；</li><li>群晖还有个 EZ-internet，貌似是自动设置转发还是什么，和自己设置DDNS的作用是一样的，比自己设置方便，但支持的路由器有限。</li><li>DDNS。1. 群晖自带有 DDNS—&gt; id.synology.me；2. 花生壳 DDNS；3. 自己申请域名作 DDNS，也是这里采用的方法</li></ol><h3 id="准备工作公网-ip申请域名">准备工作：公网 IP，申请域名</h3><p>拥有公网IP是采用DDNS方法进行外网访问的条件。查看自己的网络是否为公网可自行百度。</p><p>然后就需要申请自己的域名，学生会有优惠，总体来说一年的价格很低。</p><h3 id="dnspod-网站的-dns-解析">DNSPOD 网站的 DNS 解析</h3><p>在 <a href="http://www.dnspod.cn/">www.dnspod.cn</a> 申请账号，申请完以后，到控制台-域名解析-添加域名，把你申请到的域名添加进去</p><p>然后点击域名进入，点击绿色按钮添加记录，主机记录 www，记录类型 A，线路类型选默认，记录值可填写当前的公网IP。（百度ip得到）TTL 600</p><p>然后再到用户中心-安全设置那里，创建一个API TOKEN。这时候要记录好 ID 和 Token，用于以后DDNS的设置，ID就是用户名，Token就是密码，万一忘记了也不怕，重新再创建就好了。</p><h3 id="修改域名的-dns">修改域名的 DNS</h3><p>回到你申请的域名的网站修改 DNS。然后点击域名进入，修改 DNS 为 dnspod 提供的 DNS</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f1g1ns1.dnspod.net</span><br><span class="line">f1g1ns2.dnspod.net</span><br></pre></td></tr></table></figure><p>这时候可以在电脑运行CMD，ping一下你的域名，如果能ping通，说明设置成功，ping不通可能需要等一下，一般48小时内生效的（我当时是立刻生效的）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping yourdomian</span><br></pre></td></tr></table></figure><p>至此，<strong>完成了域名的DNS，即将域名和IP地址联系在了一起</strong>。</p><h3 id="群晖-ddns-设置">群晖 DDNS 设置</h3><p>接下来进入群晖设置DDNS <code>控制面板-外部访问-DDNS-新增</code></p><p>服务供应商选择 <code>DNSPOD.cn</code>，主机名称填你的域名，用户名和密码就填写 DNSPOD 的 API 和 TOKEN</p><p>然后确定保存，这时候DDNS算是完成了。还差最后一步。</p><h3 id="路由器端口转发">路由器端口转发</h3><p>百度了一下，相对于DMZ，设置端口转发比较安全</p><p>设置好端口映射后，就可以外网在浏览器输入你的域名+外部端口号访问群晖了如 www.yourdomain:port</p><h2 id="reference">Reference</h2><ol type="1"><li>用自己的域名设置DDNS，外网访问群晖: <a href="https://www.moks.cc/?p=9" class="uri">https://www.moks.cc/?p=9</a></li><li>新版水星路由器动态DNS设置教程: <a href="https://www.192ly.com/router-settings/mercury/mr-ddns-sz.html" class="uri">https://www.192ly.com/router-settings/mercury/mr-ddns-sz.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 网络 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + 影音方案总结</title>
      <link href="/posts/5f0e51a6/"/>
      <url>/posts/5f0e51a6/</url>
      
        <content type="html"><![CDATA[<p>【是 2019 年 11 月刚入手 Synology 时期的记录，目前使用已经发生了一些变化，仅供存档之用。】</p><span id="more"></span><h2 id="film-plexinfuse">Film: Plex+Infuse</h2><p>Plex: 为你的所有设备打造一个聚合影音中心：<a href="https://sspai.com/post/45414" class="uri">https://sspai.com/post/45414</a></p><ul><li><code>Video Station</code>, <code>DS Video</code>：官方的套件，优势在于其稳定性，而缺点有：匹配功能较差，主要是基于文件名的匹配，因此很多影片的信息缺失。对于强迫症来说，这样的缺点当然是无法接受的。</li><li><code>Plex</code>：偶然发现这样一个强大的聚合平台，基于网络的视频、图片、音乐库，功能非常强大。先讲缺点：1. 影片的中文匹配能力较弱；2. 定价偏高。移动端似乎有直连功能，但无论如何还是失败，购买 Plex Pass 才能解锁基于网络的播放时限，但是价格昂贵，终身要近 1000 元。 -<code>Infuse</code>：最终的方案，电脑端可以使用 Plex 的网络播放功能（在线或者客户端）；手机上则安装了 infuse 进行观看，注意其可以直接连接 Plex 账号，可以说很贴心了。</li></ul><h2 id="audio-ds-audio">Audio: DS Audio</h2><ul><li><code>Audio Station</code>, <code>DS Audio</code>：默认的组件已经很棒了，存在着一定的小问题。但对于我个人来说，无损的下载更多只是作为备份，Audio Station+DS Audio 的组合可以满足远程、歌词的功能已经足够了。</li></ul><h2 id="photo-ds-photogoogle-photos">Photo: DS Photo+Google Photos</h2><ul><li><code>Moments</code>, <code>DS Photo</code>：这两个 APP 的定位其实不是很明确。相对来说，DS Photo 可以访问在<code>/photo</code>下的所有文件，而 Moments仅仅提供了云端相册的功能，似不能访问 Synology 下的照片。</li><li><code>Google Photos</code>：然而，作为云相册，Google 家的 APP 无疑提供了更为便捷的体验，包括：1. 更快的备份速度（可以后台上传，而DS Photo 的上传似乎有些问题）；2. 更好看流畅的操作体验，相较于 Moments 使用体验更棒；3. 可以从 APP 直接管理手机相册，因此我一般会把没用的照片从Google Photos中删除，然后在 Photos 中把短期内不需要的照片从本地删除以节省空间。</li></ul><h2 id="关于外部访问">关于外部访问</h2><p>从 PhotoStation 开始，解决了80 端口外部访问的问题，包括 mediaWiki 等。以下稍作记录。</p><p>PhotoStation 程序图片（在 DSM 中点击）默认跳转的是 HTTPS 的站点，即<code>http://IP(Domain)/photo</code>，无法访问。欲进行访问，使用 <code>http://IP(Domain):80/photo</code> 即可，当然，<strong>80 端口</strong>可以不写。</p><ul><li>注意，以上的网址只能进行内部访问，若要外网访问，则需要进行路由器端口设置。例如，可设置了 8001 外部端口，内部均为 80 端口，IP 地址为本地 NAS 的地址。</li></ul><p>接下来，即可通过<code>http://domain:8001/photo/</code>进行访问。</p><ul><li>不知道网上为何没有这样的简单设置，自己摸索了很久，似乎这样的方案最为简单。此外，这还可以解决其他的 80 端口的程序外部访问问题。例如，mediaWiki 默认可使用<code>http://ID/mediawiki/index.php?title=首页</code> 进行访问（80 端口），而设置路由器端口转发后，则输入<code>http://Domain:81/mediawiki/index.php?title=首页</code> 即可访问。</li></ul><p>再补充一点，似乎在设置 DDNS 后，mediaWiki 会默认跳转到 <code>http://Domain/mediawiki/index.php?title=首页</code> ，这样的话，需要在路由器上将外部 80 端口转发到内部的 80 的端口（和上图一样，在此就不放图了），这样可以在内网下使用上述域名地址进行访问。</p>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 内网 </tag>
            
            <tag> Google Photos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Markov Models and Hidden Markov Models</title>
      <link href="/posts/7f582aa5/"/>
      <url>/posts/7f582aa5/</url>
      
        <content type="html"><![CDATA[<p>前面讲的 BN 是静态的概率推断，而在这里我们考虑在时间上的推移，并且网络的形式更为简单了。时间上的推断在实际中的应用非常广泛，如 Speech recognition, Robot mapping, Medical monitoring。</p><h2 id="markov-models">Markov Models</h2><p>一个时间点的状态可能取决于前面的所有节点，而马氏模型的假设是该状态仅和前一时间点的状态有关。 <span class="math display">\[P(X_t|X_1...X_{t-1})=P(X_t|X_{t-1})\]</span> 马氏链的几个要素</p><ul><li><strong>State</strong>: value of X at a given time</li><li><strong>Initial probabilities</strong>: the prior probability distribution of X</li><li><strong>Transition probabilities (dynamics)</strong>: specify how the state evolves over time</li></ul><p>对于转移概率，我们有静态假设 <strong>Stationary assumption</strong>: transition probabilities the same at all times</p><p>在这种情况下，我们容易得到一些有用的结论</p><blockquote><ol type="1"><li><p>给定 <span class="math inline">\(X_{t-1}\)</span>， 则<span class="math inline">\(X_{t}\)</span> 与<span class="math inline">\(X_1,...X_{t-2}\)</span> 均独立；不仅如此，给定了present 状态，past 和 future 节点独立。</p></li><li><p>联合分布有 <span class="math display">\[P(X_1, X_2 , . . . ,X_T) = P(X_1)\prod _{t=2}^T P(X_t|X_{t-1})\]</span></p></li></ol></blockquote><p>给出一个经典的 Weather 马氏链的例子，注意我们给出了很多种表示方法</p><p><img src="16051094827712.png" /></p><p>对于一个马氏链，问题是给定了初始状态，求在时间 t 时的概率分布。为此，我们采用 variable elimination 的思路：因为在马尔科夫假设下仅与其上一个时刻的分布相关，因此我们若知道了<span class="math inline">\(X_{t-1}\)</span> 的分布，可以容易得到 <span class="math display">\[P(𝑋_t) = \sum_{X_{t-1}}P(X_{t-1})P(X_T|X_{t-1})\tag{1.1}\]</span> 因此，可以递归求解，从<span class="math inline">\(X_1\)</span> 计算到 <span class="math inline">\(X_t\)</span> 。</p><p>马氏链的另一个重要概念是 <strong>Stationary Distributions</strong>：对于多数的马氏链来说，在一定的转移概率下，初始状态的影响越来越小，最终会收敛到一个固定的分布（仅与转移矩阵有关），这一稳定分布满足 <span class="math display">\[P_{\infty}(X)=P_{\infty+1}(X)=\sum_xP(X|x)P_\infty(x)\]</span> 例子：在 Weblink analysis 中，1. 我们把每个网页看成 state；2. 初始状态可以赋为 1；3. 转移矩阵：以一定的概率 c 随机跳转到任一网页上，在其他情况下以一定的分布连接到其他 state（例如按照链接关系）——那么，此马氏链的 stationary distribution 正是 PageRank 的结果。</p><h2 id="hidden-markov-model">Hidden Markov Model</h2><p>在普通的马氏链中，没有证据变量 E，我们只是建立了一个模型，因此并没有太多的实际用处，Need observations to update your beliefs；在 HMM 中，我们加入了这些观测值，从而提升了模型的模拟能力。</p><p><img src="16051094879398.png" /></p><p>给出一些案例：在 Speech recognition HMMs 中，观测 E 是 acoustic signals (continuous valued)，而状态 X 则是 words (so, tens of thousands)；在 Machine translation HMMs 中，观测是 words (tens of thousands)，状态是 translation options；在 Robot tracking 中，观测是 range readings (continuous)，而状态是 positions on a map (continuous)。我们不断通过观测来提升我们对于状态的 belief。</p><p>给出 HMM 的定义：HMMs defined by</p><ul><li>States <span class="math inline">\(X\)</span></li><li>Observations <span class="math inline">\(E\)</span></li><li>Initial distribution <span class="math inline">\(P(X_1)\)</span></li><li>Transitions <span class="math inline">\(P(X|X_{-1})\)</span></li><li>Emission <span class="math inline">\(P(E|X)\)</span></li></ul><p>类似于马尔可夫模型，我们有如下的性质：</p><blockquote><ol type="1"><li><p>联合分布。 <span class="math display">\[\begin{gathered}P(X_1,E_1,...,X_T,E_T)= P(X_1)P(E_1|X_1)\cdot \\\prod_{t=1}^TP(X_t|X_1E_1...X_{t-1}E_{t-1})P(E_t|X_1E_1...X_{t-1}E_{t-1}X_t)\end{gathered} \tag{1.2}\]</span></p></li><li><p>条件独立性。这里所有的三元组都可以三成是一条链，因此阻断了<span class="math inline">\(X_t\)</span>，那么 past 和 future 之间，以及相应的观测 E 之间都是独立的。</p></li></ol></blockquote><p>对于一个 HMM 模型来说，我们有以下任务：</p><ul><li><p>Filtering: <span class="math inline">\(P(X_t|e_{1:t})\)</span></p><p>Computing the <strong>belief state</strong>—the posterior distribution over the most recent state—given all evidence to date.</p></li><li><p>Prediction: <span class="math inline">\(P(X_k|e_{1:e})\)</span> Computing the posterior distribution over the future state, given all evidence to date.</p></li><li><p>Smoothing: <span class="math inline">\(P(X_k|e_{1:t})\)</span> Computing the posterior distribution over a past state, given all evidence up to the present.</p></li><li><p>Most Likely Explanation ： <span class="math inline">\(\arg\max_{x_{1:t}} P(X_{1:t}|e_{1:t})\)</span> Given a sequence of observations, find the sequence of states that is most likely to have generated those observations.</p></li></ul><h3 id="filtering">Filtering</h3><p>显然，对于所有的问题我都都可以通过（1）式进行消元得到，而这里的推导是为了方便计算，以及帮助我们理解 HMM 的逻辑。先定义我们对于某一 state 的分布的 belief（这里的 evidence 是<span class="math inline">\(e_{1:t}\)</span>，也可以是其他的 evidence），即我们在给定了一些观测的情况下对于状态 t 所能做出的推断（推断其分布）。 <span class="math display">\[B(X_t)=P(X_t|e_{1:t})\]</span></p><ul><li><strong>Passage of Time</strong></li></ul><p>这是第一步，在观测 <span class="math inline">\(e_{1:t}\)</span> 之下，我们已知了对于 <span class="math inline">\(X_{t}\)</span> 的 belief，而要根据 HMM 上时间的推移去得到 <span class="math inline">\(X_{t+1}\)</span> 的 belief。有</p><p><span class="math display">\[\begin{gathered}P(X_{t+1|e_{1:t}})=\sum_{x_t}P(X_{t+1}x_t|e_{1:t}) \\=\sum_{x_t}P(X_{t+1}|x_te_{1:t})P(x_t|e_{1:t}) \\=\sum_{x_t}P(X_{t+1}|x_t)P(x_t|e_{1:t}) \\\end{gathered}\]</span> 亦即 <span class="math display">\[B&#39;(X_{t+1})=\sum_{x_t}P(X&#39;|x_t)B(x_t)\tag{2.1}\]</span> 看（2.1）式：我们基于对 <span class="math inline">\(X_t\)</span> 的 belief，通过条件概率进行更新 <span class="math inline">\(X_{t+1}\)</span> 的 belief。这里的式子和 <code>Mini-forward algo</code> 中是一样的（式（1.1））。</p><ul><li><strong>Observation</strong></li></ul><p>这是下一步，我们得到了新的观测 <span class="math inline">\(x_{t+1}\)</span>，来对于先验 prior <span class="math inline">\(B&#39;(X_{t+1})=P(X_{t+1}|e_{1:t})\)</span> 进行修正，得到 posterior <span class="math display">\[\begin{gathered}P(X_{t+1}|e_{1:t+1})={P(X_{t+1},e_{t+1}|e_{1:t})\over P(e_{t+1}|e_{1:t})}\\\propto_{X_{t+1}}P(X_{t+1},e_{t+1}|e_{1:t})=P(e_{t+1}|e_{1:t},X_{t+1})P(X_{t+1}|e_{1:t})\\=P(e_{t+1}|X_{t+1})P(X_{t+1}|e_{1:t})\end{gathered}\]</span> 也即 <span class="math display">\[B(X_{t+1})\propto_{X_{t+1}}P(e_{t+1}|X_{t+1})B&#39;(X_{t+1})\tag{2.2}\]</span> 看（2.2）式：我们利用了 <span class="math inline">\(e_{t+1}\)</span> 出现的条件概率，对于先验的 belief 进行了更新。<strong>beliefs “reweighted” by likelihood of evidence (normalization)</strong>。</p><p>另外，看上面推导的式子，可以看到左右两端均是在 <span class="math inline">\(e_{1:t}\)</span> 这一条件下的，把这个条件「隐藏」掉，式子可表为 <span class="math inline">\(P(X_{t+1}|e_{t+1})\propto_{X_{t+1}} P(e_{t+1}|X_{t+1})P(X_{t+1})\)</span>；所以我们这里用的其实是一个 Bayes 公式，下标<span class="math inline">\({X_{t+1}}\)</span> 表示我们应当根据其进行归一化操作。</p><ul><li><strong>Online Belief Updates</strong></li><li><strong>The Forward Algorithm</strong></li></ul><p>综合上面的 passage of time, observation，对于 Filtering 任务我们可以给出 <code>Forward algo</code>，思路和式（1.1）的<code>Mini-forward algo</code> 是一样的，随着时间一步一步往前计算，只是这里多了由于 evidence 而带来的使用 Bayes 的后验概率更新。 <span class="math display">\[\begin{gathered}  P(x_t|e_{1:t})\propto_X P(x_t,e_{1:t})=\sum_{x_{t-1}}P(x_{t-1},x_t,e_{1:t})\\  =\sum_{x_{t-1}}P(x_{t-1},e_{1:t-1})P(x_t|x_{t-1})P(e_t|x_t)\\  =P(e_t|x_t)\sum_{x_{t-1}}P(x_t|x_{t-1})P(x_{t-1},e_{1:t-1})\end{gathered}\tag{2.3}\]</span> 其中第二行用到了 HMM 的结构。看（2.3）式最终的形式：我们从 <span class="math inline">\(P(x_{t-1}|e_{t-1})\)</span> 出发，融合了 passage of time（求和运算，和（2.1）式一致）和 observation （Bayes 公式，和（2.2）式一致）。</p><h3 id="prediction">Prediction</h3><p>Prediction 和 Filtering 任务的区别即在于，我们欲求其后验分布的变量是现在的时间 t，还是之后的时间 t+k。我们通过 <code>Forward algo</code> 计算到了 <span class="math inline">\(P(x_t|e_{1:t})\)</span>，之后只要用 Markov 模型下的时间推移 <code>Mini-forward algo</code> 即可。</p><h3 id="smoothing">Smoothing</h3><p>在 smoothing 中，我们想要通过一个序列的观测 <span class="math inline">\(e_{1:t}\)</span> 来估计一个历史状态的后验概率，正好和 Filtering 和 Prediction 构成了一个完整的任务：给定至今的观测，去预测现在、未来、过去的某一状态下的分布。</p><p><img src="16051095020734.png" /></p><p>懒得写了直接截图……第一条式子是把这条 HMM 链通过给定 <span class="math inline">\(X_k\)</span> 进行隔断，注意第二行用了 Bayes 公式，从而将原条件概率分为两项：前项是一个 Filtering 问题；对于第二项 <span class="math inline">\(P(e_{k+1:t}|X_k)\)</span> 的处理见第二条式子，我们用边际分布的定义，和 HMM 的结构化为第二行的形式，在提出一个 <span class="math inline">\(e_{k+1}\)</span> 最终化成第四行——问题转化为求 <span class="math inline">\(P(e_{k+2:t}|x_{k+1})\)</span>；于是又变成了一个递推关系，可以从 <span class="math inline">\(P(e_{t}|x_{t-1})\)</span> 倒着往下计算到 <span class="math inline">\(P(e_{k+1:t}|X_k)\)</span> 。</p><h3 id="most-likely-explanation">Most Likely Explanation</h3><p>前面的问题都是关注某一个状态的分布（当然可以根据该分布算出该节点最有可能的值是什么）；而在 MLE 问题中，我们关心的是在这一观测序列 <span class="math inline">\(e_{1:t}\)</span> 下有可能的真实值 <span class="math inline">\(X_{1:t}\)</span> 是什么，亦即，most likely explanation 问题的 query 是 <span class="math display">\[\arg\max_{x_{1:t}}P(x_{1:t}|e_{1:t})\]</span> <strong>Viterbi</strong></p><p><img src="16051095093241.png" /></p><p><img src="16051095141477.png" /></p><p>给出 Viterbi 算法及其和 Forward 的区别，具体的课上没讲，在此略过，待日后有时机再补完~</p><h2 id="particle-filtering">Particle Filtering</h2><p>最后一部分同样是一种近似方法（如同 BN 中）。精确解的问题在于 X 的状态数 <span class="math inline">\(|X|\)</span> 太大，或根本是连续的；在近似解中，我们对 X 进行 sample，追踪这个 particle。有性质</p><ul><li>Time per step is linear in the number of samples</li><li>In memory: list of particles, not states</li></ul><p>想法很简单，既然是一个马氏链，我们把几个「粒子」放进去，让它自行跑，待稳定后计算最终的粒子的分布，即可估计稳态分布。对于每一步来说，时间复杂度和粒子数成正比，空间复杂度同样。一般来说，粒子数 N 远小于 <span class="math inline">\(|X|\)</span>。</p><p><strong>Elapse Time</strong></p><p>在这一步当中，我们模拟马氏链：对于每一个可能的后继 <span class="math inline">\(X&#39;\)</span> ，我们以转移概率 transition provavilities 为权重进行抽样。This captures the passage of time. If enough samples, close to exact values before and after (consistent). <span class="math display">\[x&#39;=sample(P(X&#39;|x))\]</span> <strong>Observe</strong></p><p>在观测步骤中，我们根据这些观测来更新每个粒子的权重（全部初始化为 1） <span class="math display">\[w(x)=P(e|x)\\B(X)\propto P(e|X)B&#39;(X)\]</span> <span class="math inline">\(P(X)\)</span> 表示先验的概率分布；我们的证据 <span class="math inline">\(e\)</span> 即粒子所在的位置，我们计算的权重 <span class="math inline">\(w(x)\)</span> 实际上就是该 x 的似然；然后我们根据这个权重来更新 <span class="math inline">\(B(X)=P(X)\)</span>，这里我们的观测（条件）不好表示了，这里的 belief 实际上是一个条件概率，实质上仍然是一个 Bayes 公式。</p><p>Note: As before, the probabilities don’t sum to one, since all have been re-weighted (in fact they now sum to (N times) an approximation of P(e))</p><p><strong>Resample</strong></p><p>最后，在下一轮中，我们重新选择粒子。N times, we choose from our weighted sample distribution (i.e. draw with replacement)。</p><p><img src="2021-11-02T195103.png" /></p><p>进一步阅读：这里提到的仅仅是 particle filtering 的一点点概念，而实际上它有着另外的实际背景，在 AL 领域多用在机器人定位上。可参看</p><ul><li>一篇很详细的笔记：<a href="http://blog.rexking6.top/2019/01/06/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%99%BA%E8%83%BD%E3%80%8B%EF%BC%88%E4%BA%8C%EF%BC%89%E6%A6%82%E7%8E%87/">《计算智能》（二）概率</a></li><li><a href="http://freemind.pluskid.org/machine-learning/hmm-kalman-particle-filtering/">漫谈 HMM：Kalman/Particle Filtering</a></li><li>论文 <a href="https://www.stats.ox.ac.uk/~doucet/doucet_johansen_tutorialPF2011.pdf">A Tutorial on Particle Filtering and Smoothing: Fifteen years later</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 马尔可夫模型 </tag>
            
            <tag> HMM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Adversarial Search</title>
      <link href="/posts/6ba3d208/"/>
      <url>/posts/6ba3d208/</url>
      
        <content type="html"><![CDATA[<p>博弈 Game 的分类维度</p><ul><li>Deterministic or stochastic?</li><li>One, two, or more players?</li><li>Zero sum?</li><li>Perfect information (can you see the state)?</li></ul><h2 id="adversarial-search">Adversarial Search</h2><p>对抗搜索 Adversarial Search 关注的是 <strong>perfect information, deterministic, two players, zero-sum, alternate turns</strong> 的博弈。典型的例子有 Tic-tac-toe, chess, Go, Gomoku 等。</p><p>在双人博弈的场景下，由于是零和游戏一方分数为正，则另一方则必为相应的负数。这样的话，我们可以给场上的局势统一「打分」，一方欲求最大化该分数，而另一方意图最小化该分数。例如对 MAX 节点来说 <span class="math display">\[V(s)=\max_{s&#39;\in successor(s)}V(s&#39;)\]</span> 这样的话，我们给出 <strong>Minimax Search</strong> 的定义：</p><blockquote><p>A state-space search tree. Players alternate turns</p><p>Compute each node’s <strong>minimax value</strong>: the best achievable utility against a rational (optimal) adversary</p></blockquote><p>具体到算法层面，对于一个特定的节点，我们可以给出一个统一的求其值的形式</p><p><img src="16051087905922.png" /></p><p>对于一个 MAX 节点来说，玩家希望最大化分数，所以肯定会选择最有利的那一个策略（后继中分数最高的），对于 MIN 节点同理。</p><p><strong>Note</strong>：我们对于「局势」的打分一般不是根据最终的结果来决定的（例如若 A 胜利则给 1，A 负则设为-1），因为受到资源的约束我们没法搜索很深（显然会采用 <strong>DFS</strong>，时间空间复杂度分别为 <span class="math inline">\(O(b^m )\)</span>, <span class="math inline">\(O(bm)\)</span>，对于 chess 来说，b 约为 35，m 约为 100）；所以我们会给中间节点基于场上的「形势」打分，也就是说，我们采用的是 <strong>Depth-limited search</strong>，限制了搜索深度，需要 Evaluation function 对于 non-terminal positions 评分。当然，算法给出的策略的 optimal 无法保障；我们总希望越深越好，所以可以采用 iterative deepening 的策略。对于 Evaluation function 来说，理想的显然是返回这一状态的真实「价值」，但其计算就会变得相当复杂，因此其体现的是 tradeoff between complexity of features and complexity of computation；对于其我们的要求有</p><blockquote><ul><li>Utility for a win state should be higher than a tie. (correct)</li><li>The computation of evaluation function should be efficient. (quick)</li><li>It should be related to the chance of wining the game. (consistent)</li></ul></blockquote><h2 id="game-tree-pruning">Game Tree Pruning</h2><p>当然是最有名的 Alpha-Beta Pruning 了。其<strong>想法</strong>非常简单（然而，在具体实现中代码有难度，所以我们详细讲一下）：对于一个 MAX 节点来说，若其第一个子节点 A 返回的是 3，那么对于第二个子节点 B（注意是 MIN 节点），若 B 的第一个子节点返回的是 2，那么我们可以确定 B 的值肯定要 ≤2（因为 B 为 MIN 节点），也就必 &lt;3，因此我们没有必要继续探索 B 的剩余子节点了。</p><p>注意到，上述是<strong>对于 MIN 节点进行的剪枝</strong>，MIN 的子节点返回的一个值与其维护的一个值（<span class="math inline">\(\alpha\)</span>）进行比较，若小于了这个值则直接将此 MIN 节点剪去不去看剩下的子节点。上述只是一个特例，下图是一般情况</p><p><img src="16051088069195.png" /></p><p>这里的逻辑是这样的：在之前的例子中我们只关注了 MIN 的父 MAX 节点，事实上我们可以「看」得更远（剪枝也就更有效率），也就是这里标识出来的两个 MAX 节点，实际上是一条 MAX 节点序列，为什么可以这样呢？这里要注意我们所维护的 <span class="math inline">\(\alpha\)</span> 的含义，它是<strong>这条路径上 MAX 节点的最优选择</strong>。</p><p>对于 MIN 节点 n 来说，<strong>一方面</strong>，它要从它的子节点这里选出最小的那一个（Note：我们结合下图中右边的伪码来看），也就是算法中的 v，若这个值小于了 <span class="math inline">\(\alpha\)</span> ，即这条路径上 MAX 节点的最优选择（标红行），那么我们直接返回 v（对于该 MIN 节点值的一个保守估计）。那么，关键在于 <span class="math inline">\(\alpha\)</span> 究竟是从哪里来的呢？我们来看算法中左边的 MAX 节点的操作（注意，对于 <span class="math inline">\(\alpha\)</span> 的更新只在 MAX 节点进行）：<span class="math inline">\(\alpha=\max(\alpha, v)\)</span> 。分开来讨论，若 1. max 取到的是 v，那么 <span class="math inline">\(\alpha\)</span> 就表示了该 MAX 节点在 for 循环中取到的最优结果（此前的子节点中的最优结果），在下一个循环中我们在标紫行调用了子节点的 min-value，即右边的算法；2. max 取到的 <span class="math inline">\(\alpha\)</span> 来自本身传入 max-value 中的那个值（这里我们结合上图），也就是这条路径之上的 MAX 节点的最优选择，比如说，对于上面的那个蓝色 MAX 节点 A，我们在其左孩子取到了 3，我们把这个 <span class="math inline">\(\alpha\)</span> 值传给了 n 的父 MAX 节点 B：老大 A 告诉小弟 B：我另一个小弟已经献给我 3 了，你如果比这个值小就甭给我拿出来丢人了，于是 B 也会拿这个 <span class="math inline">\(\alpha\)</span> 来给其子 MIN 节点进行剪枝（也就是右边算法中标红的操作）。当然，<strong>另一方面</strong>，MIN 节点要维护一个<span class="math inline">\(\beta\)</span> ：该条路径下 MIN 节点的最优选择，分析和上述是相一致的。 <img src="16051088188155.png" /></p><p>上图总结得真的完美，若还有不懂的再多看两遍，或者画一棵树自己跑一下吧。对于 alpha-beta 剪枝我们有如下说明：1. This pruning has no effect on minimax value computed for the root. Minimax values of intermediate nodes might be wrong. 对于根节点来说，我们初始化 <span class="math inline">\(\alpha=-\infty, \beta=+\infty\)</span> 并进行搜索，注意到 alpha-beta 剪枝仅仅是把一些肯定对结果没有影响的节点删去了，因此不会影响最终的值；然而，对于中层的节点来说，alpha-beta 剪枝所给出值是在减去了一些分支的情况下得到的，这样给出的「分数」就可能不是其真值了。2. Ordering Matters 显然，若所有可剪的分支都排在最后那么对于最终的效率就没什么影响了，一般情况下，alpha-beta 剪枝可以Doubles solvable depth!</p><h2 id="uncertain-outcomes">Uncertain Outcomes</h2><p>主体就这些内容，后面介绍了一下非确定情况下的节点，增加了随机性：例如玩家是非理性的，或游戏本身就有随机性如 Dice，这样的话我们可以取期望。</p><h2 id="utilities">Utilities</h2><p>这部分更多是简单抽象的博弈中超脱了出来，毕竟这种情况是确定的理想的；事实上，相同的结果对于不同人的价值是不一样的，也就是效用这一概念的由来。</p><blockquote><p>Utilities are functions <strong>from outcomes (states of the world) to real numbers</strong> that describe an agent’s preferences</p><p>In a game, may be simple (+1/-1) Utilities summarize the agent’s goals Theorem: any “rational” preferences can be summarized as a utility function</p></blockquote><p>注意，我们这里讨论的并非上述的双方博弈，而是 <strong>Maximum Expected Utility</strong> 算法</p><p><span class="math display">\[action = \arg \max ExpectedUtility(a | e)\]</span> <img src="16051088291346.png" /></p><p>最后再对 Utilities 的概念做一点说明，正如定义中所说它反映的是一个人的 preferences ，相较于简单的 outcomes 更具有现实性，例如一个不爱冒风险的人和一个赌徒的偏好是不同的。另外，很少有人的真正理性的，例如：Famous example of Allais (1953)</p><blockquote><p>A: <span class="math inline">\([0.8,\$4k; 0.2,\$0]\)</span> B: <span class="math inline">\([1.0, \$3k; 0.0, \$0]\)</span></p><p>C: <span class="math inline">\([0.2, \$4k; 0.8, \$0]\)</span> D: <span class="math inline">\([0.25, \$3k; 0.75, \$0]\)</span></p></blockquote><p>Most people prefer B &gt; A, C &gt; D</p><p>然而，人是否真的是理性的呢？假若 <span class="math inline">\(U(\$0) = 0\)</span>，那么 B &gt; A 可推出 <span class="math inline">\(U(\$3k) &gt; 0.8 U(\$4k)\)</span>，而 C &gt; D 则可推出 <span class="math inline">\(0.8 U(\$4k) &gt; U(\$3k)\)</span>——出现了两个矛盾的结果。</p><blockquote><p>一下仅仅是个人感想：我们假定 utility 正是回报，那么这里例子深刻地反映了人对于概率/数字并不敏感。对于 A 和 B，3k 和 4k 刀差别不大，我们可能出于厌恶风险的原则选 B；对于 C 和 D，两者都有一定的风险，而我们对于 .2 和 .25 的区别并不敏感，这时候 4k 和 3k 刀的差距就显现出来，也就更倾向于选大一点的 C（虽然这时是一个正确的选择）。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 搜索 </tag>
            
            <tag> 对抗搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Bayes Network</title>
      <link href="/posts/74301372/"/>
      <url>/posts/74301372/</url>
      
        <content type="html"><![CDATA[<p>贝叶斯网络，我们分成了表示和推断两个课时；另外，因此它和后面的 HMM 等模型密切相关，因此需要熟练掌握。</p><h2 id="preliminaries-for-probabilistic-reasoning">Preliminaries for Probabilistic Reasoning</h2><p>概率推断 Probabilistic Reasoning 在很多地方都有用，如 Diagnosis, Speech Recognition, Tracking ovjects, Robot mapping, Genetics, Error correcting codes 等。这一部分复习概率论相关内容，不加说明均以有限离散情况为例</p><ul><li>Random Variables</li><li>Joint and Marginal Distributions</li></ul><p><span class="math display">\[P(t)=\sum_s P(t,s)\]</span></p><ul><li>Conditional Distribution</li></ul><p><span class="math display">\[P(a|b)={P(a,b)\over P(b)}\]</span></p><ul><li>Product Rule, Chain Rule, Bayes’ Rule</li></ul><p><span class="math display">\[P(y)P(x|y)=P(x,y)\\P(x_1,...,x_n)=\prod_i P(x_i|x_1...x_{i-1})\\P(x|y)={P(y|x)\over P(y)}P(x)\]</span></p><ul><li>Inference</li><li>Independence</li></ul><p>独立性是 BN 中最为重要的概念（也是概率论中没怎么深入思考的），以下给出独立性和条件独立的判断条件：</p><blockquote><p><span class="math inline">\(X\)</span>, <span class="math inline">\(Y\)</span> independent if and only if: <span class="math display">\[\forall x,y: P(x,y)=P(x)P(y)\tag{1}\]</span> <span class="math inline">\(X\)</span> and <span class="math inline">\(Y\)</span> are conditionally independent given <span class="math inline">\(Z\)</span> if and only if: <span class="math display">\[\forall x,y,z: P(x,y|z)=P(x|z)P(y|z)\tag{2}\]</span></p></blockquote><p>注意，是要求对 x 和 y 的任意取值都满足上式。另外，（1）式（2）式分别有等价表述 <span class="math display">\[P(x|y)=P(x)\\P(x|y,z)=P(x|z)\]</span> 只是简单的移项变形，但两种表达式都比较常用（在 NB 中证明的时候多用下面的那两条），需要熟记。</p><h2 id="representation">Representation</h2><p>下面正式进入到<strong>贝叶斯网络（Bayes' Net BN），即图模型（Graph Model）</strong>中，这一部分是网络的表示。首先，它是一种 Probabilistic Model；而我们对于概率的建模使用了图的形式，若两者（时间）之间并非独立，那么我们把两者连起来，独立则没有边连接——所谓模型必定是一种简化表示，我们这里的简化就是把一个全连接的联合分布简化为部分连接的图的形式，对于每一个事件（节点）的概率计算只依赖于与它连接的各节点。简言之</p><blockquote><p>A Bayes net = Topology (graph) + Local Conditional Probabilities</p></blockquote><p>另外，要说明的是，尽管我们使用有向图的形式，但其刻画的并非因果关系，而只是相关性的一种建模。例如，对于下雨和堵车，我们完全可以把边从堵车指向下雨而对模型的建模能力没有影响；当然，我们在设计 NB 的时候当然是考虑因果关系的</p><blockquote><p><strong>Topology really encodes conditional independence</strong></p></blockquote><p>我们宏观地看一下 BN 的表示上的优势，我们考察 <strong>Size of a Bayes’ Net</strong>，假设需要表示 N 个 Boolean variables。对于一个完整的联合分布来说，我们共有 <span class="math inline">\(2^N\)</span> 中组合形式，所以大小为 <span class="math inline">\(2^N\)</span> （我们可以把联合分布表示成一张表，每一行表示一种情况，那么共有 <span class="math inline">\(2^N\)</span> 行）；而对于 BN 来说，我们假定每一个变量至多有 k 个父节点，对每一个节点 a，我们需要一张 <span class="math inline">\(2^{k+1}\)</span> 的表来存储（注意还要考虑 a 本身），因此总的空间复杂度为 <span class="math inline">\(O(N2^{k+1})\)</span> 。也就是说，NB 在表示联合分布的能力上和原来是一样的，而其优势在于 1. 节省存储空间；2. 加速计算。</p><h2 id="independence">Independence</h2><p>独立性是 NB 中我们关心的部分，因为这决定了我们的整个计算方式。下面给出这一问题的 Formalization</p><blockquote><p>Question: Are X and Y conditionally independent given evidence variables {Z}?</p></blockquote><p>给定一组证据变量，考察待求的两变量之前的独立性。我们有一个完善的解决方案</p><blockquote><p>Recipe: shade evidence nodes, look for paths in the resulting graph</p><p><strong>Consider all paths</strong> from X to Y No <strong>active paths</strong> = independence!</p></blockquote><ul><li>对于 X 和 Y 来说，我们考察所有连接两者的路径，只要一条路径是 active 的，那么两者就不独立</li><li>如何判断路径是否独立的方法是 <code>D-separation</code> ：我们考察路径上的所有三元组，只要有一个三元组是 inactive 的（独立），整条路径就是 inactive 的。</li></ul><p>下面就是考察不同类型的三元组了，结合下面的总结图来看</p><ul><li><p>Causal Chains：第一种情况是一条顺序的链。按照常识，没有给定 B，那么 A 和 C 一定是相关的（可以给出一个例子 A 等概率为+/- ，B 的符号和 A 一致，C 的符号和 B 一致，那么<span class="math inline">\(P(+b,-c)=0\ne P(+b)P(-c)\)</span>）；在给定 B 的情况下，A 和 C 独立，我们给出证明 <span class="math display">\[P(c|a,b)={P(a,c,b)\over P(a,b)}={P(a)P(b|a)P(c|b)\over P(a)P(b|a)}=P(c|b)\]</span></p></li><li><p>Common Cause：第二种是共同原因。没有给定 B，则 A 和 C 是相关的，用上面的例子就可说明；给定 B，A 和 C 独立，简证 <span class="math display">\[P(c|a,b)={P(a,c,b)\over P(a,b)}={P(b)P(a|b)P(c|b)\over P(b)P(a|b)}=P(c|b)\]</span> Observing the cause blocks influence between effects.</p></li><li><p>Common Effect：共同结果，这时和前两种情况不太一样，注意。在此时，为给定 B，则 A 和 C 是独立的，简证 <span class="math display">\[P(a,c)=P(a,c,+b)+P(a,c,-b)=P(a)P(c)P(+b|a,c)+P(a)P(c)P(-b|a,c)=P(a)P(c)\]</span> 然而，<strong>给定 B，则 A 和 C 不独立</strong>了！直观上理解，若 B 和 A 之间、B 和 C 之间的符号以很大的概率相同，而 A、C 分别等概率为+/-，那么<span class="math inline">\(P(+a)P(+c)=.25\)</span>，而在给定 B 为 + 的情况下两者联合为正的概率就很大了。当然，这里只给出了一个直观的解释，我们可以构造 B 的条件分布表，举反例以证明。 另外，这里和情况不同的是，active triples 的最后一张图，B 的子节点确定了，那么 A 和 C 之间也不独立。</p><p>Observing an effect activates influence between possible causes.</p></li></ul><p><img src="16051090339067.png" /></p><p>下面给出了两个例子：以便熟练运用 <code>D-separation</code> 准则</p><p><img src="16051092644511.jpg" /></p><p>最后，我们要判断一个节点 X 和其他节点的独立性（或者我们观测部分节点，以保障 X 和其他节点不相关，想想 HMM 的例子），有以下结论</p><p><img src="16051090533387.png" /></p><ul><li>给定了 X 的父节点，那么 X 与其非后代节点 Z 均独立（使用 <code>D-separation</code> 可说明）</li><li>给定了 X 的父节点 U，孩子节点 Y，以及所有子节点除 X 外的父节点 Z，则 X 与图中其他的所有节点均独立（因为不会出现 Common Effect 中的那种情况了）</li></ul><h2 id="inference">Inference</h2><p>回顾一下： 贝叶斯网络是用一系列的条件分布来表示联合分布；而以上我们考察了网络中的独立情况。</p><p>下面，我们进入到 BN 的推断部分，给出问题的定义：我们感兴趣的是 query variables Q，而观测到了部分的证据变量 evidence variables E，将剩余的变量称之为隐变量 hidden variables H。其形式可以是求概率分布 <span class="math inline">\(P(Q|E_1=e_1,..,E_k=e_k)\)</span>，更多时候可能是求极大 <span class="math inline">\(\arg\max_qP(Q=q|E_1=e_1...)\)</span></p><h3 id="enumeration">Enumeration</h3><p><img src="16051090663811.png" /></p><p>最先想到的显然是枚举：我们欲求<span class="math inline">\(P(Q|e_1,..,e_k)\)</span> ，利用条件概率的定义，其与 <span class="math inline">\(P(Q,e_1,..,e_k)\)</span> 成正比，而求这一个部分变量的边际分布，则需要对联合分布 <span class="math inline">\(P(Q,E,H)\)</span> 进行消元，消去其中的隐变量，其中联合分布通过 BN 网络的形式得到。</p><p><img src="16051090768029.png" /></p><p>例如，在这个例子中，观测是 J、M，我们关系的是 B，隐变量是 A 和 E。运用枚举的方法，我们先要得到总体的联合分布（连接操作），再对隐变量进行消元（选投影操作）。然而，注意到，对于 A 进行消元的时候，式子中的 <span class="math inline">\(P(B)P(e)\)</span> 两项并没有用到，因此没有必要全连接——我们对上式进行一定的变换 <span class="math display">\[P(b|j,m)=\alpha P(b)\sum_eP(e)\sum_aP(a,b,e)P(j|a)P(m|a)\tag{1}\]</span> 这里我们简化了写法，其中的 <span class="math inline">\(\alpha\)</span> 是归一化系数。</p><h3 id="inference-by-variable-elimination">Inference by Variable Elimination</h3><p>这种思想就是变量消元 variable elimination——思想是<strong>交替使用 joining 和 marginalizing</strong>，我们来看（1）式对应的计算图：</p><p><img src="16051090865522.png" /></p><p>对于普通的 enumeration 来说，可以看到化成了四项，每一项是 5 个条件概率的乘积（若用计算图表示就是根节点直接分别为四个分支）；而在 variable elimination 中，我们分了两层进行 sum 操作：第一层对应了对 E 消元，第二层对应了给 A 消元。</p><p>是如何计算得到最终结果的呢？我们对一条链上的所有条件分布相乘，遇到加法节点进行汇总，从下往上计算。</p><p>我们来看右下角的式子：在 variable elimination 中，每一个部分称为因子 factor，注意仅需包含 Q 和 H（Q 是我们想要的，H 是我们要消去的，E 我们在消元中并不关心）；还是看这个式子，<span class="math inline">\(f_3(A,B,E), f_4(A), f_5(A)\)</span> 这几个因子中包含 A，经过消元操作将其消去，形成新的因子 <span class="math inline">\(f_6(B,E)\)</span> 在将其与<span class="math inline">\(f_2(E)\)</span> 放在一起消去 E，这样就只剩下了一个包含查询 B 的因子。</p><p>这是主要的思想。因为 VE 是课程重点，我们另加以详细说明。总的来说，<strong>因子是一个用参数变量值为索引下标的矩阵</strong>。来回想一下，为什么我们在因子中只加入了 Q 和 H？这是因为 Q 和 H 的未知的，有多种可能性。从概率的角度来说，它可以作为一个随机变量——因此，事实上，我们不把 E 写出来只是因为可以把它看成一个常数，我们可以详细写为 <span class="math inline">\(f_4(j|A)\)</span> ，其中随机变量仅为 A，于是 factor 就是一个向量，对应到条件分布表中，该表就只有 2 行；对于 <span class="math inline">\(f_3(A|B,E)\)</span> 来说，因子就是一个三维张量，其中某一个元素就是 <span class="math inline">\(P(+a|+b,+e)\)</span> ，对应到条件分布表，该表有 <span class="math inline">\(2^3\)</span> 行。</p><p>前面提到 VE 相较于 enumeration 的区别：</p><ul><li>Enumeration: Join all factors, then eliminate all hidden variables</li><li>Variable Elimination: Interleave joining and elimination</li></ul><p>下面来看两种操作的细节</p><ul><li>Operation 1: Join Factors join 操作就像数据库中的 join，它 Build a new factor over the union of the variables involved，对于每个个 entry 采取 pointwise product 操作。来看一个例子</li></ul><p><img src="16051090973723.png" /></p><p>在这个链中，我们把 <span class="math inline">\(R\)</span> 和 <span class="math inline">\(T|R\)</span> 连接起来构成新的因子，再和 <span class="math inline">\(L|T\)</span> 连接得到最终的联合分布 <span class="math inline">\(R,T,L\)</span> 。这里的简单情况下，我们容易得出最终结果的意义（注意 L 在给定 T 的情况下与 R 独立，所以第二列中<span class="math inline">\(P(L|T)\)</span> 实际上等于 <span class="math inline">\(P(L|T,R)\)</span> 于是连接操作最终得到的是联合分），但在复杂情况下似乎比较难分析，但 anyway 最终得到的都是包含了所连接的因子中所有大写变量的一个分布。</p><ul><li><p>Operation 2: Eliminate</p><p>第一步我们连接了不同的因子，第二步就是消去其中的隐变量了，对应到概率论中，就是<strong>求边际分布</strong>，所以，Elimination = marginalization；对应到数据库中，就是投影 projection 操作。例如对 <span class="math inline">\(P(R,T)\)</span> ，我们 sum R 就得到了 <span class="math inline">\(P(T)\)</span>。一个例子</p></li></ul><p><img src="16051091206093.png" /></p><p>小结一下，类似（1）式中的乘法对应的是 join，而累加对应的是 elimination。最后，我们用一个简单的形式，来回顾一下最初那个问题的解法</p><p><img src="16051091298844.png" /></p><p><img src="16051091534537.png" /></p><p>对于变量消元的顺序，在此只是说明不同的选择对于复杂度的是有很大影响的，但并没有一个普遍的维持一组 small factor 的方法。对于考试来说的话，BN 一般较为规整，可能会考察复杂度，如下例</p><p><img src="16051091609572.png" /></p><h3 id="sampling">Sampling</h3><p>给出一种近似求解的方法。在模拟量很大的情况下 LLN 保障了得到的解接近真值。其中有包含了多种思路</p><ul><li><p>Prior Sampling：一次完整的 sample 显然要对所有的变量赋值，那我们可以根据 BN 的拓扑顺序依次利用条件概率进行模拟。叫做 Prior Sampling ，所以它针对的是无证据变量 E 的那种最为简单的推理。</p></li><li><p>Rejection Sampling：当有证据变量 E 的时候就叫做 Rejection Sampling，显然我们选取其中符合 E 的那些样本，计算近似的概率。</p></li><li><p>Likelihood Weighting：因为在 Rejection Sampling 中我们会拒绝部分和 E 不相符的那些样本，效率很低，因此我们希望 fix evidence variables and sample the rest，相应地给每个样本赋予权重。</p></li></ul><p><img src="16051091683249.png" /></p><p>注意权重是所有的证据变量的条件分布（不包含 Q），这样保证上面那条式子的正确性。</p><ul><li><p>Gibbs Sampling：然而，似然加权的方法仍有一定的问题：Evidence influences the choice of downstream variables, but not upstream ones (C isn’t more likely to get a value matching the evidence)（好的并没有看懂🐶）。算法：</p><blockquote><p>keep track of a full instantiation <span class="math inline">\(x_1 , x_2 , …, x_n\)</span> .</p><p>Start with an arbitrary instantiation consistent with the evidence.</p><p>Sample one variable at a time, conditioned on all the rest, but keep evidence fixed.</p><p>Keep repeating this for a long time.</p></blockquote><p>基于马氏链的性质，我们有 in the limit of repeating this infinitely many times the resulting sample is coming from the correct distribution。该方法比似然加权法好的地方在于 Rationale: both upstream and downstream variables condition on evidence.</p><p>Note: 我们使得初始状态是符合 E 的，然后每一更新一个非 Q 变量——如何更新呢？是基于在其他变量值给定的情况下的条件分布。一个具体的例子</p></li></ul><p><img src="16051091776769.png" /></p><p>注意到，在计算条件分布的时候仅需要考虑带模拟变量相关的那些量：例如对 <span class="math inline">\(P(S|+c,-w,+r)\)</span> 来说，由于 <span class="math inline">\(P(S,+c,-w,+r)=P(+c)P(S|+c)P(+r|+c)P(-w|S,+r)\)</span> ，也就是说其正比于 <span class="math inline">\(P(S|+c)P(-w|S,+r)\)</span> （其他量为常数，我们将其归一化即可），这就减少了计算条件分布的难度。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> Bayes </tag>
            
            <tag> 贝叶斯网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Constraint Satisfaction Problems</title>
      <link href="/posts/629a417a/"/>
      <url>/posts/629a417a/</url>
      
        <content type="html"><![CDATA[<p>在搜索算法中，我们关心的是从初始节点到目标节点的一条路径；而在约束满足问题中，我们没有初始状态，只关心 goal 而不在乎 path。</p><ul><li>Planning: sequences of actions</li><li>Identification: assignments to variables</li></ul><p><strong>Constraint Satisfaction Problems (CSPs)</strong> are specialized for identification problems</p><p>我们可以把 CSP 看成是特殊的搜索问题。对于一般的搜索问题来说，State is atomic or indivisible, known as a “black box” without internal structure，而在 CSP 中 State is represented as a <strong>feature vector</strong>；在搜索问题中 Goal test can be any function over states，而CSP 中 Goal test is a set of <strong>constraints</strong> to identify the allowable feature vector。</p><p>我们来仔细看看 Feature Vector，它是由 A set of k <strong>variables</strong> (or features) 组成的，对于每个 feature 有值域 <strong>domain</strong>；而我们的目标就是找到满足约束的一组赋值。方便起见我们定义 complete state 和 partial state，后者即对部分变量赋值满足约束，其余部分待赋值。典型的问题有 Map Coloring 和 N-Queens 等。</p><h2 id="constraint-graphs">Constraint Graphs</h2><p>对于一个 CSP 问题，我们可以采用约束图的方式进行表示：对于一个二元约束来说可将两个 feature 连起来；所以，问题在于<strong>将 N-nary 转化为 Binary constraints</strong>。我们假定 domain 都是有限的。</p><p>第一步，引入新的变量（约束）Z，例如对于加法的三元约束来说，我们引入变量，满足</p><blockquote><p>Domain is the set of all possible 3-tuples satisfying <span class="math inline">\(A+B=C\)</span>. <span class="math inline">\(\{(a_1 , b_1 , c _1 ), (a_ 2 , b _2 , c_ 2 ), …\}， s.t. a_1 + b_1 = c_ 1 …\)</span></p></blockquote><p>第二步，建立新变量 Z 与 A、B、C 之间的约束，显然可以是 A 与 Z 的 domain 中三元组的第一个元素相同。</p><blockquote><p>Create new constraints between Z and three original variables respectively (the position in the tuple is linked to an original variable).</p></blockquote><p><span class="math display">\[(Z,A)\in \{((a_1,b_1,c_1)a_1),...\}\tag{1}\\(Z,B)\in \{((a_1,b_1,c_1)b_1),...\}\]</span></p><p>这样，我们通过引入一个新的变量，和三个二元约束，就把该三元约束转换好了；对于更多的约束，可以用相似的方法进行。</p><p><strong>Note</strong>：这里可能一时没法理解，我们要<strong>理解究竟什么是约束</strong>。先来看普通的二元约束，以地图问题为例，假设每个国家的颜色均可为红黄蓝，约束的意义在于，若 A 填了红色，那么相邻的 B 就只能涂黄或蓝——也就是说，一个变量的值确定后，另一个变量的值域也变化了——反过来想我们如何表示约束？可以采用集合的形式 <span class="math inline">\(\{(R,Y),(R,B)...\}\)</span> 。我们重新来理解约束，就是 A 和 B 分别取值，构成一个二元组，要求这个二元组在约束集合中。（我在理解上的困惑实际上在于，没有搞清楚约束的形式化表达。）这样的话，我们来看加法约束，假设 A 已定，对于 A 和 Z 的约束来说，式（1）要求两者构成的二元组要在约束集合中，这样就缩减了 Z 的值域；若进一步定下了 B 的值，Z 的值域将进一步缩小，事实上这时仅可能剩下一个三元组 <span class="math inline">\((a,b,c=a+b)\)</span> ，接下来可对 C 进行赋值或者检测约束是否满足。</p><h2 id="solving-csps">Solving CSPs</h2><p>我们可采用 Standard search formulation of CSPs，我们的初始状态为一个 empty assignment，后继函数为对任一未赋值变量进行赋值，而目标检测则要求赋值为 complete state 且符合约束。显然，1. 我们只检查了叶节点而事实上在过程中就可以进行约束检查；2. 如前所述，我们并不关心赋值的顺序，只关心 goal。注意到无论是 BFS 还是 DFS 都是低效的，但是我们没必要存储中间节点，因此，要在 DFS 框架下进行改进。</p><p><strong>Backtracking Search</strong> 算法针对了这两个问题进行了改进</p><ul><li>Idea 1: One variable at a time in fixed ordering</li><li>Idea 2: Check constraints as you go</li></ul><p>简言之：<strong>Backtracking = DFS + variable-ordering + fail-on-violation</strong></p><p>两个思路都是比较直观的不多介绍。</p><p><img src="16051094159383.png" /></p><p>现在的问题在于，如何 Improving Backtracking。</p><h3 id="ordering">Ordering</h3><p>显见，不同的赋值顺序会对效率产生影响，又可分为两类：Which variable should be assigned next? In what order should its values be tried?</p><p>对于变量的顺序来说，直观来讲，为了尽早避免可能的冲突，我们会选取那些约束比较多的变量（或者说，是 domain 比较小的，回忆一下约束的意义即在于，某一变量定值之后会缩减另外的变量的 domain）。例如，在地图着色问题中，我们一般会从已着色的国家的相邻国开始进行着色。定义：</p><blockquote><p>Variable Ordering: <strong>Minimum remaining values (MRV)</strong></p><p>Choose the variable with the fewest legal left values in its domain. Also called <strong>“most constrained variable”</strong></p><p>“Fail-fast” ordering</p></blockquote><p>对于赋值的顺序来说，我们要尽早找到一组解（而不是回溯），那么我们肯定希望给剩余的变量更多的「可能性」，也就是说要避免其他变量的取值发生缩减；我们定义</p><blockquote><p>Value Ordering: <strong>Least Constraining Value (LSV)</strong></p><p>Given a choice of variable, choose the least constraining value. I.e., the one that rules out the fewest values in the remaining variables</p><p>Note that it may take some computation to determine this! (E.g., rerunning filtering)</p></blockquote><p>注意，前者可以让我们避免一些可能的错误（可以「<strong>剪枝</strong>」）；而或者只是提高了找到解的可能性（但并非保障，只能说「更快找到」）。若我们想找到全部的解，那么前者可以帮助减少计算，但后者则并不会有什么助益。</p><h3 id="filtering-can-we-detect-inevitable-failure-early">Filtering: Can we detect inevitable failure early?</h3><p>MRV 可以让我们避免一些简单的错误（如相邻两国填同样的颜色），然而这里我们仅仅检测了这样一个简单的约束；那么我们能否采取更多的计算来提前发现错误呢？这就是 Filtering 的思路。</p><p>先来看 <strong>Forward Checking</strong>：Cross off values that violate a constraint when added to the existing assignment。我们在取定一个值（搜索）之后，对于相邻边的 domain 进行缩减（推理）。当然，这里我们只「向前看」了一步，事实上对于缩减了 domain 的变量我们可以继续进行推理，也就是约束传播 <strong>Constraint Propagation</strong> 。我们来给出定义：</p><blockquote><p>Consistency of A Single Arc</p><p>An arc <span class="math inline">\(X \rightarrow Y\)</span> is <strong>consistent</strong> iff for every <span class="math inline">\(x\)</span> in the tail there is some <span class="math inline">\(y\)</span> in the head which could be assigned without violating a constraint</p><p>Forward checking: Enforcing consistency of arcs pointing to each new assignment</p></blockquote><p>注意定义，对于一条弧 <span class="math inline">\(X \rightarrow Y\)</span> 来说，我们减小了 Y 的值域之后，要进行缩减的是 X 的值域；如何缩减，就是要使得 X 的任一个取值，Y 中都至少有一个能满足约束——对于那么不满足的 X 的取值，我们进行缩减。注意其方向，按照这个定义，我们在做 Forward checking 的时候，给定了 A，那么就要对于所以包含指向 A 的弧（事实上都是无向边）的变量进行值域缩减。下面给出具体的算法：!</p><p><img src="16051094243854.png" /></p><p>更宏观的解释：在 Filtering 中，我们 <strong>交替进行搜索和推理</strong>，在为某一变量赋值之后做弧相容检查。具体来说，当 <span class="math inline">\(X_i\)</span> 赋值后，我们调用 <span class="math inline">\(AC-3\)</span>，从 <span class="math inline">\((X_j,X_i)\)</span> 中未赋值变量<span class="math inline">\(X_j\)</span>开始，进行约束传播；事实上我们维护了一个队列，一旦某一个变量的值域发生了变化，就将其 neighbors 加入其中。</p><p>然而，弧相容仍不能保证不进行回溯。例如，对于一个三角形来说，若每个节点只能赋值为红蓝两色那么显然是无解的，但用弧相容找不错错误来。若想直接得到解，引入 k-相容 <strong>K-Consistency</strong> 的概念：</p><ul><li>1-Consistency (Node Consistency): Each single node’s domain has a value which meets that node’s unary constraints</li><li>2-Consistency (Arc Consistency): For each pair of nodes, any consistent assignment to one can be extended to the other</li><li>K-Consistency: For each k nodes, any consistent assignment to k-1 can be extended to the k th node.</li></ul><p>并给出强 k-相容 <strong>Strong k-consistency</strong>: also k-1, k-2, … 1 consistent，以及结论，对于一个 n 变量的 CSP 来说，strong n-consistency means we can solve without backtracking。这是显然的。</p><h3 id="structure-can-we-exploit-the-problem-structure">Structure: Can we exploit the problem structure?</h3><p>这里问题的结果指的是约束图的结构。考虑极端情况：所有节点结构独立的，那么我们可以任意赋值；更为一般的，Independent sub-problems are identifiable as connected components of constraint graph。事实上，这样可分割的情况是很少见的（如澳大利亚地图着色），一个理想的可分问题能大大降低复杂度。注意到，我们可以用 Search 问题的通用复杂度来衡量 CSP，搜索树的深度显然是节点数，宽度为 domain 的大小；若一个 n 个节点的问题可分割成大小为 c 的若干子问题，则时间复杂度从 <span class="math inline">\(O(d^n)\)</span> 降为 <span class="math inline">\(O({n \over c} d^c)\)</span> ，变成了 n 的线性函数。</p><p>可分割为 <strong>sub-problems</strong> 的问题也是很少见的，一个更一般的情况是 <strong>Tree-Structured CSPs</strong>，对此我们有定理：</p><blockquote><p>Theorem: if the constraint graph has no loops, the CSP can be solved in <span class="math inline">\(O(n d^2 )\)</span> time</p></blockquote><p>同样变为了 n 的线性函数。如何做到呢？1. 对约束树进行拓扑排序；2. 逆着拓扑排序，从孩子到父节点做弧相容检查（即对于<span class="math inline">\((Parent(X_j),X_j)\)</span>进行检查）；3. 然后顺着拓扑排序，从根节点到到叶节点进行赋值。注意到，进行这样一次弧相容检查之后，我们保障了对于父节点的任意取值，子节点都至少有一个值满足约束，也就保障了算法的正确性（解的存在性）。</p><p>树结构也太少见了，一个拓展是 <strong>Nearly Tree-Structured CSPs</strong> 。对其的思路是，选定一组变量，使得删去这些之后的节点构成一棵树，这样的话，我们只要遍历这组节点的所有可能赋值情况即可。</p><blockquote><p>Conditioning: instantiate a variable, prune its neighbors' domains</p><p><strong>Cycle Cutset</strong> conditioning: instantiate (in all ways) a set of variables such that the remaining constraint graph is a tree.</p></blockquote><p>所以我们的任务是找到这样的 Cycle Cutset，若其大小为 c，则找到这个集合之后，搜索的时间复杂度为 <span class="math inline">\(O( (d^c ) (n-c) d^2)\)</span></p><p><img src="16051094337625.png" /></p><h2 id="iterative-improvement">Iterative Improvement</h2><p>在上述 Backtracking 算法中，我们仍一个一个对变量进行赋值，但 CSP 只关心结果，因此一个自然的想法是直接从 complete state 出发，寻找解。Iterative Improvement 是一种 <strong>Local Search</strong> 方法。我们</p><ul><li>Take an assignment with unsatisfied constraints</li><li>然后 <strong>Operators</strong> reassign variable values。</li></ul><p>具体来说，我们 1. Variable selection: randomly select any conflicted variable；2. Value selection: min-conflicts heuristic: Choose a value that violates the fewest constraints。这里第二步的变量选择使得冲突最少的那一个，可以认为是一种 heuristic <span class="math inline">\(h(n)=\)</span> #total number of violated constraints。</p><p>这里体现的是 <strong>Local Search versus Systematic Search</strong>，相较于 BFS, DFS, IDS, Best-First, A* 等系统搜索算法（Keeps some history of visited nodes）来说，后者的一大特点就是不保留 history，然而，这在减少了存储负担的情况带来的问题则是失去了 complet 性质，容易陷入局部最优。</p><p>一些 Local Search 包括</p><ul><li>Hill climbing：在 neighbor 中找最优值，迭代，可能陷入局部最优</li><li>Simulated annealing：结合了 random walk 和 hill climbing。在循环过程汇总，与 hill climbing 的不同在于，对于 next state 来说，若是较为「好的」则以概率 1 接受；若相较于前一个状态变差了不是直接拒绝而是以一定的概率 <span class="math inline">\(P(T)\)</span> 接受（random walk）。接受的概率随着时间降低，也就是「模拟退火」的命名原因。具体的，接受概率为 T 的函数，如 <span class="math inline">\(\exp(\Delta E/T)\)</span> 其中 <span class="math inline">\(\Delta E\)</span> 可表为 next value - current value，而<span class="math inline">\(T\)</span> 随着时间而降低，即从 random walk 逐渐变为 hill climbing。</li><li>Local beam search：并行 k 个 hill climbing——对于 Systematic search 来说保留所有的历史，而前两种仅保留一个，都太极端了，Local beam search 每次保留 k 个 complete state 而它们的 successor 中找最好的（加入了 randomness）的 k 个后代进行下一次模拟。</li><li>Genetic algorithm</li></ul><p>另，对于连续函数来说，则要采用梯度下降方法 Gradient decent。</p><p>进一步阅读：《人工智能》chapter 4.1 – 4.2。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Search</title>
      <link href="/posts/b5c6fd42/"/>
      <url>/posts/b5c6fd42/</url>
      
        <content type="html"><![CDATA[<p>首先，我们 <strong>定义一个搜索问题</strong>：</p><ul><li>a state space 状态空间</li><li>a successor/result function (with actions, costs) 转移方程</li><li>a start state 开始状态</li><li>a goal test 结束检测</li></ul><p>例如对于一个 Pacman 世界来说，状态空间就是 Pacman 所在的位置、豆子的状态所决定的；而后继函数可以包括了我们的动作以及所需要的代价（在这里每一方向上的代价都是 1）；我们从一个起始状态去搜索如何到达目标状态。</p><p><img src="16051098049069.png" /></p><p>Note：对于实际的编程来说，最重要的应该是状态的表示，一个好的状态表示可以减少算法复杂度；为此，除了 World State 之外，还可以定义 Local State。</p><p>对于一个搜索问题来说，我们可以把不同的状态之间用后继函数连接起来，构成图（<strong>state space graph</strong>），节点表示状态有向边表示后继函数，注意这里每一个状态都只有一个；然而，在实际的操作中，树（<strong>search tree</strong>）则更为常见也更容易理解，它和图的区别在于，同一个状态可以对应着搜索树的不同节点，即 <strong>state 可重复</strong>。</p><p>搜索算法可分为无信息和有信息搜索</p><h2 id="uninformed-search">Uninformed Search</h2><p>有 深度优先（Depth-First Search DFS）、广度优先（Breadth-First Search BFS）、迭代加深（Iterative Deepening IDS）、代价一致（Uniform-Cost Search UCS）等。其思想都是差不多的，只是在实现和性质上面有着些许不同。</p><p>对于搜索算法的评价，首先是<strong>完备性（complete）和最优性（optimal）</strong>。完备性意味着总能找得到解，而最优性则意味着找到的解是否为最好的。当然，考虑到实用性还需要考虑时间、空间复杂度。</p><p><img src="16051098109540.png" /></p><p>还是从 DFS 和 BFS 讲起吧。可以考虑地图（状态图）上一个点到另一个点的路径。<strong>DFS</strong> 的思想是：我们一条路走到底，遇到了问题再退回去，找新的路——看起来是一种很任性的方法，但它的好处在于节省了空间，相较于 BFS，它并不需要存储所有已到达的 state，而仅需要存储其所在的路径（对于某一点，在拓展的时候我们可以按照字典序，这样就避免了重复）。这种看似随意的搜索方法当然会有问题：甚至对于一个简单的地图问题来说，其搜索树都可能是 infinte 的，也就是说，它并不是 complete 的（当然也不是 optimal 的。当然，我们可以通过限制搜索深度保障完备性）。<strong>BFS</strong>的意思是比较直观的：我们一层层、按照距离的远近来需要目标状态，这种方法唯一的问题在于空间复杂度，很多情况下我们并没有那么多的内存在存储庞大的状态空间。具体来说，两者维护的 fringe 是不同的，分别是 LIFO stack 和 FIFO queue（当然，这些都属于术的层面了）。既然 BFS 和 DFS 都有着各自的优缺点，那么<strong>IDS</strong>就是想把两者的优势结合在一起了：我们保留 DFS 的空间特性，为了保障算法的正确性，我们采取迭代加深的方法，顾名思义即限制搜索的深度，搜索完 d 层之后，若没有找到目标则进一步搜索 d+1 ；妙的是，这几乎没有带了时间上的太多损耗，至少两者在复杂度上是一致的，以理想的搜索树模型来说（每个节点的子节点规模一致），其不过使得时间成本提升了一倍。</p><p>前面提到，DFS 和 BFS 在实现的层面上分别使用了stack 和 queue，我们将其统一起来：两者的差别无非在于，我们关注的「优先级」不同，对于前者我们更关心更深的节点，对于后者则赋予更浅的节点以高的优先级。我们用优先队列的概念来说，每次拓展的节点都是「优先级」最高的那一个——事实上，我们之后提到的有信息搜索中，采取的是同样的思路，不过我们对于排序的选择还加上了另外的一些 heuristic。这里的<strong>UCS</strong>也是一样的：对于 DFS 和 BFS 来说，我们讨论的框架都是在每一个状态之间的 cost 都是一样的情况下，而实际中如地图问题，城市之间的距离（cost）是不同的。我们的思路也是一样，每次把距离最小的那个节点拿出来加以拓展。Note：这时候，在 goal test 上要小心，我们不能检测到目标状态就直接结束算法，而要继续运行以确保该条路径是最优的；也就是说，我们在拓展的时候不进行目标检测，而是将各节点计算好相应的「代价」之后放入优先队列，而是在节点弹出的时候才进行目标检查。</p><h2 id="informed-search">Informed Search</h2><p>对于 uninformed 来说，we only care about past, but never “look ahead”；然而，事实上我们可以把一些全局的信息利用起来，如 Manhattan distance 或 Euclidean distance 作为 Heuristics Function。</p><p>我们先来看一个极端情况（完全不考虑 history）<strong>Greedy Search</strong>：我们只相信我们的「直觉」（启发函数），每次往我们认为最好那个节点前进。很显然，这样会出问题，想想迷宫就知道了，也就是说，这样无法保障完备性和最优性。<code>A* Search</code> 解决了这一问题，其思想是</p><blockquote><p>Take into account the cost of getting to the node as well as our estimation of the cost of getting to the goal from the node.</p></blockquote><p>评价函数 Evaluation function <span class="math display">\[f(n) = g(n) + h(n)\]</span> 其中 <span class="math inline">\(g\)</span> 是我们到节点 <span class="math inline">\(n\)</span> 的 cost，而 <span class="math inline">\(h\)</span> 是我们对于该节点到目标节点的启发式估计。</p><p>对于启发函数，我们要问的是：<strong>什么样的启发函数才能保障最优性？</strong> 对于 Tree Search 来，我们有结论：</p><blockquote><p>A heuristic <span class="math inline">\(h\)</span> is <strong>admissible</strong> (optimistic) if: <span class="math display">\[0\le h(n)\le h^*(n)\tag{1}\]</span> where <span class="math inline">\(h^*(n)\)</span> is the true cost to a nearest goal</p></blockquote><p>也就是说，我们启发式的代价要比真实的代价小，即 <strong>可接受的 admissible</strong>。以下简证</p><p><img src="16051098208684.png" /></p><p>对于一个树上两目标节点 A 和 B，假设 A 为最优的，假如 B 和 A 的一个祖先 n 同在 fringe 中，由于 admissible，<span class="math inline">\(f(n)&lt;g(B)\)</span>，也就是说 n 会先被弹出……最终 A 和 B 同在 fringe 中，而 <span class="math inline">\(h(A)=0\)</span>，也就是说，我们先找到了 A。</p><p>一个图直观地理解启发搜索和 UCS 的区别：</p><p><img src="16051098264508.png" /></p><p>另一个问题，<strong>怎样找到启发函数？</strong> 一门玄学……常见的思路是</p><ul><li>从 relaxed problem 出发，即忽略某些限制，例如地图问题中，我们采用 Manhattan distance 或 Euclidean distance 都是忽略了墙；对于 8 Puzzle 问题来说有两个限制：不能重叠（只能移动到空的框中），只能走一步（不能「飞」），那么我们就可以任意取消一个限制构成 relaxed problem</li><li>从 sub-problems 出发，考虑子问题。如 8 Puzzle 问题中，我们只考虑 1-4 号牌，而将 5-8 号牌看成是任意的（注意没把它拿走，仍然构成上面了两个约束，仅仅是要解决的问题变成了原问题的一部分）；更直观的理解可以是魔方只复原底层。</li></ul><p><img src="16051098316899.png" /></p><p>我们可以选取不同的启发函数，一般来说，它和真实值越接近，效果自然越好。一个 trivil 的情况是，全部设为 0（显然是 admissible 的），这样就退化为 UCS 了，而另一个极端，exact 的 heuristic 则可以保障我们不走「弯路」，直接找到了路径。所以，这又是 heuristic 的精确性和计算复杂度之间的 balance。</p><p>以上，我们只是讲了 Tree Search 的情况，对于 Graph Search 则更为复杂。后者的 idea 是 never expand a state twice，具体的实现是通过 Tree search + set of expanded states (“closed set”) ；在搜索时，我们为了防止重复，维护了一个集合，在拓展节点之前，我们先检查其是否在已搜索的节点结合之中，若已经搜索过了则跳过。这是一个很棒的想法，减小了计算的成本。然而在这种情况下，单单是 admissible 无法保障最优性。来看一个例子</p><p><img src="16051098372261.png" /></p><p>这里的 heuristics 是 admissible 的，然而，我们先从 B 到达 C（<span class="math inline">\(f(C)=4&lt;f(A)=5\)</span>），而对于 A 进行拓展时（注意它会比 G 先弹出进行拓展），我们不会再拓展 C（其在 closed set 中），这样就造成了非最优的一条路径。</p><p>对于图搜索来说，我们要求启发函数 <strong>一致性 consistency</strong></p><blockquote><p>Consistency: heuristic “arc” cost <span class="math inline">\(≤\)</span> actual cost for each arc <span class="math display">\[h(A)-h(C)\le cost(A to C)\tag{2}\]</span></p></blockquote><p><img src="16051098444344.png" /></p><p>对于（1）式来说，我们仅仅要求任意节点到 goal 的估计是乐观的（admissible）；而对于（2）式来说，我们要求，任意一条弧上的估计都是乐观的。上图中，从 A 到 C 的路径出了问题，我们若将 A 的 heuristic 改为 2 即符合了 consistency。</p><p>简证：1. 对于树搜索来说（显然图搜索可以表为树搜索，即不去维护 closed set），consistency 事实上保证了，我们每次拓展的节点都是「代价最小的」（因为 consistency 事实上保证了，任意两点之间，若把后者看做是 goal，则其是 admissible 的）；2. 这也就是说，对于每一个节点来说，其在进行 fringe 的时候，代价都是最小的，即是最优路径。结论：A* graph search is optimal。</p><p><strong>总结一下</strong>：</p><ul><li>对于 Tree search<ul><li>A* is optimal if heuristic is admissible</li><li>UCS is a special case (h = 0)</li></ul></li><li>对于 Graph search<ul><li>A* optimal if heuristic is consistent</li><li>UCS optimal (h = 0 is consistent)</li><li>Consistency implies admissibility</li></ul></li></ul><p>进一步阅读：<a href="http://blog.rexking6.top/2018/10/02/%E3%80%8A%E8%AE%A1%E7%AE%97%E6%99%BA%E8%83%BD%E3%80%8B%EF%BC%88%E4%B8%80%EF%BC%89%E6%90%9C%E7%B4%A2/">《计算智能》（一）搜索</a> 讲了另外的一些搜索算法。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 搜索 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 搭建博客 &amp; 基础配置</title>
      <link href="/posts/10759663/"/>
      <url>/posts/10759663/</url>
      
        <content type="html"><![CDATA[<p>【又是一篇旧文，记录使用 Hexo+Github Pages 配置博客的过程，正如当时就坦言的：「由于自己能力有限而且也确实太懒，在过程中参考了网上很多教程，多把自己用到的部分直接转了过来，在文中有链接说明，侵删」；更直白的讲，这里仅仅是把自己配置过程中参考的有用信息摘录了下来，只能算作「笔记」，但考虑还是花了很多心血或许可以帮到有需要的人，暂且存留下来。】</p><span id="more"></span><ul><li>hexo 文档：<a href="https://hexo.io/zh-cn/docs/" class="uri">https://hexo.io/zh-cn/docs/</a></li><li>live 2D <a href="https://github.com/EYHN/hexo-helper-live2d" class="uri">https://github.com/EYHN/hexo-helper-live2d</a></li><li>Cards 主题 <a href="https://github.com/ChrAlpha/hexo-theme-cards" class="uri">https://github.com/ChrAlpha/hexo-theme-cards</a></li></ul><h2 id="相关概念">相关概念</h2><h3 id="什么是-hexo">什么是 Hexo</h3><p>这是一套使用第三方主题模板+自己的博客文章（.md文件）+ 网站信息配置，通过Node.js进行本地连接混合生成一套静态网站的工具链套件</p><p>也就是说，通过Hexo创建的博客是一个仅提供在线浏览功能的静态博客，不存在后台编辑功能，添加新博客时需要在自己开发机上编写新博客文章（.md文件），再次生成一个新版本网站，上传并替换，从而实现新文章发布</p><p>优势是可使用网上各种免费的静态网站空间，节省服务器租金，省去维护服务器的工作，不需担心后台被黑导致数据丢失，无痛随时全站更换主题…</p><p>劣势是不能在公司电脑上随时在线更新博客，除非带着Hexo博客源码…</p><p>和需要自己保管好Hexo博客源码，否则数据丢了看上去有点难重新把博文整理下来</p><h3 id="什么是-node.js">什么是 Node.js</h3><p>这就是一套SDK，一套使用JavaScript编写的，包含多个应用级功能模块，可用于一般应用开发的工具包</p><p>JavaScript的运行需要一个JS解释器实时运算每一句JavaScript代码，一般情况下网页上的JS代码段会使用浏览器提供的解释器运行，而Node.js使用了谷歌开源的一个名为 V8引擎的良心产品（JS解释器），实现脱离浏览器下运行JavaScript代码</p><h3 id="什么是-nvm">什么是 nvm</h3><p>nvm，Node Version Manager 是一个开源的Node.js版本管理Bash工具，可方便的在Bash环境下下载、更新、管理多个版本并存的Node.js，并选择性地使用其中一个</p><h3 id="什么是-github-pages">什么是 GitHub Pages</h3><p>GitHub Pages 是GitHub提供的个人静态主页网站托管服务，原目的是用于提供你在GitHub上托管的所有开源项目介绍，后来也推荐作为个人博客之类的用途</p><p>优势是使用简单方便，免费高效实时，可用空间高达1G，可绑定自定义域名，原生自带GitHub级别防护…好像无敌了</p><h2 id="网站搭建基础配置">网站搭建&amp;基础配置</h2><p>原本尝试在 Synology 上进行安装，但不知何原因无法安装 Hexo，Docker 又没有使用过，在课上搞了半天未果，遂放弃而采用了在本地部署的方案。在 mac 上安装还是比较顺畅的，主要参考以下几篇博文：</p><ul><li><a href="https://www.cnblogs.com/wavky/p/HexoBlog.html">使用Hexo搭建GitHub博客（2018年Mac版）</a></li><li><a href="https://zhuanlan.zhihu.com/p/26625249">GitHub+Hexo 搭建个人网站详细教程</a> <a href="https://juejin.im/post/5a6ee00ef265da3e4b770ac1">关于HEXO搭建个人博客的点点滴滴</a> 一篇较为详尽的文章，留待参考</li></ul><h3 id="安装hexo">安装Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>为了便于发布到GitHub上，建议同时安装<code>hexo-deployer-git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p><a href="https://hexo.io/zh-cn/docs/">Hexo安装文档</a></p><h3 id="初始化建立博客项目">初始化，建立博客项目</h3><p>选定博客网站项目程序文件的存放位置，如 <code>~/develop/hexo/github/</code>，Bash中cd进入该目录下，执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>执行完毕后，该命令将在当前目录下生成一套标准的Hexo博客项目模板</p><h3 id="生成网站">生成网站</h3><p>上面的操作只是生成了一套网站构成所需的“源代码”，实际发布时需要根据这套“源代码”当中的配置文件、博客文档（.md文件）、主题模板等，进行组合构建，生成服务器可识别的标准HTML网站目录，此时可使用该命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><p>执行完毕后，在<code>public</code>目录下可看到我们自己书写的博客文档（.md文件）与所选的博客主题模板链接组合，生成的最终静态网站文件，该目录也差不多就是之后发布到GitHub上的实际文件（实际发布到GitHub的是.deploy_git目录），外部的网站“源代码”不会上传到 <code>github.io</code>库</p><h3 id="启动本地服务器">启动本地服务器</h3><p>启动本地服务器可即时查看网站运行效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>默认地址是 <a href="http://localhost:4000/" class="uri">http://localhost:4000/</a></p><h3 id="主题">主题</h3><p>主题文件可在 <a href="https://hexo.io/themes/">Hexo官方主题网页</a> 中下载，以 Material 为例，点击主题预览图下方的主题名称链接即可进入该主题的源码发布页面 <a href="https://github.com/viosey/hexo-theme-material">GitHub - viosey/hexo-theme-material: Material Design theme for hexo.</a></p><p>根据主题安装指导，下载项目至博客项目下的<code>themes</code>目录中，文件夹命名为<code>material</code>，并在博客配置文件<code>_config.yml</code>中指定使用该主题：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">material</span></span><br></pre></td></tr></table></figure><p>将material主题目录下的 <code>_config.template.yaml</code> 重命名为 <code>_config.yaml</code></p><p>参考 <a href="https://material.viosey.com/docs/#/">Material主题文档</a>进行必要配置</p><p>再次执行 <code>hexo g</code> 将会根据新主题重新构建整个博客</p><h3 id="设置站点相关内容">设置站点相关内容</h3><p>设置站点名、作者昵称和站点描述等内容：打开博客配置文件，博客根目录下_config.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">copy#</span> <span class="string">Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Vicの博客</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">测试攻城狮</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">人生苦短，我学Python</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Vic</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span></span><br></pre></td></tr></table></figure><h3 id="添加网易云音乐">添加网易云音乐</h3><p>打开网页版的网易云音乐，选择喜欢的音乐，点击生成外链播放器，复制外链的代码</p><p>比如在侧栏插入这首歌的音乐播放器，修改 <code>blog\themes\next\layout\_macro</code> 的sidebar.swig 文件，找合适的地方添加刚刚复制的外链代码。</p><h3 id="搜索功能使用-localsearch">搜索功能：使用 LocalSearch</h3><h4 id="安装相关插件">安装相关插件</h4><p>安装搜索插件： <code>hexo-generator-searchdb</code></p><p>在博客根目录下执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure><h4 id="配置博客">配置博客</h4><p>安装完成，编辑博客配置文件：<code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure><h4 id="配置主题">配置主题</h4><p>Next 主题自带搜索设置，编辑主题配置文件：<code>_config.yml</code></p><p>找到文件中 Local search 的相关配置，设为 <code>true</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>hexo 重新部署</p><h2 id="主题配置">主题配置</h2><p>参考</p><ul><li><a href="https://vic.kim/2019/05/25/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E4%B9%8BNext%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/">Hexo博客优化之Next主题美化</a></li><li><a href="https://wylu.github.io/posts/e0424f3f/">NexT主题进阶配置</a> 详尽，留待参考</li><li><a href="https://zhuanlan.zhihu.com/p/73122445">NexT 网站配置——雏形初成</a></li></ul><p>这里使用的主题是 <code>NexT</code>，Github地址为：<a href="https://github.com/theme-next/hexo-theme-next" class="uri">https://github.com/theme-next/hexo-theme-next</a></p><p>该主题由 <a href="https://link.zhihu.com/?target=https%3A//notes.iissnan.com/">IIssNan</a> 开发的 <a href="https://link.zhihu.com/?target=https%3A//github.com/iissnan/hexo-theme-next">NexT</a> 已经停止维护，我们采用的是社区维护版的 <a href="https://link.zhihu.com/?target=https%3A//github.com/theme-next/hexo-theme-next">NexT v6 and v7</a>，但原版的 <a href="https://link.zhihu.com/?target=https%3A//theme-next.iissnan.com/getting-started.html">中文说明文档</a> 是编得极好的，是重要的参考来源。</p><p>不过由于社区版的和原版已经产生了较大区别，还是更推荐看社区版的 <a href="https://link.zhihu.com/?target=https%3A//theme-next.org/docs/getting-started/">说明文档</a>。</p><blockquote><p>以下一般是通过修改 <strong>主题配置文件</strong> <code>_config.yml</code>来实现各种配置，这种情况下不需要重新渲染发布等操作，修改完后直接保存再刷新网页即可看到效果。</p></blockquote><h3 id="scheme">Scheme</h3><p>Scheme 是 <code>NexT</code>提供的一种特性，借助于 Scheme，<code>NexT</code>为你提供多种不同的外观。同时，几乎所有的配置都可以 在 Scheme 之间共用。目前 <code>NexT</code>支持三种 Scheme，他们是：</p><ul><li><code>Muse</code>→ 默认 Scheme，这是 <code>NexT</code>最初的版本，黑白主调，大量留白</li><li><code>Mist</code>→ Muse 的紧凑版本，整洁有序的单栏外观</li><li><code>Pisces</code>→ 双栏 Scheme，小家碧玉似的清新</li><li><code>Gemini</code>→ 看起来像<code>Pisces</code>，但是不同文章直接用块隔开，看起来更舒服</li></ul><p>个人比较推荐 <code>Gemini</code> ，其次 <code>Mist</code>。</p><p>Scheme 的切换通过更改 <strong>主题配置文件</strong>，搜索 scheme 关键字。 你会看到有四行 scheme 的配置，将你需用启用的 scheme 前面注释 <code>#</code> 去除即可。</p><h3 id="菜单设置">菜单设置</h3><p>参见 <a href="https://juejin.im/post/5a6ee00ef265da3e4b770ac1">关于HEXO搭建个人博客的点点滴滴</a></p><p>可以看到目前为止我们的主题菜单中只有两个默认的选项 <code>Home</code>和<code>Archive</code>，我们还可以添加<code>tag</code>、<code>about</code>、<code>category</code>等选项。</p><p>我们先在 <code>\Hexo\Blog\themes\next</code> 下找到 <strong>主题配置文件</strong> <code>_config.yml</code>中找到<code>Menu Settings</code>。</p><p>阅读注释，我们可以知道<code>Menu Settings</code>中的<code>Usage</code>采用<code>Key: /link/ || icon</code>的格式。</p><p><code>Key</code>是菜单项 (<code>home</code>, <code>archives</code>, etc.)，我们可以通过<code>Hexo\Blog\themes\next\languages</code>中的<code>zh-CN.yml</code>文件查看<code>menu</code>中是否有对应项的翻译。 例如若该文件中有<code>tags</code>项，那么博客中对应处就会显示对应翻译<code>标签</code>，若没有则会采用原单词<code>tags</code>，当然你也可以自行修改。</p><p><code>/link/</code>在 <code>||</code> 之前，指网站中该菜单项的链接。 <code>icon</code> 在 <code>||</code> 之后，指该菜单项的图标，对应 <a href="https://link.zhihu.com/?target=https%3A//link.jianshu.com/%3Ft%3Dhttp%3A%2F%2Ffontawesome.io%2Ficons%2F">Font Awesome</a> 中图标的名字。 而 <code>icons: true</code>可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。 而 <code>badges</code>就是显示该菜单项内子类的数目。</p><blockquote><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，<code>NexT</code> 将会使用 <code>?</code> 作为图标。</p></blockquote><h3 id="添加标签项">添加标签项</h3><p>我们先把 <code>tags</code> 前的注释符 <code>#</code> 删了。</p><p>然后创建一个<code>tags</code>页面：在<code>Hexo\Blog</code>目录下右键打开<code>Git Bush</code>，输入<code>hexo new page tags</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br><span class="line">INFO  Created: C:\D\Hexo\Blog\<span class="built_in">source</span>\tags\index.md</span><br></pre></td></tr></table></figure><p>这时候你的<code>source/</code>下会生成 <code>tags/index.md</code> 文件，我们将其打开，然后在最后面加上两行：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type:</span> <span class="string">&quot;tags&quot;</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>这时候你要为你的文章打上标签就可以在文章的头部写上：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">tags:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag2</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Tag3</span></span><br></pre></td></tr></table></figure><h3 id="添加分类和自我介绍">添加分类和自我介绍</h3><p>同上，先把 <code>categories</code> <code>about</code> 前的注释符 <code>#</code> 删了，然后创建页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure><p>打开<code>categories/index.md</code> 和 <code>about/index.md</code> 文件，在最下面加上分别两行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">type: &quot;about&quot;</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>这时候你就可以给你的文章归类存档了，使用方式就是在你的文章的头部加上：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">分类1</span></span><br></pre></td></tr></table></figure><h3 id="设置预览摘要">设置预览摘要</h3><p>可以启用预览摘要模式，在<strong>主题配置文件</strong> 中找到 <code>auto_excerpt</code> 属性，将<code>false</code>设置为<code>true</code> ，将<code>length</code>设置为想要预览到的字数，如下图所示：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically Excerpt (Not recommend).</span></span><br><span class="line"><span class="comment"># Use &lt;!-- more --&gt; in the post to control excerpt accurately.</span></span><br><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">length:</span> <span class="number">300</span></span><br></pre></td></tr></table></figure><h3 id="启用数学公式渲染引擎">启用数学公式渲染引擎</h3><p>打开themes/next/下的_config.yml，查找<code>math</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">  <span class="comment"># Default (true) will load mathjax / katex script on demand.</span></span><br><span class="line">  <span class="comment"># That is it only render those page which has `mathjax: true` in Front-matter.</span></span><br><span class="line">  <span class="comment"># If you set it to false, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># hexo-renderer-pandoc (or hexo-renderer-kramed) required for full MathJax support.</span></span><br><span class="line">  <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment"># See: https://mhchem.github.io/MathJax-mhchem/</span></span><br><span class="line">    <span class="attr">mhchem:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="设置侧栏在左侧右侧">设置侧栏在左侧/右侧</h3><p>打开themes/next/下的_config.yml，查找<code>sidebar</code></p><ul><li><p>Pisces或Gemini方案 打开themes/next/下的_config.yml，查找<code>sidebar</code>，将想要的方案打开</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">copysidebar:</span></span><br><span class="line"><span class="attr">position:</span> <span class="string">left</span></span><br><span class="line"><span class="comment">#position: right</span></span><br></pre></td></tr></table></figure></li><li><p>Mist或Muse方案 打开next/source/js/src/motion.js，查找paddingRight，把所有（2个）PaddingRight更改为paddingLeft即可。 打开next/source/css/_custom/custom.styl，添加如下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">copy//侧边栏置于左侧</span></span><br><span class="line"><span class="string">.sidebar</span> &#123;</span><br><span class="line">  <span class="attr">left:</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="string">//侧栏开关置于左侧</span></span><br><span class="line"><span class="string">.sidebar-toggle</span> &#123;</span><br><span class="line">  <span class="attr">left:</span> <span class="string">$b2t-position-right;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>打开next/source/css/_common/components/back-to-top.stylv，将<code>right: $b2t-position-right;</code>改为<code>left: $b2t-position-right;</code></p></li></ul><h3 id="显示当前浏览进度">显示当前浏览进度</h3><p>搜索关键字 <code>scrollpercent</code> ，把 <code>false</code> 改为 <code>true</code>，即可在右下角显示浏览进度，并单击可返回顶部。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">back2top:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># Back to top in sidebar.</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line">  <span class="attr">scrollpercent:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>把 <code>sidebar</code> 改成 <code>true</code> 可以把该部分移到左边目录下。</p><h3 id="设置侧边栏社交链接">设置侧边栏社交链接</h3><p>搜索关键字 <code>social</code>，然后添加社交站点名称与地址即可。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/Theigrams</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:15091060@buaa.edu.cn</span> <span class="string">||</span> <span class="string">envelope</span></span><br><span class="line">  <span class="string">知乎:</span> <span class="string">https://www.zhihu.com/people/zj_theigrams</span> <span class="string">||</span> <span class="string">quora</span></span><br><span class="line">  <span class="attr">CSDN:</span> <span class="string">https://blog.csdn.net/qq_36790747</span> <span class="string">||</span> <span class="string">codiepie</span></span><br></pre></td></tr></table></figure><p>明明在<code>Font Awesome</code>上找到了<a href="https://link.zhihu.com/?target=https%3A//fontawesome.com/icons/zhihu%3Fstyle%3Dbrands">知乎图标</a>，但不知道为啥就是在博客中加载不出来， 没办法就只好用 <code>quora</code> 的图标来代替了。 同样的，也没找到 <code>CSDN</code> 的图标，只好找了个相似的代替。</p><h3 id="设置头像">设置头像</h3><p>默认设置侧边栏是不显示头像的，不过我们可以编辑 <strong>主题配置文件</strong> 来添加头像， 查找字段 <code>avatar</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Sidebar Avatar</span></span><br><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="comment"># In theme directory (source/images): /images/avatar.gif</span></span><br><span class="line">  <span class="comment"># In site directory (source/uploads): /uploads/avatar.gif</span></span><br><span class="line">  <span class="comment"># You can also use other linking images.</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/images/head_img.gif</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be dispalyed in circle.</span></span><br><span class="line">  <span class="attr">rounded:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># The value of opacity should be choose from 0 to 1 to set the opacity of the avatar.</span></span><br><span class="line">  <span class="attr">opacity:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># If true, the avatar would be rotated with the cursor.</span></span><br><span class="line">  <span class="attr">rotated:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>将照片存在目录 <code>Hexo\Blog\themes\next\source\images</code>下，然后取消 <code>url</code>的注释，并在后面填入照片的路径。</p><p><code>rounded</code>选项决定照片框是圆还是方的。</p><p><code>opacity</code> 调节头像的不透明度。</p><p><code>rotated</code> 设置鼠标移动到头像上时是否旋转。</p><h3 id="网站图标设置">网站图标设置</h3><p>我们博客的默认图标是H，不过Next支持修改图标</p><ul><li><p>图标素材网站：<a href="https://www.easyicon.net/">easyicon</a>、<a href="https://www.iconfont.cn/">iconfont</a></p></li><li><p>下载16x16以及32x32大小的PNG格式图标，置于<code>/themes/next/source/images/</code>下</p></li><li><p>打开<code>themes/next/</code>下的<code>_config.yml</code>，查找<code>favicon</code></p></li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">copyfavicon:</span><br><span class="line">  small: /images/cat-16x16-next.png</span><br><span class="line">  medium: /images/cat-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line">  #android_manifest: /images/manifest.json</span><br><span class="line">  #ms_browserconfig: /images/browserconfig.xml</span><br></pre></td></tr></table></figure><p>修改small和medium的路径为下载的图标路径</p><h3 id="设置标签云">设置标签云</h3><p><a href="%5Bhttps://vic.kim/2019/05/23/Hexo%E5%8D%9A%E5%AE%A2%E5%BB%BA%E7%AB%8B%E6%A0%87%E7%AD%BE%E4%BA%91%E5%8F%8A%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA/%5D(https://vic.kim/2019/05/23/Hexo博客建立标签云及效果展示/)">Hexo博客建立标签云及效果展示</a></p><h3 id="设置-rss">设置 RSS</h3><p>NexT 中 RSS 有三个设置选项，满足特定的使用场景：</p><p>复制</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># false：禁用 RSS，不在页面上显示 RSS 连接.</span><br><span class="line"># 留空：使用Hexo生成订阅源并自动插入链接。你可能需要先安装插件: `npm install hexo-generator-feed --save`.</span><br><span class="line"># 具体的链接地址：适用于已烧制过 Feed 的情形.</span><br><span class="line">rss:</span><br></pre></td></tr></table></figure><p>具体操作如下：</p><p>首先在站点根目录下执行下列命令安装插件：</p><p>复制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>更改 <code>主题配置文件</code>，设定 rss 字段的值如下：</p><p>复制</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rss: /atom.xml</span><br></pre></td></tr></table></figure><p>阅读注释，我们可以知道<code>Menu Settings</code>中的<code>Usage</code>采用<code>Key: /link/ || icon</code>的格式。</p><p><code>Key</code>是菜单项 (<code>home</code>, <code>archives</code>, etc.)，我们可以通过<code>Hexo\Blog\themes\next\languages</code>中的<code>zh-CN.yml</code>文件查看<code>menu</code>中是否有对应项的翻译。 例如若该文件中有<code>tags</code>项，那么博客中对应处就会显示对应翻译<code>标签</code>，若没有则会采用原单词<code>tags</code>，当然你也可以自行修改。</p><p><code>/link/</code>在 <code>||</code> 之前，指网站中该菜单项的链接。 <code>icon</code> 在 <code>||</code> 之后，指该菜单项的图标，对应 <a href="https://link.zhihu.com/?target=https%3A//link.jianshu.com/%3Ft%3Dhttp%3A%2F%2Ffontawesome.io%2Ficons%2F">Font Awesome</a> 中图标的名字。 而 <code>icons: true</code>可用于控制是否显示图标，你可以设置成 <code>false</code> 来去掉图标。 而 <code>badges</code>就是显示该菜单项内子类的数目。</p><blockquote><p>在菜单图标开启的情况下，如果菜单项与菜单未匹配（没有设置或者无效的 Font Awesome 图标名字） 的情况下，<code>NexT</code> 将会使用 <code>?</code> 作为图标。</p></blockquote><h2 id="发布博客">发布博客</h2><h3 id="创建github.io仓库">创建github.io仓库</h3><p>在自己的GitHub中，创建新仓库，标准命名为<code>GitHub用户名.github.io</code>，例如我的：wavky.github.io</p><p>仓库Readme、License之类的留空即可，之后在发布上传时会被强制覆盖抹掉</p><h3 id="配置ssh密钥">配置SSH密钥</h3><p>参考 <a href="https://my.oschina.net/ryaneLee/blog/638440" class="uri">https://my.oschina.net/ryaneLee/blog/638440</a> 配置SSH密钥一节</p><h3 id="修改博客配置文件_config.yml">修改博客配置文件<code>_config.yml</code></h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">GitHub上传仓库的完整路径，如</span> <span class="string">https://github.com/wavky/wavky.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="发布到github">发布到GitHub</h3><p>在<code>hexo g</code>生成完毕后，可执行该命令发布博客到GitHub上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>或在生成网站的同时进行发布：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><h3 id="插入图片图床">插入图片：图床</h3><p>图床，当博文中有图片时，若是少量图片，可以直接把图片存放在source文件夹中，但这显然不合理的，因为图片会占据大量的存储的空间，加载的时候相对缓慢 ，这时考虑把博文里的图片上传到某一网站，然后获得外部链接，使用Markdown语法<code>![图片信息](外部链接)</code> 完成图片的插入，这种网站就被成为图床。常见的简易的图床网站有：<a href="https://link.zhihu.com/?target=http%3A//www.tietuku.com/">贴图库图片外链</a> 国内算比较好的图床我认为有两个：新浪微博和 <a href="https://link.zhihu.com/?target=https%3A//www.qiniu.com/">七牛云</a> ，七牛云的使用方法可以参看其他文章。图床最重要的就是稳定速度快，所以在挑选图床的时候一定要仔细</p><p><a href="https://www.jianshu.com/p/6dce6094bf61">如何使用七牛云做为图床？</a></p><h2 id="绑定域名">绑定域名</h2><p>GitHub Pages 默认提供的是 <code>GitHub用户名.github.io</code>（例如我的：wavky.github.io）作为博客访问地址，可设置绑定自定义域名</p><p>在博客项目目录的source文件夹中，创建一个CNAME文件，存储预备使用的个人域名，如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在source目录下</span></span><br><span class="line"><span class="built_in">echo</span> story.wavky.com &gt; CNAME</span><br></pre></td></tr></table></figure><p>清理Hexo缓存并重新生成发布</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure><p>GitHub项目页面中Setting设置界面，滚到GitHub Pages部分确认域名无误</p><p>在个人域名提供商（如阿里云万网）中，进入DNS设置界面，追加一条CNAME记录，这里我指定以story前缀的个人域名跳转到原来的默认的博客域名<code>wavky.github.io</code></p><h2 id="常用hexo命令">常用Hexo命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g <span class="comment">#安装Hexo</span></span><br><span class="line">npm install hexo-deployer-git --save  <span class="comment">#安装Git部署插件</span></span><br><span class="line">npm update hexo -g <span class="comment">#升级</span></span><br><span class="line">hexo init <span class="comment">#初始化博客</span></span><br><span class="line"></span><br><span class="line">hexo n <span class="string">&quot;我的博客&quot;</span> == hexo new <span class="string">&quot;我的博客&quot;</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo g == hexo generate <span class="comment">#生成</span></span><br><span class="line">hexo s == hexo server <span class="comment">#启动服务预览</span></span><br><span class="line">hexo d == hexo deploy <span class="comment">#部署</span></span><br><span class="line"></span><br><span class="line">hexo server <span class="comment">#Hexo会监视文件变动并自动更新，无须重启服务器</span></span><br><span class="line">hexo server -s <span class="comment">#静态模式</span></span><br><span class="line">hexo server -p 5000 <span class="comment">#更改端口</span></span><br><span class="line">hexo server -i 192.168.1.1 <span class="comment">#自定义 IP</span></span><br><span class="line">hexo clean <span class="comment">#清除缓存，若是网页正常情况下可以忽略这条命令</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Next </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS + WordPress 使用记录</title>
      <link href="/posts/ff449868/"/>
      <url>/posts/ff449868/</url>
      
        <content type="html"><![CDATA[<p>【这算是我的第一次建站尝试，使用的是最为大众熟知的 WordPress，不过由于种种原因换了很多平台，之后有机会再做记录吧；兜兜转转，现在主要的方案放在了 CNblog 上，提供了更为省心并且体验不错的服务，主要是对于 Markdown 的支持非常好。】</p><span id="more"></span><p>20201126 更新：最近又重新安了一次 WordPress，经历了这么多之后回过头来，一切变得简单了起来，虽然 WordPress 对我来说还是太复杂了……成功完成了安装实现了基本的功能，之后的时间专心学习的创作吧~尽量不去折腾了。这一次的安装，参见 <a href="https://www.ioiox.com/archives/10.html">群晖NAS手动安装配置官方WordPress博客教程</a>。</p><h2 id="安装-wordpress">安装 WordPress</h2><h3 id="安装之前服务器lnmp环境搭建">安装之前：服务器LNMP环境搭建</h3><p>想要运行Wordpress网站程序，必须要有对应的软件，也就是服务器环境，比如我们常说的LNMP就是 <strong>Linux + Nginx + Mysql + PHP</strong> 环境，这是WordPress运行的基础。</p><p>方案一：使用 <a href="https://themeforwp.net/go/bt/">宝塔面板</a> 这款工具帮助搭建WordPress运行环境</p><p>方案二：自己搭建，因为在群晖下我们可以很方便的安装这些软件，因此在 DSM 界面进行安装，以下详解：</p><p>需要用到的几个 packages：</p><ul><li>Web Station</li><li>phpMyAdmin</li><li>MariaDB 10（现在安装MariaDB的时候貌似要先设置密码了，记住用户名和密码就行）</li></ul><p>当安装完 <code>web station</code> 这个套件以后，在 <code>file station</code> 就能发现多了一个<code>web</code>的文件夹，可以在<code>我的电脑</code>那里添加了这个文件夹，方便处理数据。</p><h3 id="安装">安装</h3><p>从下载文件，解压缩后拖到 <code>web</code> 的文件夹，这个 <code>wordpress</code> 的文件夹就是博客网站了。</p><p>接下来设置“wordpress”的文件夹的读写权限，不然安装过程会有问题，而且后续装完博客也无法安装新主题。在 <code>file station</code> 里面打开“web”，找到 “wordpress”，右击“wordpress”文件夹，点击“属性”，选择“权限“。把所有http的权限都改为”读取&amp;写入“。一开始可能不能修改，所以要先选择高级选项-使继承权限显式化。</p><p>至此，博客已经安装完毕。你只需要输入你群晖的 <code>IP地址+端口号</code>，就能访问编辑你的博客了。</p><p>在安装完博客以后，会遇到更新站点、主题和插件时，出现输入FTP账号密码问题。</p><p>其实这个是因为php没有取得写入权限的问题。解决办法就是打开 <code>wp-config.php</code> ，在最后添加一段代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">define(“FS_METHOD”, “direct”);</span><br><span class="line">define(“FS_CHMOD_DIR”, <span class="number">0777</span>);</span><br><span class="line">define(“FS_CHMOD_FILE”, <span class="number">0777</span>);</span><br></pre></td></tr></table></figure><blockquote><p>这个问题在在之前困扰了很久，可能是因为上面的更改文件权限没做好（之后才是修改wp-config.php？）。最后重新设置了文件选择，勾选了<code>apply to this folder, subfolders and files</code> 然后更改 <code>wp-config.php</code> 就可以了。</p><p>详细可以搜索：WordPress 需要执行请求的操作访问您网页服务器的权限问题</p></blockquote><h2 id="设置外网访问-wordpress">设置外网访问 wordpress</h2><p>在 <code>web station</code> 中以 <code>Post-based</code> 方式新建 <code>visual host</code> 随意选择一个HTTP端口如 666，注意相应地在路由器上设置好端口转发。<code>document root</code> 填写 <code>web/wordpress</code> PHP建议选择最新的版本（不然Wordpress会提示更新）。</p><p>然后，相应地在wordpress中修改 <code>wordpress地址</code> 和 <code>站点地址</code> 即修改为 <code>域名:端口号</code> ，然后就可以自由访问，如 <code>http://domain:port/</code> 。</p><h2 id="wp-插件推荐">WP 插件推荐</h2><h3 id="主题twenty-sixteen">主题：Twenty Sixteen</h3><p>首先是主题，选了一个简洁现代风的主题，另外，Twenty Twelve 也很好看。</p><p>子主题：Twenty Sixteen Child</p><p>创建子主题进行个性化配置，参考了以下几篇文章</p><ol type="1"><li>创建子主题：<a href="https://www.melissacarterdesign.com/wordpress-101-part-5-how-to-make-a-child-theme-why-you-need-one/">WORDPRESS 101 PART 5: HOW TO MAKE A CHILD THEME &amp; WHY YOU NEED ONE</a><br /></li><li>取消 Twenty Sixteen 四周的黑边：<a href="https://www.melissacarterdesign.com/twenty-sixteen-black-border/">WORDPRESS TWENTY SIXTEEN – GETTING RID OF THE BLACK BORDER</a><br /></li><li>中文教程：<a href="https://blog.wpjam.com/article/child-themes/">使用 WordPress 的子主题（Child Themes）功能快速制作自己的主题</a></li></ol><h3 id="代码高亮enlighter">代码高亮：Enlighter</h3><p>用过 Crayon Syntax Highlighter，但因为年久失修用起来不是很满意，现在选择这个插件，提供了中文配置环境，整体的效果很棒，在编辑页面选择区块 Enlighter Sourcesode 即可使用。 另外，也短暂用过 Code Prettify，一个不需要设置的新手友好的插件，但功能没有 Enlighter 全。</p><h3 id="显示数学公式mathjax">显示数学公式：MathJax</h3><p>一个基于LaTeX显示数学公式的JavaScript引擎 <a href="https://www.mathjax.org/">MathJax</a>，这个 JS 引擎的优点是全浏览器支持，不需要额外插件设置。</p><p>使用方法：仅需在主题 <code>header.php</code> 文件里添加 JS 引用即可，在head标签里添加以下代码即可，注意必须要放到 <code>&lt;?php wp_head(); ?&gt;</code>之前，否则不生效。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&#x27;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML&#x27;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>Reference： WordPress如何显示数学公式 <a href="http://www.fanyeong.com/2017/07/21/wordpress-how-to-display-equation/" class="uri">http://www.fanyeong.com/2017/07/21/wordpress-how-to-display-equation/</a></p><h3 id="显示摘要wp-utf8-excerpt">显示摘要：WP-UTF8-Excerpt</h3><p>显示文章摘要，另外尝试过 WP ZN Excerpt，但不适配这个主题，目前使用的这个插件的效果还行。</p><h3 id="表格easy-table">表格：Easy Table</h3><p>一个强化表格的的插件。</p><h3 id="bttwpfront-scroll-top">BTT：WPFront Scroll Top</h3><p>一个 Back to Top 的插件，图标可自定义为图片或文字。</p><h3 id="markdown">Markdown</h3><p>关于 Markdown 是一个比较纠结的事情，希望能无缝转到网站上进行 MD 的写作，但体验总没有如 Typora 之类的软件优秀，另外，害怕因为 WordPress 的更新等问题导致页面混乱，因此，现在采用在 Typora 上进行编辑，然后复制到 WP 上再进行修改的流程。 如果要使用插件的话，使用过 WP Editor.md，感觉还不错。</p><h2 id="reference">Reference</h2><ol type="1"><li>wordpress 搭建教程 在家用群晖搭建wordpress博客: <a href="https://www.moks.cc/?p=42" class="uri">https://www.moks.cc/?p=42</a></li><li>WordPress 需要 执行请求的操作 访问您网页服务器的权限问题: <a href="https://www.hczdu.com/57153.html" class="uri">https://www.hczdu.com/57153.html</a></li></ol><h2 id="其他">其他</h2><p>mysql</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注意先更新源</span></span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install mysql-server</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证安装成功</span></span><br><span class="line">mysqladmin --version</span><br><span class="line"><span class="comment"># 创建用户（默认直接 mysql 登陆无密码）</span></span><br><span class="line">mysqladmin -u root password 123456</span><br><span class="line"><span class="comment"># 登陆</span></span><br><span class="line">mysql -uroot -p</span><br></pre></td></tr></table></figure><p>nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install nginx</span><br><span class="line"><span class="comment"># 会创建 /usr/share/nginx 目录；配置文件 /etc/nginx/nginx.conf</span></span><br></pre></td></tr></table></figure><p>PHP</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt install php-fpm</span><br><span class="line"><span class="comment"># 查看</span></span><br><span class="line">php -v</span><br><span class="line"><span class="comment"># 配置 /etc/php-fpm.d/www.conf</span></span><br></pre></td></tr></table></figure><p>查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl status php7.4-fpm</span><br><span class="line">systemctl status mysql</span><br><span class="line">systemctl status nginx</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Interest </category>
          
          <category> NAS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 博客 </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-MDP</title>
      <link href="/posts/f541f0d7/"/>
      <url>/posts/f541f0d7/</url>
      
        <content type="html"><![CDATA[<p>一个马尔可夫决策过程可由以下五元素定义：</p><ul><li>State <span class="math inline">\(s\in S\)</span></li><li>Actions <span class="math inline">\(a\in A\)</span></li><li>Transition func <span class="math inline">\(T(s,a,s&#39;)=P(s&#39;|s,a)\)</span></li><li>Reward func <span class="math inline">\(R(s,a,s&#39;)\)</span></li><li>Decay factor</li></ul><p>其中，转移函数和奖励函数被称为 model，另外奖励也可能简化为 <span class="math inline">\(R(s,a)\)</span> 或 <span class="math inline">\(R(s&#39;)\)</span>的形式。</p><p>相较于之前的搜索策略（模型是没有随机性），在 MDP 中我们多了随机性。对于一个 MDP 问题来说，我们的目标是根据给定的 T 和 R（这里给定了 model，而在下面的 RL 中我们需要去学习这个模型）， 对于每个 state 寻找一个对应的 action，即给出一个 policy <span class="math inline">\(\pi*\)</span> （从 state 到 action 的 mapping） 使得期望 utility(reward) 最大化。</p><p>由于是一个序列化的过程，我们需要对于这一系列的 reward 以一定的权重进行综合。对于一个必然会结束的问题来说，可以直接加总；但更多时候我们面临的是一个无穷的序列，我们可以定义 discounted utility <span class="math inline">\(U([r_0, 2_1,...])=r_0+\gamma r_1+\gamma^2 r_2...\)</span> 以保障收敛。直观来理解，我们的 agent 更加偏好近期的收益，这也是符合我们的常识的。</p><p>另外，我们除了单个的 state，通常也可以将 <span class="math inline">\((s,a)\)</span> 作为一个整体定义为 Q-state，具体的应用会在 MDP 和后面的 RL 中涉及。</p><p>应用随机节点，我们可以将 MDP 问题以搜索树的形式表达出来</p><p><img src="16051095676848.png" /></p><h2 id="solving">Solving</h2><p>显然，直接暴力搜索是不现实的，为求解 MDP 问题，先定义几个 Optimal quantities：</p><ul><li>Value of a state: <span class="math inline">\(V^*(s)=\)</span> expected utility starting from <span class="math inline">\(s\)</span> and actiong optimally</li><li>Value of a Q-satte: <span class="math inline">\(Q^*(s,a)=\)</span> expected utility starting out from <span class="math inline">\((s,a)\)</span> and thereafter acting optimally</li><li>The optimal policy: <span class="math inline">\(\pi^*(s)=\)</span> optimal action from state <span class="math inline">\(s\)</span></li></ul><p>显然，为了求解上述的问题，可以采用迭代的方法，有 Bellman Equation: <span class="math display">\[\begin{gathered}V^*(s) &amp;= \max_{a\in A(s)}\sum_{s&#39;}R(s,a,s&#39;)+ \gamma P(s&#39;|s,a)V^*(s&#39;) \\ &amp;=\max_{a\in A(s)}R(s,a,s&#39;)+\gamma Q^*(s,a)\\\end{gathered}\]</span></p><p><span class="math display">\[Q^*(s,a)=\sum_{s&#39;}P(s&#39;|s,a)V^*(s&#39;)\]</span></p><p>具体来说，我们可以采用以下的几种方法</p><h3 id="value-iteration">Value Iteration</h3><p>在值迭代中，我们只关系每个 state 的值，并基于最终得到的结果得到 policy。初始化每个 state 的值为 <span class="math inline">\(V_0(s)=0\)</span> ，迭代更新 <span class="math display">\[V_{k+1}(s)\leftarrow\max_{a\in A(s)} R(s,a,s&#39;)+\gamma \sum_{s&#39;}P(s&#39;|s,a)V_k(s&#39;)\tag{1}\]</span> 每一步的时间复杂度为 <span class="math inline">\(O(S^2A)\)</span> 。注意，在 value iteration 中，由于 Bellmen 方程的非线性（其中的 max 操作），我们只能迭代求解。有问题：</p><ol type="1"><li>收敛速度慢</li><li>事实上，在一定的 <span class="math inline">\(V_k\)</span> 下，最优策略很少发生改变。</li></ol><p>补充最优策略的提取 <strong>Policy extraction</strong>: <span class="math display">\[\pi^*=\arg\max_a\sum_{s&#39;}P(s&#39;|s,a)V^*(s&#39;)\\\pi^*=\arg\max_a Q^*(s,a)\]</span> 从中也可以看到，把 Q-state 作为节点有着更好的性质。</p><h3 id="policy-iteration">Policy Iteration</h3><p>对于 Value Iteration 的问题，我们在 Policy Iteration 进行了改进：交替更新 value 和 policy。</p><ol type="1"><li>Policy Evaulation：固定策略 <span class="math inline">\(\pi\)</span>，计算 <span class="math inline">\(V^\pi(s)=R(s,a,s&#39;)+\gamma\sum_{s&#39;}P(s&#39;|s,a)V^\pi(s&#39;)\)</span></li><li>Policy Improvement：即根据计算的 value 提取（更新）策略</li></ol><p>另外注意到，在 evaluation 的过程中，我们没有了 max 操作，意味着现在变成了一个线性方程，理论上我们可以直接解这个线性方程 <span class="math inline">\(v = R+\gamma Pv\)</span> 其中 P 为转移矩阵，但事实上矩阵求逆的时间复杂度为 <span class="math inline">\(O(S^3)\)</span> ，所以一般我们仍会采用（1）中的迭代过程，执行固定的次数过程达到一定的精度。</p><p>比较两种算法，其实它们都是 Dynamic Programming，而且本质上都是一样的：只是，在 value iteration 中，我们关注的重点是在 state 的 value 上，对于每一步 iteration，我们<strong>同时更新 value 和 policy</strong> （policy 的更新是隐式的，即我们所取的 max）；在 policy iteration 中，每次迭代我们先固定一个 policy，在这个固定的策略下更新 value，即对于 value iteration 中 policy 在后期不怎么会变化的问题进行了改进。</p><p>一个清晰的表示：</p><p><img src="16051095603959.png" /></p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> MDP </tag>
            
            <tag> 马尔可夫决策过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI-Reinforced Learning</title>
      <link href="/posts/a2b26f14/"/>
      <url>/posts/a2b26f14/</url>
      
        <content type="html"><![CDATA[<p>在 MDP 中，我们给出了 model（即转移 T 和奖励 R 的具体形式），然而，这种情况显然是理想的，要解决现实中的问题，我们一般不能得到 model，因此，就进入到了这个专题——强化学习 RL。 和 MDP 中的概念类似，这里有状态集 S，动作集 A，对于我们的每个 <span class="math inline">\((s,a)\)</span> 环境会给出一个回报 r ，并转移到新的状态 <span class="math inline">\(s&#39;\)</span>，注意，我们并不知道 R 和 T 的具体形式，只能获得这一系列的 <span class="math inline">\(s,a,r,s&#39;\)</span> 序列，基于此，我们要训练出决策 <span class="math inline">\(\pi(s)\)</span>。</p><h2 id="model-based-rl">Model-based RL</h2><p>在 model-baesd 中，我们仍未放弃模型，相较于 MDP，我们通过数据训练出一个估计的模型，并利用这个模型使用 MDP 的方法来学习，例如 value iteration, policy iteration 等。 具体来说，我们的观测是一系列的 episode，即从一个初始状态出发，经过一些动作，最终到达了一个终止状态，这一幕就结束了。</p><p><img src="16051096871474.png" /></p><p>基于这些 episodes，我们可以用极大似然的方法近似估计 Transition model, Reward model，再用 MDP 方法求解。</p><h2 id="model-free-rl">Model-free RL</h2><p>而在 model-free 中，我们则改用了另一种策略——事实上，在 model-based 中，我们重新通过模型来进行学习，可以说是浪费了序列的一些信息；另一方面，这种方法可能需要大量的观测，对于数据的要求较高。</p><p>教材和讲课的方式是按照 passive, active 的区分来讲的，passive 的意思是说，我们固定了一个策略，在这个策略下生成观测，最终计算出结果；而在 active 中，我们不固定策略，而是在搜索过程中不断调整更新，目的是为了找到最优的策略。参照 MDP 里面的内容，可以认为 active 是一个完整的求解问题的过程，而在 passive，我们仅做了在 policy iteration 中固定策略，更新值的操作。</p><h3 id="passive-rl">Passive RL</h3><p>当然，两者还有有一定的区别的，从课程内容来看，在 passive 中，我们更多使用的是 V，而在 active 中我们一般使用 Q 值迭代。具体来说，有 MC 和 TD 两种 passive 算法。</p><p><strong>Monte Carlo MC</strong>：即 Direct evaulation <span class="math display">\[V^\pi (s)=E_\pi[\sum_{k=1}^T \gamma^kR_{t+k+1}|S_t=s)\]</span> 在这里，我们对于每一个 episode 中的 state，以衰减因子<span class="math inline">\(\gamma\)</span> 计算其期望的 reward（直到 episode 结束）具体计算的时候，上述的求期望即求和平均（对于一个 episode 中出现多次的状态来说，可以只使用第一个出现的，也可以重复使用）。</p><p>或者说，我们通过每一个出现的样本值更新了 policy value（我们的样本生成所采用的 policy） <span class="math display">\[V^\pi(s)=(1-\eta)V^\pi(s)+\eta v_i^\pi(s), \eta={1\over N&#39;}\]</span> （我们在这里给出了一个等价的表述，但事实上计算的时候不是照此计算的，这里是为了和后面的 TD 统一起来。）这里计算了在给定一个固定的 policy 下的价值迭代，我们可以根据得到的结果更新策略生成数据，再次进行上述 MC。下面给出了这种「policy evaluation」的思想。</p><p><img src="16051096798227.png" /></p><p>这是一个比较直观的想法，最终的结果是对于每一个状态得到了期望的值。然而，问题在于：1. states are learned separately, 2. waste information about state connections. 比较在有 model ，即 MDP 下的公式 <span class="math display">\[V_{k+1}^\pi(s)\leftarrow \sum_{s&#39;}T(s,\pi(s),s&#39;)[R(s,\pi(s),s&#39;)+\gamma V_k^\pi(s&#39;)]\]</span></p><p>这里 take samples 的想法是比较容易理解的。</p><p>那么，我们如何在 model-free 下利用到 model 的信息呢？</p><p><strong>Temporal Difference TD</strong> Learning: <span class="math display">\[V^\pi(s)\leftarrow V(s)+\alpha(N(s))(R+\gamma V(s&#39;)-V(s))\\\tag{1}\]</span> 对于后项来说，我们计算得新的 value，减去原来的 value 得到 difference，再以学习率 <span class="math inline">\(\alpha\)</span> 更新原来的 V。注意这里的学习率可以是上面的随着 N 递减的函数，也可以是一个 fixed 的函数。</p><p><img src="16051096728952.png" /></p><p>最后，来比较一个这两种方式：对于一个长度为 L 的 episode 来说，两者的时间复杂度都是 <span class="math inline">\(O(L)\)</span>。而对于 TD 来说，它利用了 Markov 的结构；对于 MC 来说，它必须等到整个 episode 结束之后才能进行学习，而 TD 则随着 episode 的延伸进行学习，因此是 <strong>online</strong> 的。</p><p><img src="16051096672066.png" /></p><h3 id="active-rl">Active RL</h3><p>在主动学习中，我们需要学习策略，也正因于此上述对于 V 进行学习的方法就比较低效了，所以我们一般使用 <code>Q-Learing</code> 。回忆在 MDP 中我们基于模型的公式： <span class="math display">\[Q_{k+1}(s,a)\leftarrow \sum_{s&#39;}T[s,a,s&#39;](R(s,a,s&#39;)+\gamma\max_{a&#39;}Q_k(s&#39;,a&#39;))\]</span> 在 model-free 中我们可基于 TD 采用以下公式迭代： <span class="math display">\[Q(s,a)\leftarrow (1-\alpha)Q(s,a) +\alpha [R(s,a,s&#39;)+\gamma \max_{a&#39;}Q(s&#39;,a&#39;)]\\\tag{2}\]</span> 可以看到，和在 passive 下的 TD value 迭代（1）思想上是一致的：都是基于生成一个 sample 以学习率 <span class="math inline">\(\alpha\)</span> 进行学习。不同之处在于，之前我们对于值直接进行操作不会涉及到策略的选择问题，而在 <code>Q-Learning</code> 中，我们要用 <span class="math inline">\(s&#39;\)</span> 的值来更新 <code>Q-state=(s,a)</code> ，我们很自然得进行了取 max 操作。</p><p>我们可以对所有 Q 状态初始化为 0，接着开始迭代，然而这样会出现一个问题：一旦 agent 找到了一条路径，祂会始终选择这条路径进行决策，从而生成的 episode 失去了一定的随机性——也就是说，我们陷入了局部最优。</p><h4 id="exploration-v.s.-exploitation">Exploration v.s. Exploitation</h4><p>也就是说，我们除了 expoit 原有的信息，也要保证一定的 exploration。为此，可以的策略有多种：例如：1. 每次行动除了按照 policy extraction 的结果之外以一定的概率随机行动（<span class="math inline">\(\epsilon-greedy\)</span> ，随机概率随时间减小）；2. 我们不是基于 Q 值 extract 而是使用函数 <code>f</code> 形成策略，如 <span class="math inline">\(f(u,n)=u+{k\over n}\)</span> ，其中的 u 是我们的 Q 值而 n 为这一策略的次数，直观来解释，我们倾向于采取次数较少（或全新）的 action。</p><p><img src="16051096579075.png" /></p><h3 id="approximate-q-learning">Approximate Q-Learning</h3><p>有时候，我们并不需要用 state 来描述整个状态空间（Pacman 的例子，1. 状态空间过大；2. 很多状态相似），我们可以提取几个 feature 来 represent 这个状态。——一种降维的思想。 <span class="math display">\[Q(s,a)=w_1f_1(s,a)+...+w_nf_n(s,a)\\\]</span></p><p><span class="math display">\[\begin{gathered}\text { transition }=\left(x, a, r, s^{\prime}\right) \\\text { difference }=\left[r+\gamma \max _{a^{\prime}} Q\left(s^{\prime}, a^{\prime}\right)-Q(s, a)\right] \\Q(s, a) \leftarrow Q(s, a)+\alpha[\text { difference }] \\w_{i} \leftarrow w_{i} \alpha[\text { difference }] f_{i}(s, a)\end{gathered}\]</span></p><p>注意到，我们对于每一个 sample，用它来更新了各特征的 weight；直观来看，若一个 policy 不够好，那么 difference 可能是负数，那么在这种情况下我们就会把在这里表现较为突出的 feature（<span class="math inline">\(f_i(s,a)\)</span> 较大）的权重 <span class="math inline">\(w_i\)</span> 进行缩减。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 强化学习 </tag>
            
            <tag> RL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SC-Bootstrap, Jackknife</title>
      <link href="/posts/ab7644ae/"/>
      <url>/posts/ab7644ae/</url>
      
        <content type="html"><![CDATA[<p>这篇来谈谈 Bootstrap 和 Jackknife。先来一个总括：在之前的 MC in Statistic Inference 中，我们假定已知了 population 的分布，并基于此进行样本生成，对于估计的 se、MSE 、置信水平进行估计，或做假设检验；然而这种方法的应用显然有点窄——很多情况下，我们是不知道总体分布，甚至我们能采集到的样本就只有这些，限于种种原因无法采集更多的样本——那么，在不知道总体分布，或者样本量较少的情况下，我们如何对于上述这些进行估计呢？这里就用了 Bootstrap 方法，本质是上一种重抽样的方法：既然我们只知道这些数据，那么我们就把这些数据看做整体（Empirical dist.），基于这些数据再进行多次抽样并计算得我们想要的内容（更加充分运用了这些数据）。补充：1. 我们也把 MC in Statistic Inference 中的方法叫做<strong>参数 Bootstrap</strong>（因为它也涉及到了重新的多次抽样，不过是从 population 中抽取的）；而这里的方法则叫做<strong>非参数 Bootstrap</strong>，我们一般讲的 Bootstrap 就是这里的；2. Jackknife 实际上是 Bootstrap 的一种特例：一种类似于「leave-one-off」的思想。</p><h3 id="two-approximations-plug-in-priniciple">Two Approximations, "Plug-in" Priniciple</h3><p>理解整个过程：从 population <span class="math inline">\(X\sim F(x)\)</span> 中，我们观测到了 n 个样本 <span class="math inline">\(X=(x_1,...,x_n)\)</span>；我们把这些样本看作一个整体再次抽样，实际上是从 <strong>Empirical dist</strong>. 中进行抽样 <span class="math inline">\(X^*\sim F_n(x)\)</span>；这些新的样本又有分布 <span class="math inline">\(F_n^*(x)\)</span>。这里就涉及到了两个近似： <span class="math display">\[F\rightarrow X\overset{(x_i)}{\rightarrow} \hat F\\\hat F\rightarrow X^*\overset{(x_i^*)}{\rightarrow} \hat F^*\]</span> 在进入 Bootstrap 之前，还需要对统计量和分布的关系；以及 "Plug-in" Priniciple 进行理解。</p><ul><li><strong>对于一个 parameter <span class="math inline">\(\theta\)</span> 来说，我们可以把它看作是分布 F 上的一个函数 <span class="math inline">\(\theta=t(F)\)</span> 。</strong></li><li>这是对于 population 的，而在 sample level，我们认为 statistic/estimator 是 sample(<span class="math inline">\(\hat F\)</span>) 的一个函数 <span class="math inline">\(\hat\theta=t(\hat F)\)</span></li></ul><p>例如，对于期望来说是在 F 上的一个积分；而其估计则是样本的均值。</p><p>而 <strong>"Plug-in" Priniciple</strong> ，简单的理解就是对于我们要估计的参数/统计量，我们用 sample level 上的数来代替 population level 上的数，给出两个例子：</p><p>对于均值来说 <span class="math display">\[\theta=\mu=E_F[X]=\int xdF(x)\\\hat\theta=\hat\mu={1\over n}\sum x_i=\int xd\hat F(x)=E_{\hat F}(X)\]</span> 注意这里我们给出了期望及其估计值的另一种表示：用<span class="math inline">\(E_{\hat F}(X)\)</span> 来估计<span class="math inline">\(E_{ F}(X)\)</span> 。</p><p>对于 standard error of the mean estimator <span class="math display">\[F\sim(\mu,\sigma^2), E_F(X)=\mu, Var_F(X)=\sigma^2\]</span> 因为有 <span class="math display">\[\sigma^2=E_F[(X-E_F[X])^2]\\\hat \sigma^2=E_{\hat F}[(X-E_{\hat F}[X])^2]={1\over n}\sum(x_i-\bar x)^2\\\]</span> （注意，这里我们用了<strong>两次</strong> "Plug-in" Priniciple ，并给出了其具体的表达形式。）对于 <span class="math inline">\(se(\bar X)={\sigma \over\sqrt{n}}\)</span> 我们有估计 <span class="math inline">\(\hat {se}(\bar X)={\hat\sigma \over\sqrt{n}}\)</span>。</p><h3 id="bootstrap">Bootstrap</h3><p>接下来正式进入 Bootstrap，我们先用它来估计 估计量的 se, bias：</p><p>前面讲过，Bootstrap 就是多次抽样，这样就得到了 Empirical dist. <span class="math inline">\(\hat F(x)\)</span> ，而我们的估计量则是 <span class="math inline">\(t(\hat F)\)</span> 。我们先来看 se，考虑 <span class="math display">\[Var(\hat\theta)=E[(\hat\theta -E[\hat\theta])^2]=E_F\big[(t(\hat F)-E_F[t(\hat F)])^2\big]\]</span> （注意这里取的期望都是在原分布下的）我们使用 "Plug-in" Priniciple，则 <span class="math display">\[\hat{Var}(\hat\theta)=E_{\hat F}\big[(t({\hat F}^*)-E_{\hat F}[t(\hat{F}^*)])^2\big]=\frac{1}{B-1} \sum(\hat\theta^{(i)}-\bar{\hat\theta^*})^2\]</span> 其中的 <span class="math inline">\(\bar{\hat\theta^*}\)</span> 为 B 个 Bootstrap 估计量的均值；分母用了<span class="math inline">\(B-1\)</span> 是为了无偏。于是我们得到了 <code>se</code> 的 Bootstrap 估计公式</p><p><span class="math display">\[\hat{se}(\hat\theta)=\sqrt{\frac{1}{B-1}\sum(\hat\theta^{(i)}-\bar{\hat\theta^{*}})^2}\tag{2.1}\]</span></p><p>对于 <code>bias</code>，由于</p><p><span class="math display">\[bias(\hat\theta)=E[\hat\theta-\theta]=E_F[t(\hat F)-t(F)]\]</span></p><p><span class="math display">\[\hat{bias}(\hat\theta)=E_{\hat F}[t(\hat F^*)-t(\hat F)]=E_{\hat F}[\hat\theta^*]-\hat\theta = \bar{\hat\theta^*}-\hat\theta\tag{2.2}\]</span></p><p>注意从第一行到第二行（其估计）中，我们用了三次 "Plug-in" Priniciple。 其中的 <span class="math inline">\(\bar{\hat\theta^*}\)</span> 为 B 个 Bootstrap 估计量的均值。</p><p>还讲了 Bootstrap 方法来估计置信区间，我们把这部分放到后面去讲，接下来，看看一个特例：Jackknife。</p><h3 id="jackknife">Jackknife</h3><p>这里，我们用了两个例子，来说明该公式与 Bootstrap 下的区别。给出 Jackknife 的流程为：对于一个大小为 n 的样本，每次去除第 i 个样本，将剩下的其余样本作为第 i 次重抽样得到的数据；也就是说，在 Jackknife 下，我们只能有 n 个重抽样结果（而在 Bootstrap 下是不限制的）；每个抽样结果的大小为 <span class="math inline">\(n-1\)</span>（在 Bootstrap 下为 n）。</p><p>来看 <code>bias</code>，以 <span class="math inline">\(\theta=\sigma^2\)</span> 为例，估计量为<span class="math inline">\(\hat \theta={1\over n}\sum(x_i-\bar x)^2\)</span> 。注意到有 <span class="math display">\[bias(\hat\theta)=E[\hat\theta-\theta]=...={1\over n}\sigma^2\tag{3.1}\]</span> 我们考虑 <span class="math display">\[E[\hat\theta^{(j)}-\hat\theta]=E[\hat\theta^{(j)}-\theta]-E[\hat\theta-\theta]\\=(-{\sigma^2\over n-1})-(-{\sigma^2\over n})={1\over n-1}bias(\hat\theta)\]</span> 上式第一行到第二行成立，是因为，我们把 <span class="math inline">\(x_j\)</span> 去除，也可以把剩余的观测看做是 population 的<span class="math inline">\(n-1\)</span> 次 realization，因此和式（3.1）的估计在形式上是一致的。另，上式只是考虑了编号为 j 的一组抽样，我们将 n 组式子相加，容易得到 <span class="math display">\[\hat{bias}_{Jack}(\hat\theta)=(n-1)(\bar{\hat\theta^*}-\hat\theta)\tag{3.2}\]</span> 其中 <span class="math inline">\(\bar{\hat\theta^*}\)</span>为 n 个估计量的均值。</p><p>再来看 <code>se</code>，以 <span class="math inline">\(\theta=EX\)</span>为例，<span class="math inline">\(\hat\theta=\bar X\)</span>。注意到 <span class="math display">\[se(\hat\theta)=\sqrt{Var(\bar{X})}={\sigma\over\sqrt{n}}\]</span> 另外，我们仔细看这几个估计量， <span class="math display">\[\hat\theta^{(j)}={1\over n-1}(n\bar{x}-x_i),\\\bar{\hat\theta^*}={1\over n}\sum{n\bar{x}-x_i\over n-1}=\bar{x}\]</span> 则有 <span class="math display">\[\sum(\hat\theta-\bar{\hat\theta^*})^2=\sum ({n\bar{x}-x_i\over n-1}-\bar{x})^2={1\over(n-1)^2}\sum(x_i-\bar{x})^2={s^2\over n-1}\]</span></p><p>显然 <span class="math inline">\({s\over\sqrt{n}}\)</span> 是<span class="math inline">\(se(\hat\theta)={\sigma\over\sqrt{n}}\)</span> 的无偏估计，比较形式，我们可以得到最终的形式 <span class="math display">\[\hat{se}_{Jack} (\hat\theta)=\sqrt{\frac{n-1}{n}\sum(\hat\theta-\bar{\hat\theta^*})^2}\tag{3.3}\]</span> 比较（3.2）（3.3）和（2.1）（2.2），我们可以发现 Jackknife 估计要比 Bootstrap 估计在分子上多一个<span class="math inline">\(n-1\)</span>，这可以理解为，<strong>the Jackknife sample <span class="math inline">\(x^{(i)}\)</span> is very similar to <span class="math inline">\(x\)</span> compared with Bootstrap replicates</strong>。</p><h3 id="bootstrap-ci">Bootstrap CI</h3><p>下面回过头来继续介绍使用 Bootstrap 方法来估计置信区间。主要介绍了 5 中方法：</p><ol type="1"><li>Standard normal</li><li>Basic CI</li><li>Percential CI</li><li>Bootstrap t CI</li><li>Better BCa CI</li></ol><p>第一种 <strong>Standard normal</strong> 中，引入了 pivot quantity <span class="math display">\[Z={\hat\theta-E[\hat\theta]\over se(\hat\theta)}\]</span> 显然，该量在 n 很大情况下由 CLL 可知是近似标准正态；那么1. 再假设该统计量是无偏的，即<span class="math inline">\(\theta=E[\hat\theta]\)</span> ；2. 使用 Bootstrap 方法估计 se，我们就可以得到 <span class="math inline">\(\theta\)</span> 的一个置信区间 <span class="math display">\[[\hat\theta\pm z_{\alpha/2}\hat{se}(\hat\theta)]\tag{5}\]</span> 其中 <span class="math inline">\(z_{\alpha/2}=\Phi(1-\alpha/2)\)</span> ，即标准正态的上 <span class="math inline">\(\alpha /2\)</span>分位数。</p><p>第二种 <strong>Basic CI</strong>中，我们对于偏差进行考虑： <span class="math display">\[P((\hat\theta-\theta)_{\alpha/2}&lt;\hat\theta-\theta&lt; (\hat\theta-\theta)_{1-\alpha/2})=1-\alpha\]</span> 我们用 <span class="math inline">\(\hat\theta^*-\hat\theta\)</span> 来估计 <span class="math inline">\(\hat\theta-\theta\)</span> ，就有 <span class="math display">\[P((\hat\theta^*-\hat\theta)_{\alpha/2}&lt;\hat\theta-\theta&lt; (\hat\theta^*-\hat\theta)_{1-\alpha/2})\approx 1-\alpha\]</span> 整理可得结果 <span class="math display">\[[2\hat\theta-\hat\theta^*_{1-\alpha/2}, 2\hat\theta-\hat\theta^*_{\alpha/2}]\tag{6}\]</span> 第三种 <strong>Percential CI</strong> 仅和 Basic CI 有微小的区别：直接使用了 <span class="math inline">\(\hat\theta\)</span> 的分布来估计 <span class="math inline">\(\theta\)</span> ，因此形式为 <span class="math display">\[[\hat\theta^*_{\alpha/2}, \hat\theta^*_{1-\alpha/2}]\tag{7}\]</span> 注意到，这里没有出现 <span class="math inline">\(\hat\theta\)</span> ！</p><p>第四种 <strong>Bootstrap t CI</strong> 是对 Standard normal 的改进——显然，后者的要求过高了（1. 无偏；2. 近似正态）。在 Bootstrap t CI 中，我们引入了一个 t-type statistic ，作为对于（1）中 pivot quantity <span class="math inline">\(Z\)</span> 的改进： <span class="math display">\[t^{(b)}={\hat\theta^{(b)}-\hat\theta\over\hat{se}(\hat\theta^{(b)})}\]</span> 注意到，在 Standard normal 中，我们仅需要用 Bootstrap 方法来估计 <span class="math inline">\(se(\hat\theta)\)</span> 。而在这里，我们需要使用 Bootstrap 生成 B 个 t-type statistic；对于每一个 <span class="math inline">\(t^{(b)}\)</span>，我们都需要估计<span class="math inline">\(\hat{se}(\hat\theta^{(b)})\)</span> ，也就是说，我们要在内部再嵌套一个 Bootstrap。显然，Bootstrap t CI 提高了计算的成本，但也避免了简单的 Standard normal 所具有的一些不足；并且带来了后面讲到的二阶性质。</p><p>参考 Standard normal 中的结果，其最终的形式是 <span class="math display">\[[\hat\theta-t_{1-\alpha/2}^*\hat{se}(\hat\theta), \hat\theta-t_{\alpha/2}^*\hat{se}(\hat\theta)]\tag{8}\]</span></p><p>第五种 <strong>Better BCa CI</strong>，太过复杂在此不做展开，感兴趣可自行搜索。它主要的思想是对于 Percential CI 进行提升。最终形式为 <span class="math display">\[[\hat\theta^*_{1-\alpha/2}, \hat\theta^*_{\alpha/2}]\tag{9}\]</span> 最后，我们从两个维度来比较这些 CI：1. Transformation respecting: given <span class="math inline">\(t(.)\)</span> , whether CI for <span class="math inline">\(\theta\)</span> can be t-transformed directly to CI for <span class="math inline">\(t(\theta)\)</span> ; 2. Second order accuracy</p><p>第一点，变换性指出了，在一定的变换下，我们直接对 CI 的 upper 和 lower 进行相应的变换就可以得到 <span class="math inline">\(t(\theta)\)</span> 的 CI（似乎是说，upper 和 lower 似乎和分位数相关？）。第二点，二阶精准意味着 <span class="math display">\[P(\theta&lt;\hat\theta_{lower})={\alpha\over 2}+{C_{lower}\over n}\\P(\theta&lt;\hat\theta_{upper})={\alpha\over 2}+{C_{upper}\over n}\]</span> 这是相较于一阶，也就是说下面的 <span class="math inline">\(n\)</span> 变为 <span class="math inline">\(\sqrt{n}\)</span> ，借助数值的内容刻画了某种「收敛速度」。</p><table><thead><tr class="header"><th></th><th>Trans</th><th>Second order</th></tr></thead><tbody><tr class="odd"><td>Standard normal</td><td>✕</td><td>✕</td></tr><tr class="even"><td>Basic</td><td>✕</td><td>✓</td></tr><tr class="odd"><td>Percentile</td><td>✓</td><td>✕</td></tr><tr class="even"><td>Bootstrap t</td><td>✕</td><td>✓</td></tr><tr class="odd"><td>Better BCa</td><td>✓</td><td>✓</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 统计计算 </tag>
            
            <tag> Bootstrap </tag>
            
            <tag> Jackknife </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SC-EM</title>
      <link href="/posts/346b3c08/"/>
      <url>/posts/346b3c08/</url>
      
        <content type="html"><![CDATA[<p>关于 EM 算法比较一般的形式可以参看以下的内容：</p><ul><li><a href="https://en.wikipedia.org/wiki/Expectation–maximization_algorithm">wiki</a> wiki 写的太清楚了，有机会重新写一些吧</li><li><a href="https://www.cnblogs.com/pinard/p/6912636.html">刘建平的 Blog</a></li><li><a href="http://www.csuldw.com/2015/12/02/2015-12-02-EM-algorithms/">https://www.csuldw.com/</a></li></ul><p>而这里我还是按照老师讲统计计算时候的思路进行笔记，可能和上述在形式上有一定的区别。</p><p>首先是算法要解决的问题，主要有两类：1. 存在<strong>删失数据 censored data</strong> （最典型的如医学上存活时间，或者是跟踪调查的时间，我们可能在一个时间点截止了，那么剩下的样本我们只知道其值大于一个数，但这个随机变量具体的取值我们不清楚），可分为左/右/双边删失；2. <strong>隐变量 latent variables</strong>，我们无法观测到的变量，例如在 mixed model 中的混合系数（注意，我们必须要对这个变量有一定的了解，比如混合模型中成分的数量）。</p><p>一般情况下，我们希望用 MLE 对于参数进行估计，但在这两种情况下，我们没法得到似然函数的形式；然而，若我们把<code>缺失/隐变量</code>加入到模型中，似然函数的形式就明确下来了——然后，我们只需要使用期望将<code>缺失/隐变量</code>消去即可。</p><p><strong>Idea</strong>: Reeplace a difficult likelihood maximization problem with a sequence of easier maximizations, where the limit of the sequence of maximizers is the solutions to the original one.</p><p>至于为什么 EM 算法是 iteration 的，之后会给出解释。</p><h3 id="em-算法">EM 算法</h3><p>假设我们的观测为 <span class="math inline">\(y\)</span> 我们希望得到的参数为 <span class="math inline">\(\theta\)</span> ，即我们希望将下式最大化（简单起见已取对数）： <span class="math display">\[\log f(y|\theta)\]</span> 因为其形式不好表达，我们利用条件概率公式转为 <span class="math display">\[\log f(y,u|\theta)=\log f(y|\theta)+\log f(u|y,\theta)\tag{1}\]</span> 注意看此公式，左侧可理解为 complete 似然，而右侧为 observed 似然，以及 randomness <span class="math inline">\(U|Y,\theta\)</span> 。其中的 U 可理解为删失数据或隐变量。我们对两边取期望：</p><p><span class="math display">\[\begin{aligned}E_{u}\left[\log f(y, u \mid \theta) \mid Y=y, \theta^{*}\right] &amp;=l(\theta)+E_{u}\left[\log f(u \mid y, \theta) \mid Y=y, \theta^{*}\right] \\&amp;=l(\theta)+\int \log f(u \mid y, \theta) f_{u}\left(u \mid Y=y, \theta^{*}\right) d u \\Q\left(\theta, \theta^{*}\right) &amp;=l(\theta)+C\left(\theta, \theta^{*}\right)\end{aligned}   \tag{2}\]</span></p><p>注意到，我们这里是对于 U 取期望，然而我们没有 U 的分布，因此我们利用观测 y 和上一步得到的 <span class="math inline">\(\theta^*\)</span> 来近似 U 的分布（这也解释了为什么需要迭代求解）（注：这是我的粗浅的理解，但课上老师似乎对此不赞同，望 DL 指正）。这里就是 EM 算法总 <code>E</code> 的部分。需要注意的是：1. 我们感兴趣的是右侧的第一项对数似然，因为其较难求我们将转为对左式求 max；2. 注意式中的 <span class="math inline">\(\theta\)</span> 和 <span class="math inline">\(\theta^*\)</span> 是不同的，后者 U 的分布的参数，而前者是我们意欲求解的对象（为防止歧义，我特意将积分式写了出来）。</p><p>对（2）式分别取 <span class="math inline">\(\theta\)</span> 和 <span class="math inline">\(\theta^*\)</span> ，则有： <span class="math display">\[l(\theta)-l(\theta^*)=Q(\theta, \theta^*)-Q(\theta^*, \theta^*)  -[C(\theta, \theta^*)-C(\theta^*, \theta^*)]\]</span> 可以证明，最右侧那一项<span class="math inline">\(&gt;0\)</span> ：</p><p><span class="math display">\[\begin{aligned}  C(\theta, \theta^*)-C(\theta^*, \theta^*) &amp;= E_u \bigg[\log {f(U|Y,\theta) \over f(U|Y,\theta^*)}|Y=y,\theta^*)\bigg]\\   &amp;\le \log E_u \bigg[ {f(U|Y,\theta) \over f(U|Y,\theta^*)}|Y=y,\theta^*)\bigg]=\log(1)=0\end{aligned}\]</span> 在证明中，我们用到了 Jensen 不等式，即对于凹函数 <span class="math inline">\(\log\)</span> ，我们有<span class="math inline">\(E[f(X)]\le f(E(X))\)</span> ，在第二行中，我们根据期望的定义展开即可得到（注意式中的 <span class="math inline">\(\theta\)</span> 和 <span class="math inline">\(\theta^*\)</span> 是不同的，不能直接把条件往里代）。</p><p>于是，有 <span class="math display">\[l(\theta)-l(\theta^*)\ge Q(\theta, \theta^*)-Q(\theta^*, \theta^*)\tag{1.3}\]</span></p><p>也就是说，若 <span class="math inline">\(Q(\theta, \theta^*)&gt;Q(\theta^*, \theta^*)\)</span> （也就是 EM 算法中的 <code>M</code> 部分），则 <span class="math inline">\(l(\theta)&gt;l(\theta^*)\)</span>。当然，反过来不成立；也就是说，只能保证是局部最优解，而无法保证全局最优。</p><p>总结一下，对于最大化对数似然这个「hard」的问题，我们 reduced to iteratively <span class="math inline">\(\max Q(\theta, \theta^*)\)</span> , which is "easy"。</p><p>一个直观的解释：</p><figure><img src="2021-11-02T182444.png" alt="2021-11-02T182444" /><figcaption>2021-11-02T182444</figcaption></figure><h3 id="steps">Steps</h3><p><strong>E-step</strong>: calculate <span class="math inline">\(Q(\theta, \theta^*) = E_u[\log f(y,u|\theta)|Y=y,\theta^*]\)</span></p><p><strong>M-step</strong>: max <span class="math inline">\(\theta^{(t+1)} = \arg\max _\theta Q(\theta,\theta^*)\)</span></p><p>Iterative until <span class="math inline">\(|l(\theta^{t+1})-l(\theta^{t})|\)</span> or <span class="math inline">\(||\theta^{(t+1)}-\theta^{t}||\over||\theta^{(t)}||\)</span> converges.</p><h3 id="两个例子">两个例子</h3><p>第一个例子是 <strong>mixed model</strong>：我们考虑正态混合模型， <span class="math display">\[f(Y|\theta)=\sum_{r=1}^p \pi_rf_r(y|\theta_r)\]</span> 需要说明的是，对于混合参数 <span class="math inline">\(\pi_r\)</span> 我们是不了解的，但我们知道混合的数量 p，因此，参数<span class="math inline">\(\theta\)</span> 包含了混合参数和每一个的正态成分中的参数。我们定义随机变量 <span class="math inline">\(U\)</span> 表示观测由哪一个成分生成。<strong>对于 EM 算法来说，最重要的就是求解似然函数和 U 的分布</strong>，我们先来表示一个观测时的分布：</p><p><span class="math display">\[\begin{aligned}  f(y,u|\theta) &amp;=\prod_{r=1}^p (\pi_rf_r(y|\theta_r))^{1_{\{U=r\}}}\log f(y,u|\theta) \\  &amp;= \sum_{r=1}^p{1_{\{U=r\}}}[\log\pi_r+\log f_r(y|\theta_r)]\end{aligned}\tag{3}\]</span></p><p>这还不是最终的形式，我们先来看看 U 的分布 <span class="math inline">\(U|Y,\theta^*\)</span></p><p><span class="math display">\[\begin{aligned}  P(U=r|Y=y,\theta^*) &amp;\propto P(U=r,Y=y,\theta^*) \\    &amp;=P(Y=y|U=r,\theta^*)P(U=r|\theta^*) = f_r(y|\theta^*)\pi_r^*\\    w_r(y,\theta^*) &amp;\overset{\triangle}{=}P(U=r|Y=y,\theta^*)={\pi_r^*f_r(y|\theta^*)\over\sum_s \pi_s^*f_s(y|\theta^*)}\end{aligned}\]</span></p><p>我们定义了权重函数 <span class="math inline">\(w_r(y,\theta^*)\)</span> 。另外注意这只是一个观测时的情况，我们给出 Q 的最终形式。</p><p><span class="math display">\[\begin{aligned}Q\left(\theta, \theta^{*}\right) &amp;=E_{u}\left[\log f(y, u \mid \theta) \mid Y=y, \theta^{*}\right] \\&amp;=\sum_{j=1}^{n} \sum_{r=1}^{p} w_{r}\left[y_{j}, \theta^{*}\right]\left(\log \pi_{r}+\log f_{r}\left(y_{j} \mid \theta_{r}\right)\right) \\&amp;=\sum_{r=1}^{p}\left(\sum_{j=1}^{n} w_{r}\left(y_{j}, \theta^{*}\right)\right) \log \pi_{r}+\sum_{r=1}^{p} \sum_{j=1}^{n} w_{r}\left(y_{j}, \theta^{*}\right) \log f_{r}\left(y_{j} \mid \theta_{r}\right)\end{aligned}\]</span></p><p>注意到，相较于（3），我们除了给 y 加了角标求和之外，我们也把示性函数替换成了权重——这是因为，我们在（3）中仅给了在 U 取了一定定值时的情况，而若我们把 U 看做随机变量取期望，则可用上式的形式来表达。</p><p>这是 E-step，而在 M-step 中，对于右侧的第二个式子，我们代入正态分布的密度函数，求导即可；对于第一个式子，混合因子有约束 <span class="math inline">\(\sum\pi_r=1\)</span>，因此可用 Lagrange 方法求出最大值： <span class="math display">\[L=\sum_r a_r \log\pi_r+\lambda(\sum\pi_r-1)\]</span> 求导的 <span class="math inline">\(\pi_r=-{a_r\over\lambda}\)</span> ，又知 <span class="math inline">\(\sum a_r=n\)</span> ，因此 <span class="math display">\[\pi_r^+={1\over n}\sum_{j=1}^n w_r(y_j,\theta^*)\\\mu_r^+={\sum_{j=1}^n w_r(y_j,\theta^*)y_j\over \sum_{j=1}^n w_r(y_j,\theta^*)}\\\sigma_r^{2+}={\sum_{j=1}^n w_r(y_j,\theta^*)(y_j-\mu_r^+)^2\over \sum_{j=1}^n w_r(y_j,\theta^*)}\]</span></p><p>第二个例子是 <strong>censored data</strong> ：模型为<span class="math inline">\(N(\theta,1)\)</span>。假定我们的 observed 为 <span class="math inline">\(X=(x_1,...,x_m,a...,a)\)</span> （把删失值记为 a，即观测 <span class="math inline">\(\ge a\)</span> ），complete data 为<span class="math inline">\((x_1,...,x_m,z_{m+1},...,z_n)\)</span> 。</p><p>似然函数为 <span class="math display">\[l(\theta|X,Z) = -{1\over2}\log(2\pi)-{1\over2}\sum^m_{i=1}(x_i-\theta)^2-{1\over2}\sum^n_{i=m+1}(z_i-\theta)^2\]</span> 而 <span class="math inline">\(Z|X,\theta^*\)</span> 服从 trancated normal at level a from below <span class="math display">\[f_z(z|X,\theta^*)={\exp(-{1\over2}(z-\theta^*))\over\sqrt{2\pi}(1-\Phi(a-\theta^*))}\]</span></p><p><span class="math display">\[\begin{aligned}Q(\theta, \theta^*) &amp;= E_u[\log l(\theta|y,u)|X,\theta^*]\\&amp;=  -{1\over2}\log(2\pi)-{1\over2}\sum^m_{i=1}(x_i-\theta)^2-{1\over2}\sum^n_{i=m+1}\int(z_i-\theta)^2 f_{z_i}(z_i|x,\theta^*)dz_i\end{aligned}\]</span></p><p>上为 E-step，对于 M-step，我们对 <span class="math inline">\(\theta\)</span> 取导数 <span class="math display">\[m\bar{x}-m\theta+(n-m)(E[z|X,\theta^*]-\theta)=0\]</span> 注意的，对于 trancated normal dist. 来说，其期望为 <span class="math inline">\(E[z|X,\theta^*]=\theta^*+{\phi(a-\theta^*)\over 1-\Phi(a-\theta^*)}\)</span> 。因此有更新公式 <span class="math display">\[\theta^+={m\over n}\bar{x}+{n-m\over n}(\theta^*+{\phi(a-\theta^*)\over 1-\Phi(a-\theta^*)})\]</span> 最终，给出一些 EM 算法的优缺点，课程网页上的内容老师也没讲，在此不多解释：</p><h3 id="em算法的优点">EM算法的优点</h3><ol type="1"><li><p>EM算法是数值稳定的, EM算法的每一次迭代会增加对数似然.</p></li><li><p>在非常一般的条件下, EM算法有可靠的全局收敛性, 即从参数空间的任何初始值出发, EM算法 一般总能收敛到对数似然函数的一个局部最大值点.</p></li><li><p>EM算法很容易实施,每一次迭代中的E步是对完全似然的期望, 而M步是完全数据的ML估计. 其经常 有closed form.</p></li><li><p>EM算法是容易进行程序设计的, 因其只涉及到似然函数, 而不需要其导数.</p></li><li><p>EM算法在计算机上实施时需要的存储空间很小, 其在每步迭代中不需要存储信息阵或者其导数等.</p></li><li><p>由于完全数据问题一般是一个标准问题, 因此在完全数据的MLE不存在显式解时, M步经常可以使用标准的统计方法来解决此问题. 一些扩展的EM算法就是基于此.</p></li><li><p>相比其他优化方法而言, EM算法需要的分析计算工作一般不太多, 其只要求完全对数似然的条件期望和最大化.</p></li><li><p>每一个迭代的成本是比较低的, 其抵消了EM算法需要很大迭代次数以达到收敛的不足之处.</p></li><li><p>通过监视每次迭代对数似然的单调性, 可以方便的监视收敛性和程序错误等.</p></li><li><p>EM算法可以用于对“缺失”值进行估计.</p></li></ol><h4 id="对em算法的一些批评">对EM算法的一些批评</h4><ol type="1"><li><p>不能自动给出参数估计的协方差矩阵的估计.</p></li><li><p>在一些看起来很简单的问题或者包含太多缺失信息的问题里, EM算法可能收敛很慢.</p></li><li><p>当存在多个极值点时, EM算法不能保证收敛到全局最大值点, 此时, 收敛到的极值点依赖于初始值.</p></li><li><p>在一些问题里, EM算法需要的E步或者M步可能不能给出分析解.</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 统计计算 </tag>
            
            <tag> EM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于错排问题</title>
      <link href="/posts/eb1cd2f5/"/>
      <url>/posts/eb1cd2f5/</url>
      
        <content type="html"><![CDATA[<p>错排问题，这个问题的背景可能有多种表述方式，将其形式化，可表为：将 1 至 n 这 n 个数字排列，使得每个数字不出现在其所在序号的位置上，问所有可能的排列数。详见 <a href="https://en.wikipedia.org/wiki/Derangement">wiki</a></p><p>对于这一问题的「官方」解法是这样的：考虑编号为 1 的数字，显然它有 <span class="math inline">\(n-1\)</span> 个可能的位置。假定它出现在 i 位置上，那么分两种情况考虑：</p><ol type="1"><li><span class="math inline">\(i\)</span> 号数字出现在 1 位置上，则问题缩减为 <span class="math inline">\(n-2\)</span> 个数字错排的情况；</li><li><span class="math inline">\(i\)</span> 号数字出现在非 1 位置上。这里出现了一个精妙的想法：对于 <span class="math inline">\(i\)</span> 号数字来说，它「不允许」出现在 1 位置上，而其他的各元素 <span class="math inline">\(2, 3, ..., i-1, i+1, ..., n\)</span> 不允许出现在各自的编号位置上——所以，<span class="math inline">\(i\)</span> 号元素个其他元素的地位是等价的——问题化归为 <span class="math inline">\(n-2\)</span> 个数字错排的情况。</li></ol><p>综上，可以得到递推公式，<span class="math inline">\(D(n)=(n-2)(D(n-1)+D(n-2)), n\ge 3\)</span>。当然，初始条件为 <span class="math inline">\(D(1)=0, D(2)=1\)</span>。</p><p>另一种也比较容易想到的方法是这样的：对于所有可能的排列，减去其中出现矛盾的情况。</p><ul><li>若只有 1 个数字出现了矛盾（在它的位置上），共有 <span class="math inline">\(C_n^1\)</span> 种可能，对于剩下的每个元素都处于非自己的位置上，即划归为 <span class="math inline">\(n-1\)</span> 时的问题；</li><li>若有 2 个数字出现矛盾，共有 <span class="math inline">\(C_n^2\)</span> 种可能，对其他元素进行错排，即 <span class="math inline">\(n-2\)</span> 时的情况；...</li><li>若有 <span class="math inline">\(n-2\)</span> 个数字出现矛盾，共有 <span class="math inline">\(C_n^{n-2}\)</span> 种可能，对其他元素进行错排，即 <span class="math inline">\(2\)</span> 时的情况；</li><li>注意到，不可能恰好只有 <span class="math inline">\(n-2\)</span> 个数字出现矛盾（最后那个数字只能在它的位置上），因此最后再减去 1，即所有元素在它的位置上的情况。</li></ul><p>综上，递推公式为 <span class="math inline">\(D(n)=n!-C_n^1D(n-1)-C_n^2D(n-2)-...-C_n^{n-2}D(2)-1, n\ge 3\)</span>，初始条件和上种解法一致。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.special <span class="keyword">import</span> comb</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">derangement_1</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> (n-<span class="number">1</span>) * (derangement_1(n-<span class="number">1</span>)+derangement_1(n-<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">derangement_2</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    der = math.factorial(n)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>, <span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        der -= comb(n, n-i) * derangement_2(i)</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">int</span>(der-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = <span class="number">15</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m):</span><br><span class="line">    <span class="built_in">print</span>(derangement_1(i), end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, m):</span><br><span class="line">    <span class="built_in">print</span>(derangement_1(i), end=<span class="string">&quot; &quot;</span>)</span><br></pre></td></tr></table></figure><p>结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 2 9 44 265 1854 14833 133496 1334961 14684570 176214841 2290792932 32071101049 </span><br><span class="line">1 2 9 44 265 1854 14833 133496 1334961 14684570 176214841 2290792932 32071101049 </span><br></pre></td></tr></table></figure><p>可见，两种计算方法是一致的。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算思维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实批精读 讨论课</title>
      <link href="/posts/e1c16889/"/>
      <url>/posts/e1c16889/</url>
      
        <content type="html"><![CDATA[<h2 id="讨论课-1">讨论课 1</h2><h3 id="为什么康德放弃了在道德形而上学奠基原理中写道的要做一个纯粹实践理性批判的计划取而代之的是实践理性批判">为什么康德放弃了在《道德形而上学奠基/原理》中写道的要做一个“纯粹实践理性批判”的计划，取而代之的是“实践理性批判”？</h3><p>对此，康德在《实践理性批判》的序言和前言中进行了解答：「它应当阐明的只是<strong>有存粹实践理性，并为此而批判理性的全部实践能力</strong>。( Its business is to show that there is pure practical reason, and for this purpose it criticizes the entire practical faculty of reason.) 如果它在这一点上成功了，那么就不需要批判这个存粹能力本身……因为，如果<strong>理性作为存粹理性现实地是实践的，那么它就通过这个事实而证明了它及其概念的实在性</strong>。」（5:3）</p><p>「这样一来，我们将要探讨的就不是一种存粹实践的理性的批判，而只是一般的实践的理性的批判。因为存粹理性一经被阐明，就不需要任何批判了。」（5:17）</p><p>所谓「批判」，即对形而上学原则的来源和可能性的探求。在这里，康德只是想说明存在存粹实践理性，人类在思想、情感、行动的过程中潜藏、体现着实践理性。</p><p>另外，对于理性的实践能力，康德在导言中提到：「自由的概念，并且如果我们目前能够找到一些理由去证明，这种属性事实上应属于人类的意志，那么由此就并不只是说明了存粹理性可以是实践的……」（5:16）「一般实践理性批判有责任阻止以经验性为条件的理性想要单独充当唯一对意志进行规定的根据的僭妄（claim exclusively to furnish the ground of determination of the will）。存粹理性的这种运用，只有当有这样一种理性已被断定时，才是内在的；相反，自以为具有独裁地位的、以经验性为条件的存粹理性运用则是超验的，它表现出完全超出自己领域地外去提要求、发命令的特点。」（5:17）</p><p>康德认为，存粹理性若只是经验性地进行运用（需要道德律），则可能是超验的，超出了其所能运用的边界。因此，在《实批》中，康德希望利用一般的实践理性对其进行补充和纠正，阻止这种对于意志进行规定的根据的僭妄。综上，康德最终选择用「实践理性批判」取代「存粹实践理性批判」。</p><h3 id="康德认为理性因其能够提供一种实践能力而因此有所谓理性事实你怎么理解这一概念">康德认为理性因其能够提供一种实践能力而因此有所谓“理性事实”，你怎么理解这一概念？</h3><p>在此，仅引用两种观点：理性的事实（Faktum der Vernunft）一词在《实批》中出现八次。贝克认为其有 a fact for pure reason 和 a fact of pure reason 两重含义，考虑到作为实践主体的人只是有限的理性存在者，他认为其意义只能是前者，即「存在纯粹理性这个事实，这是由理性反思而得」，在此意义上，贝克将「理性的事实」理解为道德法则。</p><p>对此，阿利森等则认为，不应该直接把纯粹理性是实践的看作事实，「理性的事实」真正指来是对道德法则的意识，「此一事实最好被诠释为对身处道德律之下的意识以及『一切自然的人类理性都将这一规律认作是其意志的最高规律这种认识』」。</p><p>康德认为正是对于道德律的意识使得我们能够知晓对于自由的意识。为什么？</p><p>康德在前言中指出：「自由固然是道德律的存在理由，但道德律却是自由的认识理由。因为如果不是道德律在我们的理性中早就被清楚地想到了，则我们是决不会认为自己有理由去假定有像自由这样一种东西的。……」（5:4）</p><p>对于自由，康德认为我们「先天地知道其可能性，但却看不透它，因为它是我们所知道的道德律的条件」，虽然我对于绝对的先验自由不可清楚认识，但我们在日常中会接触到其最终的表现形式，即道德律或义务。如，我们在面临道德律或善良意志和欲求的矛盾的时候，我们的选择正体现了我们的自由。因此，一旦我们意识到道德律，也就对于自由产生了意识。</p><h2 id="讨论课-2">讨论课 2</h2><h3 id="如何理解自然因果性和自由因果性">如何理解自然因果性和自由因果性？</h3><p>为理解自然因果性和自由因果性，需要了解其背景，事实上，康德提出这两种因果性的概念，是「为了回应休谟关于因果性与自由关系的难题」。</p><p>康德对于自由和因果性的研究，很大程度上源于休谟对于两者的质疑：如果一切事件都是由因果必然性决定的，那么人的自由便不存在了；如果人是自由的，那么如何理解「因」与「果」之间的必然关系？康德曾指出，「『人有自由；以及相反地：没有任何自由，在人那里 ，一切都是自然的必然性』。 正是这个二律背反 , 把我从教条主义的迷梦中唤醒, 使我转到对理性本身的批判上来 , 以便消除理性似乎与它自身矛盾这种怪事。」</p><p>对于该问题，康德在《纯粹理性批判》中便有所涉及，第三个二律背反正与理性对因果性范畴的即超验的运用有关，并提出了「自然因果性」和「自由因果性」的概念。然而，在存粹思辨理性中，自由是一个尚未定论的概念。我们只能将自由的理念归于自然之物，存而不论，「完全不受自然规律支配的这样一种原因性是有可能的，虽然我们还不知道它的可能性何在，但是你不能完全否认它，你不能排除在自在之物里面还有一种自由的原因性」。康德在《实践理性批判》中指出，「思辨理性在运用因果性概念时需要自由，以便把自己从二律背反中拯救出来」，而自由的概念的实在性，只有在实践理性中，「通过实践理性的一条无可置疑的规律（道德律）被证明」。</p><p>在《道德形而上学奠基》一书中，康德对于自由以及两种因果性，有着更为完整的表述，以下从第三章第一节「自由的概念是说明意志自律的关键」进行简要分析：</p><p>「意志是有生命的存在者就其有理性而言的一种因果性，而自由则是这种因果性在能够不依赖于外来的规定它的原因而起作用时的那种属性，就像自然必然性是一切无理性的存在者的因果性被外来原因的影响所规定而去活动的那种属性一样。」</p><p>这里提出了意志和自由、自然必然性的概念。康德认为意志是有生命的存在者就其有理性而言的一种因果性，而自由是意志的一个属性——这两者都是针对有理性的生命存在者而言的；那么，对于无理性的存在者来说，其因果性是什么呢？自然必然性就是其属性。</p><p>两者之间有何区别？我的理解是，无理性的存在者其因果性只能受到外来原因的影响，即后面所说的「他律」，而自由作为意志的属性，它是属于理性的存在者的，正是它的存在使得作为主体的理性存在者有了摆脱外来的原因的影响的可能性。</p><p>上面提到了自然因果性，也提到了自由的概念，但是只是一种消极的自由，即摆脱外来的规定，只是说明了自由不是什么。这种消极的自由，让理性存在者有了不受自然因果性的设定的可能性，但是，这不意味着自由就是无法则的，就是任意的；康德说，「自由尽管不是意志依照自然法则的一种属性，但却并不因此而是根本无法则的，反而必须是一种依照不变法则的因果性，但这是些不同种类的法则」。</p><p>他在后面又具体讲了这种法则是什么，并且比较了两种法则之间的区别，「自然必然性是作用因的一种他律」，而「意志的自由」则是自律，是意志对于自己来说是一个法则，为自己立法。</p><p>所以，本质上，自然因果性是一种他律，是亚里士多德的「动力因」，无理性存在者的动作是由于外来的原因而产生的，是出于外在的动力。而自由因果性是一种自律，是出于意志的自我立法。康德进一步说，「『意志在一切行为中都对自己是一个法则』这一命题，仅仅表示如下的原则：除了能够也把自己视为一个普遍法则的准则之外，不要按照任何别的准则去行动。而这正是定言命令式的公式和道德原则。因此，一个自由意志和一个服从道德法则的意志是一回事。」也就是说，自由因果性就是定言命令公式，就是道德原则。</p><h2 id="讨论课-3">讨论课 3</h2><h3 id="关于休谟道德动机">关于休谟道德动机</h3><p>休谟和康德对于道德动机的矛盾主要在于理性是否能成为道德动机，康德认为纯粹理性本身具备实践能力，理性存在者的行为受到出于理性的道德律的约束；而休谟则赋予了伦理中的理性以非常有限的角色，认为理性不能影响意志，从而不具备实践能力，不可能成为道德的源泉。以下对休谟对于道德理性论的反驳进行浅析。</p><p>休谟在《人性论》第二卷论情感中，对于影响意志的各动机进行了分析，他反对人的意志受理性影响的观点，指出「第一，理性单独决不能成为任何意志活动的动机；第二，理性在指导意志方面并不能反对情感。」（451）</p><p>从而，在第三卷论道德中，他明确了道德的区别不是从理性得来的。这是因为，在休谟看来，理性的作用在于发现真伪，即「对观念的实在关系或对实际存在和事实的符合或不符合」，而它是「完全没有主动力的，永远不能阻止或产生任何行为或感情」。（498）休谟在这里的论述源于他之前对于影响意志的动机里的判断：在他看来，既然理性不能直接影响行为，那么其就不可能成为道德判断的源泉。</p><p>那么，理性能否以某种间接的方式对行动产生影响呢？他进一步对可能的两种间接的方式进行了分析：其一是判断情感对象的存在，其二是发现出因果联系，提供手段。最终他得出结论：理性不可能是道德源泉。</p><p>举个例子，一个不好吃的果子放在面前，因为理性错误地想象它是甜美可口的，这就犯了第一个错误；又以某种不适合的方式取得这个果子，这就犯了第二个错误。他认为第一个错误属于事实的错误，这类错误大家都认可是无关乎道德的；对于第二个，即是非的错误，休谟指出，「这样一种错误不可能是不道德的原始源泉，因为这种错误以一种实在的是非作为前提，也就是以独立于这些判断之外的一种实在的道德区别作为前提。」「因此，是非的错误可以成为不道德的一种，不过它只是次生的一种不道德，依据于在它以前就存在的别的一种不道德上面的。」（500-1）</p><p>另外，在休谟理论中，心灵中只存在知觉，而知觉分为两类：印象和观念。在452页，他指出「知性要么依照理证来行判断，要么依照概然推断来行判断」；理性所对应的是观念（ideas），而所谓「概然推断」似乎是我们的某种自然的联结，属于非理性的部分，其自行活动而不受到意志的规定。</p><p>基于此，休谟认为「恶与德既然不是单纯被理性所发现的，或是由观念的比较所发现的，那么我们一定是借它们所引起的某种印象或情绪，才能注意到它们之间的差别」「道德宁可以说是被人感觉到的，而不是被人判断出来的」（510），即他在后文中所谓的「道德感」。简单来说，「德性属于可亲的东西，恶行属于可恶的东西」。</p><p>在《道德原理研究》中，休谟对于「道德是源于理性还是情感」这一论题也进行了阐释。他的结论是，对于理性和趣味的范围和职责，「前者传达关于真理和逻误的知识；后者产生关于美和丑、德性和恶行的情感」「理性，由于是冷漠而又超然的，因而不是行动的动机，仅仅通过给我们指明达到幸福或避免苦难的手段而引导我们出自欲望或爱好的冲动；趣味，由于它产生快乐或痛苦并由此构成幸福或苦难之本质，因而就变成行动的动机，是欲望和意欲的第一源泉和动力。」（146）这里的论述和在《人性论》中的论述是相一致的。</p><p>这里提到了一个例子，来说明人的最终目的不能通过理性来说明：比如说，人为何要锻炼？回答可能是为了健康，而为何要求健康？这是因为疾病使人痛苦，那么为何会憎恶痛苦呢？这一问题则是理性所不能回答的。还有另一条路径：求健康是因为这是工作需要，努力工作是为了挣钱，挣钱又是因为金钱是快乐的工具，那么，最终又回到了为什么希求快乐这一问题，而这又是理性所无法回答的。休谟认为这种目的的推导不可能是无限的过程，其最终必然对归结为人的某种情感/欲求，他说：「人类行为的最终目的都决不能通过理性来说明，而完全诉诸人类的情感和感情，毫不依赖于智性能力。」（145）</p><p>归根结底，在对于「理性」的理解，或者说定义上，休谟眼中的理性和康德的理性在概念上有着明显的区别，休谟认为理性仅仅提供了推理，发现真理的能力；而康德所谓的纯粹理性则天然具备一种实践能力。因此，康德认为道德来源于理性；而因为休谟认为理性完全没有「主动力」，也就不可能成为道德动机，因此人类的道德动机只能来源于「道德感」，来源于人对于事物的可亲或可恶的情感。</p><p>从先后关系上来看，为了反驳休谟的道德动机的感性论，康德在论述中强调了理性的实践能力，道德律源于理性，而人对于道德律的意识又作为理性事实成为自由的重要依据。可见，康德关于道德动机的观点很大程度上受到了休谟的影响，而为了反驳休谟的观点，以使得道德免于建立在一个不稳定的感性基础之上，他建立了自己的道德体系，认为道德根植于人类理性，希望推导出一个普遍的、内在的道德律，以避免道德行为的偶然性。</p><h3 id="q休谟的道德区分的根据是什么">Q：休谟的道德区分的根据是什么？</h3><p>关于情感和理性在道德动机中所发挥的作用，休谟认为理性可以「给我们指明品质和行为的有害或有用的趋向」，但它单独却不能产生道德谴责或赞许；这种倾向只能由情感来产生，即「一种对人类的幸福的同情和对人类的苦难的愤恨」的情感（138）。在他看来，相较于理性的推理的能力，情感是在「一切因素和关系摆在我们面前之后」（146），我们在总体上产生的一种先天的感知，从而引起我们的谴责或赞许。也即，不同于前者根据已知关系探求未知关系，我们感受满足或厌恶的能力完全是「根据对象的性质和我们器官的气质」（143）而形成的；情感的标准「来自动物的永久的构架和组织，并最终派生于那个最高存在物的意志」「这个意志赋予了每一个存在物以其特有的本性，并给整个实存安排了诸种等级和秩序」（146）。</p><p>简言之，我们的道德区分最终归结于我们对此的情感或同情，即我们对于苦与乐的厌恶和爱好，这种厌恶与爱好是最高存在者所设定的根植于我们生物组织中的。</p><p>此外，休谟认为善行使人爱好是因为其能促使社会利益，而恶行使人厌恶则是因为其会损害社会利益，从而使休谟的道德哲学带有一定的功利主义色彩。</p><h2 id="讨论课-4">讨论课 4</h2><h3 id="关于自由自由为何重要什么是自由">关于自由：自由为何重要？什么是「自由」？</h3><p>初读时，让我感到震撼的是墨索里尼的那句话：「与个人主义相反，法西斯主义者是为国家着想的；而且在他与国家保持一致的范围内，也是有利于个人的……法西斯主义有利于自由……能成为现实的唯一自由，国家的自由，国家中个人的自由。」（《法西斯主义的信条》，1934）乍一听似乎是谬论，法西斯主义怎么可能和自由相容呢？带着这样的疑问，我继续往下看。</p><p>书中举了一个小岛的例子，我以为值得深思：假设在一个富足、充实的世界中，我们的生活按照既定的轨迹前进，那么自由对我们来说意味着什么？或者说，我们的幸福依赖于这样的自由吗？如同黑客帝国中的红蓝药丸，我们是选择生活在幸福的梦幻世界中，或是选择所谓的「真相/自由」？——对于一个生来不自由的人来说，其可能幸福吗？而可能的自由，对他来说是带来了幸福还是徒添烦恼呢？【萨特、费洛姆，「逃离自由」】</p><p>以自由为名义的奴隶解放运动，似乎更多的关注点在于人与人之间的不平等，在于少数人受到压迫，在于财富及权力的不对等。而对于《一九八四》，我们恐惧的真的是那种「被决定」的不自由吗？还是在于我们的生活被某个人而非「上帝」所支配的某种不平衡，在于「阶级感」？</p><p>在此基础上，我似乎有些理解墨索里尼的话了。在一篇关于自由主义和法西斯主义的文章中提到，在信仰「生命、自由、财产」的自由主义社会中，资源可能掌握在少数人手中，无产者无自由，从而，「私有制不能保证人类自由」「有财产则无自由，有自由则无财产」。甚至哈耶克的老师，米瑟斯曾说「不可否认的是法西斯主义以及其类似的独裁主义完全是出于一种最良好的愿望，他们此时介入欧洲的生活，是为了拯救欧洲的文明，法西斯主义在这方面作出的贡献将永远载入史册」（《自由与繁荣的国度》）。仅从这一角度上，通常看来与自由相违背的法西斯主义却保障了某种意义上的平等，从而带来了一定程度的自由。</p><p>究竟什么是「自由」？作者在这里给出了几个通常理解的自由概念：1. 否定层面上的「摆脱」什么的自由，对于律法/压迫的反抗【法西斯，宣称自由就是对国家的服从，从而置消极自由于不顾】；2. 积极意义上的「做」什么的自由，选择去完成某件事的可能性【绝对意义的消极自由下的「为所欲为」式自由之荒谬】；3. 前两者是从个人层面来说的「消极自由」和「积极自由」，若在「自我」的概念中引入社会性，则产生了一种在我们和他人的关系中的「社会自由」；4. 在「自我认同」下的基于理性决策的自由，即「理性自由」；5. 情感抒发的自由；6. 认为理性是社会强加给我们的一种思维体系，而情感则源于生物本能，因此自由只能是陀思妥耶夫斯基《地下室手记》中那种荒谬又可悲的「随意的自由」。（243-245）</p><p>前两者是老师在课堂上提到的一组概念，即免除做什么的消极自由和选择做什么的积极自由，后面的几种又从不同的角度阐述了自由的含义，对于自由的理解可谓见仁见智，作者在这里没有给出一个确切的定义。然而，在讲述的过程中，我们对于自由的理解似乎渐渐转为对于<strong>「自我」</strong>的理解：生物层面的还是社会层面的？理性还是情感？什么才是「真我」？</p><p>由此，便引入了<strong>自由意志</strong>的话题，我们是否拥有自由？或者说，我们的行为是出于自由意志的选择，还是完全在事先被决定的？</p><p>这个问题的重要性在于，没有自由就无所谓道德。如老师课上讲的例子，一个罪犯的恶行若是出自他的生物/基因本能，即被决定的，那么我们似乎就无从对他产生谴责。进一步的，若是承认一切都是被决定的，那么人的任何行为都是出于自然的安排，那么根本就没有所谓的道德，而我们日常生活中的规范、法律也就根本不成立了。对于决定论如何取消了道德的地位，书中这样写道：「没有选择就没有自由，没有自由就没有理由让一个人为他的行为负责，无论该行为有多么善或多么恶。按照决定论者的观点，我们只能说是在『表演』，因为我们的『行为』只不过是种种情况和自然定律的结果，它们根本就没给我们『做点什么』留出余地。」（250）</p><p>这样来看，决定论似乎是不合常理，它立论的根据在何？作者在书中给出了两个三段论：「每一个事件都有其解释性的原因。人的每一次选择或行动是一个事件。因此，每个人的选择或行动都有其解释性的原因。」「每个人的选择或行动都有其解释性的原因。有解释性的原因就不自由。因此，一个人的选择或行动不可能是自由的。」（248）</p><p>在其论述中，前提是「每一个事件都有其充分的、自然的解释性原因」。我们为什么要接受这样的前提？这是因为有这样的因果性存在我们才能理解事物，决定论者认为只有接受了这种前提我们才能有所作为：若没有这种普遍的因果性，我们并不知道我们的行为会产生什么样的结果，也就无从进行行动。</p><p>我认为这种思想一定程度上和当时科学思潮有关，十八十九世纪正是工业革命时期，科学和科技的力量受到推崇，然而，人的行为也可以像物理上那样完全得到解释吗？我是信仰科学的，然而，这并不意味着科学可以解释一切。人的意识真的可以还原到最基本的分子、原子、亚原子上去吗？我认为，至少在目前来看是不行的：以我们现有的科技水平，我们无法从原子的角度理解「意识」的存在，也无法直接从元素创造出生命；因此，我们也无法把自然界的因果律直接迁移到生物界上去。对于客观世界，我们可以通过一定的物理知识加以解释、预测或干预，这样的规律适用于我们尚不清楚的意识范畴吗？</p><p>或许，这也正是自然科学区别于社会科学之所在：自然科学试图以科学的方式寻找在自然界普遍存在的因果关系，而社会科学更多时候则是用科学的手段去发现相关关系；对于个体行为来说，我们似乎只能从普遍的他者的行为中寻求一种非必然的规律，我们永远无法准确地预测单个个体在某一情景下的选择。</p><p>这是我无法认同决定论的原因，我们相信科学，但这不意味着自然科学式的因果关系可以挪用到人身上，从而也为人的自由留出了余地。</p><p>Q：来稿已收悉，写得很好！其实在法西斯政权的统治之下，人的自由意志问题的案例也很多，比如在国家机器的强力胁迫之下，是遵循良知的呼唤而行善，最终受到严厉惩处，还是顺从为恶保全自身，这是非常典型的两难处境。你有什么看法？</p><p>在法西斯政权的统治之下，个人的自由似乎在国家主义的宏大叙事中受到压制，面对这样的强迫，我们是选择顺从屈服，还是奋起反抗？这样的道德困境是一个比较极端的例子：我们的决定对于总体的结果其实并不能产生影响，因此，实际上面临的是心中的道德良知与个人的生命保存（可能免不了侵犯他人的自由甚至生命）之间的价值选择；我们似乎有选择的自由，但这样的选择往往是走向毁灭的，这样来看我们似乎又没有了自由。出于道德或良知，我们不愿同流合污，然而这样的代价却可能是生命的终结，或者说我们免于受到国家强权胁迫的自由被剥夺了；在这样的「绝境」之下，至少还拥有出于道德的选择行善的可能性，似乎又还留存着一些积极层面的自由。</p><p>面对这样的处境，仅仅作为一种设想，去鼓吹道德上的自律，要求遵循道德律令，这样的说辞其实是缺少信服力的。我们的理性在正常情况下可以指引我们做出道德上善的举动，然而，在这样的极端情况下，其仍然能作为我们行为的准则吗？还是会被其他的情感上的或别的动机所主导？</p><p>讨论上述的问题似乎难有一个确定的答案，面对上述情况，我更关注的其实是：这样的假想情况会存在吗？或者说，这样的道德选择会以这样形式出现在我们面前吗？很多时候，在集权统治之下，个体所面临的或许不是这样非黑即白的选择，不是明确的在顺从和反抗之间的简单判断。这样的道德困境出现的形式，更多的可能是戈培尔所谓「谎言重复一千次就是真理」，可能是阿仑特所谓的「平庸之恶」。在国家主义的意识形态下，伴随着的多是受限制的言论自由和单方面的政治宣传——而处在其中的个体，如何才能在这样的宣传语境下，在周遭的事件和人物都处于一个「不正常」的状态之下，保持自己对于善恶的认知？在一个没有「常识」的社会之中，如何坚持行善？</p><p>除了在顺从和反抗之间所进行的单项选择，更为重要的，或许是对于境况的认知。如何才能保持内心的道德判断？从这个角度来理解，似乎更能体现出康德基于理性的义务论之价值。</p><h2 id="讨论课-5">讨论课 5</h2><h3 id="康德的义务动机与道德价值之间的关联">康德的义务动机与道德价值之间的关联</h3><p>先基于《通释》中第四节来区分「动机」（incentive）和「动因」（motive）。贝克指出了，相较于作为「意愿的客观根据」之动因，康德的动机概念内涵发生过一些变化。他认为，从《奠基》一书中可以看到动机的重点从「自爱原则之下的感性冲动」转变为「主观性」。动机具有主观性，有两方面的意义：其一，「它具有同私人的、个体性的主体动机之间的关联，这种关联是建立在感性冲动基础上的」；其二，「它与自身客观的道德原则基于人类主义之构造的运作有关，并且这一运作是明显在主观上有条件的、在客观性上受到规定的动机」（268）。总的来看，动机就是「存在者意志的主观规定根据」。</p><p>所以说，纯粹实践理性是不会产生动机的，动机只能产生自受到感性影响的存在者。对于非感性的理性存在者来说，他们「将天性地切不依赖任何动机去执行道德律」（268）。注意到，动机具有主观性，并且不免受到感性偏好的影响，但这并不意味着其不能产生依循道德律的行为。康德认为，我们行为取决于我们的准则（maxim），而人可能有多种动机，我们选择如何去做正是出自我们将何种动机作为我们行为的准则——可能是道德法则或义务，也可能是情感上的动机。</p><p>那么，什么样的动机才是道德上所谓「好」的动机呢？或者说，我们行为的道德价值源自哪里？康德认为，只有出自义务动机的行为才具有道德价值。他在《纯然理性限度内的宗教》中提到：「任性的自由……只有这样，一种动机，不管它是什么样的动机，才能与任性的绝对自发性（即自由）共存。 但是，道德法则在理性的判断中自身就是动机，而且谁使它成为自己的准则，他在道德上就是善的。」</p><p>在《奠基》中有更为完整详细的阐述，其中的四个例子：1. 商人诚实行商在价格上一视同仁；2. 保存自己的生命；3. 力所能及地行善；4. 保证自己的幸福。分别对应与对他人、对自己消极的义务，对他人、对自己积极的义务。康德在这里一再强调，仅仅是在表面上的「合乎义务」是不够的，更重要的是是否「出于义务」。</p><p>什么是义务？「义务就是出自对法则的敬重的一个行为的必然性」（《奠基》407）。正是这种必然性带来了某种「道德兴趣」（moral interest），赫曼指出，其他的可能是出自情感倾向的动机和行为的道德正确性之间只具有某种偶然的关联，而在义务动机的必然性之下，其所提供的道德兴趣就和道德上的正确性之间发生了非偶然的关联（当然，这不能保证行为一定是对的，但其正确与否却不是偶然的）。由此可见，其他的动机的偶然性显然无法提供道德上价值的证明，而义务动机的必然性正使其具有了道德价值。</p><p>以上是从积极命题的角度展开的，即「只有出自义务的行为才有道德价值」 (only actions done from duty have moral worth)，而老师在课上还介绍过消极命题的表述，即「没有一个出自倾向动机的行为具有道德价值」 (no action done from inclination can have moral worth) ，似乎这里道德价值的含义有所窄化，而将义务动机与道德价值之间的关联强化了。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 康德 </tag>
            
            <tag> 实批 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实批精读 期末论文：两种因果律的区分及先验自由下的道德对象</title>
      <link href="/posts/db3b2471/"/>
      <url>/posts/db3b2471/</url>
      
        <content type="html"><![CDATA[<p>康德在《实践理性批判》中区分了自然因果性和自由因果性，这种区分源于自然必然性和自由之间的矛盾，本文将重点围绕他是如何解决两者之间的矛盾进行展开；此外，在自由和理性的前提下，他颠覆性地基于道德法则建立了善与恶的概念，从而确立了纯粹实践理性的对象。以下将在对《实批》进行文本分析的基础上，就上述问题以及解决思路，以及善恶的概念进行简要分析。</p><p>我们看来自然必然性和自由之间会出现什么样的矛盾：邓晓芒先生将自然界中的因果规律译为<strong>自然必然性</strong>，这种必然性意味着只要有某种原因，必然会产生某个结果，其强调的是一种非或然的关系，而这种关系正是自然科学之所以成立的基石。然而，从另一方面来说，我们似乎相信人是具有自由的，即人具备某种选择去做什么的权力；但矛盾在于，倘若我们的行动如同在知性世界中那样遵循着某种确定性的因果规律，因因相续，那么这种选择似乎就无从谈起了。也就是说，如果我们的行动完全取决于这种因果关系，那么人的<strong>自由</strong>就被取消了：「因为，从必然性中所得出的结论是，任何时间、因而在一个时间点上采取的任何行动，都必然是以在先行的时间中发生过的事件为条件的。」「既然过去了的时间不再在我的控制之下」，「我在我行动的那个时间点上绝不是自由的」<a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a>（129）。换句话说，这样的假定之下一切事件就遵循着因果链条的延伸而发展，而人在其中丧失了开启新的因果链的能力。此外，在失去了自由的前提下，甚至<strong>道德本身的存在也是存疑的</strong>：举了一个偷窃行为的例子，若这一行为「是按照因果性的自然法则从先行时间的规定根据来的一个必然后果」（130），那我们对于该行为从道德上又从何指责呢？简言之，「没有选择就没有自由」，「没有自由就无所谓道德」<a href="#fn2" class="footnote-ref" id="fnref2"><sup>2</sup></a>。</p><p>然而，从直观上来看，我们毕竟是有自由的。正如康德在《纯批》第三个二律背反中提到的例子，你从椅子上站起来，尽管其根本的原因可能是多样的、复杂的，但至少从最表面上来看，你站了起来，是出于「你愿意」，体现了你的一种选择能力，即是康德在自由范畴表中所提到的「<strong>主观的、按照准则的（个体的执意）</strong>」（90）（当然，这并非康德所说的真正意义上的自由）。另外，若理性存在者纯粹遵循自然的规律行事，和其他的动物一样，那么就应当尽力保存自我，从这一角度来看，现实生活中那些舍生取义的事件甚至会变得没有道理、难以理解了；对于这种在鱼和熊掌，义与利之间超越自我利益的选择，我们只有脱离自然的因果律的范围，从<strong>道德法则</strong>的角度来理解，才能探求其存在的合理性。</p><p>在另一方面，我们似乎又无法不去相信自然的因果性，无论是在实践层面还是认知层面。没有了这种因果律，自然科学就失去了根基，我们日常生活的一切似乎都变得偶然的关联，这几乎是让人无法接受的（也正是因于此，休谟对于因果性的质疑才具有如何重大的意义，以至于动摇了当时的自然科学乃至整个知识体系）。既然我们无法放弃自然的因果性，那么，康德想要做的是在保持这种自然的因果规律的前提下去寻求人自由的可能性，让人保有在自然因果性之外的尊严。</p><p>即，现的在问题就在于，<strong>自由如何才能和这种自然的因果规律不相冲突地结合起来</strong>？首先，康德指出这一矛盾的解决不能简单地通过将存在者从自然因果律的法则中排除出去，成为一种例外：他认为人作为存在者，「其存有在时间中被规定了」（即符合自然的因果规律），我们要想将自由赋予给这一存在者，「至少不能在这方面把它从它的实存中、因而也是它的行动中的一切事件的自然必然性法则中排除出去；因为这将等于是把它托付给了盲目的盖然性」（130）。<strong>盖然性</strong>（Ungefähr）即差不多的、或然性，我们想将存在者从自然必然性中拯救出来以获取自由的权力，却陷于另一个泥淖，盲目的盖然性和不确定，这显然不是一个合理的答案——对于康德来说，自由并不是毫无限制的，并不代表着偶然和随意，相反，它将存在者从自然的规律中摆脱出来，而自成其规律。这种自由的规律就是<strong>自由因果性</strong>，他说，若我们想要拯救自由，唯一的办法就是「把一物的就其在时间中能被规定而言的存有，因而也把按照<strong>自然必然性</strong>的法则的因果性<strong>只是赋予现象</strong>，而把自由赋予<strong>作为自在之物本身的同一个存在者</strong>」（130）。在这里，康德区分了现象和自在之物，让自然因果性和自由因果性各自归属自己的领域，自由不能从现象界中去寻找而只存于本体界，而自然因果性作为经验性的规律也被限制于自在之物的领域之外。</p><p>然而，这种似乎只是理论上的区分如何成为可能呢？人的行为如何同时作为自然因果性的和自由因果性而存在？在此，康德似并没有给出一个直截了当的回应。要注意，他所谓的自由并不是如经验主义者那般「<strong>比较的自由</strong>」，亦即在某些状态下不受外部干扰的自由（如自由落体的概念），因为这只是「一些内部的、通过我们自己的力量而产生的表象」（131），他称这种「内部状态的」「心理学」上所谓的自由不过是「一种可怜的借口」。相较于这种相对的自发性，他所讨论的是一种「<strong>绝对自发性</strong>」，是一种必然的结果，即「<strong>先验自由</strong>」，「必须作为对于一切经验性的东西、因而对于<strong>一般自然</strong>的独立性而被思维的」（132），而不论这自然是被看作内部感官还是外部感官的对象。对此，康德给出了两个实例，一则为对于偷窃（道德行为）的评判，另一则是个人对于自己的道德行为的判决。在这两个例子中，他均给出了看待行为的两种视角：在时间序列中（现象界）中，我们的行为完全受到过去的影响，受自然因果律的支配；而从本体界的视角来看，行为则是与人的理性选择有关，独立于时间或自然因果条件，或者说，是出于自由的绝对自发性的。然而，这种绝对自发性只有在「<strong>智性直观</strong>」之下才能被发觉，而我们显然是不具备智性直观的，所以他指出「关于这个自发性的规定是根本不可能给出任何自然解释的」。既然这种自发性无法被证明，同样也无法被证伪，那么我们的自由又从何寻找呢？康德最终给出的答案是：「在缺乏这种直观的情况下，道德律向我们保证，我们的作为现象的行动与我们主体的感官存在者的关系，是不同于这个感官存在者本身借以被联系到我们里面的理知基底（Substrakt）的那种关系的。」（136）他只能给出这种先验的保证——自由毕竟是一种先验的存在，正如他在序言注中所言，「自由固然是道德律的<strong>存在理由</strong>（ratio essendi），但道德律确实自由的<strong>认知理由</strong>（ratio cognoscendi）」（2），其实在性只能通过一种「理性事实」而被认识到。</p><p>在把<strong>自然因果性和自由因果性进行区分</strong>，即将两者分属现象界和本体界，并给出了一种先验的绝对自发性之后，康德又指出这里还面临着第二个困难，即上帝和自由的并存问题：「只要我们认为上帝作为普遍的原始存在者也是<strong>实体之实存的原因</strong>」，那么就必须承认「人的种种行为在那个<strong>完全在他控制之外的东西中</strong>」「最后和最高的那个规定原因毕竟完全是在一只外来的手那里找到的，这种自发性就只配称之为比较性的」（137-138）其中「控制之外的东西」「外来的手」均指向上帝。也就是说，把自由化归到本体的世界之后，就可能面临人的自由意志最终都是由上帝决定的这样的困境，从而仍可能丧失其先验的自由，只能是一种相对的自发性。如邓先生所说，「如果把时间归于自在之物而不是人主观的直观表象，那就必然会在自在之物的范围里讨论时空关系问题，这就把上帝和人的本体限定在一定的时空关系中，使上帝对人的创造变成了一种不可动摇的宿命，而人的自由在这种命运中就丧失掉而成为了机械的必然性」<a href="#fn3" class="footnote-ref" id="fnref3"><sup>3</sup></a>。</p><p>所以，康德提出的解决方法是拿出他在《纯批》中强调的一点：时间只是作为<strong>感性直观的纯形式</strong>，也就是说把时间限定在现象界之内。在此基础上，只要「我们承认时间中的存有是某种仅仅适用于现象而不适用于自在之物本身的东西」，那么行动者的自由和创造者之间就不会有矛盾，因为「<strong>创造所涉及的是这些存在者的理知的实存</strong>，而不是它们的感知的实存，因而不能被看作诸现象的规定根据」（140）。总之，对于康德来说，「在时间中的实存就是这个世界中思维者的存在者的一种单纯感性的表象方式，因而并不涉及作为自在之物本身的这些存在者」，而「创造的概念并不属于实存的感性表象方式，也不属于因果性，而不可能与本体发生关系」（140）。他通过将时间（以及空间）与自在之物本身的实存之间的分离，让时间上的因果性仅仅限于现象界，从而保证了自由存在的可能性。</p><p>总结来说，康德通过对自然的因果性和自由的因果性之间的区分，从一定程度上解决了自由与自然因果性之间的矛盾；当然，这里的自由是先验自由，我们无法拥有智性直观而去完全认识它，却能通过纯粹实践理性的实践能力去侧面「肯定」它；而其实在性一旦通过纯粹实践理性的规律，即道德律被「证明」，「就构成了纯粹理性的、甚至是思辨理性的体系的整个大厦的<strong>拱顶石</strong>」（2），道德律正是基于理性和自由而成立的，并由此而确立了「善」「恶」的概念。以下，简要对先验自由之下的道德法则如何确立了善恶这一实践理性的对象进行分析。</p><p>在《实批》的对象分析之初，康德就指出了实践理性的对象与自由的密切关联，他声明对象的概念「是指作为自由所导致的可能结果的一个客体的表象」（78）；另外，「实践理性的唯一客体就是那些善和恶的客体」（79），分别是我们欲求和厌恶的对象。可见，他认为我们先天就具备这种区分善/恶的能力，也即「道德法则」。此前所有的道德观念不同，他认为「<strong>善和恶的概念必须不先于道德的法则，而只在这法则之后并通过它来得到规定</strong>」（85-86）。通过这样的一项颠覆性的工作，他希望将善与恶的概念中一切经验性的东西都排除掉，从而确立一个坚实的确定性的道德哲学。</p><p>那么，这一观点是如何得出的呢？他首先根据两个层次的实践理性区分出了两种对象的概念：纯粹的实践理性对象和实用的实践理性对象。并指出，在先天法则可以被看作行动的规定根据（即这个行动可以被看作是由纯粹实践理性所规定的）的情况下，「这一行动在道德上的可能性就必须是先行的」（79）。也就是说，纯粹实践理性考虑的是<strong>愿意和行动</strong>的关系，而完全不去考虑我们在身体（自然）条件上是否具备实现的可能性。</p><p>这里，他已经将行为的结果和意图区分了开来，认为纯粹理性的行动法则是不考虑结果、不去论自身是否有能力去实现的，而完全出自个人的意愿，即自由意志。正如他在后文中所讲，区别于「幸福论」中诸经验性原则构成了其整个基础，他的「<strong>德性论</strong>」的最主要的特点就是完全排除了经验性的成分。因此，在纯粹实践理性的分析论中的首要的指责性工作就是「区分开幸福论和德性论」（126），为了反驳幸福主义或功利主义的观点，他将善（Gute）/恶（Böse）的概念和福（Wohl）/祸（Übel）进行了比较，花了相当长的笔墨对这两组相近而本质上不同的概念进行了分析<a href="#fn4" class="footnote-ref" id="fnref4"><sup>4</sup></a>。最终，他指出若我们简单地将善恶与福祸相关联，那么就意味着我们永远只能通过「<strong>快意或不快意、快乐或痛苦</strong>」来区分善与恶，这种欲求或厌恶完全是基于主观的，因此是偶然的不确定的。与此相反，他认为「善恶真正来说是与行动、而不是与个人的感觉状态相关的」（82），因此是绝对的，符合某种法则。「凡是我们要称之为善的，必须在每个有理性的人的判断中都是一个欲求能力的对象，而厌恶则必须在每一个人眼里都是一个厌恶的对象」，我们所谓的善恶必须对于所有的理性人来说是一致的，因此，这种对于善恶的评判「所需要的除了感官之外，还有理性」（83）。</p><p>该法则从何而来？通过假设和比较，他指出这种「理性的原则本身已经被思考为意志的规定根据而无需考虑欲求能力的可能客体」，因此，「那条原则就是<strong>先天的实践法则</strong>，而<strong>纯粹理性自身就被看作是实践的了</strong>」（85），这也是康德在《实批》中多次强调的观点。总之，他认为道德法则是由人的主体的，由摆脱了一切感性因素的纯粹实践理性所确立的；而只有建立在这种纯粹实践理性的道德法则之上，善恶的概念才能是绝对的。</p><p>回过头来看，与之前先确定善恶而后在此之上建立道德法则的做法不同，康德认为意图保持善恶概念的绝对性，就必须将两者的关系倒置，即是道德律确立了善恶的概念，而这从根本上来说是自由意志的规定的结果。善恶的概念不能作道德的依据的出发点，而只是道德行为产生之后的一种<strong>价值评价</strong>。「道德律是永远不离开理性的、而是与之最密切地结合着的。」（127）而面对自由意志，或者说纯粹实践理性所确立的道德准则的追问，问为什么人有理性和自由，他的回答正如前所述，这是一种「理性事实」（事实上，这样的追问本身就是出于理性的），「纯粹理性不掺杂任何一种经验性的规定根据而自身单独也是实践的，这一点我们却必定可以<strong>从最日常的实践理性运用中做出阐明</strong>」（125）。</p><section class="footnotes"><hr /><ol><li id="fn1"><p>康德，《实践理性批判》，邓晓芒译，人民出版社，2003 年<a href="#fnref1" class="footnote-back">↩</a></p></li><li id="fn2"><p>罗伯特 · 所罗门，《大问题——简明哲学导论》，张卜天译<a href="#fnref2" class="footnote-back">↩</a></p></li><li id="fn3"><p>邓晓芒，《康德〈实践理性批判〉句读》，人民出版社<a href="#fnref3" class="footnote-back">↩</a></p></li><li id="fn4"><p>当然，康德并不反对追求幸福，「幸福原则与德性原则的区别并不因此就立刻是双方的对立」「而只是要求只要谈到义务，就应当对那种权利根本<strong>置之度外</strong>」（127）。<a href="#fnref4" class="footnote-back">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 康德 </tag>
            
            <tag> 实批 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>实批精读 期中论文：康德善良意志浅析</title>
      <link href="/posts/bb2177ae/"/>
      <url>/posts/bb2177ae/</url>
      
        <content type="html"><![CDATA[<p>善良意志是康德在《道德形而上学奠基》中提出的一个重要概念，其引出了后文对于理性目的的论述和义务的概念，本文试图通过对《奠基》一书第一部分的解读，对这一概念进行一定的阐释。</p><p>另外，需要指出的是，康德道德哲学是从通俗的对善的理解一步步深入的，从本书的结构就可以看出，他想从普通的道德理性知识中抽取出通俗的道德哲学，进一步建立道德的形而上学，最终通过对纯粹实践理性的批判探讨道德形而上学何以成为可能。虽然最终过渡到了对于纯粹理性的批判，但其出发点还是在于日常的道德理性知识，而善良意志的概念正是在这一部分中提出来的，以此来确立行为的道德准则，因此我们可以从一个比较直观的角度来理解这一概念。</p><p>康德在《奠基》一书第一章篇首就提出了「善良意志」的定义：「在世界之内，一般而言甚至在世界之外，除了一个善的意志之外，不可能设想任何东西能够被无限制地视为善的。」（4:393） <a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a> 注意到，这里给出的只是一个笼统的定义，为了明确这一概念，康德首先将一些普通意义上被视为善的东西排除在外，这包括：1. 知性、机智、判断力等属于精神的才能的东西；2. 勇气、果断、坚韧等属于气质的属性；3. 权利、财富、荣誉等幸福的赠予。那些个体自身的积极的才能或属性若被不正确地应用，则恰恰可能是极为有害的；而那些被动的偶然所受的（上天的）赠予则可能使人大胆和傲慢，从理性的角度来看，这样的人若享有幸福无疑是不合天理的。在这个意义上，康德指出：「善良意志构成了<strong>配享</strong>幸福的不可或缺的<strong>条件本</strong>身」（4:393）。他进一步举例，即使是节制、自制和冷静，这些作为人格内在价值的一部分受到古人（主要针对斯多葛学派）赞扬的品质，若没有善良意志的限制，如果一些恶人拥有这些品质而缺少善良意志，反而会成为极度危险和不道德的人。</p><p>对于善良意志的动机和结果的关系，康德澄清：「善的意志并不因它造成或者达成的东西而善，并不因它适宜于达到任何一个预定的目的而善，而是仅仅意欲而善，它就自身而言是善的」（4:394）。也即，一个行为的善良与否仅仅取决于该行为的动机是否出于善，至于该行为的结果，则与该行为本质上是否善良无关；它是绝对价值，高于其他任何的偏好，而其他因素都无法对善良意志的内在价值产生损益。他在这里用了一个形象的比喻进行论述：善良意志就像是宝石，本身就拥有其价值，独自闪耀其光芒，对于理性存在者而言，有用与否仅仅像是外面的镶嵌，对于其内在价值并无增减（当然，这是对于「行家」来说的，对于尚不是行家的人来说，有用与否还是具有吸引的作用 <a href="#fn2" class="footnote-ref" id="fnref2"><sup>2</sup></a> ）。若是仅仅关注那些外在的东西而忽略善良意志这一绝对的善，在康德看来无疑是「买椟还珠」式的荒谬行为。</p><p>然而，上述的作为绝对价值的纯粹的善良意志，其作为一种理念，可能会面临怀疑和误解：现实生活中这种绝对的善的意志难以被证实，那么如何能断言其存在呢？即「也许暗中有纯然好高骛远的幻想在作为基础」（4:395）。而误解在于，我们可能会对于自然为何要把理性赋予我们并令其统治我们的意志，其背后的意图产生误解。</p><p>在康德看来，理性有两方面的应用，即在认知层面的理论理性，和实践层面的实践理性。纯粹理性拥有「实践能力」，即把思维的结果付诸行为的能力，而决定如何去做的则是我们的「意志」，意志可能受到多种因素的影响，而理性则指导我们的意志去作出善的选择。</p><p>对此，康德进行了以下的一番论证：他认为有机体是一种「合乎生命目的而构造起来的存在者」（4:395），在这个存在者中任何一个目的对应于一个最相宜的器官，这是论证的前提。此外，假定该存在者的真正目的是幸福（保存、顺利等），那么就可以得出结论：理性不可能是这一目的的实现者。这是因为，相较于理性，本能更容易实现这一目的，是更相宜的，所以自然就不会「让理性进入实践的应用」；然而，事实则是，「理性仍然作为实践的能力，亦即作为一种应当影响意志的能力被分配给我们」；既然有这样的事实存在，那么「理性的真正使命必定是产生一个并非在其他意图中作为手段、<strong>而是就自身而言就是善的意志</strong>」（good in itself and not good as a means）；而且，由于自然在这方面的合目的性，这样的善必须是最高的善，是「其余一切善，甚至对幸福的一切要求的条件」（4:396）。</p><p>要理解的这里的论证思路，需要了解当时人们对于理性的看法。在《论科学与艺术》中，卢梭指出，科学和艺术的复兴导致了人德行的衰败，它们无助于敦风化俗，反而会带来浮夸、奢侈和败德。这是一篇应征的论文，而从其最终获得奖金的结果来看，这样的观点在当时是受到大众认可的。针对文艺复兴以来的风气，大众进行了反思，科技和文艺的兴起是否增加了人的幸福？在当时的背景下，答案是否定的：理性在很大程度上是不必要的限制，是在天性之外的超乎自然的欲望，也即卢梭所谓「人生而自由，却无往不在枷锁之中」。事实上，若是没有理性，我们完全按照本能行动，满足生物的基本需求，则可能是更加幸福的。这也就是康德到文中所提到的「厌理症」（4:395），即对于理性的憎恨。</p><p>在有机体的每个部分必合乎某种目的这样的基础上，康德论证了人的理性不是为了满足自然的生理性的需要，其目的是为了产生一种善良意志，这是一种最高的善，是其他一些善的条件；虽然它不是唯一的善，但它是最高的，只有它是无条件的。类似于孟子的鱼和熊掌、生与义的关系——虽然其他外在的东西对我来说是善的，但若没有善良意志，那么其他的善也就不成立了。所以，相较而言，如果两者出现了矛盾，若我们是遵循理性的，我们便会选择「舍生取义」，这是因为它的使命便在于「确立一种善的意志」，并且是以「一种独特方式」得以满足的：在理性的规定之下，即使这种目的可能与我们的偏好相违背，我们也应当去实行。</p><p>总而言之，善良意志是「一个就自身而言就应受尊崇、无须其他意图就是善的」，它「不需要被教导，只需要被启蒙」，并且「在评价我们的行为的全部价值时它永远居于首位」，「构成其他一切价值的条件」（4:397）。为了阐明这样一种概念，康德引入了「义务」。何谓义务？他指出这其中包含了一个善的意志的概念，并且带有「某些主观的限制和障碍」。可以看到，限制性是义务这一概念中的一个重要特点，简单来看，义务即我们应当做什么，这种应当是很高的要求，是某种道德律令之下对于我们的要求（道德法则作为施加在人自然欲望之上的限制，当道德法则应用在人身上时，就成为了所谓义务）。</p><p>我们的行为可能受到多种因素的影响，那么如何判断行为的善良与否呢？这就要看我们的行为是否出于义务：仅仅是表面合乎义务还不够，应当是出于义务的选择。普通人的意志在理性的约束之下，还有可能受到自然欲望的影响，也即这里讲的「偏好」。为了阐明这种理性产生的善良意志概念，必须将这种出于义务的行为与一般的出于其他动机的行为区分开来。「一个行为是道德的还是仅仅是明智的，仅凭普通的道德理性知识还不足以区分，而必须提升到哲学的道德理性知识，即从日常混杂的行为中把『出于义务』（而不仅仅是『合乎义务』）的成分区别出来」<a href="#fn3" class="footnote-ref" id="fnref3"><sup>3</sup></a>。如前所述，康德想从普通的道德理性知识中抽取出哲学的道德理性知识，进而建立起道德的形而上学的基础，这里便是在普通行为中提取出了出于义务的概念。</p><p>举四个例子：1. 商人诚实行商在价格上一视同仁；2. 保存自己的生命；3. 力所能及地行善；4. 保证自己的幸福。分别对应与对他人、对自己消极的义务，对他人、对自己积极的义务 <a href="#fn4" class="footnote-ref" id="fnref4"><sup>4</sup></a> 。康德在这里一再强调，仅仅是在表面上的「合乎义务」是不够的，更重要的是是否「出于义务」。人的意志受到多方面因素的影响，而同样的一个行为其背后的动机可能是多样的，坏人出于恶意可能做了好事，而好人出于善意反而可能造成不好的结果，因此一个行为的结果是好是坏、是否合乎义务不能成为道德标准，而要验证其是否出于义务。保存生命可能是出于自己的偏好，行善可能是出于人本能的同情以及行善行可能带来的幸福感，而保障自己的幸福也可能变为享乐主义式的，甚至因此而逾越了义务——只有当极度苦难中仍能保存自己的生命，当撇除了同情或偏好的影响后仍能行善，当不是为单纯享乐地去追求幸福的时候，这种行为才是合乎道德的，才具有真正的道德价值。</p><p>在本书的第一部分中，除了意志的出于义务的行为才具有道德价值这样一条从道德理性知识中抽取出来的通俗的道德哲学原理之外，康德进一步论述了另外两条原理：第二条是出自义务的行为的道德价值不在于其意图或实现与否，而在于「该行为被决定时所遵循的准则」，即「不考虑欲求能力的一切对象而发生所遵循的<strong>意欲的原则</strong>」；第三条是「义务就是出自<strong>对法则的敬重</strong>的一个行为的必然性」（4:400）。</p><p>总而言之，康德从普通的关于道德的评价中抽取出了「善良意志」这一概念，认为这才是绝对的、最高的、无条件的善，其他的一切看起来善的东西都是善良意志这颗宝石之外的点缀，它是其他的善的条件。他进一步通过对有机体的论述指出，其被赋予理性的真正目的正在于产生善良意志，纯粹理性因其自身具有实践能力，其目的必然是为了实现「义务」这一普遍的准则。通过对于几个例子的论述，康德将义务与偏好进行了区分，从而明确我们的行为是否道德，根本上取决于是否是出于义务而行动的。在这一过程当中，康德从普通的理性知识上升到了哲学的高度，进一步，基于义务的概念，明确了哲学的道德理性知识的三条原则。然而，若仅仅停留在这种通俗的道德哲学层面，仍然可能受到迷惑和败坏，「这甚至使普通的实践理性本身最终毕竟不能称之为善的」，因此，康德在之后将通俗的道德哲学上升到了道德形而上学。可见，善良意志的概念，在本书中起到了一个重要的基础性的作用。</p><section class="footnotes"><hr /><ol><li id="fn1"><p>李秋零，《道德形而上学的奠基》，2013<a href="#fnref1" class="footnote-back">↩</a></p></li><li id="fn2"><p>邓晓芒，《康德〈道德形而上学奠基〉句读》，2018<a href="#fnref2" class="footnote-back">↩</a></p></li><li id="fn3"><p>邓晓芒，康德道德哲学的三个层次——《道德形而上学基础》述评，2004<a href="#fnref3" class="footnote-back">↩</a></p></li><li id="fn4"><p>同上<a href="#fnref4" class="footnote-back">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 康德 </tag>
            
            <tag> 实批 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《实践理性批判》导读 课程笔记</title>
      <link href="/posts/7f09a98/"/>
      <url>/posts/7f09a98/</url>
      
        <content type="html"><![CDATA[<p>这是大三时候的「《实践理性批判》导读」课程的笔记，算是自己接触到正经的「哲学」的第一门课程，课程容量不算多，但老师讲课很棒也学到了很多关于哲学的思想和概念，在此整理补发。</p><span id="more"></span><h2 id="第一周">第一周</h2><p>课程介绍</p><p>伦理学分类：规范伦理学、元伦理学、应用伦理学</p><p>规范伦理学的三大形态：功利主义、义务论、德性（美德）伦理</p><p>德性：亚里士多德的中道、实践智慧、幸福</p><p>义务：强调与原则和规则的一致的行动，而不管结果；区别于德性论，德性伦理注重<strong>内在的动机而不是外部义务或责任</strong>，关注个人的性格特质。</p><p>康德道德哲学的特征</p><ul><li>终身道德哲学的「先验」部分</li><li>自主概念作为伦理学的核心</li><li>人类能动者既有其本体的一面，也有现象的一面</li><li>道德作为绝对命令向人类能动者展现自身，并且正是这个绝对命令，连同其他关于世界的事实和我们具化的行动能力 agency 而衍生了那些具体的道德义务</li><li>道德产生了「最高的善」这一概念</li></ul><h2 id="第二周">第二周</h2><p>概念辨析：</p><ul><li>先验：先于经验而使经验（知识）成为可能的</li><li>先天：独立于经验便可以知道的</li><li>超验：超出经验所能知晓范围的</li></ul><p>现象界 与 本体界</p><p>假言命令 与 定言命令（不论你的欲望如何，你都必须服从的命令。道德责任是从纯粹理性中衍生出来的。与你是否欲求无关。）</p><p>背景：介绍了休谟伦理学的特征</p><ul><li>自然主义、经验主义和实验的「道德科学」</li><li>道德判断本质上是情感的判决 deliverances of sentiment</li><li>讨论范围广泛的、多种类型的德性，性格特质是其道德评判的首要对象</li><li>赋予伦理中的理性以非常有限的角色</li><li>伦理独立于宗教</li></ul><h2 id="第三周">第三周</h2><p>进入康德，Kantian Doctrines</p><ul><li>只有一个道德律（法则），所有义务都是其特殊的应用而已</li><li>这个单一的道德律适用于所有的理性存在物</li><li>这一法则是普遍的、不变的，对于所有文化、时间和地点都一样。</li><li>道德律之所以有效，是因为它是我们自己赋予自己的</li><li>道德根植于人类理性，即使未受教育人群可能比道德哲学专家更知晓这一点</li><li>包括我们行动在内的一切似乎都是被决定的，但我们必须为了道德原因相信我们的行动至少是真正自娱的</li><li>自由是责任的必要预设</li><li>除了善良意志之外，没有什么是因其自身而善的。</li><li>真正的道德是自主或自治，自主就是自律。</li></ul><p>善良意志、道德价值与义务</p><h2 id="第四周">第四周</h2><blockquote><p>定言命令诸公式（续）；道德律、定言命令和定言命令程序</p></blockquote><p>道德法则公式，即绝对命令</p><ul><li><strong>普遍法则公式（自然律公式）</strong>：行动，仿佛你的行动准则通过你的欲求过意志 will 要变成自然的普遍规律（行为主体角度）</li><li><strong>人性公式（人是目的公式）</strong>：要以这样的方式来行动，永远不要简单地把人当做工具，不论是对你自己还是对于他人（将自己和他人看作是受行为影响的人的角度）</li><li><strong>目的王国公式</strong>：你要如此行动，仿佛你是目的王立国中通过自己的准则而制定规则（法律）的一个成员（作为制订普遍律令的行为主体角度）</li><li><strong>自主公式</strong>：每一个理性存在者的意志都是普遍立法的意志——展示了尊严 dignity 的来源和价值；展现了我们作为自由理性能动个体 free rational agents 的地位；因为我们自己才是那约束我们的道德法则背后的源泉</li></ul><p>康德认为，所有这些公式是相互等同的，即使有区别也只是主观的，而不是客观实践意义上的差别。主观的区别，指的是我们关于道德对于我们不同要求的概念化理解上的区别。</p><p>道德律、定言命令、定言命令程序</p><ul><li>道德律：一种理性理念，规定了一种应用于所有理性切合理的存在者的原则——强调普遍性和约束范围</li><li>定言命令：本质上具有各种需要的（有限）存在者，道德律作为限制而被体验——强调作为 restriction/constraints</li><li>CI 程序：不是产生正确判断的验算或运算法则；也不是揭穿谎言或虚伪声称的手段或规则</li></ul><p>两个例子：</p><ul><li>虚假承诺的例子(4:422):观念检验的矛盾</li><li>漠不关心的行为准则(4:423):意志检验的矛盾</li></ul><p>《道德形而上学奠基》的论证：总结</p><ul><li>大众的道德律基于其善良意志，以及基于此：<strong>行动的道德价值完全取决于尊重义务的程度</strong></li><li>唯一可能的无条件原则或义务法则是：只做这样的一些行动，经由这些行动可以同时将我视为赋予人类以普遍法则</li><li><strong>这个原则具有所谓的绝对命令的形式</strong>，实际上唯一可能的绝对命令就是这个法则：因此，道德法则在逻辑上等同于绝对命令。因此，不同的公式（变体）实际上是等同的</li><li>适合自主来意愿 willing 的唯一法律是绝对命令，而遵循绝对命令的存在者只会因此而自主；因此，自主在逻辑上等同于根据最高道德原则的意愿。</li></ul><h2 id="第六周">第六周</h2><blockquote><p>《实践理性批判》的目标；客观实在性</p></blockquote><p><img src="2021-11-02T000922.png" alt="2021-11-02T000922" /> <img src="2021-11-02T000936.png" alt="2021-11-02T000936" /></p><p>《实批》的目标</p><ul><li>为何这本书不叫《纯粹实践理性批判》？</li><li>康德只想表明存在纯粹的实践理性，即表明实践理性存在于人类的思想、情感和行为中</li><li>《实批》的目的在于表明纯粹理性可以是实践的，可以直接决定我们的意识</li><li>并不需要在（理论）理性批判的意义上对纯粹实践理性进行加批判</li><li>「批判」意指<em>对既是经验的实践理性作为一个整体构成的思考，以及对纯粹和经验的实践理性结合成为一个统一的实践理性体系的方式的思考</em></li><li>《实批》强调<strong>作为整体的理性实践能力</strong>，既不仅仅是实践理性，也不单纯是经验实践理性</li></ul><p>客观实在性</p><ul><li><strong>概念的客观实在性 objective reality</strong> ：就是说这个概念可运用于某物并在这种意义上是真实的。但仅仅表明这一概念的含义和论证其逻辑上的自洽并不充分。换句话说，康德<em>试图证明道德律的确适用于我们理性存在者，而不仅仅是一个形而上学意义上的概念</em></li></ul><h2 id="第七周">第七周</h2><blockquote><p>定言命令必须满足的条件</p></blockquote><h3 id="定言命令必须满足的条件罗尔斯">定言命令必须满足的条件（罗尔斯）</h3><p>注意，定言命令、道德律和定言命令程序（CI程序）的差别</p><ul><li>内容条件：形式+内容（具体的准则是否能成为普遍律令）</li><li>自由条件：自由=自主（积极自由）</li><li>理性事实条件：关于道德律作为行动指导的意识必须在我们日常的道德思想、情感和判断里</li><li>动机条件：当道德律被理解为至上权威时，必须能够成为我们行动之由以出发的动机</li></ul><h2 id="第八周">第八周</h2><blockquote><p>理性事实；莱布尼兹论自由；康德论自由</p></blockquote><h3 id="理性事实-fact-of-reason">理性事实 fact of reason</h3><ul><li>理性事实，就是我们将道德律当做至上权威的意识。</li></ul><blockquote><p>「“人们可以把这条基本在法则的意识称为理性的一个事实，这不是因为人们能够从理性的先行资料出发，例如从自由的意识出发（因为这个意识不是被预先给予我们 的）玄想出这一法则，而是因为它独立地作为先天综合命题把自己强加给我们，这个先天综合命题不是基于任何直观，既不是基于纯粹的直观也不是基于经验性的直观……它不是任何经验性的事实，而是纯粹理性的唯一 事实，纯粹理性借此宣布自己是源始地立法的”(5:31)」</p></blockquote><ul><li>这意味着，<strong>自由观念的客观现实性基于理性事实</strong>。</li></ul><h4 id="康德论自由">康德论自由</h4><ul><li>《纯粹理性批判》 B560-586；B828-832;</li><li>《实践理性批判》 5:93-103;</li><li>《道德形而上学原理》 4:447-448；</li><li>《道德形而上学》 6:213-214; 225-227；</li><li>《纯粹理性限度内的宗教》 §53；</li></ul><h4 id="实践自由的观念">实践自由的观念</h4><ul><li>至少，从实践的观点来看，纯粹理性的自由律对我们有效，这说明了我们的意志是自由的</li><li>所谓实践自由，指的是这样一个经验事实：我们能够并且经常根据纯粹实践原则进行慎思并行动，这就是在自由观念下的行动。</li></ul><h4 id="先验自由的观念">先验自由的观念</h4><blockquote><p>「“理性在对意志作规定时的原因性，而先验的自由却要求这个理性本身（就其开始一个现象序列的原因性而言） 独立于感官世界的一切起规定作用的原因，就此而言先验的自由看起来是和自然律、因而和一切可能的经验相违背的，所以仍然是一个问题。但是对于理性的实践运用来说这个问题是不该提出的……先验自由的问题涉及到思辨的知识，我们完全可以在讨论实践时把它作为毫 不相干的问题置之不顾……”（《纯粹理性批判》， A804/B832）」</p></blockquote><h2 id="第九周">第九周</h2><blockquote><p>绝对自发性；人的向善的禀赋；道德情感</p></blockquote><h3 id="绝对自发性-absolute-spontaneity">绝对自发性 absolute spontaneity</h3><blockquote><p>「“ 认为任意的行动作为事件、其规定性的根据存在于先前的时间之中的预定论，如何能够同认为行动与否在发生的瞬间都必然为主体所支配的自由共存，这倒是人们期望看到却从未看到的东西。要把自由的概念与作为一种必然的存在者的上帝的理念结合起来，这却是没有任何困难的。因为自由并不在于行动的偶然性（即它根本不为任何根据所规定），即并不在于非决定论（即便是对于上帝来说，为善或者为恶也必然同样是可能的，如果人们把他的行动称为自由的话），而是在于绝对的自发性。这种自发性只有在预定论那里才会遇到危险，因为对于预定论来说，行动的规定根据存在于过去的时间之中。”—— 《纯然理性界限内的宗教》6：50注」</p></blockquote><ul><li>预定论 pre-determinism：所有的过去（连同未来）都在宇宙之初就被决定了</li><li>决定论 determinism：所有事件都被前在的事件、条件以及自然法则所决定——预定论+自然律</li><li>兼容论 compatibilism：认为决定论与自由意志可以相容（只要人的自由意志也在所谓因果链中起作用）</li></ul><p>在康德看来，自由不是偶然性，即不是所谓决定论的缺失；关键在于避免预定论，而这是通过<strong>绝对自发性</strong>达到的。</p><p>理性的绝对自发性：在于其为自身设置目的的能力；设置目的并将这些目的组合为整体，用于指导一种能力的运用；即在理论领域的理解和实践领域的选择能力</p><h4 id="人的向善的禀赋-predispositions-to-good">人的向善的禀赋 Predispositions to Good</h4><p>三种禀赋和人的自由选择能力一起构成人的本性</p><ul><li><strong>动物性禀赋 The predisposition to animality</strong>：受本能、受后天获得的倾向和习惯误导的，「纯机械性的自爱」，无需使用理性【自我保存的倾向】</li><li><strong>人性的禀赋 The predisposition to humanity</strong>：作为理性的存在 （注意这还不是道德意义上的），也属于自爱的本能，但却整合了我们关于他人幸福与自身幸福关联的对比和判断【对比性，融入了regional的计算，如想要超越他人】</li><li><strong>人格性的禀赋 the predisposition to personality</strong>：不仅作为理性存在，还作为负责任的理性存在【在康德看来，这才是和道德最相关的禀赋】——能够理解并运用道德律（经由CI程序将道德律作为存粹实践理性的一个观念来应用）；能够敬重道德律并且将其作为自由的选择能力的充分的动机——充分，一经满足即成立；充分性和必要性</li></ul><p>注意，人性的禀赋，对应的是 rational 的能力；此种动机仍起源于对于对象的欲望，而排除了道德情感；当道德律被呈递给那些对其漠然的人时，道德律的观念不会在这些人心中产生；从所谓 rational 转变为 reasonable 是没有逻辑路径的；人具有被纯粹理性之实践触动的「敏感性」susceptibility，即<strong>道德情感</strong>。</p><h4 id="道德情感">道德情感</h4><p>道德情感的作用：</p><ul><li>本身不足以规定我们的选择能力</li><li>使得我们将道德律作为最高的调节力量；将道德律作为充分的道德动机</li><li>一旦缺失道德情感，道德律只能作为认知对象</li></ul><p>作为认知对象的道德律只能通过前两种禀赋来引发我们的兴趣</p><p>道德情感，一旦具有，是不可腐蚀的</p><h2 id="第十周">第十周</h2><blockquote><p>自由的选择能力；人格性禀赋的特征；道德动机</p></blockquote><h3 id="自由的选择能力-the-free-power-of-choice">自由的选择能力 The Free Power of Choice</h3><p>自由的选择能力（任性的自由）：按照道德律行动的能力（即便未能实施也存在的能力）</p><blockquote><p>「“任性的自由具有一种极其独特的属性，它能够不为任何导致一种行动的动机所规定，除非人把这种动机采纳入自己的准则（使它成为自己愿意遵循的普遍规则）；只有这样，一种动机，不管它是什么样的动机，才能与<strong>任性的绝对自发性（即自由）</strong>共存。 但是，道德法则【义务】在理性的判断中自身就是动机，而且谁使它成为自己的准则，他在道德上就是善的。”（《纯然理性限度内的宗教》，6: 24）」</p></blockquote><p>消极自由和积极自由的（最简单）表述：不去做什么的自由和想做什么的自由</p><ul><li><p>消极自由：我们的意志不必然按照任何感性规定根据行动（即可以根据某个规定根据去行动但不必然如此）【如简单表述不同，前者可能书出于自我保护的自由；后者是道德意义上，不受感性规定的自由】</p></li><li><p>积极自由：「纯粹理性成为自在地实践的能力」（6:213）【纯粹理性是实践的，能够真正通过道德律在你身上起作用，指引你去实践】</p></li></ul><p>这意味着，一旦拥有遵循道德律的能力（哪怕不那么做），那么在实践层面上就是自由的，就需要为道德行为负责任【道德责任的判定】</p><p>三个禀赋是既定的，但排序是我们自己选择的【自由选择能力】，无论禀赋的影响如何，除非我们自由的选择能力将其纳入行为准则，否则它们无以决定我们的意志</p><h4 id="人格性禀赋的特征">人格性禀赋的特征</h4><ul><li>无条件地善，不会被腐蚀，自由选择能力也不能以恶为善</li><li>在进行动机排序的时候，人格性禀赋是唯一适合作为无条件优先的（注意排序不是在道德律和其他律之间，而是在禀赋之间）</li><li>由于我们具有将道德律纳入准则并由以行动的能力，道德律是唯一一个完全展示我们自由与自主的原则。这意味着，将人格性禀赋置 于无条件优先地位的这种禀赋排序方式，是唯一适合我们作为具有 自由选择能力的人的排序方式</li><li>此种禀赋排序提供了一种建立在此基础上的理想人格观念，从而可以作为相应的认同依据</li></ul><h2 id="第十一周">第十一周</h2><blockquote><p>道德上的「对」和「好」；关于道德上善/好的消极命题</p></blockquote><h3 id="道德上的对和好">道德上的「对」和「好」</h3><ul><li>什么使得行为在道德上是好的/善的？(what makes act morally good)</li><li>什么使得行为在道德上是对的/正确的？(what makes act morally right)</li></ul><h3 id="关于道德上善好的消极命题">关于道德上善/好的消极命题</h3><p>消极命题: <strong>没有一个出自倾向动机的行为具有道德价值 (no action done from inclination can have moral worth)</strong></p><ul><li><p>反对意见: 过头了, 反常识</p></li><li><p>Actions done with inclination Vs. actions done from inclination</p></li><li><p>并不是所有倾向性质的动机都没有价值(worth)</p></li><li><p>只不过，倾向缺少一种独特的价值，即道德价值(moral worth)——导向另一个问题：<strong>道德价值的核心是？</strong></p></li><li>有条件的善不一定要依赖于无条件的善</li><li>无条件的善重点在于「语境独立」（无依赖于任何情景，即所谓「因其自身」）</li><li>康德并未认为所有出自倾向的动机没有价值，他们只是没有「道德价值」</li><li><p>那么问题是，究竟道德价值的核心是什么？换句话说，什么赋予义务动机所谓道德价值？</p></li></ul><h2 id="第十二周">第十二周</h2><blockquote><p>关于道德上善/好的积极命题；动机与道德价值；道德价值与（行为）正确性的非偶然性关联；从义务动机出发行事：另一种解释；心理自由与道德责任；心里自有、比较的自由、先验自由</p></blockquote><p>积极命题： <strong>只有出自义务的行为才有道德价值(only actions done from duty have moral worth)</strong></p><h2 id="第十三周">第十三周</h2><blockquote><p>先验辨证论；至善；实践理性的二律背反</p></blockquote><p>-现象界 Vs. 本体界</p><p>-自然的世界 Vs. 自由的世界</p><p>-作为自然必然性的因果性(causality as natural necessity) Vs. 作为自由的因果性 (causality as freedom)</p><h3 id="实践理性的二律背反-antinomies-of-practical-reason">实践理性的二律背反 Antinomies of Practical Reason</h3><ul><li><p>在至善中，德性与幸福如何必然结合？</p></li><li><p>不能是分析的，只能是综合的，即被“当做原因与结果的联结来设想：因为它涉及一种实践的善，亦即通过行动而可能的东西”（114）</p></li><li><p>正题：<strong>对幸福的欲求必须是对于道德性的必要且充分的根据或 动机</strong></p></li><li><p>反题：<strong>德性的准则必须是幸福的必要且充分的条件</strong></p></li><li><p>由于正题和反题都不可能（为什么？），所以“至善按照实践规则是不可能的，那么，要求促进至善的道德法则也必定是幻想的，是置于空的想象出来的目的之上的，因而自身就是错误 的”(114)</p></li></ul><h2 id="第十四周">第十四周</h2><blockquote><p>Beck 关于实践理性二律背反的重新表述；纯粹/思辨理性中的二律背反?的二律背反</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 康德 </tag>
            
            <tag> 实批 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SC-复习提纲</title>
      <link href="/posts/331fe944/"/>
      <url>/posts/331fe944/</url>
      
        <content type="html"><![CDATA[<h2 id="methods-for-generating-random-variables">1 Methods for Generating Random Variables</h2><ul><li>The Inverse Transform Method</li><li>The Acceptance-Rejection Method<ul><li>根据一个参考的分布生成；</li><li>注意接受的概率徐取决于概率分布的比值 c，因此选取的参考分布的好坏决定了算法的效率</li></ul></li><li>Transformation Methods</li><li>Sums and Mixtures：随机变量的和或者混合是一种特殊类型的变换</li><li>理解：sum 是直接把多个随机变量加起来；而 mixture 则是把分布函数「加起来」；具体的实现的话，就是按照不同 组分（参数不同的随机变量）的权重，从各自的分布中去抽样，组合起来即可。<ul><li>一个例子：A Poisson–Gamma Mixture Is Negative-Binomially Distributed，参见 <a href="https://gregorygundersen.com/blog/2019/09/16/poisson-gamma-nb/" class="uri">https://gregorygundersen.com/blog/2019/09/16/poisson-gamma-nb/</a></li></ul></li></ul><h2 id="methods-for-generating-random-vectors">2 Methods for Generating Random Vectors</h2><ul><li><p>Multivariate Normal Distribution</p><ul><li><p>思想是利用 MND 的性质，通过一元标准正态分布变换得到</p><p><span class="math display">\[  X=ZQ+J\mu&#39;\]</span></p></li></ul></li><li><p>所以关键是如何得到矩阵 Z 满足 <span class="math inline">\(Q&#39;Q=\Sigma\)</span> ，可以通过 <strong>谱分解、奇异值分解、Choleski 分解</strong> 得到</p><ul><li>比较了不同采样方式的效率问题，主要的计算量在协方差矩阵的分解上。</li></ul></li><li><p>Mixtures of Multivariate Normals</p></li><li><p>Wishart Distribution</p><ul><li><p>一个好复杂的分布 <span class="math display">\[  M=X&#39;X  \]</span> 其中 <span class="math inline">\(X\)</span> 是从 <span class="math inline">\(N_d(0,\Sigma)\)</span> 中抽取的 <span class="math inline">\(n\times d\)</span> 随机矩阵，则称 <span class="math inline">\(M\sim W_d(\Sigma, n)\)</span></p></li><li><p>直接通过正态分布需要生成 <span class="math inline">\(nd\)</span> 个随机数，来决定 <span class="math inline">\(d(d+1)/2\)</span> 个元素值；更为高效的方法是基于 Bartlett 分解，只需要生成 <span class="math inline">\(d(d+1)/2\)</span> 个随机数（从标准正态和卡方分布中采样）；和生成 MND 一样最后需要做一些变换。</p></li></ul></li><li><p>Uniform Distribution on the <span class="math inline">\(d\)</span>−Sphere</p><ul><li>即生成在 d 维球面上的均匀分布；思想是生成一个随机向量，做归一化处理；而所谓「随机方向」的向量，可以从 d 维的标准正态分布中得到（直接生成 d 个一维标准正态即可）。</li></ul></li></ul><h2 id="monte-carlo-integration">3 Monte Carlo Integration</h2><ul><li><p>Simple Monte Carlo estimator</p><ul><li><p>针对的是 <span class="math display">\[  \theta=\int_a^bg(x)dx  \]</span> 这类积分问题，将其看作是 <span class="math inline">\((b-a)E_{X\sim U[a,b](g(X))}\)</span> 的期望形式，于是根据 LLN 进行采样计算</p></li><li><p>由于这里引入了一个 <span class="math inline">\([a,b]\)</span> 上的均匀分布，因此需要加上其分布函数，也就是要注意在最后的结果中乘以这个系数，即 <span class="math display">\[  \hat\theta=(b-a)\overline{g_m(X)}=(b-a){1\over m}\sum g(X_i)\tag{3.1}  \]</span> 其中的 <span class="math inline">\(X_i\)</span> 根据 <span class="math inline">\([a,b]\)</span> 上的均匀分布得到</p></li></ul></li><li><p>Variance and Efficiency</p><ul><li><p>针对标准正态的 CDF <span class="math display">\[  \Phi(x)=\int_{-\infty}^x{1\over\sqrt{2\pi}}e^{-{t^2\over 2}}dx  \]</span> 的 MC 估计问题，给出了两种方法：</p><ol type="1"><li><p>一种是利用之前的 SMC 去估计 <span class="math inline">\(\Phi(x)-\Phi(0)\)</span> （区间有界）；</p></li><li><p>（Hit-or-miss Monte Carlo）另一种是利用 <span class="math display">\[\Phi(x)=P(Z\le x)=EI(Z\le x)\]</span> 将此概率转化为示性函数的期望估计问题，也可以用 MC 方法求解</p></li></ol></li><li><p>两种方法均为无偏估计，那么就需要比较那一个的方差比较小（哪一个更有效率，仅需要较少的采样即可使得方差较小）</p><p>事实上，上述两种方法的方差分别为 <span class="math display">\[  {(b-a)^2\over m}Var(g(X))\\  {F(x)(1-F(x))\over m}  \]</span></p></li></ul></li></ul><blockquote><p>Variance Reduction</p><p>下面介绍了集中方差缩减的方法</p></blockquote><ul><li><p>Antithetic Variables</p><ul><li><p>对偶变量法</p></li><li><p>想法是利用两个随机变量之和的方差：若这两个随机变量是负相关的，则他们之和的方差要小于各自的方差之和（从而达到方差缩减的效果）</p></li><li><p>利用到 MC 积分上来。我们可以把 <span class="math inline">\([a,b]\)</span> 上的随机分布通过变量替换全部转换到 <span class="math inline">\([0,1]\)</span> 上的均匀分布；注意到 <span class="math inline">\(U\)</span> 和 <span class="math inline">\(1-U\)</span> 同分布，如果我们把全部的采样数 m 中的一半生成标准均匀分布，另一半用 <span class="math inline">\(1-u_j\)</span> ，如果我们能过说明最终生成的样本对 <span class="math inline">\(g(U_i), g(1-U_i)\)</span> 之间是负相关的，那么就可以达到 VR 的效果</p></li><li><p>事实上我们有更一般的结论：定理，设 <span class="math inline">\(X=(X_1, ...,X_n)\)</span> 各分量相互独立，<span class="math inline">\(f,h\)</span> 是同方向的单调函数，则 <span class="math display">\[E[f(X)h(X)]\ge E[f(X)]E(h(X))\]</span> 即 <span class="math inline">\(f(X),h(X)\)</span> 正相关。</p><p>应用到这里，我们取 <span class="math inline">\(f(X)=g(U_i), h(X)=-g(1-U_i)\)</span> （第 i 个样本仅用所生成的第 i 个标准均匀分布），则 <span class="math inline">\(g(U_i), g(1-U_i)\)</span> 负相关。</p></li></ul></li></ul><h2 id="control-variates">5 Control Variates</h2><ul><li><p>这里的方法是引入控制变量，假设要估计的量为 <span class="math inline">\(\theta=E[g(X)]\)</span>，而另一个函数满足 <span class="math inline">\(E[f(X)]=\mu\)</span>，则 <span class="math display">\[  \hat \theta_c=g(X)+c(f(X)-\mu)  \]</span> 仍为无偏估计，其方差为 <span class="math display">\[  Var(\hat\theta_c)=Var(g(X))+c^2Var(f(X))+2cCov(g(X),f(X))  \]</span> 上式最小是在 <span class="math display">\[  c^*=-{Cov(g(X),g(X))\over Var(f(X))}  \]</span> 处取得，最小值为 <span class="math display">\[  Var(\hat\theta_{c^*})=Var(g(X))-{[Cov(g(X),f(X))]^2\over Var(f(X))}  \]</span> 显然，方差缩减为 <span class="math display">\[  {Var(\hat\theta)-Var(\hat\theta_{c^*})\over Var(\hat\theta)}=[Corr(g(X),f(X))]^2  \]</span></p></li><li><p>可知，当 <span class="math inline">\(f,g\)</span> 强相关时，方差缩减是有效的，否则不会导致方差减少。</p></li><li><p>Antithetic variate as control variate</p><ul><li><p>对偶变量的方法可以看成是控制变量方差的特例</p></li><li><p>一般地，若 <span class="math inline">\(\hat\theta_1, \hat\theta_2\)</span> 为两个无偏估计，则 <span class="math display">\[  \hat\theta_c=c\hat\theta_1+(1-c)\hat\theta_2  \]</span> 也是无偏估计，若 <span class="math inline">\(\hat\theta_1,\hat\theta_2\)</span> 同分布，计算可得最优值为 <span class="math inline">\(c^*={1\over2}\)</span> ，即 <span class="math display">\[  \hat\theta_{c^*}={\hat\theta_1+\hat\theta_2\over2}  \]</span></p></li><li><p>显然这也是（这种特定选择下）对偶变量方法下的估计量</p></li></ul></li><li><p>Several control variates</p><ul><li>可以将控制变量的方法扩展到采用多个控制变量的场合</li><li>此时，控制变量方法下的估计量 <span class="math inline">\(\hat\theta_{\hat c}\)</span> 以及最优的 <span class="math inline">\(c_i\)</span> 可以通过回归模型来估计</li></ul></li><li><p>Importance Sampling</p><ul><li><p>这部分讲义上有点乱，参考 <a href="https://statweb.stanford.edu/~owen/mc/Ch-var-is.pdf" class="uri">https://statweb.stanford.edu/~owen/mc/Ch-var-is.pdf</a>；主要的问题，或许是，<strong>之前的 SMC 仅能解决 <span class="math inline">\(\int g(x)dx\)</span> 这样的积分问题，而下面的 IS 虽然是由这一问题引入的，但是其能解决更为普遍的 <span class="math inline">\(E[g(X)]=\int f(x)g(x)dx\)</span> 的形式</strong>，因此出现了混乱。</p><blockquote><p>在前面内容中,我们将有限区间上的积分视为是此区间上的均匀分布随机变量的某个函数的期望值. 这种方法的缺点是不能直接用于无穷积分的估计, 以及当被积函数在积分区间上不是很均匀的时候 效率很低. 那么很自然地可以考虑均匀分布以外的其他加权函数. 这就导致“重要性抽样方法”.</p></blockquote></li><li><p>假设有一个分布 <span class="math inline">\(f(x)\)</span> ，其在 <span class="math inline">\(g(x)&gt;0\)</span> 的区间上值也 <span class="math inline">\(&gt;0\)</span> （其他地方密度函数为 0），我们记 <span class="math inline">\(Y=g(X)/f(X)\)</span> ，则简单的积分可化为 <span class="math display">\[\int g(x)dx=\int{g(x)\over f(x)}dx=EY\]</span> 的期望形式，于是可以通过 SMC 方法来估计 <span class="math inline">\(EY\)</span> <span class="math display">\[{1\over m}\sum Y_i={1\over m}\sum {g(X_i)\over f(X_i)}\]</span> 其中 <span class="math inline">\(X_i\)</span> 为从 <span class="math inline">\(f\)</span> 中抽取的样本，将 <span class="math inline">\(f\)</span> 称为 <strong>重要函数</strong>。</p><p>显然估计的方差取决于 <span class="math display">\[Y={g(X)\over f(X)}\tag{6.1}\]</span> 的方差，<strong>也就是说，我们所选取的重要函数 <span class="math inline">\(f\)</span> 约接近被积函数 <span class="math inline">\(g\)</span> ，估计的方差越小</strong>。</p></li><li><p>更为一般的，我们的目标是求 <span class="math display">\[\theta=E[g(X)]= \int_Ag(x)p(x)dx\]</span> 的形式，注意在上面我们是求一个积分，而这里是求随机变量 <span class="math inline">\(X\)</span> 的函数的期望（当然也是积分，不过积分的形式改变了）；不同于之前的 <span class="math inline">\(f\)</span> 是我们选定的「重要函数」，这里的 <span class="math inline">\(p(x)\)</span> 是随机变量 <span class="math inline">\(X\)</span> 的 pdf【教案中仍然用 f 表示 X 的分布，这里采用上面链接中的符号记其分布为 p】</p></li><li><p><span class="math inline">\(p(x)\)</span> 不好 sampling，引入 <strong>重要性抽样函数/包络函数 envelope</strong> <span class="math inline">\(q(x)\)</span>，则 <span class="math display">\[\theta=\int_Ag(x){p(x)\over q(x)}q(x)dx\]</span> 于是我们可以借由 <span class="math inline">\(q(x)\)</span> 来采样，<span class="math inline">\(\theta\)</span> 的估计量为 <span class="math display">\[\hat\theta={1\over n}\sum g(X_i){p(X_i)\over q(X_i)}\]</span></p><p>和（6.1）式类似，我们记 <span class="math inline">\(Y=g(X){p(X)\over q(X)}\)</span> ；类似的，当我们所选取的重要性抽样函数 <span class="math inline">\(q(x)\)</span> 越接近 <span class="math inline">\(g(x)p(x)\)</span> ，估计的方差就越小。</p><blockquote><p>可以证明 <span class="math inline">\(E[Y]=\theta\)</span> ，则其方差为</p><p><span class="math display">\[Var(Y)=E[Y^2]-E[Y]^2=\int {(g(x)p(x))^2\over q(x)}dx-\theta^2\]</span></p></blockquote></li></ul></li></ul><h2 id="stratified-sampling-and-stratified-importance-sampling">7 Stratified Sampling and Stratified Importance Sampling</h2><ul><li><p>Stratified Sampling</p><ul><li><p>相较于之前的 SMC 积分中，通过变量替换转换为在 <span class="math inline">\([0,1]\)</span> 上积分，之后通过采样标准均匀分布的方法，我们可以利用积分的线性性，将整个积分转化为多个小区间上的积分之和，也即，将积分区间 <span class="math inline">\([0,1]\)</span> 分成若干个自区间，分别在子区间上采样并估计，最终的估计为 <span class="math display">\[  \hat\theta^S={1\over k}\sum_{i=1}^k\hat\theta_i  \]</span> 这里前面的系数又是一个符号问题：按照积分的线性性本来是简单的求和，事实上这里的 <span class="math inline">\({1\over k}\)</span> 正是（3.1）式中的系数 <span class="math inline">\(b-a\)</span></p></li><li><p>可以证明，基于分层抽样法得到的估计的方差要小于 SMC</p></li></ul></li><li><p>Stratified Importance Sampling</p><ul><li>分层抽样的思想也可以结合到重要性采样的方法中</li></ul></li></ul><h2 id="monte-carlo-methods-for-estimation">8 Monte Carlo Methods for Estimation</h2><blockquote><p>这一部分介绍了使用 MC 方法对于一个统计量的 标准差（标准误差）、MSE，以及 CI 的估计；也即，MC 方法在统计检验中的作用。</p></blockquote><ul><li><p>Monte Carlo Methods for Estimation</p><ul><li><p>Monte Carlo Estimation and <strong>Standard Error</strong></p><ul><li><p>我们采用「plug-in」方法。</p></li><li><p>例如，对于均值的估计 <span class="math inline">\(\bar X\)</span>，我们要估计其标准差 <span class="math display">\[  se(\theta)=\sqrt{Var(X)/m}\\  \]</span> 而对于方差的「plug-in」估计为 <span class="math display">\[  \hat\sigma^2=\hat Var(X)={1\over m}\sum(x_i-\bar x)^2  \]</span> 于是标准差的估计量为 <span class="math display">\[  \hat{se}(\bar X)={1\over m}\sqrt{\sum(x_i-\bar x)^2}\tag{8.1}  \]</span></p></li><li><p>当然，也可以采用无偏估计量，即将前面的系数改为 <span class="math inline">\({1\over\sqrt{m(m-1)}}\)</span></p></li></ul></li><li><p>Estimation of <strong>MSE</strong></p><blockquote><p>事实上这里很迷惑，想了半天感觉和前面的 SE 的估计是完全不一样的东西，不知道为什么放在了一起讲。</p></blockquote><ul><li><p>在上面估计统计量的 SE 的过程我们在普通的统计课程中就有讲到，我们可以直接通过「plug-in」的思想，利用所观测到的数据计算得到；相较而言，MSE 的估计（或者 bias）则更为困难，下面介绍了对于 MSE 的 MC 估计方法，注意到这里需要反复抽取 n 组大小为 m 的样本（而上面我们则直接用了一次取样的 m 个样本）。</p></li><li><p>这里原因在于，在 <span class="math inline">\(SE(\hat\theta)\)</span> 的估计中，我们将其转化到了对于 <span class="math inline">\(Var(X)\)</span> 的估计，而 <span class="math inline">\(MSE(\hat\theta)\)</span> 中，<strong>我们无法化简掉未知的参数 <span class="math inline">\(\theta\)</span> ，因此在这里 <span class="math inline">\(\theta\)</span> 是已知的</strong>。这是和上面的对于 SE 的估计完全不同的地方，事实上若我们不知道参数的真实值我们是完全无法进行估计的。因此，为了估计这一期望，我们从原始分布中取了多组观测（因此事实上我们模拟的是 <span class="math inline">\(\hat\theta\)</span> 的分布），然后计算这一期望值。</p></li><li><p>具体来说，均方误差为 <span class="math display">\[  MSE(\hat\theta)=E[(\hat\theta-\theta)^2]  \]</span> 我们从 <strong>总体</strong> （注意 <span class="math inline">\(\theta\)</span> 已知）中抽取 n 组大小为 m 的样本，分别用这些样本计算估计量 <span class="math inline">\(\hat\theta^{(j)}\)</span> ，于是 <span class="math inline">\(\hat\theta\)</span> 的 MSE 的 MC 估计为 <span class="math display">\[  \hat{MSE(\hat\theta)}={1\over m}\sum(\hat\theta^{(j)}-\theta)^2\tag{8.2}  \]</span></p></li><li><p>这样子看下来好像 MSE 的估计没什么意义？下面给出了一个 <strong>例子</strong>：当样本存在异常值的时候，我们会采用截尾分布（即删去数据中最大和最小的那些数据点）；通过模拟实验，我们发现</p><blockquote><p>均值的稳健估计(截尾均值估计)在总体分布被污染时能降低 MSE</p></blockquote></li></ul></li></ul></li><li><p>Estimating a confidence level</p><ul><li><p>在应用统计中经常遇到的一个问题是估计总体的分布. 比如, 许多常用的统计推断 方法和工具都是基于正态性假设下的. 而在实际中, 总体分布非正态是经常的, 估计 量的分布可能不知道或者没有显示表示, 此时, Monte Carlo 方法则可以用来进行 统计推断.</p></li><li><p>这里其实和前面的 MSE 一样，<strong>我们都是已知样本点的分布的</strong>，这里做的意义，不是为了进行统计检验，而是通过这些实验，来判断一个统计检验的好坏（？）</p></li><li><p><strong>例子</strong>：我们假定数据分布为正态的情况下，对于其方差可以借由样本方差的分布得到检验统计量，最终得到一个区间估计；然而，若假设不满足，那么这样做的结果可能就会造成很大的误差；通过 MC 方法，我们可以度量这一可能的误差。对于一个分布 <span class="math inline">\(X\sim F_X\)</span> （不满足正态分布），我们进行 m 次大小为 n 的采样，对于这 m 组样本仍然采用正态假设下的 CI 计算公式，统计总体的真实方差落在计算到的 CI 中的概率，即得到 <strong>经验置信水平</strong>。</p><blockquote><p>前面的例子中考虑的问题都是在总体分布已知的情形下, 对参数进行Monte Carlo估计. 因此这种 情况下的Monte Carlo方法也称为是参数<strong>Bootstrop</strong> 方法. 有关于<strong>Bootstrap</strong> 方法我们将在后面学习.</p></blockquote></li></ul></li></ul><h2 id="monte-carlo-methods-for-hypothesis-testing">9 Monte Carlo Methods for Hypothesis Testing</h2><ul><li><p>Empirical Type I error rate</p><ul><li><p>和之前计算 CI 的 经验置信水平 的方法一样，我们同样可以估计一个 HT 的 <strong>经验一类错误率</strong></p></li><li><p>给了一个 <strong>例子</strong> 说明这种估计的意义：<strong>正态分布的偏度检验</strong> （Wald 检验）。利用 CLT 可知偏度系数的估计量 <span class="math inline">\(b_1\)</span> 的渐进分布 <span class="math display">\[  \sqrt{n}(b_1-\beta_1)\to N(0,6)  \]</span> 于是可以基于此构建偏度系数是否为 0 的 HT；</p><p>然而，当 n 比较小的时候，这种近似可能存在问题，我们计算了不同 n 下的 经验一类错误率，发现 n 较小时经验一类错误率达不到预期的显著性水平如 <span class="math inline">\(\alpha=0.05\)</span></p><blockquote><p>事实上，可以求出 <span class="math display">\[Var(b_1)={6(n-2)\over(n+1)(n+3)}\]</span> 将这样的正态近似可能取得更好的 经验一类错误率。</p></blockquote></li></ul></li><li><p>Power of a Test</p><ul><li>回忆检验的 <strong>功效</strong> 的定义：当 <span class="math inline">\(\theta\in\Theta_1\)</span> ，即备择假设成立的情况下，拒绝原假设的概率；</li><li>和前面估计一类错误率不同之处在于，这里的备择假设是一个区间而非单个点；因此，事实上我们可以画出 <strong>经验功效函数曲线</strong></li><li>具体来说，对于一个特定的 <span class="math inline">\(\theta_1\in\Theta_1\)</span> ，利用 MC 方法估计在这种情况下的检验的功效，把点连起来构成 经验功效函数曲线。</li></ul></li><li><p>Power Comparisons</p><ul><li>终于有一个比较好理解的应用了：<strong>基于 MC 方法估计得到的经验功效函数曲线，我们可以比较不同检验方法的优劣</strong>。</li><li>例如，在书中给出了三种不同的 <strong>正态性检验</strong> （Shapiro-Wilk检验, Energy检验 和偏度检验）的功效曲线，从而给出哪种检验可以保证较高的 power 的经验估计。</li></ul></li></ul><h2 id="the-bootstrap">10 The Bootstrap</h2><ul><li><p>Efron 在1979,1981和1982年的工作中引入和进一步发展了Bootstarp方法, 此后发表了大量的关于 此方法的研究.</p><p>Bootstrap方法是一类非参数Monte Carlo方法, 其通过再抽样对总体分布进行估计. 再抽样方法将 观测到的样本视为一个有限总体, 从中进行随机(再)抽样来估计总体的特征以及对抽样总体作出统计推断. 当目标总体分布没有指定时, Bootstrap方法经常被使用, 此时, 样本是唯一已有的信息.</p><p>Bootstrap 一词可以指非参数Bootstrap, 也可以指参数Bootstrap(上一讲中). 参数Bootstrap是指总体分布 完全已知, 利用Monte Carlo方法从此总体中抽样进行统计推断; 而非参数Bootstrap是指总体分布完全未知, 利用再抽样 方法从样本中(再)抽样进行统计推断.</p><p>可以视样本所表示的有限总体的分布为一个“伪”总体, 其具有和真实总体类似的特征. 通过从此“伪”总体中 重复(再)抽样, 可以据此估计统计量的抽样分布. 统计量的一些性质, 如偏差, 标准差等也可以通过再抽样来估计.</p></li><li><p>Bootstrap Estimation of Standard Error</p></li><li><p>Bootstrap Estimation of Bias</p><blockquote><p>这一部分在之前的文章 <a href="https://www.cnblogs.com/easonshi/p/12122470.html" class="uri">https://www.cnblogs.com/easonshi/p/12122470.html</a> 中写得比较详细了，参看。这里的关键，在于理解 <span class="math inline">\(\theta=t(F)\)</span>，以及 「plug-in」 方法的操作/推导过程。</p></blockquote></li></ul><h2 id="bootstrap-confidence-intervals">11 Bootstrap Confidence Intervals</h2><ul><li>The Standard Normal Bootstrap Confidence Interval</li><li>The Percentile Bootstrap Confidence Interval</li><li>The Basic Bootstrap Confidence Interval</li><li>The Bootstrap t interval</li></ul><h2 id="the-jackknife">12 The Jackknife</h2><ul><li><p>偏差的 Jackknife 估计</p></li><li><p>标准差的 Jackknife 估计</p><blockquote><p>同样在上面的那篇笔记中有总结了</p></blockquote></li><li><p>另外，需要指出的是，Jackknife 方法仅在估计量是「平滑」的时候才有效（数据的小幅变化对应于估计量的小幅变化）</p><p>例如，中位数就不是平滑的，给了一个例子：用 Jackknife 方法估计从 <span class="math inline">\(1,2,...,100\)</span> 中随机抽取的10个数的 <strong>中位数</strong> 的标准差，这个例子中 Jackknife 和 Bootstrap 估计相差很远，就是因为这一问题。</p></li></ul><h2 id="introduction-to-markov-chain-monte-carlo-methods">13 Introduction to Markov Chain Monte Carlo Methods</h2><ul><li><p>Integration problems in Bayesian inference</p><ul><li><p>介绍了一个重要的应用背景：在 Bayesian 推断中，不同于我们之前讨论的 MC 积分的问题 <span class="math inline">\(E[g(X)]\)</span> ，我们需要做的积分是后验分布 <span class="math display">\[  E[g(\theta|x)]=\int g(\theta)f_{\theta|x}(\theta|x)d\theta={\int g(\theta)f_{x|\theta}(x|\theta)\pi(\theta)d\theta\over \int f_{x|\theta}(x|\theta)\pi(\theta)d\theta}  \]</span></p></li><li><p>可以写成更为普遍/简单的形式 <span class="math display">\[  E[g(Y)]={\int g(t)p(t)dt\over \int p(t)dt}\tag{13.1}  \]</span> 其中的 <span class="math inline">\(p(t)\)</span> 为一个密度或者似然（积分不需要=1）；显然在贝叶斯统计中 <span class="math inline">\(p(t)\)</span> 即为后验分布（可以忽略常数项）</p></li><li><p>这里的好处是，后验分布我们不需要求出前面的归一化系数，只需要知道含有参数的主要部分即可；</p></li><li><p>式（13.1）在形式上和之间的积分问题忽略掉分母的部分是一致的（当然分母很容易处理），区别之处在于，<strong>这里的后验分布可能很复杂，很难从中抽取样本</strong>。</p></li><li><p>于是就有了 MCMC，前一个 MC，马尔科夫链就是要生成这种分布，后一个 MC 则是正常的蒙特卡洛积分。</p></li></ul></li><li><p>Markov Chain Monte Carlo Integration</p><ul><li>先给出了一些定理</li><li>说明了<ol type="1"><li><strong>不可约+非周期+正常返</strong>的马氏链存在唯一的平稳分布</li><li>LLN：马氏链的实值函数的遍历均值以概率 1 收敛到极限分布下的均值</li><li>CLT：遍历均值作合适的变化依分布收敛到标准正态分布</li></ol></li></ul></li></ul><h2 id="the-metropolishastings-algorithm">14 The Metropolis–Hastings Algorithm</h2><p>MH(Metropolis-Hastings) 算法是一类常用的构造马氏链的方法, 其包括了: Metropolis抽样, Gibbs抽样, 独立抽样, 随机游动抽样等；</p><p>这里的主要部分就是要寻找一个合适的对于马氏链的更新方式，也即从 <span class="math inline">\(X_t\)</span> 更新到 <span class="math inline">\(X_{t+1}\)</span> ，算法表示为</p><ol type="1"><li>构造合适的 proposal 分布 <span class="math inline">\(g(.|X_t)\)</span></li><li>从 proposal 中生成 <span class="math inline">\(Y\)</span></li><li>若 <span class="math inline">\(Y\)</span> 被接受，则 <span class="math inline">\(X_{t+1}=Y\)</span> ，否则 <span class="math inline">\(X_{t+1}=X_t\)</span></li></ol><p>其中 proposal 的选择要使得产生的马氏链的平稳分布为目标抽样分布 f，需满足的正则化条件包括 <strong>不可约、非周期、正常返</strong> 。一个具有和目标分布相同支撑集的 proposal 一般会满足这些正则化条件</p><ul><li><p>Metropolis-Hastings Sampler</p><ul><li><p><a href="https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm#Formal_derivation" class="uri">https://en.wikipedia.org/wiki/Metropolis%E2%80%93Hastings_algorithm#Formal_derivation</a> 天这里讲得太清楚了，为什么之前的文章从来没有过从这个角度来写的</p><p>下面的这两篇可以拓展阅读</p><p>刘建平的博客 <a href="https://www.cnblogs.com/pinard/p/6638955.html" class="uri">https://www.cnblogs.com/pinard/p/6638955.html</a></p><p><a href="https://image.hanspub.org/Html/20-2620790_28230.htm" class="uri">https://image.hanspub.org/Html/20-2620790_28230.htm</a>#</p></li><li><p>简单来说，我们生成的马氏链的过程中，转移概率由两部分组成，从 proposal 中得到，经过拒绝接受的过程，也即 <span class="math display">\[P(x&#39;|x)=g(x&#39;|x)A(x&#39;,x)\tag{14.1}\]</span> 而为了使得生成的马氏链的平稳分布为目标分布 <span class="math inline">\(P(x)\)</span>，我们需要满足 <strong>细致平稳 detailed balance</strong> 条件 <span class="math display">\[P(X&#39;|x)P(x)=P(x|x&#39;)P(x&#39;)\]</span> 即任意两个状态之间的转移概率是一样的，也即 <span class="math display">\[{P(x&#39;|x)\over P(x|x&#39;)}={P(x&#39;)\over P(x)}\]</span> 将式（14.1）代入，即接受概率需要满足 <span class="math display">\[{A(x&#39;,x)\over A(x,x&#39;)}={P(x&#39;)g(x|x&#39;)\over P(x)g(x&#39;|x)}\tag{14.2}\]</span> 为了满足上式，一个常用的接受概率为 <span class="math display">\[A(x&#39;,x)=\min\{1,{P(x&#39;)g(x|x&#39;)\over P(x)g(x&#39;|x)}\}\tag{14.3}\]</span> 显然 <span class="math inline">\(A(x&#39;,x), A(x,x&#39;)\)</span> 中肯定有一个为 1，即满足式（14.2）</p></li></ul></li><li><p>The Metropolis Sampler</p><ul><li>Metropolis sample 是 MH 算法的一种特殊形式，这里的 proposal 是对称的 <span class="math inline">\(g(x&#39;|x)=g(x|x&#39;)\)</span>，因此接受概率为 <span class="math inline">\(\min\{1,{P(x&#39;)\over P(x)}\}\)</span></li></ul></li><li><p>Random Walk Metropolis</p><ul><li>随机游动Metropolis抽样方法是Metropolis方法的一个例子。假设候选点 Y 从一个对称的 proposal <span class="math inline">\(g(Y|X_t)=g(|X_t-Y|)\)</span> 中产生；则在每次的迭代中，仅需要从 proposal 中产生一个增量 Z，然后 <span class="math inline">\(Y=X_t+Z\)</span>；比如增量从正态分布中产生，此时候选点</li></ul><p><span class="math display">\[Y|X_t\sim N(X_t,\sigma^2)\]</span></p><ul><li><p>The Independence Sampler</p><ul><li>是 MH 算法的另一个特例，这里的 proposal 不依赖于前一步的状态值，即 <span class="math inline">\(g(Y|X_t)=g(Y)\)</span> ，此时的接受概率为 <span class="math display">\[A(Y,X_t)=\min\{1,{P(Y)g(X_t)\over P(X_t)g(Y)}\}\]</span></li></ul></li></ul></li></ul><h2 id="the-gibbs-sampler">15 The Gibbs Sampler</h2><ul><li>Gibbs 抽样是MH算法的一个特例, 其经常用于目标分布是多元分布的场合. 假设所有的一元条件分布 (每个分量对其他分量的条件分布)都是可以确定的, Gibbs抽样使用这些一元条件分布进行抽样.</li><li>Gibbs 采样主要解决的是多元分布的问题，这里有一个很强的假设是所有的边际分布都是已知的；这样的话，也就不需要 proposal 了，并且所有生成的点都是接受的。</li></ul><h2 id="monitoring-convergence">16 Monitoring Convergence</h2><p>检查产生的马氏链是否收敛，最直接简单的就是图示了</p><ul><li>Convergence diagnostics plots</li><li>Monte Carlo Error</li><li>The Gelman-Rubin Method</li></ul><h2 id="em-algorithm">17 EM Algorithm</h2><ul><li><p>期望-最大化(EM)算法是一种在观测到数据后, 估计未知参数的迭代优化方法. 其能非常简单地执行并且能够通过稳定,上升的步骤非常可靠地找到全局最优值. 对EM方法详细介绍请参考非常好的教材 McLachlan and Krishnan, 1997, EM algorithm and extensions, Wiley.</p></li><li><p><a href="https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm#Proof_of_correctness" class="uri">https://en.wikipedia.org/wiki/Expectation%E2%80%93maximization_algorithm#Proof_of_correctness</a> wiki 真的太赞了，符号表达要比之前的笔记 <a href="https://www.cnblogs.com/easonshi/p/12113808.html" class="uri">https://www.cnblogs.com/easonshi/p/12113808.html</a> 清楚无数倍，有机会重写一些</p></li><li><p>基本的想法就是，在 MLE 中，由于存在一些 删失数据/隐变量，我们无法得到具体的 marginal likelihood 的形式，因此需要通过 complete likelihood 积分将其消去 <span class="math display">\[  L(\theta;X)=p(X|\theta)=\int p(X,Z|\theta)dZ\tag{17.1}  \]</span> 然而，我们无法得到 Z 的分布，EM 的思想就是利用现有的的对于参数的估计来近似 Z 的分布，即利用了 <span class="math inline">\(Z|X,\theta^{(t)}\)</span>。</p><ul><li><p>Expectation step (E step)：在当前的估计 <span class="math inline">\(\theta^{(t)}\)</span> 下，得到（17.1）中的 marginal likelihood 的估计的形式，即 <span class="math display">\[  Q(\theta|\theta^{(t)})=E_{Z|X,\theta^{(t)}}\log L(\theta;X,Z)\tag{17.2}  \]</span> 注意这里我们需要得到的是 Q 的形式，其是未知参数 <span class="math inline">\(\theta\)</span> 的似然函数的估计</p></li><li><p>Maximization step (M step)：通过上述的公式更新我们对于 <span class="math inline">\(\theta\)</span> 的估计 <span class="math display">\[  \theta^{(t+1)}=\arg\max_\theta Q(\theta|\theta^{(t)})\tag{17.3}  \]</span></p></li><li><p>迭代求解</p></li></ul></li><li><p>这是算法的基本框架，上面的 wiki 链接中给出了算法有效性的证明，其核心的结论就是：我们通过最大化 Q 得到的更新值 <span class="math inline">\(\theta^{(t+1)}\)</span> ，其所对应的 marginal 似然也是更好的，即 <span class="math display">\[  \log p(X|\theta^{(t+1)})\ge \log p(X|\theta^{(t)})  \]</span></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 统计计算 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算思维 课程大纲</title>
      <link href="/posts/fa8a4f98/"/>
      <url>/posts/fa8a4f98/</url>
      
        <content type="html"><![CDATA[<p>这学期选的一门模块课，选用教材为 <a href="https://book.douban.com/subject/5912193/">不插电的计算机科学</a> 复习主要过一遍 PPT，这本教材网上有边免费的英文版，不过总体的难度较小，不看也罢。</p><p>以下来整理一下这门课的主要内容。</p><h3 id="二进制">1 二进制</h3><p>数字，文字编码，图像，色彩的表示。在图像中提到了游程压缩。</p><h3 id="编码与压缩">2 编码与压缩</h3><p>主要有霍夫曼编码，LZ 压缩</p><h3 id="错误检测与纠正">3 错误检测与纠正</h3><p>主要讲了奇偶校验，用了棋盘作为例子，在左侧和下侧增加一行，保证每行、每列的白色棋子（0）的数量为偶数。</p><p>基于奇偶校验的 RAID5 等。注意此方法只能纠正一个错误。</p><p>另一种错误检测的例子为 ISBN 码，原理很简单，即对于每位数字赋予一个权重，最终得到一个校验位，来确保某一位数字出现出错的时候能够被发现。身份证的末位也是此原理。注意，此方法只能检测而不能纠正错误。</p><p>还讲了纠错编码。汉明距离为在一个编码系统中，一个字符的编码与另一个字符的编码之间的最小编辑距离（需要修改多少位）。一个汉明距离为 3 的编码，可纠正一个错误，发现 2 个错误。（那么问题来了，如何判断是错误了 1 位还是 2 位呢？）</p><h3 id="搜索">4 搜索</h3><p>简单的搜索算法：线性搜索；二分搜索；哈希搜索。</p><h3 id="排序">5 排序</h3><p>排序分了两章讲。只讲了基于比较的排序。包括三种很傻的排序算法：选择排序；插入排序；冒泡排序。以及进阶的两类算法：快速排序和归并排序。</p><p>在前一类算法中，时间复杂度均为 <span class="math inline">\(O(n^2)\)</span>。</p><ul><li>选择排序每次选最小的拿出来，因此相对其他的排序优势在于交换的次数少。</li><li>插入排序就像抓扑克的过程，但是在插入过程中需要一定的交换操作。当然，这里还可以在插入过程使用二分查找的方式加速算法。</li><li>冒泡排序，优势在于若原本的队列已排好序，则仅需要扫描一次（当然，这只是偶然情况，劣势也很多）；而事实上这种排序的效率最低，因为涉及到大量的交换操作。</li></ul><p>现实中一般会选择更快的排序算法，时间复杂度为 <span class="math inline">\(O(nlog(n))\)</span>。</p><ul><li>快速排序，想法是每次选择一个「基准」，将整个数组分成两类，在这两个子数组中递归求解。</li><li>归并排序，从 2 个数字的排序开始，每次对于排好序的子数组做归并操作。</li></ul><p>均体现除了分治的思想，快速排序是「先治后分」，而归并排序是「先分后治」。</p><p>另外，注意，在上述算法中，选择排序和快速排序不能保证稳定性（即相同数字按照出现顺序排列）。</p><h3 id="有限状态机">7 有限状态机</h3><p>主要是五元组 <span class="math inline">\((Q, \Sigma, \sigma, q_0, F)\)</span></p><ul><li><span class="math inline">\(Q\)</span> 有限状态集</li><li><span class="math inline">\(\Sigma\)</span> 输入字符表，或者说是动作</li><li><span class="math inline">\(\sigma\)</span> 转移函数 <span class="math inline">\(Q\times \Sigma \rightarrow Q\)</span></li><li><span class="math inline">\(q_0\)</span> 为初始状态</li><li><span class="math inline">\(F\)</span> 为 Q 的子集，终结状态集</li></ul><h3 id="递归与分治">8 递归与分治</h3><p>递归注意需要：1. 边界条件，即终止条件；2. 递归模式，即如何把大问题转化为小问题。</p><p>分治，注意：1. 划分；2. 求子问题；3. 合并。上面的归并排序、快速排序、二分查找都可以看做分治算法。</p><p>另外的例子有：棋牌覆盖问题；循环赛日程安排问题。</p><h3 id="数据结构">9 数据结构</h3><p>讲了线性表和树结构。</p><p>线性表中，当然会讲栈和队列。关于 LIFO 栈的应用：1. 在递归函数中，计算机存储的代码即利用了栈结构；2. 括号匹配。而 FIFO 队列，则可用于作业调度（防止计算机活锁）。</p><p>树结构中，讲了如何把一般的树转化为二叉树——即「左儿子右兄弟」。还介绍了二叉搜索树，可以：1. 搜索；2. 插入；3. 删除，对于 Delete 操作，难点在于删除节点有两个孩子的情况，这时候需要找到比这个节点大的最小的那个节点，注意到该节点一定是没有左孩子的，将它拿过来代替要删除的节点。</p><h3 id="图算法">10 图算法</h3><p>讲了图的表示：邻接表和邻接矩阵。以及 DFS 和 BFS。还有拓扑排序，这里注意到，若为（上）三角阵，则必能拓扑排序。</p><h3 id="网络带权图">11 网络，带权图</h3><p>最小生成树的两个算法：Kraskal 和 Prim 算法。前者，对于所有边按照权重排序，从小到大检查，若不形成环，则加入集合（用到的数据结构为并查集，可在 $ O(|E|)$ 时间内判断结果）——注意，这里在生成过程中可能出现森林。而对于 Prim 算法，则是从一个节点出发，将这个节点和图中其余节点分割，这两个不相交的节点集构成了整个节点集的一个割，在连接这两个不相交节点集的「桥」中，每次选择一条最小边加入——注意此时是从一个较小的树长成最小生成树的。另外，在这里不仅这几涉及边的排序，需要动态的删除和插入，因此不同于 Kraskal 算法中的简单排序，这里用到了二叉搜索树，实现了动态查找。</p><p>活动网络，在图算法中，拓扑排序解决了活动网络的先后顺序，下面需要判断哪些活动会对整体的完成时间产生影响，即找到关键路径。</p><p>对于网络表示，我们用节点表示「事件」，即在此之前的边全部已完成，可以开展后续活动；而用边表示「活动」，每条边上有该活动所需的时间。另外，整个网络还有一个源 source 和汇 sink 。问题都是找关键路径。</p><h3 id="并发与死锁">12 并发与死锁</h3><p>主要讲了数据库的并发操作。若不进行限制，则可能出现三类问题：</p><ul><li>丢失修改 lost update，即 <span class="math inline">\(T_1\)</span> 和 <span class="math inline">\(T_2\)</span> 同时修改，最终结果出错</li><li>不可重复读 nonrepearable read，在 <span class="math inline">\(T_2\)</span> 修改/删除前后， <span class="math inline">\(T_1\)</span> 读取结果不一致</li><li>读脏数据 dirty read，在 <span class="math inline">\(T_2\)</span> ROLLBACK 的过程中，<span class="math inline">\(T_1\)</span> 进行了读取</li></ul><p>因此，需要并发控制，主要的策略有：1. 封锁 locking；2. 时间戳 timestamp；3. 乐观控制。主要讲第一种。分为排它锁 exclusive lock（X 锁，也叫写锁）和共享锁 share lock（S 锁，也叫读锁）。</p><p>有了这两种锁，还是有可能出现问题：活锁，即由于其他的请求某一程序无限等待，这一问题只需要采取「先来先服务」的有限策略即可。</p><p>对于死锁，预防的方法：1. 一次封锁；2. 顺序封锁，都会造成并发程度减少，而且更大的问题在于程序执行之前并不知道要求的数据有哪些。而如何诊断也有：1. 超时法，即粗暴地设定一个阈值；2. 等待图，即画出等待依赖关系，检查是否出现环。如何解决死锁，一般是插销代价最小的那件事务。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> CS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算思维 </tag>
            
            <tag> CS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RSS 与稍后读软件横向比较</title>
      <link href="/posts/3dbb612a/"/>
      <url>/posts/3dbb612a/</url>
      
        <content type="html"><![CDATA[<p>框架：RSS + 需要的发送到稍后阅读 + 其他网页分享到 Pocket/Instapaper + Evernote 最终归档。</p><p>目前配置：RSS 服务使用 <strong>Inoreader</strong>，阅读器则使用 <strong>Reeder4</strong>，稍后读软件使用 <strong>Instapaper</strong>。</p><span id="more"></span><p>【20201119：这是之前简写的关于 RSS 和稍后读软件的横向比较笔记，现在看来文笔生涩很多问题也没有讲清楚，但是问题的探讨还是比较有意义的，因此整理发送出来。目前所使用软件还是这里提到的三点，不过在使用的流程上有了一定的优化。 另外，关于时间和信息管理，参见 <a href="mweblib://16057754500538">谈谈时间与信息管理</a> 一文。】</p><h2 id="不同-rss-服务比较">不同 RSS 服务比较</h2><p>尝试过使用 IFTTT 自动将在Reeder4中star的文章自动同步到Evernote（注意，在 Reeder 中 star 的文章实际上是使用了各家 RSS 服务的功能，即在对应的 RSS服务 （如 Inoreader）进行 star 。然后，主流的三家 RSS 服务（Inoreader, Feedly, Newsblur）中前两者连接 IFTTT 需要开通会员，而 Newsblur 实测分享后格式混乱（丢失所有标点空白符和图片）。</p><p>脑残式折腾之后，采用了 Reeder 上自带的分享功能（应该是需要借助 RSS 服务 进行分享？）实现存档。在测试的两个 RSS 服务 中，Inoreader 分享后可以保持文章，而 Feedly 分享后被截短（可能是没开通会员？）。总而言之，<strong>Inoreader+Reeder</strong> 的配置实现了我大部分的需求。</p><h2 id="pocketinstapaper-比较">Pocket/Instapaper 比较</h2><p>此前一直混用两者，都是轻度使用，现在想把稍后读和 evernote 联系起来作为生产力，也遇到了多种问题，在此加以记录：</p><p>从阅读体验来看，两者的排版都比较好，适合手机阅读，Instapaper对于代码块没有单独的 cell（而Pocket像很多web网页一样有单独的代码块），然而，作为阅读而非编辑的软件，这样的缺陷可以说并不是大问题，毕竟若要复制还是很方便的。</p><p>Pocket的一个大问题在于无法正常显示数学公式，造成了阅读数学类文字的不便；然而，更大的灾难在于，从Instapaper发送到evernote中的笔记也会丢失数学公式，当然，直接从网页采集不会丢失，以后带公式的网页还是直接从网页版采集到evernote好了。</p><p>总结：使用总体来看还是 <strong>Instapaper</strong> 比较好用些，之后一段时间希望能多多使用 稍后阅读 软件，更多咀嚼和消化的过程。</p><h2 id="icloud-账号转移问题">iCloud 账号转移问题</h2><p>因为想把一个备用的 apple 账号进行转移，因此造成了一系列的问题，这才意识到问题的严重性，在这里记录下来。</p><p>发现问题的起因是 wallet 发现之前使用的 <code>虚拟交通卡</code> 无法使用，找了半天终于发现 wallet 上的卡是和 iCloud 账号绑在一起的，为了把交通卡里的钱转到新的账号中，重新登陆了原来的那个账号，并且需要把地区设置成 中国大陆 然后通过 wallet 添加卡，把原来的虚拟交通卡找回，再利用 <code>上海交通卡</code> app 注销（余额会返还到 app 账户上）之后登陆新的 apple ID 再注册新的虚拟交通卡（注册卡是免费的，20元之后会返还）。经过了一连串的折腾，终于成功把手机上的账号转移成功。可以愉快的在锁屏状态下 连按两下 进入wallet 卡包了（之前不知什么原因直接无法完成这一操作）。</p><p>这只是问题的开始，之后，则是 mac 上的 onenote 无法同步，一直登陆失败，查阅后发现可以通过重置 keychain 解决，尝试无果后最终通过重新登陆 iCloud 解决问题。</p><p>虽然一些顺利把问题补救过来了，自己作的死自己承受。教训是：以后永远不要瞎碰 iCloud 了。</p>]]></content>
      
      
      <categories>
          
          <category> Software </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> RSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论基础（二）随机变量</title>
      <link href="/posts/7930088/"/>
      <url>/posts/7930088/</url>
      
        <content type="html"><![CDATA[<p>本部分主要介绍常见的随机变量及其关系。主要内容有：</p><ul><li>随机变量的概念</li><li>常见离散随机变量</li><li>常见连续随机变量</li><li>随机变量函数的分布</li></ul><p>在上一节从经验直观出发，引入随机事件及其概率的概念之后，为进一步研究随机现象，我们需要引入<strong>随机变量</strong>的概念。</p><blockquote><p>补充了随机变量函数的分布这一部分内容</p></blockquote><h2 id="什么是随机变量">什么是随机变量</h2><blockquote><p>顾名思义，随机变量就是其值随机会而定的变量，正如随机事件是其发生与否随机会而定的事件。</p></blockquote><p>机会表现在实验结果，一个随机试验有许多可能的结果，出现哪一个要看机会，即有一定的概率。到底是哪一个，要等掷骰子以后才知道。因此，又可以说，<strong>随机变量就是实验结果的函数</strong>。关键在于实验前后之分：前，我们不能预制其取值，“随机”；试验后，取值就确定了。</p><p>随机变量的反面是“<strong>确定性变量</strong>”，其取值遵循某种严格的规律的变量。</p><blockquote><p>随机事件这个概念实际上是包含在随机变量这个更广的概念之内。也可以说：随机事件是从静态的观点来研究随机现象，而随机变量则是一种动态的观点。一如数学分析中的常量和变量的区分那样，变量概念是高等数学有别于初等数学的基础概念。同样，概率论能从一些孤立事件的概率发展为一个更高的理论体系，基础就是随机变量。</p></blockquote><p>从中可以看到随机变量与随机事件的联系及其意义，以下给出随机变量形式化的定义：</p><blockquote><p>A <em><strong>random variable</strong></em> is a <em><a href="https://en.wikipedia.org/wiki/Measurable_function">measurable function</a></em> <span class="math inline">\(X: \Omega\rightarrow E\)</span> from a set of possible <a href="https://en.wikipedia.org/wiki/Outcome_(probability)">outcomes</a> <span class="math inline">\(\Omega\)</span> to a <em><a href="https://en.wikipedia.org/wiki/Measurable_space">measurable space</a></em> <span class="math inline">\(E\)</span>. The technical axiomatic definition requires <span class="math inline">\(\Omega\)</span> to be a sample space of a <em><a href="https://en.wikipedia.org/wiki/Probability_space">probability triple</a></em> (see the <em><a href="https://en.wikipedia.org/wiki/Random_variable#Measure-theoretic_definition">measure-theoretic definition</a></em>). <em>The probability that <span class="math inline">\(X\)</span> takes on a value in a measurable set <span class="math inline">\({\displaystyle S\subseteq E}\)</span> is written as</em> <em><span class="math inline">\({\displaystyle \operatorname {P} (X\in S)=\operatorname {P} (\{\omega \in \Omega \mid X(\omega )\in S\})}\)</span>,</em> where ${ } $ is the_<a href="https://en.wikipedia.org/wiki/Probability_measure">probability measure</a>_on <span class="math inline">\({\displaystyle (\Omega ,{\mathcal {F}})}\)</span>.</p></blockquote><p>从中可以看到随机变量与随机事件的联系及其意义。简言之，<strong>随机变量是定义在样本空间上<span class="math inline">\(\Omega\)</span> 样本点的实值函数 <span class="math inline">\(X=X(\omega)\)</span>，是随机事件的数量表示</strong>。</p><p>考虑到随机变量概念的重要性，对其此概念的介绍参见 <a href="https://www.cnblogs.com/easonshi/p/12828674.html">概率论基础：补充（1）概率的公理化定义与随机变量的概念</a></p><blockquote><p>下面说明一些符号：如定义所示，随机变量其实是一个定义在样本空间的一个函数 <span class="math inline">\(X(\omega)\)</span> ，而我们平时多简记为 <span class="math inline">\(X\)</span>，但要注意其取值始终是和一个事件联系起来的；也就是说，从 <span class="math inline">\(\omega\)</span> 这个事件得出随机变量 <span class="math inline">\(X\)</span> 的值。反过来，对于一个随机变量我们也可以定义出一个对应的事件，例如常见 <span class="math inline">\(X\in A\)</span> 或 <span class="math inline">\(\{X\in A\}\)</span> 其实指的是 <span class="math inline">\(\{\omega|X(\omega)\in A\}\)</span>；同理， <span class="math inline">\(a&lt;X\le b\)</span> 其实指的是 <span class="math inline">\(\{\omega|a&lt;X(\omega)\le b\}\)</span> 这样一个事件。虽然随机变量是我们之后一直要接触的一个概念，但至少就我来说，常常仅记住了最为简单的符号却忘了其作为一个函数的本质。</p><p>另外，既然是函数自然可以进行变换，也就是随机变量的函数 <span class="math inline">\(Y(\omega)=g(X(\omega))\)</span> 也是一个随机变量，只是将每一个样本映射到了不同的测度空间上，例如 <span class="math inline">\(X^2, \sqrt{X}\)</span> 等。</p></blockquote><h2 id="重要的离散分布">重要的离散分布</h2><blockquote><p>下面两节分别介绍了一些常见的离散和连续分布，应该是在课程上较为着重介绍的，在日后的学习过程中用到的也比较多；但由于这里主要是复习性质的笔记，所以仅仅列出了自己认为比较重要的内容，若是初学请参考相关教材。</p></blockquote><ol type="1"><li><strong>0-1分布</strong>：设随机变量 X 只取 0,1 两值，<span class="math inline">\(P(X = 1) = p\)</span>，<span class="math inline">\(P(X = 0) = 1 − p\)</span>，则称 X 服从 0-1 分布或 Bernoulli 分布。</li><li><strong>二项分布</strong>：两个重要条件：1. 各次试验的条件是<strong>稳定的</strong>（各次试验中的概率不变），2. 各次试验的<strong>独立性</strong>。</li><li><strong>几何分布</strong>：可列重复伯努利实验中第一次成功，试验的次数。<span class="math inline">\(P(X = k) = q^{k−1}p, k = 1, 2,...\)</span>。几何分布的无记忆性 <span class="math inline">\(P(ξ &gt; m + n | ξ &gt; m) = P(ξ &gt; n)\)</span></li><li><strong>负二项(Pascal)分布</strong>：命名来由一则是“负指数二项展开式”，二则是由于它与二项分布相比是“反其道而行之”：二项分布是定下总抽样个数ｎ而把废品个数X作为变量；负二项分布是定下废品个数ｒ而把总抽样次数减去ｒ作为变量。 可列重复伯努利实验中第 r 次成功时试验次数，<span class="math inline">\(P(X_r = k) = C_{r−1}^{ k−1}p^{ r−1} q^{ k−r} p = C_{r−1}^{ k−1}p^{r} q^{k−r}\)</span>。注意到，几何分布时负二项分布在<span class="math inline">\(r=1\)</span>时的特例。</li><li><strong>泊松(Poisson)分布</strong>：泊松分布多出现在当 X 表示在<strong>一定的时间或空间内出现的事件个数</strong>（例如单位时间的放射粒子数，一天之内的顾客数量等）。<strong>泊松分布可作为二项分布的极限得到</strong>。若<span class="math inline">\(X\)</span>服从二项分布，<span class="math inline">\(n\)</span> 很大，<span class="math inline">\(p\)</span> 很小，<span class="math inline">\(np\)</span> 不太大时，<span class="math inline">\(X\)</span> 的分布接近参数为 <span class="math inline">\(\lambda=np\)</span> 的泊松分布。 其概率分布为 <span class="math inline">\(P(X=k)={\lambda^k\over k!}e^{-\lambda}\)</span> 另外，需注意柏松分布的实际含义；其一个重要应用在于对二项分布的近似。</li><li><strong>离散的均匀分布</strong>：设随机变量 X 取值 <span class="math inline">\(a_1, a_2, …, a_n\)</span> ，且有<span class="math inline">\(P(X = a_k) = {1\over n}, k = 1, …, n\)</span>。可以看出, 离散的均匀分布正是古典概型的抽象。</li><li><strong>超几何分布</strong>：抽取不放回的情况。概率分布为 <span class="math inline">\(P(X=m)={C_M^m C_{N-M}^{n-m}\over C_N^n}\)</span>，可想成从 N 个样品中抽 M 个，记其废品数。命名是因其形式与“超几何函数”的级数展开式的系数有关。这个分布在涉及抽样的问题中常用（无放回）。<span class="math inline">\(X\)</span> 服从超几何分布，当ｎ固定；<span class="math inline">\(M/N＝ｐ\)</span>固定；<strong>Ｎ趋向无穷时，<span class="math inline">\(X\)</span> 近似服从二项分布</strong>。 其数学形式比较复杂，虽然在现实中很多都是超几何分布，但当样本量很大的时候，可将其近似为放回情况，即近似为二项分布。</li></ol><h2 id="重要的连续分布">重要的连续分布</h2><p>在古典的「概率」框架下，我们可以很自然得理解上面离散分布的含义；在上面，我们是直接根据某一个「数值」变量作为一个随机变量的，这时这个变量取不同的值，对应着某一个事件；然而，除了离散的变量之外，还可能有连续取值的变量，在这时单个状态就没有合理的「概率」内涵了；所以根据概率的定义导出<strong>概率密度函数 pdf</strong> <span class="math display">\[P(a&lt;X\le b)=\int_a^b f(x)dx\]</span> 这时 <span class="math inline">\(f(x)\)</span> 就不是表征某个事件概率的绝对大小而仅仅是概率的「集中程度」，或者是「单位长度」下的概率大小，因此其取值可大于 1（一定要用微积分的角度来理解）。对于 pdf，显然有</p><ul><li><p><span class="math display">\[\int_{-\infty}^\infty f(x)dx=1\]</span></p></li><li><p><span class="math display">\[P(X=a)=0\]</span></p><p>因此有 <span class="math display">\[P(a&lt;X\le b)=P(a\le X\le b)\]</span></p></li><li><p>对数集 <span class="math inline">\(A\)</span> （严格意义下要求可测性）有 <span class="math display">\[P(X\in A)=\int _A f(x)ds\]</span></p></li></ul><ol type="1"><li><p><strong>均匀分布</strong>：<span class="math inline">\(U[a, b]\)</span></p><p>其一个案例就是作为<strong>示性函数</strong>（indicator function）。</p></li><li><p><strong>指数分布</strong>：<span class="math inline">\(f(x) = \lambda e^{−\lambda x} (x &gt; 0)\)</span>。可以看出, 参数 λ 愈大, 密度函数下降得愈快。指数分布经常<strong>用于作为各种「寿命」 的分布的近似</strong>。 指数分布的最重要的特点是 <strong>「无记忆性」</strong>，即若 X 服从指数分布，则对任意的 <span class="math inline">\(s, t &gt; 0\)</span> ，有<span class="math inline">\(P(X &gt; s + t | X &gt; s) = P(X &gt; t)\)</span>。可以理解成，当仪器工 作了 s 小时后再能继续工作 t 小时的概率等于该仪器刚开始就能工作 t 小时的概率，说明该仪器的使用寿命不随使用时间的增加发生变化，或说仪器是「永葆青春」的。</p></li><li><p><strong>正态分布</strong>：正态分布的密度函数是以 <span class="math inline">\(x = µ\)</span> 为对称轴的对称函数，<span class="math inline">\(µ\)</span> 称为位置参数，密度函数在 x = µ 处达到最大值，在<span class="math inline">\((−∞, µ)\)</span> 和 <span class="math inline">\((µ, +∞)\)</span> 内严格单调。<span class="math inline">\(σ\)</span> 的大小决定了密度函数的陡峭程度，通常称 <span class="math inline">\(σ\)</span> 为正态分布的形状参数。</p></li><li><p><strong>威布尔(Weibull)分布</strong>：许多产品（如轴承）的使用寿命服从威布尔分布，注意，m=1时退化为指数分布。</p></li><li><p><strong>伽马 <span class="math inline">\(\Gamma(\alpha, \beta)\)</span>分布</strong>：密度函数为 <span class="math inline">\(f(x;\alpha,\lambda)={\lambda^\alpha\over \Gamma(\alpha)} x^{\alpha-1}e^{-\lambda x}, x\ge 0\)</span>。</p><p>伽马分布与指数分布、正态分布有密切关系。显然 <span class="math inline">\(Γ(1, λ) = E(λ)\)</span>。</p></li><li><p><strong>帕累托(Pareto)分布</strong>：家庭年收入</p></li><li><p><strong>贝塔分布 <span class="math inline">\(B(\alpha,\beta)\)</span> 分布</strong>：贝塔分布与二项分布、伽马分布有密切关系。</p></li></ol><p>另外，可以参看以下文章：</p><ul><li><strong><a href="http://hongyitong.github.io/2016/11/13/%E4%BA%8C%E9%A1%B9%E5%88%86%E5%B8%83%E3%80%81%E6%B3%8A%E6%9D%BE%E5%88%86%E5%B8%83%E3%80%81%E6%AD%A3%E6%80%81%E5%88%86%E5%B8%83/">二项分布、泊松分布、正态分布的关系</a></strong></li><li><a href="http://www.math.wm.edu/~leemis/2008amstat.pdf">Univariate Distribution Relationships</a>（是时候祭出这张辣眼睛的图了）</li></ul><hr /><p>懒得打公式了，可以参考这篇总结 <a href="https://wzbtech.com/tech/distributions.html">统计分布总结</a> #优秀的总结</p><p>以下来谈谈自己关于各离散和连续分布的理解。</p><ol type="1"><li>还是先从经典的 <strong>Binomial (0-1) 分布</strong>讲起，它给出了单次实验成功的概率分布；若要关心 n 次实验中成功的概率，则变为 <strong>Bernoulli 分布</strong>，它们之间体现的是一种「一和多」的关系；另外，这是我们从实验成功的角度来看的，或者说，是事件发生的「次数」；</li><li>给定试验次数（一定的时间限定），事件发生的次数分布为上述 Binomial 和 Bernoulli；那么，换一个角度，我们感兴趣的是事件的次数，所需要的次数（时间）是多少呢？这就是下面的两个：若只关心首次出现时用了多少次实验（时间），那么就服从 <strong>Geometric 分布</strong>；这是「一」，而对于「多」次事件发生所需要的试验次数（时间），则服从的是 <strong>Negative Binomial 分布</strong>；</li><li>上面介绍了两组离散的分布；另外注意到我在这里反复使用了时间的概念，正是想要和连续情况下对应起来：在连续情况下，一个事件在一个连续的情况下都有一定的概率发生（这时候自然没有了「实验」的概念），我们的关注点可以放在「时间间隔」上。对于事件首次发生/两次事件之间的间隔（假定独立性，这两者显然是等价的），服从的是 <strong>Exponential 分布</strong> ，对应了离散情况下的 Geometric 分布；若考虑的是发生了多次事件所用事件，则服从 <strong>Gamma 分布</strong> ，对应离散情况下的 Negative Binomial 分布；</li><li>上面是一组对应关系，那么对于 1 中是否也有这样的关系呢？这时候，因为我们关心的变为事件的「次数」了，显然是离散的了，所以没有了直接的对应关系。这里涉及到了另一个重要的分布——<strong>Poisson 分布</strong>。从某种程度上，它通过次数的概念把离散和连续变量结合了起来。一方面，我们可以把它看做是一个计数函数（参考 <a href="https://www.zhihu.com/question/34866983" class="uri">https://www.zhihu.com/question/34866983</a> ，泊松过程），描述了在一定的时间间隔下事件发生的次数，从而和 Exponential 分布相联系；另一方面，它的密度公式事实上是 Bernoulli 分布在次数很大，而事件的概率很小的情况下的极限（同时需要两者的乘积满足 <span class="math inline">\(λ=np\)</span> ，n 很大可以看做次数越来越多，间隔越来越小趋向于连续；而在趋向连续时 p 显然趋向于 0）。</li></ol><h2 id="随机变量函数的分布">随机变量函数的分布</h2><p>在之前的概率密度函数 pdf/pmf 的基础上，我们可以定义<strong>（累积）分布函数 cdf</strong>。即 <span class="math inline">\(F(x)=P(X&lt;x)\)</span> 。显然，其有单调不减、右连续等性质。</p><p>下面我们要导出随机变量的函数的分布。对于离散情况来说，我们可以直接根据分布列变换得到；所以关键是连续变量（当然可以推广得到统一的形式？）。我们有定理：</p><p><strong>定理</strong>：设随机变量 X 取值于 <span class="math inline">\(C\ ⊂ \mathbb{R},Y = g(X),g(x)\)</span> 是 <span class="math inline">\(C\)</span> 到 <span class="math inline">\(D ⊂ \mathbb{R}\)</span> 的一一变换，<span class="math inline">\(x = h(y) = g^{−1} (y)\)</span> 是 <span class="math inline">\(g(x)\)</span> 的反函数，设 <span class="math inline">\(h(y)\)</span> 有连续的 导数。则 <span class="math display">\[f_Y (y) = f(h(y))|h ′ (y)|, y ∈ D\tag{4.1}\]</span> 事实上，我们可以利用这个公式证明正态分布的线性变换结果。下面给出一个例子：设 <span class="math inline">\(X ∼ N(0, 1)\)</span>，求 <span class="math inline">\(Y = X^2\)</span> 的分布。注意到，上面的公式是对于单调函数来说的，而对于非单调的函数有相应的拓展形式，我们仅需要记得简单求和即可。</p><p>在此例中，并非一个一一变换，设 <span class="math inline">\(D=(0,\infty)\)</span>，并且事件 <span class="math display">\[\{Y=y\}=\{X=\sqrt{y}\}+\{X=-\sqrt{y}\}, y\in D\]</span> 这里有分段的两个逆变换 <span class="math inline">\(h_1 (y) =\sqrt y, h_2 (y) = − \sqrt y\)</span> 满足条件，于是 <span class="math display">\[\begin{aligned}  f(Y)(y) &amp;= f_X(h_1(y))|h_1&#39;(y)|+f_X(h_2(y))|h_2&#39;(y)|\\  &amp;={1\over \sqrt{2\pi}}\exp(-{1 \over 2}h_1^2(y)){1\over 2\sqrt{y}}+{1\over \sqrt{2\pi}}\exp(-{1 \over 2}h_2^2(y)){1\over 2\sqrt{y}}\\  &amp;={1\over \sqrt{2\pi y}}e^{-y/2}, y&gt;0\end{aligned}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论基础：补充（1）概率的公理化定义与随机变量的概念</title>
      <link href="/posts/5026470e/"/>
      <url>/posts/5026470e/</url>
      
        <content type="html"><![CDATA[<h2 id="概率的公理化定义">概率的公理化定义</h2><p>为了准确理解与深入研究随机现象，我们不能满足于从直觉出发形成的概率定义（概率的稳定值或可能性大小的个人信念），必须把概率论建立在坚实的数学基础上，科尔莫哥洛夫1933年在《概率论基本概念》一书中用集合论观点和功利化方法成功解决了这个问题。</p><p>首先，可以看到事件的关系和集合关系之间存在着重要的联系。我们给出两者之间的对应关系，之后对于事件的研究就转化为对集合的研究。</p><ul><li>条件 S 下的「事件」就是若干个结果的集合（即 <span class="math inline">\(\Sigma\)</span> 的子集），所谓观察到事件 A 发生就是指 S 下出现的结果属于 A 。显然，<span class="math inline">\(\Sigma\)</span> 本身是必然事件，空集 <span class="math inline">\(\varnothing\)</span> 是不可能事件。</li><li>如果<span class="math inline">\(A\in \Sigma\)</span>，则<span class="math inline">\(A^c=\Omega -A\)</span>就是 A 的对立事件 <span class="math inline">\(\bar{A}\)</span>。</li><li>所谓 A 与 B 不相容就是指<span class="math inline">\(A\cap B= \varnothing\)</span>（即A与B不相交）。</li><li>事件的并和交分别归结为集合的并和交。</li></ul><hr /><p><span class="math inline">\(\Sigma\)</span> 是任意的非空集合，叫作基本事件空间（样本空间），其背景是条件 S 下所有可能的不同结果的全体（每个结果是一个「基本事件」）</p><p><strong>定义1</strong>: 设 <span class="math inline">\(\mathcal{F}\)</span> 是由 <span class="math inline">\(\Sigma\)</span> 的一些子集组成的集合（这种由集合组成的集合一般叫作集合系），<span class="math inline">\(P=P(\cdot)\)</span> 是 <span class="math inline">\(\mathcal{F}\)</span> 上有定义的实值函数。如果定义域 <span class="math inline">\(\mathcal{F}\)</span> 和函数 P 满足下列条件：</p><ol type="1"><li><span class="math inline">\(\Omega\in\mathcal{F}\)</span></li><li>若<span class="math inline">\(A \in\mathcal{F}\)</span>，则<span class="math inline">\(A^c=\Omega-A \in\mathcal{F}\)</span></li><li>若<span class="math inline">\(A_n \in\mathcal{F} (n=1,2,...)\)</span>，则 <span class="math inline">\(\bigcup_{n=1}^\infty A_n \in\mathcal{F}\)</span></li><li><span class="math inline">\(P(A)\ge 0 (A\in \mathcal{F})\)</span></li><li><span class="math inline">\(P(\Omega)=1\)</span></li><li>若<span class="math inline">\(A_n \in\mathcal{F} (n=1,2,..)\)</span>且两两不相交，则<span class="math inline">\(P(\bigcup_{n=1}^\infty A_n)=\sum_{n=1}^\infty P(A_n)\)</span></li></ol><p>那么称 <span class="math inline">\(P\)</span> 是 <span class="math inline">\(\mathcal{F}\)</span> 上的概率测度（简称概率），$ P(A)$ 为 <span class="math inline">\(A\)</span> 的概率（也称 <span class="math inline">\(A\)</span> 发生的概率）。附有 <span class="math inline">\(\mathcal{F}\)</span> 和 <span class="math inline">\(P\)</span> 的 <span class="math inline">\(\Omega\)</span> 叫作概率空间，有时也说 <span class="math inline">\((\Omega, \mathcal{F}, P)\)</span> 是概率空间。</p><p><strong>定义2</strong>: 设 <span class="math inline">\(\mathcal{F}\)</span> 是由 <span class="math inline">\(\Omega\)</span> 的一些子集组成的集合，具有上述 1-3 的性质，则称 <span class="math inline">\(\mathcal{F}\)</span> 是 <span class="math inline">\(\Omega\)</span> 中的 <span class="math inline">\(\sigma\)</span> 域（或 <span class="math inline">\(\sigma\)</span> 代数）。</p><blockquote><p>其中前三条构成的集合称为 <span class="math inline">\(\sigma\)</span> 域；而后三条，即非负性、完全性、可列可加性则是概率的<strong>公理化定义</strong>。</p></blockquote><p>补充定义（测度）：设<span class="math inline">\(\mathcal{F}\)</span>是由<span class="math inline">\(\Omega\)</span>的一些子集组成的集合，<span class="math inline">\(\varnothing\in\mathcal{F}\)</span>，称<span class="math inline">\(\mathcal{F}\)</span>上有定义的函数<span class="math inline">\(\mu=\mu(\cdot)\)</span>为测度，如果它满足：</p><ul><li><span class="math inline">\(0\le\mu(A)\le+\infty\)</span></li><li><span class="math inline">\(\mu(\varnothing)=0\)</span></li><li>若<span class="math inline">\(A_n \in\mathcal{F} (n=1,2,...)\)</span>两两不相交且 <span class="math inline">\(\bigcup_{n=1}^\infty A_n\in\mathcal{F}\)</span>，则<span class="math inline">\(\mu(\bigcup_{n=1}^\infty A_n)=\sum_{n=1}^\infty \mu(A_n)\)</span></li></ul><p>可以看到，我们定义的概率测度是一种特殊的测度。</p><hr /><p>任意指定非空集合 <span class="math inline">\(\Omega\)</span> 及 <span class="math inline">\(\Omega\)</span> 中的一些子集组成的 <span class="math inline">\(\sigma\)</span> 域 <span class="math inline">\(\mathcal{F}\)</span> 以及<span class="math inline">\(\mathcal{F}\)</span> 上有定义的概率 P ，所得到的三元组 <span class="math inline">\((\Omega, \mathcal{F}, P)\)</span> 是我们研究概率的基础和出发点。</p><ul><li>（前三条）首先指出，<span class="math inline">\(\sigma\)</span> 域 <span class="math inline">\(\mathcal{F}\)</span> 关于集合的基本运算是「封闭」的。即，任意个数（有限、可数）集合的交/并仍属于<span class="math inline">\(\mathcal{F}\)</span>，两集合之差也属于<span class="math inline">\(\mathcal{F}\)</span>。</li><li>（后三条）其次，经由上述定义在 <span class="math inline">\(\sigma\)</span> 域 <span class="math inline">\(\mathcal{F}\)</span> 上的概率函数 P 有一系列的性质（在此省略）。</li></ul><h2 id="随机变量的概念">随机变量的概念</h2><p>注意到，随机变量是概率论乃至统计学的核心概念之一，因此以下对这一概念进行进一步的阐释。</p><p>在《概率与统计》中，对于随机变量有两种定义（后者更为完全）</p><p><strong>定义1</strong>: 如果条件 S 下所有可能的结果组成集合 <span class="math inline">\(\Omega=\{\omega\}\)</span>， <span class="math inline">\(X=X(\omega)\)</span> 是 <span class="math inline">\(\Omega\)</span> 上有定义的实值函数，而且对任何实数 c，事件<span class="math inline">\(\{\omega: X(\omega)\le c\}\)</span> 是有概率的，则称 X 是随机变量。</p><p><strong>定义2</strong>: 设<span class="math inline">\((\Omega, \mathcal{F}, P)\)</span>是概率空间， <span class="math inline">\(X=X(\omega)\)</span>是<span class="math inline">\(\Omega\)</span> 上有定义的实值函数，如果对任何实数x，集合<span class="math inline">\(\{\omega: X(\omega)\le x\}\)</span> 属于<span class="math inline">\(\mathcal{F}\)</span>，则称X是<span class="math inline">\((\Omega, \mathcal{F}, P)\)</span>上的<strong>随机变量</strong>。</p><p>包含两个方面的内容：</p><ol type="1"><li>随机变量 <span class="math inline">\(X=X(\omega)\)</span> 是基本事件 <span class="math inline">\(\omega\)</span> 的函数，它体现随机而变</li><li>虽然<span class="math inline">\(X=X(\omega)\)</span> 的值不能预先确定（因为无法预料将出现什么样的 <span class="math inline">\(X=X(\omega)\)</span> ，但是对给定的 x，事件<span class="math inline">\(\{\omega: X(\omega)\le x\}\)</span> 是有确定概率的，这体现了随机变量的一种「规则性」</li></ol><p>最后，给出 wiki 上的定义作为参考：</p><blockquote><p>A <em><strong>random variable</strong></em> is a <em><a href="https://en.wikipedia.org/wiki/Measurable_function">measurable function</a></em> <span class="math inline">\(X: \Omega\rightarrow E\)</span> from a set of possible <a href="https://en.wikipedia.org/wiki/Outcome_(probability)">outcomes</a> <span class="math inline">\(\Omega\)</span> to a <em><a href="https://en.wikipedia.org/wiki/Measurable_space">measurable space</a></em> <span class="math inline">\(E\)</span>. The technical axiomatic definition requires <span class="math inline">\(\Omega\)</span> to be a sample space of a <em><a href="https://en.wikipedia.org/wiki/Probability_space">probability triple</a></em> (see the <em><a href="https://en.wikipedia.org/wiki/Random_variable#Measure-theoretic_definition">measure-theoretic definition</a></em>). <em>The probability that <span class="math inline">\(X\)</span> takes on a value in a measurable set <span class="math inline">\({\displaystyle S\subseteq E}\)</span> is written as</em> <em><span class="math inline">\({\displaystyle \operatorname {P} (X\in S)=\operatorname {P} (\{\omega \in \Omega \mid X(\omega )\in S\})}\)</span>,</em> where ${ } $ is the_<a href="https://en.wikipedia.org/wiki/Probability_measure">probability measure</a>_on <span class="math inline">\({\displaystyle (\Omega ,{\mathcal {F}})}\)</span>.</p></blockquote><p>在这样严格定义的随机变量的概念下，用分布函数来刻画随机变量的概率特性：</p><p><strong>定义</strong>：设 <span class="math inline">\(X=X(\omega)\)</span>是随机变量，称函数 <span class="math display">\[F(x)=P(X\le x), (x\in R)\]</span></p><p>为 <span class="math inline">\(X\)</span> 的分布函数，有时记为 <span class="math inline">\(F_X(x)\)</span>。</p><p>由此定义的分布函数有以下三条性质</p><ul><li>单调性：若<span class="math inline">\(a&lt;b\)</span>，则 <span class="math inline">\(F(a)\le F(b)\)</span></li><li><span class="math inline">\(\underset{x\rightarrow -\infty}{lim}F(x)=0, \underset{x\rightarrow +\infty}{lim}F(x)=1\)</span></li><li>右连续性：<span class="math inline">\(\underset{\delta\rightarrow 0+}{lim}F(x+\delta)=F(x)\)</span></li></ul><p>后两条的证明可考虑事件并公式，注意到右连续性是从分布函数的定义推导出来的，在此基础上，有</p><ul><li><span class="math inline">\(F(X&lt;x)=F(x-0)\)</span></li><li><span class="math inline">\(F(a&lt;X\le b)=F(b)-F(a)\)</span></li><li><span class="math inline">\(F(a\le X\le b)=F(b)-F(a-0)\)</span></li><li><span class="math inline">\(F(a&lt;X&lt; b)=F(b-0)-F(a)\)</span></li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>概率论基础（一）随机事件和概率</title>
      <link href="/posts/ddce4cf5/"/>
      <url>/posts/ddce4cf5/</url>
      
        <content type="html"><![CDATA[<h2 id="说明">说明</h2><blockquote><p>这部分开头是早先试图写的一个知乎专栏，后不了了之，现在准备整合一下内容变为一个参考性质的手册。</p></blockquote><p>关于使用的教材，课上使用的是 Ross 的 A Fist Course in Probability ，初学时翻阅过浙大茆诗松的概统，前者仅针对概率论，内容较为详实丰富，但读起来不算晓畅，后者则是中规中矩的中文入门教材。直到看到陈希孺《概率论与数理统计》，对于随机事件和概率的讲解鞭辟入里，惊为天书。最近重新整理，使用的是北大陈家鼎的《概率与统计》分为两小册，内容算是比较难的偏向数理证明，文字很精炼适合有一定基础的进行深入阅读。</p><p>以下为目录</p><ul><li>事件的概率 <a href="https://www.cnblogs.com/easonshi/p/12828891.html" class="uri">https://www.cnblogs.com/easonshi/p/12828891.html</a><ul><li>随机事件、概率的定义、古典概型、事件的运算、条件概率与独立性</li></ul></li><li>随机变量及概率分布 <a href="https://www.cnblogs.com/easonshi/p/12119486.html" class="uri">https://www.cnblogs.com/easonshi/p/12119486.html</a><ul><li>一维随机变量、多维随机变量（随机向量）、条件概率分布与随机变量的独立性、随机变量的函数的概率分布</li><li>补充：概率的公理化定义与随机变量的概念 <a href="https://www.cnblogs.com/easonshi/p/12828674.html" class="uri">https://www.cnblogs.com/easonshi/p/12828674.html</a></li></ul></li><li>随机向量 <a href="https://www.cnblogs.com/easonshi/p/12830303.html" class="uri">https://www.cnblogs.com/easonshi/p/12830303.html</a><ul><li>随机向量的分布、边缘分布、条件分布、函数的概率分布</li><li>随机变量的数学特征 <a href="https://www.cnblogs.com/easonshi/p/12830767.html" class="uri">https://www.cnblogs.com/easonshi/p/12830767.html</a><ul><li>数学期望（均值）与中位数、方差与矩、协方差与相关系数、大数定理和中心极限定理</li></ul></li></ul></li></ul><h3 id="reference">Reference</h3><ol type="1"><li>《概率论与数理统计》陈希孺；</li><li>《A Fist Course in Probability》Shelen M. Ross；</li><li>《概率论与数理统计教程（第二版）》茆诗松 等；</li><li>《概率与统计（第二版）》陈家鼎 郑忠国</li></ol><hr /><p>本节内容主要可分为</p><ul><li>什么是概率</li><li>古典概率计算</li><li>事件的关系与运算<ul><li>条件概率与独立性</li><li>全概率公式和贝叶斯公式</li></ul></li></ul><p>概率论是一门数学分支，同数学科目的其他分支一样，是建立在一些公理上的严格的数学体系，其研究的主要对象是随机变量、随机分布和随机过程。对于随机事件是不可能准确预测其结果的，但是我们可以描述其规律，分别是<strong>大数定理</strong>和<strong>中心极限定理</strong>，<strong>统计学</strong>正是建立在这个基础之上的。</p><h2 id="什么是概率">什么是概率</h2><p>概率是一个生活中常见的词汇，笼统地说来很容易理解，但若从理论或者从哲学地高度去分析，就可以提出一系列问题，具体可参考<strong>测度学</strong>，在此不给出一个定义，直接从一些实例中理解：</p><ol type="1"><li>简单的例子如投骰子、扔硬币等事件，虽然可能的结果又多种，但是根据生活的经验，我们可能会对于每种可能出现的结果给出一个描述其“<strong>可能性</strong>”的数量指标，是即为概率。如果忽略一个硬币的物理不均匀性和投掷因素的影响，我们有理由认为正反两面出现的机会是均等的，称之为“<strong>等可能性</strong>”。</li><li>生活中，第二天的天气也是未知的，但是我们每个人根据自己的经验可以对“明天是否会下雨”给出一个可能性的估计，可理解为一种心态或倾向性，是为<strong>主观概率</strong>。</li><li>对于一个随机的事件，比如说从一批产品中随机抽取一个，其合格的可能性是为知的。但若我们持续抽取，根据抽出的产品的质量情况，可以对其做出一个估计，或者说是<strong>用频率来估计概率</strong>，是为<strong>统计概率</strong>。</li></ol><p>以下对于相关概念做一些解释：</p><ul><li>从上述例子也可以看出，概率是对于<strong>事件</strong>而言的，不同于生活中的意思，概率论中，“事件”是指某种情况的的“陈述”，它可能发生，也可能不发生，发生与否，要到有关的“试验”有了结果以后，才能知晓。</li><li>对于“事件”进一步解释：1. 有一个明确界定的实验，即人为主动的意思，只是记录而不干预称为“<strong>观察</strong>”；2. 这个实验的全部可能结果，是在实验前就明确的。</li><li>对于“<strong>必然事件</strong>”“<strong>不可能事件</strong>”等同于概率为1和0的事件，严格的理论而言二者有所区别，但这种区别并无实际的重要性。</li></ul><h2 id="古典概率计算">古典概率计算</h2><p>古典概型可以说是我们生活中最为常见、也是最好理解的概率场景。其核心在于假定试验中所有结果出现的可能性是相等的，即上述所谓的等可能性，而古典概率的计算主要基于排列组合。在《A Fist Course in Probability》中第一章就讲排列组合，在此给出基本公式。</p><h3 id="组合分析">1 组合分析</h3><ul><li>排列：从n个元素中取出k个元素，k个元素的排列数量为 <span class="math inline">\(P_k^n=n!/(n−k)!\)</span></li><li>组合：和排列不同的是，组合取出元素的顺序不考虑 $C_k^n=n!/k!(n−k)! $</li><li>常用公式 <span class="math display">\[  \begin{aligned}    (2n)!!=(2n)(2n−2)…2 \\    C_n^0+C_n^1+…+C_n^n=2^n \\    C_n^0+C_n^2+…=2^{n−1} \\    C_m^{n+m}+C_{m+1}^{n+m}=C_{m+1}^{n+m+1}  \end{aligned}  \]</span></li></ul><blockquote><p>古典概型中涉及到一些计数公式；原以为除了在概率论的考试中涉及以后不会遇到，没想到后来一次通选课的考试居然也涉及到了；在此补充。</p><ul><li>高中时候讲到的分类的加法原理、分步骤的乘法原理</li><li>有重复的排列数：n 种球放回取 m 次，共 <span class="math inline">\(n^m\)</span></li><li>排列数：无放回取 m 次，共 <span class="math inline">\(A_n^m={n!\over (n-m)!}\)</span></li><li>组合数：n 种球无放回取 m 次，不计顺序，共 <span class="math inline">\(C_n^m=(\begin{matrix}n\\m\end{matrix})={n!\over m!(n-m)!}\)</span></li><li>分组方式数：n 个不同元素分为有顺序的 k 组，共 <span class="math inline">\((\begin{matrix}n\\ n_1, ...,n_k\end{matrix})={n!\over n_1!...n_k!}\)</span> 。形式上看是组合数的推广，后者可以看做是特例，其关注的是两组中的一组。直观的对于公式的理解：n 个不同元素排列共 <span class="math inline">\(n!\)</span> 种可能，将依次的 <span class="math inline">\(n_1,...,n_k\)</span> 个元素认为是一组的，顺序无关，所以分母上除以各自的组内排列的可能。再次注意，组间是有顺序的。如 5 个元素分为 <span class="math inline">\((1,2,2)\)</span> 三组，不讲顺序，则还要在公式上除以 2。</li><li>可重复分组数：n 个球有放回取 m 次，结果不计顺序，共 <span class="math inline">\(C_{n+m-1}^{m}=C_{n+m-1}^{n-1}\)</span> 。这里和上一中情况的区别在于取到的 m 个球随机。需要换一种想法：和每个球标号序号，然后把 m 个球按序号排列，显然就变成了有序的 n 组，其中有 <span class="math inline">\(n-1\)</span> 个「空格」；反过来，我们还没有取出球，但我们知道了最终的结果是 <span class="math inline">\(n-1\)</span> 个分隔符分割了 m 个球（高中时候好像是用 0 和 1 来示意），也就是从 <span class="math inline">\(n+m-1\)</span> 个元素中选 <span class="math inline">\(n-1\)</span> 个分隔符，所以是 <span class="math inline">\(C_{n+m-1}^{m}=C_{n+m-1}^{n-1}\)</span> 。注意，这里的每一个分组是<strong>非等可能</strong>的（前面的分组方式数按这种定义是等可能的）。</li></ul></blockquote><h3 id="计算示例">2 计算示例</h3><ul><li>n双相异的鞋共2n只，随机分为n堆，每堆2只，问“各堆都自成一双鞋”这一事件E的概率是多少？<ul><li>对于把n个相异物件分成k堆，分法有 $n!/(r_1 !r_2 !…r_k !) $，注意上式是有序的，所以对于本题可分为 <span class="math inline">\(N=(2n)!/2^n\)</span> 种（所有可能情况）。对于事件<span class="math inline">\(E\)</span> ，可以看作把每一双鞋看成一个整体分成n堆，可见有 <span class="math inline">\(M=n!\)</span> 种可能性。于是 $P(E)=M/N=(2^n n!)/(2n)!=1/(2n−1)!! $</li><li>另一种算法：把这2n个鞋子从左到右排成一排，然后把1，2位置的看作一堆，3，4看成一堆。因此有所可能情况为种，而各成一堆的情况下，每组中第一个元素取定后，第二个元素是确定了的，因此可能的情况有$ (2n)(2n−2)…2=(2n)!!<span class="math inline">\(种，因此\)</span>P(E)=M/N=2^n/(2n)!!=1/(2n−1)!!$</li></ul></li></ul><h2 id="事件的关系与运算">事件的关系与运算</h2><h3 id="基本关系与运算">1 基本关系与运算</h3><p>上述已对随机事件有所介绍，对于任一事件，我们想要用概率的方式去描述它。但是对于我们感兴趣的复杂事件来说，直接计算其概率是困难的，<strong>因此我们希望能够利用复杂事件与简单事件之间的关系，以便利用简单事件的概率去计算复杂事件的概率</strong>。正如微积分中，利用导数所满足的法则，可据此计算出复杂函数的导数，若直接利用定义来计算则太过复杂。以下对于事件的关系和运算做简单描述，很多是符合直觉的，注意这部分可以从<strong>集合论</strong>的角度来考虑。</p><ul><li><strong>蕴含、包含和相等</strong></li></ul><p>字面理解，若A蕴含B，也可说为B包含A，记为 <span class="math inline">\(A\subset B\)</span>，这意味着A发生则B一定发生，从集合论的角度来说A是B的子集，从韦恩图上来看A被B所“包围”。</p><ul><li><strong>互斥和对立</strong></li></ul><p>若A和B不能在同一次试验内都发生，则称它们为互斥的。对立事件是一种特殊的互斥事件，即B是A的补集，记作 $ B={A} $ 。</p><ul><li><strong>事件的和（并）</strong></li></ul><p>对于两事件A和B，定义事件和<span class="math inline">\(C = \{A发生，或B发生\}\)</span>，记作 <span class="math inline">\(A\cup B\)</span>, 或 $A+B $，即为代表两事件的集合的并集，通过韦恩图来看更为直观。</p><p><strong>概率的加法定理</strong>：对于互斥事件，我们有，若干互斥事件之和的概率，等于各事件概率之和。即<span class="math inline">\(P(A_1+A_2+…)=P(A_1 )+P(A_2 )+…\)</span></p><ul><li><strong>事件的积（交）、事件的差</strong></li></ul><p>定义事件积<span class="math inline">\(C = \{A，B都发生\}\)</span>，记为 <span class="math inline">\(A\cap B\)</span> 或 $AB $。 定义事件差 <span class="math inline">\(C = \{A发生，B不发生\}\)</span>，记为 <span class="math inline">\(A−B\)</span> 。</p><p>容易看出上述定义的事件关系及其运算满足以下性质。同时，虽然上面借用了算术中的相关名词，算术法则不一定能用于计算事件运算（因为本质上可以说是集合之间的关系）。注：可以根据韦恩图进行直观的理解不需要死记硬背。</p><ul><li><strong>事件和、事件积的交换律、结合律</strong></li></ul><p><span class="math inline">\(A\cup B = B\cup A,AB=BA\)</span></p><p><span class="math inline">\(A\cup B\cup C = (A\cup B)\cup C = A \cup (B\cup C), ABC = (AB)C = A(BC)\)</span></p><ul><li><strong>事件和对事件积、事件积对事件和的分配律</strong></li></ul><p><span class="math inline">\((A\cup B)C = AC\cup BC\)</span></p><p><span class="math inline">\((AB)\cup C = (A\cup C)(B\cup C)\)</span></p><ul><li><strong>棣莫弗公式（对偶法则）</strong></li></ul><p><span class="math inline">\(\overline{A\cup B} =\bar{A}\cap\bar{B}\)</span></p><p><span class="math inline">\(\overline{A\cap B} = \bar{A} \cup \bar{B}\)</span></p><p>此公式可以推广到n个事件：<strong>事件和的非等于事件非的积；事件积的非等于事件非的和</strong>。</p><blockquote><p>当时怎么没有介绍概率的加法公式，补充如下： <span class="math display">\[P(A\cup B)=P(A)+P(B)-P(AB)\]</span> 其推广，Jordan 公式 <span class="math display">\[P(\bigcup^n_{i=1}A_i)=\sum_{k=1}^n(-1)^{k-1}p_k\]</span> 其中 <span class="math display">\[p_k=\sum_{1\le j_1\le j_2\le...\le n}P(A_{j_1}...A_{j_k})\]</span> 可以根据韦恩图直观理解。</p></blockquote><h3 id="条件概率">2 条件概率</h3><p>条件概率是概率论中非常重要的概念，此后随机变量的条件分布等一系列知识点需要建立在对于条件概率的理解上。一般来讲，条件概率就是在附加一定条件之下所计算的概率。严格来说，现实中的任何概率都是条件概率：假定你在实验室投掷硬币，出现正面的频率约为1/2，你只能说在此时此地，在这种试验条件下，可以认为这枚硬币是均匀的，试验环境即为“<strong>条件</strong>”。形式化的定义：设有两事件A，B，在给定B发生的条件下A的条件概率记为 <span class="math inline">\(P(A|B)\)</span> ：</p><p><span class="math display">\[P(A|B) = \frac{P(AB)}{P(B)}\]</span></p><p>其中，当<span class="math inline">\(P(B)=0\)</span>时，上式无意义，因此在一般的定义中还要求<span class="math inline">\(P(B)\)</span>不为零。当然，在高等概率论中也会给出在<span class="math inline">\(P(B)=0\)</span>时概率的定义，在此不表。</p><h3 id="事件的独立性">3 事件的独立性</h3><p>一般情况下，A的无条件概率和在给定B发生之下的条件概率是有差异的，这反映了两者之间的<strong>关联</strong>。例如，若 $P(A|B)&gt;P(A) $，则B的发生使A发生的可能性增加的，B促进了A的发生。反之，若 $P(A|B)=P(A) $，则B的发生与否与A发生的可能性无关，这就称为两事件独立。因此上式即可作为事件独立的定义。然而，根据条件概率的定义，上式<strong>等价于：</strong></p><p>$P(AB)=P(A)P(B) $</p><p>在这条式子中，A和B是对称的，即“<strong>A和B相互独立</strong>”，更好得反映了事件独立的概念，因此在一般的教材中采用此作为独立性定义。推广到多个事件，其独立性定义如下：设 $A_1,A_2,...; $为有限或无限个事件，若从中任意取出有限个事件，都有：</p><p><span class="math display">\[P(A_{i_{1}}A_{i_{2}}...A_{i_{m}}) = P(A_{i_{1}})P(A_{i_{2}})...P(A_{i_{m}})\]</span></p><p>则称事件 <span class="math inline">\(A_1,A2,...\)</span><strong>（相互）独立</strong>。注意，这个定义与由条件概率出发的定义等价：<span class="math inline">\(P(A_{i_{1}}|A_{i_{2}}...A_{i_{m}}) = P(A_{i_{1}})\)</span> 对于任意的 $A_{i_1} $都成立。从这里也可以看到，n个事件独立和此n个事件两两独立是不同的，后者只能保证在“简单条件”下某一事件的概率不受影响，但不意味着其他任意多个事件的发生与否与它是否有关联。</p><p>在实际运用中，虽然我们常用两种等价定义来形式化得证明事件的独立性，但在更多的情况中，我们假定事件满足独立性，然后用<span class="math inline">\(P(A_{i_{1}}A_{i_{2}}...A_{i_{m}}) = P(A_{i_{1}})P(A_{i_{2}})...P(A_{i_{m}})\)</span>式，从简单事件的概率出发计算事件积的概率。因此，从另一个角度出发来看定义式，则可认为是<strong>独立事件事件积的乘法公式</strong>。</p><h3 id="全概率公式">4 全概率公式</h3><p>对于一组事件 <span class="math inline">\(B_1,B_2,...\)</span> 来说，若它们两两互斥，并且在每次试验中至少发生一个（事件积为空，概率之和为1），则称这组事件为一个“<strong>完备事件群</strong>”。形象地理解，这些事件对于所有可能发生的情况构成了一个分割，用集合论或文氏图来理解更为直观。例如，一个事件B和它的对立事件即构成完备事件群。考虑任一事件A， $A=A=AB_1 +AB_2 + ... $ ，因 $B_i $两两互斥，可见 <span class="math inline">\(AB_i\)</span> 也两两互斥，因此有 <span class="math inline">\(P(A)= P(AB_1) +P(AB_2) + ...\)</span> ，再由条件概率公式，</p><p><span class="math display">\[P(A)= P(B_1)P(A|B_1) +P(B_2)P(A|B_2) + ...\]</span></p><p>称为全<strong>概率公式</strong>，即全部概率被分成许多部分之和，因此，在现实中，若某一事件A经常伴随 <span class="math inline">\(B_i\)</span> 发生，我们可以构造一组 <span class="math inline">\(B_i\)</span> 来计算A的概率。</p><p>从另一个角度来理解，可以把 <span class="math inline">\(B_i\)</span> 看作导致事件 <span class="math inline">\(A\)</span> 发生的一种可能途径。对不同途径，A发生的概率即条件概率各各不同，而采取哪个途径却是随机的。因此对于所有可能的途径 $ P(B_i)$ 作加权平均。</p><blockquote><p>特别的， <span class="math inline">\(A,\bar A\)</span> 构成一个完备事件组，于是 <span class="math inline">\(P(B)=P(A)P(A|B)+P(A)P(A|\bar B)\)</span></p></blockquote><blockquote><p>补充一道题：证明 n 个签中有 m 个为目标，无放回抽样，<strong>则每一次「中签」的概率均为</strong> <span class="math inline">\(m/n\)</span> 。</p><p>记抽中这一事件为 <span class="math inline">\(A_j\)</span>。下用归纳法证明。首先，必有 <span class="math inline">\(P(A_1)=m/n\)</span>；假设上面的概率公式在 <span class="math inline">\(j-1\)</span> 时成立，则对于第 j 次抽样，我们用全概率公式： <span class="math display">\[P(A_j)=P(A_1)P(A_j|A_1)+P(\overline{A_1})P(A_j\overline {A_1})\]</span> 这样，后面的两个条件概率就转化成了 <span class="math inline">\(j-1\)</span> 的形式，代入假设中的公式（分别为 <span class="math inline">\(m-1\over n-1\)</span>, <span class="math inline">\(m \over n-1\)</span>）即可得 <span class="math inline">\(P(A_j)={m\over n}\)</span></p></blockquote><h3 id="贝叶斯逆概率公式">5 贝叶斯（逆概率）公式</h3><p>由全概率公式可得著名的<strong>贝叶斯公式</strong>：</p><p><span class="math display">\[P(B_i|A)= \frac{P(AB_i)}{P(A)} = \frac{P(B_i)P(A|B_i)}{\sum_{j}{P(B_j)P(A|B_j)}}\]</span></p><p>刚看到这个公式有点绕，似乎只是一个数学变换，更重要的是理解其意义。在等式的右边，我们已知了 <span class="math inline">\(P(B_i)\)</span> 和 $P(A|B_i) $，而在等式右边，我们希望得到的是 $P(B_i|A) $，也就是在A发生的情况下，新的信息之下我们对于事件 <span class="math inline">\(B_i\)</span> 的可能性有了新的认识。</p><p>如果我们把A看成“结果”，把看成导致者结果的可能“原因”，则可形象地把全概率公式看作成为“<strong>由原因推结果</strong>”，而贝叶斯公式作用在于“<strong>由结果推原因</strong>”：现在一个结果A发生了，在众多可能的原因中，哪一个导致了结果。</p><p>好的说了这么多也不知道有没有表达清楚，反正我一开始学的时候一脸懵逼，还是看一个例子理解一下：</p><ul><li>某种病菌在人群中带菌率为0.03，由于检测技术存在一定的误差，带菌者检测出阳性的概率为0.99，而未带菌者检出阳性的概率为0.05，问若一人检测出阳性，其带菌的概率。</li><li><span class="math inline">\(P(阳性|带菌) = 0.99\)</span>； <span class="math inline">\(P(阳性|不带菌) = 0.05\)</span>；<span class="math inline">\(P(带菌)= 0.03\)</span>； 问 $P(带菌|阳性) $</li><li>由贝叶斯公式，易得答案为 <span class="math inline">\(\frac{0.03\times0.99}{0.03\times0.99+0.97\times0.05} = 0.380\)</span></li></ul><p>一个有趣的结论：检测结果为阳性的患者带菌的可能性不到0.4，理由很简单：因为人群中带菌率很低，即使误检的可能性很低，因为其基数很大，所以检测结果为阳性的人中任有很大一部分是这些误检患者。</p><p>从这个例子也可以看出贝叶斯公式在统计学之中的重要意义。在统计学中，我们搜集相关的数据，希望能找到所感兴趣问题的答案（由结果找原因），然而，在此之前，我们需要对其有一个大致的估计（即<strong>先验概率</strong>），然后根据所得到的信息更新我们的估计（即<strong>后验概率</strong>）。事实上，根据这个公式的思想发展了一整套统计推断方法，叫做“<strong>贝叶斯统计</strong>”。</p><hr /><p>以下补充关于贝叶斯公式的论述</p><ul><li>在贝叶斯公式中，我们把 <span class="math inline">\(P(B_i)\)</span> 叫作<strong>先验概率</strong>，它们的值是根据先前的只是和经验确定出，既可以利用频率和概率的关系来确定，也可以基于「主观概率」来确定。</li><li><span class="math inline">\(P(B_i|A)\)</span> 是在观察到事件A后发生 <span class="math inline">\(B_i\)</span> 的概率，称之为<strong>后验概率</strong>，贝叶斯公式可以看成是从先验概率到后验概率的转换公式。</li></ul><blockquote><p>贝叶斯公式在之后的无论什么课程中真的用的超级多……</p></blockquote><hr /><p>另外，在《概率与统计》一书中，「补充知识」部分提到了和概率相关的一些内容，有助于对其理解，在此列出。</p><p>分为四部分：1. 关于概率论的起源；2. 几何概型；3. 熵；4. 概率的另类应用（概率方法解决确定性问题）。</p><p>信息量；熵；熵定理（各事件等概率是熵最大为 <span class="math inline">\(\log(n)\)</span> ）；熵增加原理</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> Statistic </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 概率论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>思修课程论文：欲望与幸福——构成幸福的多方面因素</title>
      <link href="/posts/a02b9abd/"/>
      <url>/posts/a02b9abd/</url>
      
        <content type="html"><![CDATA[<h2 id="何谓幸福西方幸福论的若干命题">何谓幸福？西方幸福论的若干命题</h2><p>何谓幸福？根据西方伦理学的传统，幸福的定义大致可以分为三种类型，分别可概括为“快乐即幸福”，“幸福是需要满足的心理体验”以及“幸福是合乎德性的现实活动”。 对于第一种观点，感性主义者认为人的自然本性就是趋乐避苦，一切引起快乐的就是善，导致痛苦的就是恶，并把快乐视为人生追求的最高目标，作为衡量一个人是否幸福的标准。穆勒说，“幸福是指快乐与免除痛苦，不幸福是指痛苦和丧失愉快。”那么，是否幸福就等价于快乐呢？显然，当我们在饥寒交迫的时候得到一份美食，必然是会感到快乐的，但是，面对前途未卜的人生图景，甚至还要过着朝不保夕的生活，我们难道会幸福吗？答案想必是否定的，因此，我们不能简单地把幸福和快乐划等号，而感性主义的一大缺陷正是在于未能把快乐感和幸福感从根本上区分开来。</p><p>在我看来，两者的重要区别之一在于，快乐感更多是短暂的，而幸福感则是历时的、持久的。从上面的例子可以看出，快乐可以是因为现世的一时满足，而幸福感更多源于对未来的期许，稳定且热爱的工作、持久可靠的友谊、美满融洽的爱情，这些一般意义上可以引起幸福联想的都具备对未来的某种保障，可见幸福感的特征之一便是持久性。另外，两者的另一个区别在于，快乐感更多是感性层面的，而幸福感则更多的理智层面的。简单的欲望满足可以带来快乐，而这种快乐往往是不自觉地，品味到美食、欣赏到音乐，人们自然会感到快乐，美的事物可以引起人生理上的愉悦感，但是这种外部的刺激很难引起内在的幸福感，是为两者区别之二。</p><p>对于第三个观点，即“幸福是合乎德性的现实活动”，苏格拉底、柏拉图、亚里士多德是这种理性主义幸福观的代表人物。苏格拉底认为德性就是幸福，而亚里士多德认为“幸福就就一种合乎德性灵魂的现实活动”。在我看来，虽然这一观点破除了“快乐即幸福”的简单幸福论，但这一论述过度强调个人德性的完满而忽略了客观的因素，只提供了一条追求的幸福的途径，而没有考虑到幸福的多重含义。</p><p>相较而言，我更认可第二种观点，即“幸福是需要满足的心理体验”，这里的需要（不妨将之与“需求”等价来看）既有主观层面也有客观层面的内容，可以说较好的平衡了上述两种观点。“它突破了传统哲学关于‘幸福是人生的重大的快乐’的界定，十分清晰地把构成幸福的基本元素分离开来，初步揭示了属于幸福两大基本元素之间特殊的原因与结果关系，揭示出幸福主观因素和客观因素之间的形式与内容特性。” 关于需求及其与欲望的关系，将在下文中详细展开。</p><h2 id="何谓欲望欲望与需求">何谓欲望？欲望与需求</h2><p>那么，什么是欲望呢？按照百度百科的定义，“欲望（Desire）是由人的本性产生的想达到某种目的的要求，欲望无善恶之分，关键在于如何控制。世界上所有动物最原始的、最基本的一种本能。从人的角度讲是心理到身体的一种渴望、满足，它是一切动物存在必不可少的需求。一切动物最基本的欲望就是生存与存在。”从这个角度来理解，欲望是关乎本能的，“生死根本，欲为第一”，它是本能的一种释放形式，构成了人类行为最内在与最基本的要素，更接近潜意识中的某种驱力，这个意义上类似于弗洛伊德所谓的“力比多”。</p><p>和欲望相近的一个词语是需求，心理学上马斯洛把人的需求分为五（六）个层次，分别为生理需求、安全需求、社交需求、尊严需求、自我实现需求（和超自我实现）。 他认为个人绝大多数欲望和冲动都是相互关联的，驱使人类的是若干始终不变的、遗传的、本能的需求，是人类天性中固有的东西；同时人类的需求是以层次的形式出现的，由低级的需求开始，逐级向上发展到高级层次的需求，当一组需求得到满足时，这组需求就不再成为激励因素了。</p><p>简单来说，既然欲望即本能，那么它所对应的是一些简单的需求，如生理需求、安全需求，而更高层次的需求则不适合称之为欲望。这是欲望与需求的联系，而欲望和需求的一大区别在于，马氏认为需求是层次性的，随着一项需求的强度逐渐降低，另一项需求逐渐上升，而已被满足的需求不再成为激励因素；与之相反，欲望的一大特征便在于其始终存在，存在于人的本性之中构成内在的持续的驱力。相较于需求，欲望的沟壑更难被满足（甚至无法被满足）。</p><h2 id="幸福是否就是欲望得到满足">幸福，是否就是欲望得到满足？</h2><p>那么，幸福是否就是欲望的满足呢？显然，既然欲望是人的本能，无关乎道德也没有对错判断，因此它带来的既有好的一面也有恶的一面。我们不能简单地用欲望的满足来作为是否幸福的衡量指标。那些贪污腐败、违法乱纪的人，用尽心机搏得地位与财富，可以说是极大地满足了欲望，但是他们真的幸福吗？俗话说做贼心虚，那些人往往生活在担心事情暴露的惴惴不安和内心道德律令的双重煎熬之下，谈何幸福？何况，现代心理学、社会学研究表明，物质因素对幸福的作用，受边际递减规律的影响，也就是说，财富、地位越高，相对来说物质增长的效用（幸福感）越少。对我们普通人来说，那些亿万富翁的财产之间的区别，不过在于多还是少一个零而已，实际上只是数字上的差别而没有实质性的区别。</p><p>另一方面，欲望的满足不能带来幸福的原因在于，欲望几乎是永无止境的，一旦我们获得了所欲求之物，又会被下一件事物所吸引。正如叔本华所言，欲望的满足是短暂而虚幻的。想吃一块巧克力蛋糕的人，体验到的不过是某种短暂而转瞬即逝的快乐罢了，这种快乐很快会被对其他事物的欲望给取代，不然就是因为吃太多而感到恶心。因此，我们永远无法得到片刻休息，我们的存在注定要受苦。 从这点来看，因为欲望不可能被满足的特性，它恰恰是不幸福的根源而非幸福的原因。这种说法或许有些极端，但却有力的表明了单纯的欲望满足并不能带来持久的幸福，若一昧为了一己之欲而不考虑其他有价值的事物，很有可能被欲望所迷惑而失去人生的方向，甚至为了追求私欲而不择手段以至于违背社会伦理和法律规范，造成无法挽回的后果。可以认为，欲望具备的另一个特点是迷惑性，有人说，“欲望是对缺乏的意识，以及我们为了填补缺乏所付出的努力，而缺乏却永不止息地再生。”这种说法有其见地，人不仅对于己所未有之物产生欲望，即使对已具备之物仍会因主观认为“缺乏”而欲望不减；欲望更包含着主动的向度，驱动我们不断索取努力填补，而欲望却永不止息地再生——于是人们便如同希腊神话中西西弗斯般推着永远无法到顶的石头处在上山下山的途中，永无穷尽。</p><p>这是欲望恶的一面，它趋势我们不是向善的方向前进而是依循着生物性的本能行事，甚至不断做一些无意义的举动。因此，我们需要对欲望加以控制，而不能成为欲望的奴隶。一定层面上，幸福不在于欲望的满足，而恰恰在于对欲望的控制，中国古代智慧中“知足常乐”、关于“得失”的辩证观点以及《道德经》中“祸兮福之所倚，福兮祸之所伏”的论述即在于此。</p><h2 id="幸福的因素需求社会欲望与理想">幸福的因素：需求、社会、欲望与理想</h2><p>回过头来，构成幸福的因素有哪些呢？从以上分析可以看到，其中既有生理上的简单满足（可以理解为快乐），又有精神层面的多方面要素。</p><p>马斯洛的需求层次理论或许可以给出一些启发性的思考。例如，若我们把快乐理解为肉体上的、生理上的简单满足，那么这一理论可以解释为什么快乐是幸福的因素之一。马氏指出，人类的需求是以层次的形式出现的，只有当低层次的需求得到满足之后，才会追求更高层次的需求。试想一个生活在战乱中的人，衣食尚不能得到保障，人与人之间的关系因为政治的动乱、经济的贫瘠而充满紧张，又怎会追求名声、地位呢？可见，只有当人们的生理需求、安全需求得到满足之后，才会追求、获取更高层次的需求，也就是说，低层次需求的满足所带来的快乐是高层次需求的满足所（可能）带来的幸福的基础。设想一个疾病缠身的人，无法得到生理上的自由与满足，或许也很难感到快乐乃至幸福。</p><p>马克思主义的幸福观可以帮助我们对幸福进行另一方面的思考。需求层次理论是从个人的角度来探索人的基本需要有哪些，但人毕竟是社会性的生物，因此仅仅用这一理论来解释幸福感还有些不足。马克思认为，“人的本质是社会关系的总和”，社会性是人的本质特征，人不能隔离开环境而追求个体意义上的幸福，追求小我的幸福无疑是片面的、不可持续的。西方很多富豪在发展事业的基础上也专注于慈善，如卡内基、比尔盖茨、巴菲特等，很多人建立了慈善基金会，而在我国经济水平不断发展的同时，慈善意识也在觉醒，越来越多的人开始关注慈善。为什么在以经济利益为导向的高度商业化的社会中人们却愈发关心慈善？这是因为个人从财富上获得的幸福感是有限的（边际效益递减），而在满足了个人基本需求的前提下，“只有在为社会做贡献、为他人服务的过程中，我们才能获得幸福所需要的环境和条件，产生更大的幸福感，实现个人幸福与社会进步的相互促进。” 可以说，这种对他人、对社会的关注也是我们人性之中不可或缺的一个组成部分，我们在帮助他人、服务社会的过程中从他人身上获得了快乐的“通感”，将个人的幸福融入到了更普遍性的幸福中。生活中，我们常能看到那些乐于为他人提供帮助之人，生活得非常充实，而且“投之以桃报之以李”，我们对于笑脸相迎之人多会以恩报恩以诚相待，所以那些人往往与周边人能有非常融洽的关系，又怎能不幸福呢？</p><p>再者，对待欲望的态度也影响着是否能够幸福。根据叔本华的观点，当欲望不能满足的时候，是痛苦；当欲望得到满足之后，是无聊，因此人的一生就像一个钟摆，在痛苦和无聊之间来回摆荡。既然欲望终究只能带来痛苦，那么对于他来说缓解痛苦的唯一方法是“禁欲”（“审美的凝视”），即对欲望的控制，此观点也代表了很多禁欲主义者的看法。我认为他的观点有些悲观而太过极端——既然欲望是人的本性，又怎能被压抑呢？况且欲望有其积极的一面。相较而言，我认为更好的方法适度地去控制欲望，控制好度，既要顺从一部分合理的基本的欲望，又不能成为欲望的奴隶。例如，追求生存的欲望促使人类文明的延续，追求基本温饱的欲望成就国家和社会不断发展，追求自由、法治的欲望推进社会制度的完善修正。我们要正确地看待欲望积极的一面，不能因此害怕它消极的一面而逃避，甚至陷入虚无主义，这就矫枉过正了。总而言之，我们应当适度控制欲望，不能为欲望所控，但也不能过度克制欲望，视其为洪水猛兽。</p><p>此外，理想信念也是构成幸福的一个重要因素。正如上文所说，幸福是长久的，是对于未来的某种期许，而理想同样符合这些特征。理想是对未来的美好向往和追求，它来源于现实而超越现实，是对现状的改善和期许，为我们提供了前进的方向。很多时候，一件追求已久的事物，真正获得之后并不会有太多的喜悦，而比这更难得的却是追求过程中的持续动力。结果本身带来的快乐或欲望的满足是短暂的，但在追求的过程中所体验到的却可能是持久的满足和幸福。因此，一个建立在正确的价值观之上的理想信念，往往是幸福的源泉，试看那些白手起家艰苦奋斗的企业家，创新苦干不计得失的科研工作者、春风化雨立德树人的教师，他们在追求理想的路上难道会不幸福吗？如苏格拉底所说，“人类的幸福和欢乐在于奋斗，而最有价值的是为理想而奋斗”，在追求理想的道路上，纵使客观上的一些情况是不尽人意的，但内心的信念激励着我们，为了最终理想而献身的价值感鼓舞着我们，有理由相信，为着理想而奋斗的人生的幸福的。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新闻学概论 笔记</title>
      <link href="/posts/c4b73a4e/"/>
      <url>/posts/c4b73a4e/</url>
      
        <content type="html"><![CDATA[<blockquote><p>本笔记原为旁听新闻学概论时的笔记，原本采用幕布撰写，转成 MD 之后格式存在着一定的问题，由于时间关系不再做调整。</p></blockquote><h2 id="参考教材">参考教材</h2><p>李良荣：《新闻学概论（第六版）》 陆定一：《我们对于新闻学的基本观点》 黄旦：《中国新闻传播的历史建构——对三个新闻定义的解读》 舒德森：《新闻社会学》，第一章 舒德森：《发掘新闻——美国报业的社会史》，绪论、第一章 李普曼：《公众舆论》，第一章、第二十三章 勒庞：《乌合之众》，第一卷 弗雷德里克•S•西伯特等：《传媒的四种理论》，引言、第二章 哈林、曼奇尼：《比较媒介体制：媒介与政治的三种模式》，第二章、第四章 班尼特：《新闻：政治的幻像》，第二章 塔奇曼：《做新闻》第二章、第三章 塔尔德：《传播与社会影响》第九章 弥尔顿：《论出版自由》 约翰•密尔：《论自由》，第二章，“论思想自由和讨论自由” 以赛亚•柏林：《自由论》，“两种自由概念” 杜威：《公众及其问题》第一章 科瓦齐等：《新闻的十大基本原则：新闻从业者须知和公众的期待》，导论 艾伦：《新闻文化》，第四章 凯瑞：《作为文化的传播》，第一章，第二章 波兹曼：《娱乐至死》，第一章、第七章</p><h2 id="第一讲-导论">第一讲 导论</h2><ul><li><strong>01</strong></li><li>大纲与物流 syllabus &amp; logistic</li><li>课程的安排<ul><li>新闻的本体<ul><li>新闻的本体问题</li></ul></li><li>新闻的要素 #应然<ul><li>真实性原则；客观性原则</li></ul></li><li>新闻体制 #实然<ul><li>新闻体制：新闻生产的经济环境；新闻生产的政治环境</li></ul></li><li>新闻生产<ul><li>新闻生产的社会学；新闻生源与新闻专业主义</li></ul></li><li>新闻与受众</li><li>新闻与文化</li></ul></li><li>书单<ul><li>迈克尔•舒德森 《发觉新闻：美国报业的社会学》</li><li>迈克尔•舒德森《好公民：美国公共生活史》</li><li>李普曼 《公众舆论》</li><li>赫伯特•甘斯 《什么决定新闻》</li><li>盖耶•塔奇曼 《做新闻》<strong>要看序言</strong></li><li>比尔•科瓦奇 &amp; 汤姆•罗森斯蒂尔《新闻的十大原则：新闻从业者须知和公众的期待》理论和实践结合</li><li>杰克•鲁乐 《每日新闻 永恒故事》 翻译糟糕</li><li>波兹曼 《娱乐至死》 &amp; 《童年的消逝》</li><li>约书亚•梅洛维兹 《消逝的地域：电子媒介对社会行为的影响》</li><li>尼克•库尔德里 《媒介仪式：一种批判的视角》</li><li>亨利•詹金斯 《融合文化：新媒体和旧媒体的冲突地带》</li><li>亨利•詹金斯 《文本盗猎者：电视粉丝与参与文化》 <strong>粉丝文化</strong>；早期翻译为<strong>迷群</strong></li><li>张玮玉 《粉丝公众》</li><li>文森特•莫斯可 《传播政治经济学》</li><li>邱琳川 《信息时代的世界工厂：新工人阶级的网络社会》 下面三本一个系列</li><li>邱琳川 《新媒体事件研究》 可能不适合现在读，现在可能不让出版</li><li>杨国斌 《连线力：中国网民在行动》</li><li>李永刚 《我们的防火墙：网络时代的表达与监管》</li><li>詹姆斯•韦伯斯特 《注意力市场：如何吸引数字时代的受众》</li></ul></li><li>传播学院：南加州、宾夕法尼亚 #学校</li><li></li><li>传播是一种底层机制</li><li>传播是人类交往的基本形式</li><li>关于传播的几种话语 #定义<ul><li>传播是传递（5w模型）</li><li>传播是控制（宣传与行政指导）</li><li>传播是<strong>游戏</strong>（the play theory)）老番茄</li><li>传播是权力（文化霸权）</li><li>传播是共享和互动（传播是创造和维持社区，身份与文化的仪式）</li></ul></li><li>传播学：跨学科熔炉（一种后现代属性）<ul><li>多种理论、多种方法</li><li>学术与务实联系紧密</li><li>open to new possibilities</li><li>大数据的先锋</li></ul></li><li>传播<ul><li>新媒体；ICT4D；战略传播/危机沟通；公共传播（应用传播）；健康传播；政治传播；人际传播</li></ul></li><li>传播学在中国（<strong>刘海龙</strong>）<ul><li>重构传播研究：传播communication 公众通讯工具 mass media 舆论 public opinion</li><li>将一个松散的研究领域加上限制和规定，将其构建成一个统一性的学科discipline</li><li>弱化了实证主义的特征，忽视了研究方法</li><li>学科建设：<strong>新闻无学，以传播为学</strong></li><li>a field in the making</li></ul></li><li>思考：传播的合法性/身份危机？<ul><li>一个学科academic discipline有什么特征？新闻学科符合这个特征吗？你能不能说出一两个新闻学科独特的理论和概念？新闻学科有什么独特的研究方法吗？请说出一两个你在学科的重要著作和学者？你的学科存在合法性危机吗？</li></ul></li><li><strong>02</strong></li><li>新闻研究是什么<ul><li>传播学者更关心institutionalized communication，而新闻是历史最悠久、最有社会影响力的一种机构性传播现象。</li><li>拟态现实 pseudo-environment</li><li>中介化的现实 mediated reality 是对现实的一种建构：media selection and media framing</li><li>news as a form fo social knowledge (Parker, 1940)</li><li>第一手现实还是第二手现实 the first-hand reality vs. the second-hand reality, Lippmann,1922</li></ul></li><li>新闻的社会性<ul><li>新闻是一种集体的认知活动</li><li>新闻生产是institution，组织化的<ul><li>什么是新闻？从本体论意义上，如果谈新闻news逻辑上要预设某种客体；其次客体是可知的，可被验证的。</li><li>对可认知的客体的认知，从新闻生产的角度来讲，不是由个人所能独立完成的，它是一个社会的过程，是在社会关系，社会交往中生成的，所以新闻生产时一个社会生产过程、社会交往过程。</li><li>因此（它）遵循某种规则规范和程序，那么这些规则规范和程序就包含 了某种标准，这些标准就是对什么是事实，如何才能形成大家接受的事实性做出了某种规定。</li><li>journalism，当涉及知识生产的职业或行业时，被翻译成新闻业；针对抽象的概念时候被翻译成新闻学。journalism是一种生产新闻news的组织化的社会实践，这种社会实践生产大家共享的知识、信息，我们需要在这些共享的知识信息的基础上，才能展开我们的公共生活。</li></ul></li></ul></li><li>理解媒介技术：<strong>媒介技术 vs 社会情景</strong><ul><li>媒介即信息——麦克卢汉——技术决定论和社会情境论</li><li>科技即社会之持久的显现——布鲁诺 拉图尔——社会建构论</li><li>（媒介）融合发生在每个消费者脑中……我们从媒介信息流中获取零碎的信息，之构筑“神话”,再将其转化成借以理解日常生活的资源——亨利 詹金斯《融合文化》——科技文化观</li><li>认为技术自主中立这一看法本身就是最具政治性的，而且是反动的。——达拉斯 斯迈斯——科技政治论</li></ul></li><li>新闻传播研究重视传播技术的变迁<ul><li>信息与传播技术（纸张，书写，电子）</li><li>ICTs (Information and Communication Technologies)</li><li>1987年中国有互联网（军事）；1994年商业应用（聊天室，和不相识的人聊天：<em>带向远方</em>）；2000年MMOG大型多用户在线游戏；2004年社交网络 social network sites（校内网，人人网，<em>回归现实</em>）；2011，移动互联网（定位共享）</li></ul></li><li>传播技术对新闻生产与新闻消费的冲击Impact 与形塑shaping已经成为今年来新闻研究的重中之重。<ul><li>空间：远与近</li><li>现实：真与假</li><li>关系：强与弱，bonding &amp; bridging</li><li>网络：中心化与去中心化（头条的算法推荐，而不喜欢精英化的新闻，核心权力不断消解的过程；打破了旧的深，去中心化也好，可能是权力重组的过程，算法决定了我们所接受的新闻）</li><li>中介化mediatedness：opaque 还是 transparent</li></ul></li><li>如何理解技术技术对人类社会的影响？<ul><li><strong>技术决定论</strong>technological determinism——<strong>社会构建论</strong>social constructivism</li><li>没有人是决定的决定论或建构论</li><li>科技的<strong>社会构建 social construction</strong> of technology<ul><li>社会塑造理论 social shaping theory</li><li>自行车的故事（大小轮）</li><li>我们所熟悉的物件都不是其应有的样貌，而是在社会中构建出来的。技术品的形态，一方面是社会建构的，一方面又有偶然性</li><li>阐释的灵活性 interpretive &amp; flexibility</li><li>结束与稳定 closure &amp; stablilization</li><li><em>每个人对于artifact都有不同的定义（阐释），最后发展到一定的程度某些人对其的阐释压倒了其他，这并不代表所有人的需求。</em></li><li><strong>知识沟</strong>理论：高社会经济地位对于信息（知识）的时间（数量）是不同的——从社会建构的理解上，一个事物效果收到阶层的影响</li><li>数字鸿沟：世界接入网络的比率，发达国家较多</li></ul></li><li>新社会阶层<ul><li>网吧：中下阶层的网络公共空间（06、09一年，手机上网很少）<ul><li>网吧对新工人阶级的网络社会特别重要，使用方便，更因为它是一种集体分享的上网方式，是中下阶层用户和草根用户共同建构上网经济的现实空间。</li><li>但是，随着网吧的普及：昏暗、杀马特、泡面……这种转变，因为中产阶级开始离开网吧，因此不断堕落</li><li>网吧摇身一变，为网咖，重新变为<strong>布尔乔亚</strong>式的空间</li><li><em>又是反驳技术决定论的一个案例</em></li></ul></li><li>technomobility in China<ul><li>care wallis, texas A&amp;M</li><li>中国年轻女工的手机使用</li><li>不可移动的移动性 immobile mobility</li><li>各种交友软件，本来可以作为通往社会阶层“人士”的机会，但研究显示不非如此。那种隔绝你和外卖小哥轰轰烈烈谈恋爱的东西就是原因。<em>又是反驳技术决定论的一个案例</em></li></ul></li><li>深圳的城中村：一个典型的意象<ul><li>作为“中国硅谷”的深圳；作为金融中心的深圳；作为连接港澳的口岸深圳；作为岭南乡村的深圳；作为移民城市的深圳；人才引进与流动人口</li><li>和上海的“阶级感”很强的上海相比，深圳都是年轻人，自由</li><li>一个混缩现代性的景观 compressed modenity</li><li>中国的互联网不是像美国一群哈佛退学年轻人在阳光沙滩车库搞出来的，而正是在这样的混缩现代魔幻的现实中建立出来的</li></ul></li></ul></li><li>理解媒介<ul><li>广义：信息传递、交换的中介（如空气、声波、文字、语言、灯光、CD、计算机、LED）</li><li>狭义：媒体/大众媒体mass medai/新问题new media（报纸、广播、电视、互联网、社交媒体、即时通讯工具）（can-fiction, slash-fic）</li><li>中介化与中介化交流mediation &amp; mediated communication</li><li>John Fiske的分类<ul><li>presentational media表现性: the voice, the face, the body</li><li>representational media在线性: books, paintings, photographs, writing, architechcture, interior decorating, gardening</li><li>mechanical media机械性: telephone, radio,</li></ul></li></ul></li></ul></li><li><strong>03</strong></li><li><strong>媒介生态学</strong>：麦克卢汉、波兹曼<ul><li>口语媒介；印刷媒介（麦克卢汉认为限制了想象力，加强了精英统治；现在的大学也是精英主义教学；波兹曼则认为培养了思维能力，理性，劳动人民的休闲生活就是去听人辩论，在阅读时代人类有足够的能力去分辨）；电视时代（麦克卢汉认为”重回部落时代的美好“，蒙太奇非线性化的表达；波兹曼认为“读图时代、娱乐至死”，打破了报纸的理性）</li></ul></li><li>媒介技术的三个层次的内涵<ul><li><strong>第一层：技术/形式</strong>：媒介是一种<strong>科技品technological artifact</strong>，具有物理和机械的属性；媒介也是一种内容组织和呈现形式，比如电视是一种影像、声音、文字进行组合，线性播放的内容组织形式。（非线性组合、线性播放）</li><li>媒介的生产方式：举例：电视台、报纸生产、时尚杂志、收集APP</li><li><strong>第二层含义：内容／体裁</strong>：内容包含符号及其意义meaning；体裁genre：新闻、电视剧、真人秀</li><li><strong>第三层含义：媒介习惯/实践</strong>：看电视的场景、时间、和谁在一起看、和谁讨论；看电视甚至可以成为一种习惯/仪式；人际交往的协议protocal（貌合神离：15202187331-snubbing; phubbing；开黑：实况足球）</li></ul></li><li><strong>何为理论？</strong> #定义<ul><li>定义：为了解释某个现象，按照一定的规范所抽象出来的概念体系<ul><li><strong>特征</strong>：旨在对某个现象作出解释；是一个概念体系relationship（建立联系）；理论的建立必须遵循规范的程序You can't have a theory!；</li><li><strong>概念</strong>：一般概念：身高、购买、体重；<strong>抽象概念</strong>：互动性，政治效能，动机</li><li>区分几个词：concept 概念；hypothesis 假设；proposition 命题；model 模型；theory 理论；approach 理论路径</li></ul></li><li>3.1 科学vs非科学<ul><li>Karl popper</li><li>a "scientific" theory is falsifilable. a threory is scientific only when it is refutable by a conceivable event. enery genuine test serves to potentially falsify theory, rather than 科学必须是可证伪的。</li></ul></li><li><strong>3.2理论的“范式”与“发展”</strong><ul><li><strong>tomas kuhn</strong></li><li>科学发展并未是渐进的，而是整体的、革命的。在一个时期内，大部分科学家都会接受某种前提（地心说）；人们将与理论矛盾的证据视为异常 deviance，对理论进行修改，<strong>范式</strong>得以保全；当异常证据积累，人类看是动摇对范式前提的信念，进而实现科学革命，范式转换；一个新的轮回</li><li>如何理解范式<ul><li>本体论ontology，关于存在的理论on logos，现象世界的</li><li>认识论：我</li><li>价值论axiology：理论研究中如何处理价值——价值中立；价值渗透</li><li>新闻传播中三种重要范式<ul><li><strong>后经验主义post-positivism</strong>：<em>解释、预测、控制</em>；社会和自然界一样存在规律、可以用科学的方法掌握规律、注重个体，理解结构、价值中立；科学；（定量）实证研究；</li><li><strong>诠释主义 hermeneutics</strong>：<em>理解</em>；社会不同与自然世界、社会现实来源于人们对意义的诠释、注重意义、互动与文化的建构、价值不可避免；文化；诠释定性研究</li><li><strong>批判理论 critical theory</strong>：<em>改变和解放</em>；社会不用于自然世界、意识形态影响研究、整体与历史地研究、价值介入，研究是现实解放的实践行为；解构权力；辩证、历史的批判（哈贝马斯：改变世界不公平的现状，最后一定要归于实践）</li></ul></li></ul></li></ul></li><li>3.3 实然vs应然<ul><li><strong>规范性理论 normative theory</strong>；媒体系统应当如何运作以遵守或者实现一套理想化的社会价值观。应然的理论。例子：媒介责任论、报刊的四种理论、柏拉图《理想国》</li></ul></li><li>3.4 宏大vs微小：理论的层次<ul><li>宏大理论：马克思、韦伯、吉登斯、贝克、卡斯特</li><li>中层理论：涵化理论、框架理论，创新扩散理论</li><li>微观理论：elaboration likelihood model(ELM);</li></ul></li><li>3.5 简单与复杂<ul><li><strong>凡能够说的，都能够说清楚；凡不能谈论的，都应该保持沉默。</strong>——维特根斯坦</li><li>如无必要，勿增实体。parsimony, falsifiablity——奥卡姆剃刀</li></ul></li></ul></li></ul><h2 id="第二讲-新闻的本体论问题">第二讲 新闻的本体论问题</h2><ul><li>大纲<ul><li>新闻的定义、区分新闻与宣传、新闻的本体属性、新闻何以成立：新闻的价值</li><li>新闻是什么？这个时代的新闻，发生了什么变化？</li><li>回忆最近一次使用“新闻”的情景：什么时候？哪里？什么设备？为什么看新闻？谁发布的？信源？了解了什么，有何感想？有趣吗，重要吗？有没有看评论，和谁讨论？</li></ul></li><li><strong>定义</strong><ul><li>新闻是女人、金钱和罪恶（瓦克尔）——市场决定论</li><li>新闻是客观发生的、具有新闻价值的事实的叙述（陈力丹《新闻理论教程》）</li><li><strong>新闻是新近发生事实的报道；新闻是新近事实变动的信息</strong>（李良荣《新闻学概论》）两个方面；是报道而非评论、判断</li></ul></li><li>第一个元素：专业生产内容<ul><li>有一种说法，刊登在报纸上的就是新闻；<ul><li>这种说法是同义反复 tautological；把新闻生产的责任交给了记者和编辑；当下时代的权力下放</li></ul></li></ul></li><li>第二个元素：时新性<ul><li>对新闻的另一个直觉理解，是把它当作“新”近发生的见“闻”，其中特别要强调的是其“新闻”发生的时效性。“新”也带</li><li>当然，“新”也可以有不同的理解，狭义而言是指刚发生的事情；但广义来说如果一件有意思的旧事之前未曾为人知悉，一旦被记者发掘出来，也可以当作新闻。</li></ul></li><li>第三个元素：重要性<ul><li>美国《纽约时报》报头“所有适合刊登的新闻”<strong>all the news that fit to print</strong>，显示该报编辑方针的严密和全面。</li><li>报界有所谓<strong>“质报”和“量报”</strong>之分，前者以精英阶层为对象，所选新闻呢以重要性为主；后者的读者为普罗大众，选取新闻角度较强调事件的趣味性。</li><li>争议：何为重要？是指一件事可能带来的影响？是实时还是长期的影响？是生活上还是道德层面上的意义？是对谁而言？究竟从记者的角度还是从受众的角度来判断？是否以影响人数的多寡来区分？</li><li>新闻定义中三个i：important, immediacy, interest</li></ul></li><li>新媒体环境下的“新闻”定义问题<ul><li>卡斯特：大众自我传播 mass self-communication<ul><li>其首先是一种大众传播，因为这种形式能将信息扩散到全球观众（跑男/速度与激情/CNN）；同时，这种传播又是一种自我传播，因为潜在的信息接受者也自己生产内容并在网络中和选择内容。这些传播模式并不是并行不悖的，它们已经勾连成一种混合物，一种互动的<strong>电子超文本</strong>，这个电子超文本容纳、混合并重新整合了人类文化的所有文化表达。</li></ul></li><li>创众creative audience/pro-sumer<ul><li>专业生产内容PGC和用户生产内容UGC的交织重合，新闻生产的专业性正在变得模糊。</li></ul></li><li>自媒体we media/ 参与式新闻 participatory journalism<ul><li>“人人都是记者”（克莱 舍基）：“职业记者？职业编辑？职业摄影师？请别再使用这些落伍的称谓……当出版不再是一种稀缺资源，当媒体不再掌握机构特权，当大规模业余化mass amateurization的旗帜被高高举起，当社会性工具清楚了公共表达的旧障碍，当任何人再任意实践都可以发布任何事情，这就是一个人人皆记者的时代。”</li></ul></li><li>鲍曼：液态现代/陆晔：液态新闻业<ul><li>从“把关”gate-keeping到“看门”gate-watching；从新闻生产production到新闻策展curaton；随机的新闻行动random acts of journalism兴起；在线视频：互联网新闻业新景观。</li></ul></li></ul></li><li>新闻 不等于 <strong>舆论</strong></li><li></li><li>第二话 新闻与<strong>宣传 propaganda</strong>（在西方是贬义词）<ul><li>再日常语境中，我们常常把新闻和宣传联系两个联系在一起。尽管两者都是在大众媒介上以“信息”的形式出现，但实际的区别很大。</li><li>区分新闻与宣传：新闻重信息，宣传重形式；新闻重新异，宣传重重复；新闻重事实，宣传重观点；新闻重时效，宣传重时机。——<strong>新闻可以有评论，但要和事实分开</strong>。#实践</li><li>西方常见的宣传方式<ul><li>加以恶名name calling：贴上坏标签，如美国“恐怖分子”；美化glittering generality：卖人设；假借transfer：“当代雷锋”；现身说法testimonial：广告代言；以平民百姓plain folk自居：西方；号召随大流bandwagon“巡游花车”：香飘飘奶茶，“他在吃，他在吃，黄渤也在吃”</li></ul></li><li>我国特有的宣传方式<ul><li>“最大-最大”策略；求同存异：“不管黑猫白猫，抓到老师就是好猫”；“无我策略”：“君子不言利”，强调没有“我”的利益；小骂大帮忙：承认一些问题，但是宣扬总体；适可而止：在宣传量上把握；微调：在宣传中调整观点</li></ul></li></ul></li></ul><hr /><ul><li><p>新闻是观点</p><ul><li>Editorials（editorial page）社评</li><li>Op-ed（opposite the editorial page）观点/专栏</li><li>LTE（letters to the editor）</li></ul></li><li><p>新闻也是一种价值</p><ul><li><em>新闻提供我们呼吸的文化空气，蕴含着整个社会的意识形态气候</em></li><li>将“<strong>神话与新闻</strong>”看作是人类讲述自己了不起的故事。神话既不是古老陈旧的，也不是幻想或者虚假的。神话始终有生命力。神话故事对于人类生活和人类社会的构建是必要的。而新闻则是我们时代神话的首要载体。</li><li>神话（也许还有新闻）是表达社会主流理想、意识形态、价值观和信仰的一种重要方式。一位英雄可能会代表力量、勇敢和同情心。一场洪水可能会标志着一位神的怒火或大自然龄人谦卑的威力。神话和新闻都是讲求道德的故事，他们告诫人们要提防灾难与疾病、堕落与腐朽。他们讲述痊愈和舒适生活、社会公正和改革的故事。</li><li>爱情是一个神话。</li><li>新闻与神话的相同点：<em>都重复故事（太阳之下并无新鲜事）；都讲述“真实故事”；都是公共故事；都利用带根本性的故事来进行说教并提供信息。</em></li><li><strong>Daily News, Eternal Stories</strong><ul><li>A brilliant dissection of the news business pointing out seven mythic structures that animate most of what we read in the daily (online) papers: <strong>the victim 受害者, the scapegoat 替罪羊, the hero 英雄, the good mother 好妈妈, the trickster 骗子, the other world 另一个世界, and the flood 洪水</strong>. Lule's point is that we bend the facts to fit the stories, rather than the other way around. But his further point is that it's not a bad thing; rather, it's necessary for us to make sense of the chaos. Agreed. The facts alone don't stick in the mind. Only stories last. I make a very similar point with different stories in my book Power Cues. ——review</li><li><em>Myth fulfills the social role of providing archelypal stories that instruct that instruct, represent, and sustain the social values and core beliefs of a society.</em></li><li><em>For Lule, the news is amenable to myth precisely because the latter fulfills a social function. Its role is to enact social drams that sustain social order.</em></li><li><em>Arguing against the common-sense notion that news is what's new, Lule propses that news stories offer sacre, societal narratives with shared values and beliefs, with lessons and themes, and with exempary models thatinstruct and inform.</em></li><li><em>But myth also does more than provide these sacred, timeless stories. Myth also offers a structure through which we understand the unstructed world around us.</em></li><li>神话样本：the victim 受害者, the scapegoat 替罪羊, the hero 英雄, the good mother 好妈妈, the trickster 骗子, the other world 另一个世界, and the flood 洪水</li></ul></li></ul></li></ul><h2 id="第四话新闻价值">第四话：新闻价值</h2><ul><li>什么样的信息可以成为新闻？新闻之所以成为新闻的条件是什么？新闻是从<strong>正常事件流程中脱轨</strong>而出的信息</li><li><strong>新闻成立的条件</strong>（what is news(professional judgement); what benefits society; what matters to you ）</li><li>新闻价值产生的前提是传播者、接收者双方互相认可<ul><li>一个问题：谁决定某一条新闻具有价值并且值得传播的？</li><li>任何传播的发生，产生于传播双方或多方信息势能的位差（信息不对称）。有差异才会有流动。但这种流动同自然规律不同，它需要传、授双方的互相认可。发出信息者，或出于利益、情感的需要，或为了寻找新的信息。信息发出了，有了回应，那么发出的信息就是有意义的。如果这则信息是新闻呢，那么就是有价值的新闻。</li><li>新闻价值揭示的是一个实用意义的社会关系，这种关系或对实施的评估，指引着新闻的内容。</li></ul></li><li>人们关注新闻的三方面价值驱动<ul><li>\1. 人对自身偏好的关注：选择性接触：接触与自己观点、兴趣相吻合的信息，避开与之相抵触的信息；选择性理解：受众根据自己的价值观及思维方式对信息进行个人解释，使之与受众固有的认知结构相协调；选择性记忆：人们往往只能记住对自己有利、或自己意愿记住的信息</li><li>\2. 人对相关利益的关注：人们对自己的切身利益相关的新闻特别敏感。如炒股的人，买基金的人，准备买房的人，玩王者荣耀的人。</li><li>\3. 人对异常事物的关注shoemaker：在检查环境时，人类对正常的好信息的关注，不及对坏消息那么重视。因为前者检查意义不大，后者更大。</li></ul></li><li>新闻的“偏差”理论<ul><li><strong>偏差deviance</strong>即是新闻。Human being are biologicallu "hardwired" for negative news (Shomaker, 1996)。 好事不出门，坏事传千里。</li><li>这有可能是生物的进化 本能，因为了解偏差情况可以促进个体安全和有利于繁殖后代，这种偏好经由遗传因子代代相传，成为天性。这也可能是文化性塑造的结果，从小我们被教导路上小心，不要和陌生人加规划，不要紧”三厅一社“。小孩从萧就学习留心危险的因素，内化了价值。</li><li>另一方面，好奇行也是人类的本鞥之一，</li><li>新闻帮助人们</li></ul></li><li><strong>“偏差”的价值</strong>(Shoemaker &amp; Cohen)<ul><li>Social significance</li><li>Deviance<ul><li>\1. Nomative deviance: the breaking of norms and laws</li><li>\2. Social change deviance: a change in the status quo of a social system( such as revolution).</li><li>\3. Statisticla deviance: a person, to an event is very different from the average in being oss, unusual, or novel</li><li>\4. Pathological deviance: 邪教、变态杀人狂</li></ul></li><li>分类：严肃新闻、八卦新闻、严肃而八卦的新闻、无聊亦无意义的新闻 （两个维度：deviance and segnificance）</li></ul></li><li>新闻价值的元素<ul><li>事实发生的概率越小（包括意外、偶然、异常），便越有新闻价值。e.g., 开火车上访，MH370</li><li>事实或状态的不确定性越大，减少不确定性的事实或信息便越具有新闻价值。e.g. 张茵颖，中美贸易战细节，波音737max调查</li><li>事实的发生与受众的利益相关，便约具有新闻价值。under the dome 穹窿之下</li><li>事实的影响力越大，影响面越广，越能立即产生影响力，便越具有新闻价值。e.g. 911事件</li><li>事实与接收者的心理距离（兴趣、生活地域、性别、年龄、教育程度、专业特长、经济收入、民族/种族/宗教）越近，越有新闻价值。e.g. 翟天临对考研者</li><li>越是著名人物，其身上发生的事实，越具有新闻价值；越是著名地点，那里发生的事实越容易收到受众关注。</li><li>越有冲突因素越大的事实，越具有新闻价值。一般地说，和谐等于平淡，冲突表现为竞争、商业竞争、外交全选，战争等等。有分歧、冲突便激起平静之水地涟漪</li><li>越能表现人的情感的事实（悲欢离合），越具有新闻价值。</li><li>越具有<strong>心理替代性</strong>的故事性事实，越有新闻价值。涉及具有类似文学的故事母体。诸如英雄、撒旦、爱情、寻宝——超越平凡生活</li><li>事实在比较中具有价值。</li></ul></li><li>新闻价值的实现被打上<strong>多重折扣</strong><ul><li>相当多的<strong>宣传要求</strong>压抑着传播者遵循新闻标准选择事实</li><li>传媒为<strong>自身利益</strong>而不遵循新闻价值标准选择事实：市场角度；新闻采集的成本问题，尤其是某些调查性报道</li><li>由于<strong>传媒运作周期</strong>带来的对新闻实现的折扣：事实发生的事件：截稿事件；记者是否在场；值班的负责人的偏好；省力原则对记者工作的影响。</li></ul></li><li><strong>第一部分讲什么是新闻；第二部分探讨新闻体制。</strong><ul><li><em>12周</em></li><li>思考：如何衡量一个媒介的公共性？<ul><li>传媒的服务对象是公众；传媒提供开放的话语空间，公众参与媒介话语；媒介的使用与运作必须公正（潘忠党）</li></ul></li><li>举例：媒介监督<ul><li>媒介监督：其并不企图约束大众，而是旨在制裁违纪官员，特别是在直接处置那些通常活跃于“天高皇帝远”地域的基层官员，而目的则是在全体官员面前起到迅速而快捷的惩戒作用，以及在全国民众面前迅速树立并巩固党和政府公正无私的形象。中国媒介监督的发展、规范过程，就是党和政府逐步把传媒纳入行政权力的过程，党和政府对传媒监督授权的过程，就是调整传媒权力边界的过程。在政府治理技术的变革中，传媒被纳入了权力结构中，成为行政权力的一部分，成为技术治理的一部分，成为中央权力系统寻求对于地方官员进行约束的新手段。（《叫魂》）<strong>technocracy</strong> 技术治理</li></ul></li><li>技术对公共性的挑战：传播科技的发展对传播的控制（哈贝马斯）<ul><li>科学技术的合理本身，也就是控制的合理性，即统治的合理性，科学技术当今业已承担起了使政治权力合法化的功能。科学技术和社会操作结合一体，人们保存的自己的私人空间由于技术的发展而遭到侵占，自我深化的多样性的过程在工艺过程和机械反映状态下被固定化、单一化，个人只能模仿外界，再也不能对社会提出抗议。从这个意义上，“合理的技术社会”也就是“合理的极权社会”。</li><li>他们……想用控制自然的方式来控制社会。正是技术专家治国论意识模糊了下述这一点：要使这种重建获得成功，就得付出重大代价，即牺牲以日常语言为中介的相互作用结果，这一结构由于很容易实行人道主义化而具有实质性的意义。</li><li>哈贝马斯进一步谈到传播科技对人的控制的结果，他说技术专家治国论意识所反映的不是对某种道德态势的割裂，而是对作为生活范畴的本身的“道德”的压抑。公共的、实证主义的思维方式用日常语言使相互作用的参照系失去了作用，统治和意识形态都正是通过日常语言在交往不正常的条件下形成。</li></ul></li><li>网络公共空间所受到的挑战<ul><li>Snowballing effect: the hierachy on social media</li><li>Echo chamber effect: selected exposure/percrption</li><li>Tribalization: seperateness of personal information flow on socia media</li><li>Oligarchy on peer production: iron</li></ul></li><li>举例：<ul><li>影像生产与消费：抖音；婚礼以摄影师为中心</li><li>微信公众号：流量黑洞与信息孤岛？——公众号恢复了创作者对内容的控制权，恢复了互联网时代下报纸被剥夺的控制——公众号把人聚拢在鼓励体系中；公众号没有读者间的互动。</li></ul></li><li>讨论：<strong>泛娱乐</strong>对公共空间的挑战<ul><li>媒介娱乐对共公生活的“侵蚀”：规范性假设：优质信息是“公共生活”的刚需品，法兰克福学派对流行文化的批评。</li><li>传媒是一种文化工业（culture industry）——法兰克福学派的观点<ul><li>文化工业生产出来的文化具有“标准化、模式化、保守、虚幻”等特征，是极具操纵性的消费品，它使得工人阶级忘记自己在资本主义社会体系内遭遇的剥削和压迫，进而放弃了政治和经济理想。</li><li>“革命的趋势只要稍露锋芒，就会立即为财富、历险、热恋、权力和感动的呢个白日梦的虚假满足感所冲淡和打断。”</li><li>生产劳动——文化消费——reproduce labor——再生产（物质消费——刺激生产）</li><li>马尔库塞《单向度的人》娱乐和信息工业生产出来的东西是令人难以抗拒的，因为其蕴含着某种预设的观念和习俗，通过激发精神……《文化工业》</li></ul></li><li>来自实证研究的证据来自Entertainment effects</li><li>电视的出现减少了社交活动，保龄球为例。《Post-Broadcast Democracy》</li><li>技术层面：《注意力市场》；文本层面：Infotainment，清流综艺，反思与回忆</li><li>年轻人-粉丝fandom：John Fiske，Henry Jenkins，张玮玉《粉丝公众》，《从“迷妹”到“小粉红”：新媒介商业文化环境下的国族身份生产和动员机制研究》</li></ul></li></ul></li><li>媒介生产的政治经济环境<ul><li>媒介生产的经济环境：传播政治经济学<ul><li>传播政治经济学：马克思主义的传统。经济基础决定上层建筑（意识形态），生产方式、生产关系</li></ul></li><li>媒介组织的商业逻辑：1. 资金运作，2. 人力管理，3. 活动协调，4. 权力运作<ul><li>媒体是一项生意、一个产业。媒体运行以来大量资金用于人力物力；（大多数）媒体组织存在的目的在于盈利；媒介组织间相互竞争以赢得观众产生利润。（media buy）</li></ul></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国当代小说选读 课程笔记</title>
      <link href="/posts/fd67bca4/"/>
      <url>/posts/fd67bca4/</url>
      
        <content type="html"><![CDATA[<p>这是大三时候的 王东明 老师「中国当代小说选课」课程的笔记，自以为花了很多的心血在这门课上也读到了一些经典小说，在此整理补发。</p><span id="more"></span><h2 id="绪论中国当代小说的源流周扬">绪论：中国当代小说的源流——周扬</h2><ul><li>讲授要点：中国当代小说的前世今生；当代小说与现代小说的比较。</li><li>思考：如何理解“人的文学”和“人民的文艺”？</li><li>阅读书目：周扬《新的人民的文艺》</li></ul><p>中国当代小说起源于 <strong>十九世纪末二十世纪初</strong>，主要有两大源流，构成了两个传统：<strong>一是五四新文化运动，二是四十年代初期毛泽东延安文艺讲话（解放区文学）</strong>。</p><h3 id="五四新文化运动">五四新文化运动</h3><p>其有两种特点：<strong>不成熟；思想的反叛性</strong>。 两个人物：</p><h4 id="梁启超">1. 梁启超</h4><p>戊戌变法失败之后，启蒙思想播下了种子，变法这亡命日本，通过对日本近代社会的考察，发现小说在其社会起到了重要作用。创刊，发表 <strong>《论小说与群治之关系》</strong>，认为小说是最上乘的。</p><blockquote><p>“光绪二十八年十月（1902年11月），《新小说》杂志在日本横滨创刊。梁启超在《论小说与群治之关系》中，提出了“今日欲改良群治，必自小说界革命始，欲新民，必自新小说始”的口号，这是“小说界革命”的开始。“小说界革命”的影响相当深远，许多人投身于小说创作，在近代小说史上占据了极为重要的地位。” “欲新一国之民，不可不先新一国之小说。欲新道德、新宗教、新政治、新风俗、新学艺、新人心、新人格，必新小说。” ——小说革命，百度百科</p></blockquote><p>梁启超也开始写小说，从日本，而日本其源流来自西方小说。 在晚清最后的十年中，小说成为蓬勃兴起的文学方式，取代了诗文。从诗文的时代转而进入小说的时代。</p><h4 id="林纾">2. 林纾</h4><blockquote><p>林纾（shu），清末翻译家，近代文学翻译第一人，一生翻译小说超过213部，是正式将西方文学引入中国的第一人，以至钱钟书说道：“林纾的翻译所起的“媒”的作用，已经是文学史上公认的事实”“接触了林译，我才知道西洋小说会那么迷人。” 林纾一生著译甚丰，译书之速之精，可谓神助。林纾共译小说超过213部，翻译小说最多的是英国哈葛德的作品，其他还包括有莎士比亚、笛福、斯威夫特、兰姆、史蒂文森、狄更斯、司各特、科南·道尔、欧文、雨果、大仲马、小仲马、巴尔扎克、伊索、易卜生、托尔斯泰等名家的作品。</p></blockquote><p>1905年，科举制废除使得这样一群人成为无业游民，写、读小说成为当时知识分子感兴趣的东西。 <strong>周作人</strong>：1918年《人的文学》。看出周作人的思想来自西方，人本主义 <strong>启蒙文学</strong>：鲁迅为代表的以人为本的思想 <strong>个人主义</strong>：小说的兴起和个人主义相关？</p><h3 id="革命文学">革命文学</h3><p>从文学革命到革命文学：走向了越来越窄的道路：“革命加恋爱”。<strong>虽然产生了如沈从文、丁玲一批作家，但无法和五四时期相比</strong>。</p><p>30年代，随着中日战争，文学主题从“启蒙”变为“救亡”。形成了三个区域：<strong>国统区、解放区、沦陷区</strong>。</p><h4 id="国统区">1. 国统区</h4><p><strong>巴金《寒夜》萧红《呼兰河传》</strong>。萧红用一句话肯定这一时期的小说：“有各式各样的小说”。走出了革命文学的阶段。仅仅就国统区而言。如巴金依然坚持写实；抒情性小说如沈从文、萧红，不追求人物、故事性，有一种散文化、有一种诗性，与当时西方相近。还有讽喻性的小说。</p><h4 id="沦陷区">2. 沦陷区</h4><p><strong>张爱玲</strong>：表现小人物的心理世界，人性的复杂与阴暗。很大程度上受到西方影响。 <strong>钱钟书</strong>：《围城》构成那个时代一代奇观。</p><h4 id="解放区">3. 解放区</h4><p>解放区读者以农民为主。<strong>丁玲、周立波、肖军</strong> 等，走进解放区，走进延安，试图把自己所学加持到贫瘠的土地上。但是不能实现，文化的冲突在工农干和知识分子的冲突——标志着知识分子想在新的地方发出自己的声音很难。 这就有了 <strong>1942年，整风运动，召开延安文艺座谈会，毛泽东讲话</strong>。</p><p>知识分子的两条路：上前线，为士兵服务；第二，到农村去，向农民学习，转移自己的思想——从此开始了解放区文学 1943年，赵树理《小二黑结婚》。总结出赵树理方向，核心：文学的政治性，革命功利主义。服从、配合，当时只有这样的文学才有了＂生存的合法性＂。这一直延续到新了中国成立之后。</p><p>当地小说定位于1949年7月2日，第一届文代会，周扬作总结汇报（重要性仅次于毛讲话）：在总结解放区文学的基础上，对于整个当代文学的发展做了严格的规约。“预设”：想好了当代文学怎么发展——就是解放区文学。“新的主题，新的形式，新的人物”</p><p><strong>解放区文学</strong>：一种赵树理为代表的小说，其二为诗歌。</p><h2 id="小二黑结婚1943赵树理">《小二黑结婚》（1943）——赵树理</h2><p>“赵树理方向”的思考——赵树理</p><ul><li>讲授要点：中国当代小说的起点；“赵树理方向”的复杂性。</li><li>思考点：《小二黑结婚》是“问题小说”吗？</li><li>阅读书目：陈荒煤《向赵树理方向迈进》</li></ul><h3 id="战时文学格局">战时文学格局</h3><p>从两个方面来看。第一，从<strong>战士</strong>来看，它他们没有文化背景，更倾向于秧歌剧、快板戏等文化娱乐形式；第二，从<strong>知识分子</strong>的角度来看，他们从城市到乡村，想把文艺传播开来，就和当时战士和农村的普通农民见形成了文化冲突。 <strong>1942年</strong>，延安开始整风运动，在此基础上，毛泽东在5月初和下旬发表讲话<em>《在延安文艺座谈会上的讲话》</em>；而<strong>1943年</strong>，赵树理写出《小二黑结婚》。 <strong>赵树理方向</strong>，其实和赵树理本人的创作实践有很大的出入；当时的命名代表了解放区（官方出面命名）；由此形成解放区文学的格局，对后世当代小说的影响很大。在这一点上，和<strong>沦陷区、国统区</strong>都不一样。 这种文学格局的形成，从另一方面可以看出知识分子的话语在这一社会中逐步被边缘化，社会角色发生了明显的转换。相较而言，<strong>五四小说</strong>则是知识分子主导的，倾向于“启蒙”；五四文学就是启蒙文学，被启蒙者是农民。</p><h3 id="知识分子的身份转换">知识分子的身份转换</h3><p><strong>余英时</strong>认为，</p><blockquote><p>知识分子的边缘化从近代就开始发生，到1949年完成。</p></blockquote><p>相较而言，<strong>五四知识分子</strong>，即以鲁迅、李大钊为代表的知识分子，影响了全社会的思潮。1939年，毛写下《中国革命和中国共产党》，认为占全国80%人口的农民，70%的贫农是中国革命队伍的主力军。在此之后，知识分子完成了社会角色的置换，即<strong>从启蒙者变为受教育者</strong>。</p><h3 id="周扬在延安文艺座谈会上的讲话确立了一种新的规范规约">周扬《在延安文艺座谈会上的讲话》确立了一种新的规范/规约</h3><blockquote><p>中国的革命的文学家艺术家，有出息的文学家艺术家，必须到群众中去，必须长期地无条件地全心全意地到工农兵群众中去，到火热的斗争中去，到唯一的最广大最丰富的源泉中去，观察、体验、研究、分析一切人，一切阶级，一切群众，一切生动的生活形式和斗争形式，一切文学和艺术的原始材料，然后才有可能进入创作过程。否则你的劳动就没有对象，你就只能做鲁迅在他的遗嘱里所谆谆嘱咐他的儿子万不可做的那种空头文学家，或空头艺术家。</p></blockquote><p>《在延安文艺座谈会上的讲话》中为知识分子指出了两条路：“无条件向工农大众学习，为工农兵服务”“审美爱好”“无条件为战争服务，一切为战争的胜利服务，为特定时期的路线、方针、政策服务”。 <strong>解放区文学就是对中国当代文学的预设。</strong></p><h3 id="小二黑结婚">《小二黑结婚》</h3><p>小二黑结婚有着<strong>真实的背景</strong>：山西省左权县横岭村：发生人命案，小队长岳东至在一个冬天的晚上被打死了。有一个童养媳，当时和智英祥相爱，村中两村干部看上了智（石和史分别为村中大姓），已有妻室，但妄图潜规则。一次冲突中失手把岳打死，伪造自杀场景。</p><blockquote><p>《小二黑结婚》由真实事件改编，是一个歌颂婚姻自由的故事。该小说讲述了一对农村青年小二黑和小芹通过与迷信思想及封建势力作斗争，争取婚姻自由的故事。故事中小二黑和小芹的自由恋爱受到流氓恶霸村长金旺的阻挠；二诸葛由于迷信也反对小二黑与小芹的结合，私下给小二黑收养一位童养媳；三仙姑为贪财而出卖女儿，逼小芹嫁给吃喝嫖赌的吴广荣。一天小二黑和小芹暗地商量终身大事时，被金旺等捆住。双方家长前往村长家要人，发生一连串群殴事件。后来由抗日民主区政府区长出面支持，经过一番斗争，严惩恶棍金旺，故事最后以喜剧收场，二诸葛和三仙姑表示支持这件婚事。 这部小说甫一推出极受好评，中国共产党晋察冀中央局宣传部长周扬在《新的人民的文艺》一文中称赞：“反映农村斗争的最杰出的作品，也是解放区文艺的代表之作。 《小二黑结婚》于1950年及1964年分别由顾而已、于学伟导演拍摄成两部同名电影搬上银幕。</p></blockquote><p>出版故事：原本编辑因为害怕影响不好不敢出版，后赵树理把作品给扬献珍看，后给浦安修，彭德怀休息的时候偶然看到，“像这样从群众调查研究中，写出来的通俗故事，还不多见。”，后印下两万册。 <strong>1947年</strong>，晋察冀召开会议：认为赵树理的写作是<em>实践毛文艺思想的具体方向</em>。陈荒煤：“向赵树理方向迈进”，在这篇文中，概括了赵写作的三个方面：政治性（“我写的作品政治上起作用，老百姓喜欢看”）；民族形式（农民的审美）；革命功利主义。</p><p><strong>李泽厚</strong>在当时写下《美的历程》，谈到中国传统文化乐感的文化和哀感的文化所不同，中国文学中戏剧很多，不如西方文学中悲剧性很多。很多悲剧性的东西最后往往变为戏剧的形式呈现出来。文化心理的积淀；从这点来看，中国的农民还是乐观的。而赵认为，<strong>中国传统的大团圆结局，有人说中国人不懂悲剧，我说中国人也许不懂悲剧，可是外国人也不懂团圆。</strong></p><h3 id="是否是问题小说">是否是问题小说</h3><p>有人认为，《小二黑结婚》不仅仅是在讴歌，而且是问题小说（五四文学中也有）。 这个问题在后来人们对于赵的小说的研究中一直被误读，一个日本学者注意到《小二黑结婚》中隐含的主题。五十年代初，中国向世界推出的文学中第一人就是赵树理，<strong>鹿地亘</strong>（二十年代在日本文坛，共产党，后流落中国）在日版前言谈他的理解：不同文化背景的作家可以处理成不同风格的小说：可以是侦探小说，可以是心境（心理）小说（在人民政权刚刚建立，立足未稳的时候钻了空子，并且成为权力中心）；这一主题要在八十年代才被人重新发现，这一点恰恰是这部作品的主题的深刻。 <strong>赵树理的写作和钦定的赵树理方向并不是一回事。</strong>49年以后，赵树理在文坛的地位可以说是第一人（50年代《中国新文艺丛书》《抗战文艺丛书》中收录）；50年代之后，他的文学写作跟不上趟了，“不够高、不够大”，但是“高大的写法不是我所写的，我所看到的中国的农民就是这样的”；慢慢地退出了主流。</p><p>三句话九个字来看赵：<strong>农民写；写农民；农民看</strong>。 但是，这是非常复杂的农民，有着知识分子的思想内核，有着知识分子的价值，有着知识分子的价值立场在打底。<strong>小说的风格是戏剧，题材是婚姻恋爱，结构形式也是最为传统的；在农民文化占据主流的解放区中，带有天然的草根性、民间性。</strong>（在岳身上是一个悲剧，在小说中变为喜剧，符合农民的审美习惯，并且完全是中国传统的。）关于“写农民”，小说塑造出了小二黑这一农民——新农民形象。中国写农民，第一是鲁迅，第二便是赵树理。</p><h3 id="叙事方式">叙事方式</h3><p>现代小说突破了连续性。西方出现<strong>意识流小说</strong>；时空关系的切割，按照心理时间来组织。</p><blockquote><p>“意识流”（Stream of consciousness）原是西方心理学上的术语，最初见于美国心理学家威廉·詹姆斯的论文《论内省心理学所忽略的几个问题》。他认为人类的意识活动是一种连续不断的流程。意识并不是片断的衔接，而是流动的。这是“意识流”这一概念在心理学上第一次被正式提出。 20世纪初，法国哲学家亨利·柏格森的“绵延论”强调生命冲动的连绵性、多变性。他的关于“心理时间”与“空间时间”的区分、关于直觉的重要性以及奥地利精神分析学家弗洛伊德的无意识结构和梦与艺术关系的理论，都对意识流文学的发展有过重大影响。 学术界一般认为意识流是象征主义文学在小说领域的体现。但是由于其技巧独特、成就很高，因此通常把意识流文学当成一个独立的文学流派来处理。</p></blockquote><p>现代小说的诞生，叙事上最突出的特征就是连续型的打破，强调叙事的零散性；碎片化。<strong>而赵树理的小说完全不服从这一潮流</strong>，这是因为其预设的读者（听者）就是农民。而赵树理的闻名，是在当时解放区的历史、传统中形成的。赵树理的很多小说，缺乏现代小说所有的心理描写、环境描写等；但这样的评价是忽视了当时的特有环境。</p><p>90年代，因为夏志清的观点的加入，对赵的评价陷入了一段低谷。赵树理方向，对其评价在当时过高了，并且与赵本人的观念也不一致，赵也付出了沉重的代价。</p><h2 id="我们夫妇之间1950的趣味萧也牧">《我们夫妇之间》（1950）的“趣味”——萧也牧</h2><ul><li>要点：知识分子话语权；对宏大叙事的偏离。</li><li>思考：如何看待知识分子话语在新的文学秩序中的境遇？</li><li>阅读：萧也牧《我一定要切实地改正错误》</li></ul><h3 id="话语的壁垒知识分子的话语权">“话语的壁垒”：知识分子的话语权</h3><p>第一次文代会，周扬把在《延安》讲话中所确立的文艺方向进一步明确。《新的人民的文艺》几个方面来达成，包含了 <strong>新的主题、新的人物、新的形式</strong> 。——建立起一种全新的文学秩序。 所谓<strong>“合法性”</strong>的存在。在当时的背景中，有着知识分子的作家、国统区的作家边缘化；而有着解放区背景的作家有了合法性的存在；知识分子的话语没有了权力。——知识分子的边缘化彻底完成。 <strong>50年代初期，知识分子的思想改造。</strong> 知识分子在这样的时代有着很多的隐痛。“有一点甜蜜，有一点惊恐”——不知道风从哪里吹来；只能在大地上（何其芳）。参考 <strong>《1949，中国知识分子的私人记录》《人有定天》《洗澡》</strong>。 这时候，期刊出现了“稿荒”—- 因为知识分子之前所习惯的写作方式，在新时代失去了合法性；这个时代只需要“讴歌”，不能揭露、不能批判。在当时，拥有合法性的，只有 1. 革命中投奔解放区的知识分子：如<strong>丁玲、何其芳、周立波</strong>（《百炼成钢》）；2. 解放区土生土长的作家，刚刚摘掉文盲帽子的；“一个月能收到300篇，但不加修改能用的几乎没有”。在这样的背景下，<strong>《人民文学》（“国刊”）</strong> 编辑收到萧也牧的作品后喜出望外。 肖当时急欲从文工团到作家的身份转变。</p><p>背景：萧也牧在写作这部小说时是有其背景的。当时很多革命的老干部发生了转变。进城后不认农村的妻子；开舞会。（《激情燃烧的岁月》）出现了离婚潮。 一开始受好评，最好的是上海；（1949年-50年代前期，上海出现了有趣的景象。当时负责上海文化工作的是<strong>夏衍</strong>。当时上海的文化自由度相对大一些；如张爱玲曾收到夏的保护。上海的市民阶层，对于文学有需求，有阅读市场的存在，不满意解放区文学，“不忍卒读”。</p><h3 id="对宏大叙事的偏离">对宏大叙事的偏离</h3><p>到1951年6月，陈勇《萧也牧创作的一些倾向》；冯雪峰化名“李定中”读者来信；“反对玩弄文艺”，低级趣味，局势升级；丁玲（与肖熟悉）也进行了声名。</p><blockquote><p>1950年，萧也牧创作了其短篇小说代表作《我们夫妇之间》，发表在《人民文学》第1卷第3期，这是他最受读者尤其是青年读者喜爱的短篇小说。该小说刚一发表便获得《光明日报》等四家报刊发表推荐文章。这是中华人民共和国第一篇城市小说，主人公是出身知识分子的中国共产党干部<strong>李克</strong>，他在解放后进城，希望生活能有些个人趣味，并想将劳动人民出身的妻子培养得能像自己一样体验城市生活，于是夫妇发生矛盾，最后重归于好。1951年1月，小说被改编成连环画，由上海五星出版社出版，次月再版。同年，上海群众书店出版了金文田改写的《我们夫妇之间》话剧剧本。上海昆仑影片公司不久便将该小说搬上银幕，导演郑君里，演员赵丹、吴茵、蒋天流等[4]。 1951年5月20日，《人民日报》发表了毛泽东执笔撰写的<strong>《应当重视电影〈武训传〉的讨论》</strong>的社论，同年6月毛泽东亲自发动对电影《武训传》的批判，文化界形势紧张。1951年6月起，小说《我们夫妇之间》遭到《人民日报》、《文艺报》等报刊批判。最先发文批评《我们夫妇之间》的是<strong>陈涌</strong>，他在1951年6月10日《人民日报》上发表了《萧也牧创作的一些倾向》，批评萧也牧进城后写的《我们夫妇之间》、《海河边上》是“依据小资产阶级观点、趣味来观察生活，表现生活”。《文艺报》（中国文联委托全国文协主办的机关报）感到陈涌这篇批判文章软弱无力，于是在1951年6月25日《文艺报》上发表了“读者李定中”的来信《反对玩弄人民的态度，反对新的低级趣味》，并在《编者按》中说：“读者李定中的这篇来信，尖锐地指出了萧也牧的这种创作倾向的危险性，并对陈涌的文章作了必要而有力的补充，我们认为很好。” 1982年5月21日，丁玲在天津文艺界座谈会上讲话时说：“《人民文学》把这个作品（《我们夫妇之间》）当做好作品发表，当时我虽认为不太好，但没有吭声，没有写文章。后来我离开北京到南方，陈企霞找冯雪峰写了篇文章，这篇文章立场是好的，态度是严肃的，但过分了一点，引起了一些人的反感。《人民日报》编辑部开会，一位文艺领导人就在那里说：《文艺报》的路线错了。”冯雪峰就是“读者李定中”，而“一位文艺领导人”可能是指周扬。</p></blockquote><p>比照《我们夫妇之间》与《新的人民的文艺》，有很多不一致的地方。知识分子话语权，直到50年代后期才恢复。萧的小说给当时的文坛秩序带来了冲击。《新的人民的文艺》带来了“宏大叙事”——表现革命斗争、阶级斗争；而夫妻之间的生活题材不能见容于主流文学。 萧的这种文学表现了他对于海派文学的传统的接受。在五十年代只有萧这样写。但是，从现在看来还有其意义。和刘震云的《单位》《一地鸡毛》有相似之处。</p><h2 id="秧歌1953另一种农村叙事张爱玲">《秧歌》（1953）：另一种农村叙事——张爱玲</h2><ul><li>讲授要点：<ul><li>与《创业史》的比较；</li><li>如何看待其中的“反共”？</li></ul></li><li>思考点：为什么会有两种农村叙事？</li><li>阅读书目：<ul><li>龙应台一支淡淡的哀歌——评张爱玲《秧歌》</li><li>宋以朗 《宋家客厅—从钱钟书到张爱玲》</li></ul></li></ul><p><strong>50年代后期当代小说，长篇叙事进入了收获期。</strong> 原因很复杂：</p><ol type="1"><li>50年代前期当代小说匮乏：很大一部分原因是因为知识分子边缘化）周恩来等，对知识分子行脱帽礼，表示道歉。<span class="citation" data-cites="卢卡奇">@卢卡奇</span>：“叙事性文学作品往往会在疾风骤雨的大规模运动之后才会产生（史诗性的作品）。”</li><li>50年代后期，号召写作品为国庆十周年献礼。两种类型：1. 革命题材；2. 农村题材（现在叫革命叙事和农村叙事）</li></ol><h3 id="另一种农村叙事">另一种农村叙事</h3><p>今天讲农村叙事。除了赵树理、柳青为代表的农村题材之外。还有另一种对比鲜明的农村题材的作品。代表作张爱玲《秧歌》——1953年在期刊上连载。我们读到这样的作品要到70年代后期（20年）。</p><blockquote><p>《秧歌》一书以1950-1952年新中国刚成立后进行的土改运动为大背景，讲述了江浙附近某村镇的农民受饥饿的煎熬，终日以稀粥米汤野菜为食，吃不起一顿干饭，也不敢吃一顿干饭，不然就成了富人家，会招来借钱摊派的麻烦。小说的主人公金根，是一个老实巴交的农民，终日勤勤恳恳的砍柴种田，依旧填不饱一家三口的肚子。妻子开始在上海一户好人家帮佣，后来城市形势转坏，受了人人都说乡下好的哄骗，回到农村。到了过年，家里把可怜的一点米磨了做了年糕，去完成给军属家送年货的任务。交货的时候，村民们在堆满了收上来的粮食的仓库前要求借粮过年，结果发生暴动，民兵搬来枪，金根受了枪伤，五岁多的女儿被人群踩死了，夫妻俩突出重围，却被当作反革命追捕。</p></blockquote><p>上海当时主管文艺的夏衍特别照顾张。</p><h3 id="反共">反共？</h3><p>“异质性”，贴上反党，“反共文学”的标签。 张曾经试图在所谓新的文学秩序之中有没有自己的位置。参加上海第一次文代会上就发现不行：她一个人穿着旗袍。当时文坛要求“纪念碑式”歌功颂德的文字。1952年申请赴港读书（原本抗战时在港读书，被迫中断）<strong>“文化难民”</strong>。流亡作家“流亡文学”。张在“美国新闻出版处”谋道差事当翻译。 认为《秧歌》反动的很大原因是因为被认为这是美新处让张写的，甚至提供大纲。香港出版商宋以朗（宋淇之子）《宋家客厅——从钱钟书就到张爱玲》</p><h3 id="柳青创业史比较">柳青《创业史》比较</h3><p>柳青《创业史》是受到中央承认的农村叙事。他为写作《创业史》在陕西长安县生活了十一年。计划写3部，但写到第二部下的时候去世。现在看第一卷可以看看，第二卷面目全非。（中国作家有修改作品的传统，“毁其初作”）陕西《延河》的初版是经典。“史诗性”，柳青视其主人公梁生宝为当代英雄。从赵《小二黑》形象有了一个进步，将其作为党的儿子，非常符合新时期文学的标准。“柳青是热情高涨的作者”。 柳青着意于宏大叙事，负担很重；而《杨哥》写作于香港，虽然对于党有种恐惧，但是无意于政治思潮。（胡兰成；后嫁给美国人奈雅，是一个左派）张爱玲无意于政治生活，“淡淡的哀歌”（龙应台）。一个是对于现实生活（政治生活）的介入，一个是日常生活的描写。 <strong>描写内容</strong>：张写后寄给美国的胡适，评价：“细致、忠厚，到了平淡而近自然的程度”。 <strong>人物形象</strong>：（人物形象比较梁生宝、谭金根）“把人当作人来写”——而不是以党的儿子来写。对比：梁生宝和谭金根两段情爱对比。 <strong>意象描写</strong>：《秧歌》中的意象营造，尤其是秧歌这一个意象。（在中国很大程度上忽视了意象。）胡适：“小说通篇写了一个字，恶，是不是可以叫做《恶》”。夏志清讨论这个意象：一方面显出共产党礼乐是多么虚假和易变；同时人性是多么可怕和争议。不赞同：多种可能性（误读意象）。乍一看这么名字有点出奇，秧歌在南方流行度不高。意象，意于象。结尾：当村民们被迫扭着秧歌去村里，秧歌有着特别的意义。清代王夫之《姜斋诗话》“以乐景写哀，以哀景写乐，一倍增其哀乐也”。秧歌为乐，而更表现出村民心中之哀。“出人意料又生奇效”，最后的秧歌意象一下子透出全篇，表现出张小说一贯的“苍凉”。 还有的角度：反共怎么看，在创作中怎么表现的？</p><h2 id="青春之歌1958红色经典的生成杨沫">《青春之歌》（1958）：“红色经典”的生成——杨沫</h2><ul><li>讲授要点：<ul><li>政治、权力与文学对历史的想象、重构；</li><li>有关林道静的人物形象分析。</li></ul></li><li>思考点：<ul><li>如何理解“生活的发展逻辑”？</li><li>《青春之歌》与知识分子话语</li></ul></li><li>阅读书目：张中行《流年碎影》（节选）</li></ul><p>五六十年代两个重头的部分：<strong>革命叙事（超出了）农村叙事</strong> ，这里讲前者。</p><h3 id="主题和立场的预设">主题和立场的预设</h3><p>追求“史诗”，富有史诗性的理念，显得非常坚硬。理念的、概念的东西过于强大，导致在叙述中出现了偏差。 <strong>高华历史著述《红太阳是怎么升起的》</strong> ，他曾写过文章，现代史中出现了“宏大叙述”。<strong>《权力如何阉割我们的历史记忆》</strong> 权力形成之后对记忆是有选择性的，只会选择特定的历史表达。记忆一旦形成了记录，对于权力也构成制约。权力对记忆有两重作用：权力一定程度影响记忆，另一方面记忆对于权力构成制约。——涉及到历史的选材 不仅是我国。英国历史哲学家卡尔《历史是什么》：“我们看到的历史都是由历史学家写下的历史”“过去的事实也并没有全部被历史学家当作历史事实才呈现”</p><blockquote><p>“一切历史都是当代史”（意大利 克罗齐） “过去的历史不是被保留下来的，而是在点在的基础上被重新建构的”（涂尔干） “重要的不是故事讲述的时间，重要的是讲述故事的时间”（福柯）</p></blockquote><p>从这样的角度来观察五六十年代的革命叙事（原本叫革命历史题材）。实际上在那样时代背景下的作家来重新建构的，作家主体性的东西一定被加入。因此造成<strong>理念过剩，形成了坚硬的、高悬于整个作品之上的理念的东西</strong>。在当时，需要这样一批参与过革命的作家俩构建革命史，告诉青年人“我们从哪里来，我们到那里去”，所谓革命叙事实际上是主流意识形态所主导的“国家意识形态的投射”。</p><h3 id="青春之歌与流年碎影">《青春之歌》与《流年碎影》</h3><p>作品为什么在五十年代引人注目，首先在于其叙事非常新：主人公林道静作为一个年轻、漂亮的女性，在激荡的时代受到革命与爱欲的双重参绕（灵与肉），个人化的情感体验（余永泽、卢嘉川、江华；个人化的情感体验），让当时的读者“心旌摇荡、浮想联翩”——五十年代在意识形态控制下的禁区，爱情即其一；另见《红豆》《在悬崖上》</p><p>“生活本身的发展逻辑”只能是所谓权威，权威的语录，其实与生活本身存在着明显的距离，只是观点的东西、一种符号、一种意识形态——脱离了生活本身的范畴。为说明这个问题，拿另一个文本来比较《流年碎影》（张中行，语言学家，文化老人“文化散文”，八十年代余秋雨）在“婚事”一掌中写到他与杨的故事（他是杨第一任丈夫）话语的缝隙中存在着一种张力。《青春之歌》中的余永泽即是以张为原型的。</p><p>革命叙事不足之处：表面化表现战争，缺少对于战争中的人性的表现——缺少对于历史的敬畏之心。 对比<strong>阿列克谢耶维奇的“文献文学”</strong>；从终结的意义来说，她是反战的。她认为所有的战争中，人性的复杂性暴露得最明显。</p><blockquote><p>对于阿列克谢耶维奇独特的创作手法，俄罗斯诗人、批评家、翻译家奥尔加·谢达科娃说：“我觉得斯维特拉娜·阿列克谢耶维奇的创作意义重大，可以称它为一种新的写法，即文献性写法，作者的特别功夫在于由短篇故事、众人的声音来组成。她的文学是在纪实和文献中产生的，而后变成有艺术性的文学作品。这是文学创作的一条全新的路子，许多作家对此评价不足。”对于这个创作的方式，谢达科娃说：“她早就打算转向人类共同的话题，她已经构思好了关于爱情、衰老和死亡的作品。但是按照她的意思，这些作品应该是以过去的方式来结构，她作为作者不会在书中直接讲述，而是各色人等的各种声音，她将收集他们的经验，然后再高低排序。也就是作为作家的她把题目给自己的谈话对象，而她不直接解决这些问题。”</p></blockquote><p>和《流年碎影》联系，可以看出我们对于革命文学的“加工改造”，意识形态的控制十分明显。<strong>“主题先行，预设立场”</strong>在五六十年代的小说创作中表现得非常明显。</p><h2 id="波动1981非常时期的文本赵振开">《波动》（1981）：非常时期的文本——赵振开</h2><ul><li>讲授要点：<ul><li>地上地下-文学的分层；</li><li>别具一格的文本。</li></ul></li><li>思考点：《波动》的先锋性</li><li>阅读书目: 李陀《波动》序言——兼谈新小资与文化领导权的转移</li></ul><p>前面谈到前十七年的两类叙事。下面讨论文革时期的小说。</p><p>五十年代后期，有了一点长进。六十年代之后，文学有走上了充满艰辛的路，好景太过短暂。即使是十七年后段七年左右（五十年代后期到六十年代前期）之间也是风风雨雨。 到了文革时期。相当长一段时间内，对于文革时期文学的研究很少，“白茫茫大地一片真干净”，实际上在八十年代之前对于文革文学的评价太过简单。八十年代之后。新的资料披露搜罗，西方对于文革的研究也给我们的研究提供了条件，使得我们比起之前更加客观得走进文革文学。“主流文学”，官方认可发行得文学，除了“八个样板戏”，为数很少的作家能够在主流文学圈内发表作品，如浩然这样的作家，大部分作家失去了话语权。刊物如<strong>上海《朝霞》</strong>在文革期间创刊，从这一期刊可以看出主流文学所认可的作品是怎样。后来的研究发现了另一种文学存在——<strong>“地下文学”《文化大革命时期的地下文学》</strong>，陈思和“潜在写作”概念。分类：侦探小说（探案）、色情小说；两类流播最广。改变电视剧《一双绣花鞋》《绿色尸体》侦探、反特题材；低层次作品，容易走进百姓（题材吸引人）；《少女的心》；还有爱情小说《第二次握手》。 异质性、边缘性。流传方式：手抄本。</p><h3 id="赵振开的波动">赵振开的《波动》</h3><p>赵振开《波动》，从80年代开始引起关注。香港出版物，<strong>李陀序言《新小资与文化领导权的转移》</strong>，后半部分借题发挥，关注的是他提到了《波动》的叙事方式：其一是速度（非常具体，如第一段的十个动词，“色彩、气味、声音、空间形式”，李陀在这个地方显示了作为一个小说家批评家的眼光——从看起来普通的文本中发现其精到）《波动》的叙事能够这样快速迅捷，实际上涉及到动词在叙事中的数量和分布，动词在叙事中的动作性，动词能否强化叙事的现场性（颜色、气味、声音、空间形式）等多个因素，这些因素综合在一起形成一定共时性效应，才能构成加快叙事速度的动力。（与《小二黑结婚》叙事速度之慢对比）。</p><blockquote><p>我还是从《波动》开篇那第一节说起。 东站到了，缓冲器吱吱嘎嘎响着。窗外闪过路灯、树影和一排跳动的栅栏。列车员打开车门，拉起翻板，含糊不清地嚷了句什么。一股清爽的空气迎面扑来，我深深吸了一口，走下车厢。 这节文字，不算标点，整整72个字。但是，在这么短的一段文字里竟然有10个动词：到——响——闪——跳动——打开——拉起——嚷——扑来——吸——走下。 为什么我这么在意这段文字里动词的数目？注意这样的细节有什么必要？这有一个重要的理由，因为这里隐藏着一个“秘密”，它涉及小说叙事中一个重要的技术：叙事的速度。过去，很长一段时间里，我虽然喜欢这节文字，但由于慵懒，一直没有认真追究，自己究竟为什么这么喜欢？有时候，我会把它归结为：这节文字虽然也“叙事”，但充满了诗意，像一首短诗，其中一组一组的意象很破碎，有声音，有光影，有色彩，有味道，还有气氛，可是由于被有机地拼凑/组织在一起，就构成了一个具有短诗结构的整体意象，是这意象在迷人。不过，这样一个解释其实并不能使自己满意，总觉得并不能充分说明我为什么如此喜欢这一小节文字。直到最近，我突然想到应该琢磨这节文字里的动词的数目和分布，才一下恍然大悟，“秘密”就在这里！ 一段只有72个字的叙事，却有数目多到10个的动词来推动——这是多么快的节奏。</p></blockquote><p>赵振开写这部小说是作为生日礼物送给女友——可见其在其中付出的心血、才华。《波动》正式发表于1981年，初稿于1974年11月，1976年4-6月修改，1979年4月再次修改（《今天》朦胧诗，不到一年被查封，《波动》在其上连载）。（食指《这是四点零八分的北京》1968年12月）</p><p>第一点，看这部作品，可以看到思考——高贵、优雅的品质，是一种情怀；他们身上，他们笔下的人物，都表现出一种深刻的思辨性，他们对于主流意识形态提出挑战，他们的思想充满可人性。放在七十年代文革时期的社会环境非常难能可贵；有必要说明这样的思想者特质怎样形成。<strong>文化大革命1966.5.26日开始（官方一种说法1963年开始，戏剧革命）</strong>；开始之后席卷全国的是红卫兵运动，特别是在北京；红卫兵之中也是有很多派别，毛在1966年8月接见红卫兵，发展到后来高层都无法控制；到1967年，不到一年，运动遭到挫折，因为很多都是高干子弟，红五类，他们自己遭到冲击（老革命，“走资本主义道路的当权派”），子女也遭到挫折，退出运动变为逍遥派，他们影响了、改变了在那一时期的生活方式；<strong>到1968年，国民经济濒临崩溃，毛鼓动红卫兵“老三届”上山下乡</strong>（红卫兵发生的事情和他们的父辈在解放区遭到的事件非常相似；毛在延安文代会的讲话），也就是说，在当年知识分子跑到解放区，和土生土长的农民遭遇，和他们的后代的遭遇非常相似；到了农村之后，短暂的和谐，发生了很多矛盾，在当时从红卫兵变成知识青年，社会角色的转变，和之前启蒙者和被启蒙者非常相似；革命小将“造反有理、革命无罪”变为最起码的生存都变成了问题；他们之后通过各种方式返回城市，农民也不愿意他们留在这里；他们回到北京之后，所谓“老三届67、68、69”当年都有一种比较浪漫主义、理想主义、追求某种情怀、格调的，因此他们都喜欢文学；无论是回城的，无论是在农村，最容易走进的就是文学；他们对于哲学问题、政治问题、社会问题都抱有很高的兴趣。《波动》中肖凌、杨讯都有这样的特征。 这是第一个感受；第二个特点，是“诗性”（和食指的作品有勾连性）。赵在谈写作时说过特别主义诗意的挖掘、主义意象（意象，从张到赵之间很长的空）（如星星、星光，意象的处理，而且注重隐喻、象征的处理；借助于客观的物象把自己的想象延申开去）有人说“这就是一首散文诗”（送给女友的礼物） 第三个方面，表现了可贵的对小说艺术本身的尊重。重视小说的技巧——中国小说很长时间不大注重技巧。“镜头感”，人物间视角交替，情境的微妙捕捉具有电影语言的特色；又像音乐，多声部，多音齐鸣。在<strong>叙事方式</strong>上，采用的视角和结构（叙事速度是节奏）。视角：每个人物都通过第一人称，对于同一件事情有不同的视角，在当时非常独特；多重视角的叠加，造成了独特的叙事效果——又是和结构联系在一起，并置型结构（福克纳《在我弥留之际/出殡现形记》，内心的独白冲突产生荒谬）第一人称多重视角的并置型结构。完全封闭的时代，“封、资、修”的东西都被打倒（今天我们谈小资，实际上他们的生活开创了先河）。尽管他们在封闭的环境中，还是能接触到外来的东西：黄皮书、灰皮书。（踏实的研究：文革期间有哪些黄皮书），说明当时高知还是拥有一切特权，黄皮书主要是西方文学作品（批判的如萨特《恶心》塞林格《麦田受访者》爱伦堡；苏联作品因为当时中苏关系恶化但是还是要研究，“内部读物，供批判用”）当时上海电影制片厂没有停止过译制电影；灰皮书主要是社会科学方面理论性的文章。赵的这部作品在当时受到关注，但是没有称为手抄本，赵交给赵一凡（当时是团的团干部）考虑到当时抄家等问题，但仅放了一天就感觉不安全（赵可以印刷、也喜欢手抄）一直保管在赵手中，因此不是真正意义上的手抄本。直到1981年（新时期文学已经开始）引起强烈反响，可以看到在当时还是很难接受。刘锡诚认为革命现实主义是正宗，而《波动》是反对革命现实主义的，试图拉到“存在主义”中——可以看到《波动》是与这种背道而驰的。</p><p>易言的否定：表现了《波动》的先锋性、异质性。主题的叛逆性、叙事方式的尝试（十七年小说的探索，形式的探索也显示了叛逆性）；陈思和论先锋文学：有一个特点就是不成熟——主题也是不成熟，但是认真。八十年代西方：有意味的形式，认为形式也是内容；如汪曾祺的形式上的探索。 <strong>八十年代的“文学复苏”</strong>：主流意识形态还是在革命意识形态下在运行；当时对于伤痕等形式的文学都是以社会现实主义、革命现实主义等角度——将现实主义意识形态化，与真正的现实主义有很大的差异。因此易言的批判还是还是在上述框架下的；<strong>这个时期的文学还是和之前的“新的人民的文学”还是有继承关系；与之违背的东西都是旁门左道的东西。</strong></p><h2 id="记忆1979从伤痕到反思张弦">《记忆》（1979）：从“伤痕”到“反思”——张弦</h2><ul><li>讲授要点：转换是如何发生的？反思文学留下的思考。</li><li>思考点：掣肘反思文学发展的因素是什么？</li></ul><h3 id="新时期文学1976-1986十年">新时期文学@1976-1986（十年）</h3><p>（1986年之后，命名为“后新时期文学”）<strong>新时期文学：伤痕、反思、改革（穿插其中知青）、寻根——每隔一两年有一个主潮；90年代之后改变了，“无主潮”。</strong> 严格来说，新时期文学不是在1976年显示出来的：打破四人帮，文革结束——但是文学发展的滞后性——现在逐渐弃用“新时期文学”概念；<strong>1978.12十一届三中全会</strong>——思想解放运动，对于中国人重要的时间节点。思想解放运动：反对“两个凡是”；《建国以后党的若干历史问题的决议》明确否定了文革。 文学呼应了这样的思潮，出现了伤痕文学；主要是小说，但小说之外诗歌方面也有对于文革所造成的问题的揭露和批判：时间：伤痕文学定在1977年刘心武《班主任》、1978.8.11卢新华《伤痕》。 “饱含着血和泪的文学”，很长时间没有看到这样的作品，很长时间都是讴歌；现实主义的复苏，暴露文学？外在形式的揭示到心理的伤痕——逐渐不满足于只表现文革中的伤痕，造成悲剧的原因在文革之前就有端倪可见；有人突破了对于文革的揭露，对于之前的历史也进行了思考：<strong>1964年“四清运动”、1957-8“反右斗争”、1962-3毛“不要忘记阶级斗争”、1950年土改、1930年代中央苏区左倾思潮</strong>。 <strong>出现了“反思文学”</strong>，和思想解放运动的深入发展有关系；思想解放运动一开始也是破除封闭破除禁忌；西方思潮，主要存在主义《波动》表现出萨特的思想；最先容纳进来的是“人道主义”，学术界展开讨论，作品中也表现人道主义。契机：否定文革，认为文革是一种非人化，用人道主义来解释非人化的思想造成的人间悲剧，出现了反思文学《人啊人》宗璞、李陀的小说揭示了文革中人的异化（“异化”在八十年代非常流行，如胡乔木的文章）。“反思”也来自德国古典哲学，这时期的文学非常强调思想性，注重选材、主题，这决定了每一篇很容易触动到敏感的社会问题，这些问题的提出以及引发的思考对社会产生冲击；这一时期的文学处在“社会的中心”，“包打天下”的味道；这一时期的文学什么都是：是政治、是社会，但唯独缺少文学；提出“让文学回归文学”，这个时期的文学从文学性比较缺少，但是敏感的神经，所有才能确定文学在这个时代最能产生轰动性。但是问题也同样产生；文革结束之后，左倾思潮的流布中发挥作用的权力者还在台上，伤痕、反思文学也出动他们的神经，有关领导也要出面干预，中宣部副部长提出（向下面打招呼）《向前看啊文艺》，要求从对文革的批判转到对改革开放的现状“新的社会主义的”《歌德与缺德》——这样的努力也见到了效果，81-2年对电影《苦恋》的讨论，如何涉及历史——反思文学夭折了；触及了很敏感的历史问题，82年随着改革文学的提倡（79年提出，和反思文学差不多）得到了官方的加持，反思文学被夭折（1985年之后，在寻根文学中在夭折的反思文学中重新接回来）。</p><h3 id="从伤痕到反思">从伤痕到反思</h3><p>从伤痕到反思，什么时候发生的？比较？思考的深度而言，反思远超出伤痕文学；伤痕仅仅满足于伤痕的展示（作家哭哭啼啼，走上前台露出伤痕给人开，仅此而已）；反思除了揭露伤痕，还有对于深层原因的思考，思考的触角延申到了历史的深处——转换可以看张弦《记忆》，现在看比较幼稚。 <strong>（套娃结构、复调）秦的记忆引出方的故事，是一种同构的关系，但是发生在不同的年代：文革和四清；表现这种“现代迷信”不是在文革中才有，而是在文革之前就有，可见现代迷信由来已久；在叙事的结构上由于1+1叠加效应产生了“增值效应”；都是有意义的，两个叠加后增值，并且产生张力，启发性走向深层：现代迷信由来已久，在党的历史上像一个幽灵；不仅对于干部，连普通的群众也深受其害。</strong>小说在最后借助秦最后“她不过在几秒钟之内颠倒了影片，而我们颠倒了一个人”（作家深怕读者读不懂，而跳出来说教）。从伤痕到思考，而且这种思考表明了“知识分子”的话语权（五十年代被取缔，再到文革荡然无存），新时期知识分子的话语还没有应有的地位；秦的话显示了知识分子基于人道主义的思考，有一种新的价值观，跟传统的“幡然醒悟、青天意识”不同，实际上是知识分子的价值观，彰显作者而非秦的价值观。 这以后我们发现，79年之后，有一批这样的作品，如同期《剪辑错了的故事》也有异曲同工之妙。如果仅仅写秦的故事只是伤痕，但通过记忆引入方就有了反思文学的内涵。——借助这样的作品可以观察到这样的转变。</p><p>稚嫩：借助秦之后讲的一番话：“并非独有，但她确信历史不会倒流……力图把它忘却得越干净越好吗”，现在评论家的思考：许子东《为了忘却的集体记忆》以表现文革的小说的研究；“记忆这样的作品鼓吹忘却”。为什么要鼓吹忘却？记忆深处得东西不能忘却。作家的压力：可以写苦难的历史，但要表现出光明的一面。南京大学《》重读记忆“既然知识分子记忆中的历史的反思，应该把这样的反思灌输给全社会，知识分子的历史记忆在全民族的历史记忆种有重要的地位，知识分子在这样的背景下鼓吹忘记，有点伪”——新的研究视角：知识分子的记忆，应该保留在什么样的位置上？作家的压力，前易言批判文章发表在1982年，可见当时思想僵化的程度，把社会现实主义定于一尊，《记忆》在那个时代非常难能可贵。</p><p>七十年代末八十年代初，文学经历了巨大的变化。评价：<strong>伤痕文学是现实主义的复苏，反思文学是现实主义的发展和深化</strong>。这个时期的文学呈现出显著的特点：一定的时间段主潮的形式，十年文学主潮。共同特点：对于主流意识形态的追逐，这一时期的文学是由意识形态控制的文学，形成了文学的轰动效应，造成轰动效应的原因是这些作品都和政治达成了紧密的默契。 同时，七十年代末开始，对于西方小说采取接纳的态度（1981年，高行健《现代小说技巧初探》）；对于意识流的引进（《波动》中看到，非现实主义的冲击），在前几个文学浪潮中，现实主义“一统天下，定于一尊”，发生变动原因对于西方现代派小说的引进（王蒙为代表“东方意识流小说”；《外国现代派作品选》）。 <strong>这一时期的主流文学，“超负载”，缺少文学性，“包打天下”，文学也是那个时代的中心（八十年代后期边缘化）。有人对于这一现象反思，代表性的是汪曾祺。</strong> 1980年出场，（非常微妙的时期）现实主义的复苏收到政治的压迫非常明显，伤痕、反思文学进展到一定阶段，政治试图加入进来进行控制，蒋子龙《乔厂长上任记》，文坛显示出胶着的状态。还有一股力量就是知青文学，很快取代了“归来者”这一群体，成为文坛的主要力量。汪的身份比较特殊：写《受戒》之前也是资历比较老的作家，40年代沈从文的弟子，那时就发表过，收到沈的影响，对于现代派作品浓厚兴趣；49年之后也发表过一些作品，引起关注但没有大的影响；文革期间，除了写样板戏之外，也写过一些小说，和当时主流也相似不见得突出；（60年代江青领导样板戏的改编）往把沪剧改编成京剧《沙家浜》，代表了现代京剧改编的最高成果；四人帮倒台之后，处在一种尴尬的境地，处在赋闲、边缘化的状态，闲来无聊写作（和文革地下写作相似），开始在同事朋友之间流传，后被京剧院领导看到，杨领导参加一个文艺会上推荐汪的作品，“很多人看不明白，和流行的不是一个东西”，《北京文学》副主编“让他把这个稿子给我看”，老杨“这部小说味道十分迷人，可是回头一寻思又感觉毫无意义”，汪在稿子中夹便条“发表它是要有一定胆量的”（当时政治一方面推动着文学，另一方面掣肘着文学），“怎么也看不出政治联想，没有政治冒犯；不过那时候人们都明白，作者的担心子啊何处，我们都存在心照不宣的默契，左的演绎法，但那却完全不在你的作品里有无毛病和毛病是什么，它的厉害在于可以从作品里随意找到”可以任意解释，随时可以找出罪名，左倾思潮“它的另一个厉害还在于你只能匍匐在地，不容分说”。（1981年，《雨花》上发表《大淖记事》。）</p><h2 id="杂色与意识流王蒙">《杂色》与“意识流”——王蒙</h2><ul><li>讲授要点：<ul><li>现代派的喧嚣；</li><li>“意识流”如何流入中国？</li></ul></li><li>思考点：如何看待“东方意识流”？</li><li>阅读书目：高行健《现代小说技巧初探》</li></ul><p>略</p><h2 id="受戒1980汪曾祺的意义汪曾祺">《受戒》（1980）：汪曾祺的意义——汪曾祺</h2><ul><li>讲授要点：<ul><li>非主流；</li><li>做减法；</li><li>“写小说就是写语言”。</li></ul></li><li>思考：汪曾祺对汉语写作的贡献</li><li>阅读：《汪曾祺文集 文论选》</li></ul><blockquote><p>“我写的是美，是健康的人性，美、人性，是任何人都需要的。”</p></blockquote><p>整个新时期文学，都追求所谓“宏大叙事”，极力表现那些政治性很强，引起社会关注的话题，到80年代之前，中国小说运思并没有很大变化，和五十年代、解放区文学没有区别。<strong>《受戒》表现出疏离宏大叙事的意图，“我的作品不是、也不可能称为主流”</strong>，莫言在汪曾祺小说得奖时发言“汪非常散漫的作家”，不想成为主流。 “写43年前的一个梦”，汪当时60多岁，也就是17岁，30年代末，“一场梦”——打破现实主义一统天下的格局，但也有风险，“发表它是要有一定胆量的”，逆流而上。京派小说，抒情性小说；学者把小说分三类：<strong>叙事性小说、抒情性小说、讽喻性小说</strong>。抒情性小说：鲁迅、沈从文、萧红《呼兰河传》，但到解放区文学后只剩下孙犁《荷花淀》保留了抒情性小说的流风遗韵，但49年之后作为一种传统被遮蔽了。从这个意义上，《受戒》把我们中断已久的抒情性小说接续上了，也影响了后来的阿城、何立伟等作家。 其二，“我喜欢疏朗清淡的风格”，这是当时作为风格来说非常稀缺的东西，当时都喜欢悲壮的、粗犷的作品。新时期文学在汪之前充满烟火气，大开大合，很少有人表现“疏朗清淡”，有着自己独特的风格——很大程度上通过语言表现出来，汪对中国当代先说影响最大的就是语言。“我非常喜欢语言，……，我认为语言不只是形式，本身便是内容。语言和思想同时存在不可剥离，语言不只是载体，而是主体”（斯大林，文学分为内容和形式，而语言是形式中最重要的元素）汪强调语言的内容性）“写小说就是写语言”，韩愈“言之短长，声之高下”，对于作家来说，“言”就是句子，短句子；“声”汉语有音调，关系到使用词汇的音调。80年代开始，作家关注语言。李陀《汪曾祺与汉语写作》，有些观点和主流意识形态有些唐突，谈到汪对汉语写作的关系；“毛文体” “减法写小说”。独标一个，“要作散淡之文，必先作散淡之人”（莫言）汪之所以有散淡的心态，和汪的境遇有紧密关系，遍尝世态炎凉，“汪的散淡，并非，……来自曾经沧海，……，呈现出一种既有传承，又有创新的独家气象。”。</p><p>汪的写作构成对于沈写作的超越。沈多数写乡村，汪不仅有乡村还有城镇，市井生活。视角有扩展；而且沈的作品如果有淡化意识形态、诗化散文化的抒情精神，汪进一步扩展了这种抒情精神，语言上更文气和典雅，完成了古今对接，也完成了翻译文体（好用长句）（如刘心武）的终结。一方面对于古代文学有传统的继承，下面对于白话新文学也有继承性的东西；因此汪的文学有特点，有表现力。王安忆对他的文字大加赞赏，沙家浜第四场阿庆嫂“打开八仙桌，招待十六方，来的都是客，全凭嘴一张”，既有唐诗宋词的化用，又有民间，但是非常典雅；这个给80后的文学深刻影响。总的来说，八十年代初期的写作，由于有了汪曾祺，这个时代的小说品格被提升了。<strong>若要列出必读书目前五位，汪必居其一，那个时代坚持这样的写作非常难能可贵。</strong> 汪的写作对于西方文学的关系，多有勾连，仅《受戒》，就可以读到契诃夫、屠格涅夫的影子。</p><h2 id="棋王1984文化之于文学阿城">《棋王》（1984）：文化之于文学——阿城</h2><ul><li>讲授要点：<ul><li>被追认的“寻根”；</li><li>寻根文学的兴衰。</li></ul></li><li>思考点：知青小说，还是寻根小说？</li><li>阅读书目：<ul><li>韩少功《文学的根》；</li><li>阿城《文化制约着人类》</li></ul></li></ul><p><strong>当代文学最重要的转折点发生在80年代中期。</strong> 从汪就可以看出，传统文化与现代文明的冲突，在80年代，特别是在一些知青作家中可以看出来。寻根文学的主体发生在知青作家，如阿城、王安忆。知青文学在进入80年代之后发展有待叙述。（《伤痕》也可以归为伤痕文学。）到梁晓声的两篇典型中篇、短篇小说是知青文学的发端，也就是80年代初期。知青文学描写内容、运思的范式和当时伤痕文学、改革文学所追求的宏大叙事是一致的。 随着知青文学的发展，到1983年之后，有一些变化：<strong>一是希望从梁晓声的模式种解脱出来，很多作家写到知青下乡之后对于自己命运的思考，在这样的作品种有对乡村文明和城市文明的思考；还有一些作品希望从风俗化的知青视角下的乡村生活如史铁生《我的遥远的清平湾》。</strong> 阿城的《棋王》正是在这样的背景下产生的。写作于82-83年，发表于1984年第7期的《上海文学》，是《北京文学》的退稿，认为写出了知青生活的“阴暗面”，与当时<strong>“清除精神污染”</strong>的背景相冲突。当时北京形成各种文化圈，李陀他对于作品的鉴别能力在圈内有名。他也是北京文学的编辑，“陀爷”，推荐到《上海文学》。可以看到《北京文学》受到政治的压力，而当时《上海文学》则处在重要的发展的阶段，提出“探索性、文学性、当代性”，当时拿到作品时也颇为踌躇。蔡翔回忆当时情况：看重两点：一是叙事方式，二是文化内涵。（我怀疑后来作为编辑84中发生的事情重新加以整理，这种说法可以质疑。）牵涉到今天的话题：<strong>《棋王》是知青文学还是寻根文学</strong>。</p><h3 id="棋王是知青文学还是寻根文学">《棋王》是知青文学还是寻根文学</h3><p>一个观点：证明阿城写作棋王时，本无意于寻根，但是后来（从知青小说）“被修复到”寻根文学旗下。问题的价值：知青小说、寻根小说是不同的分类，但是在1985年背景下，寻根是那年的重头戏（当代文学作为浓墨重彩的一掌）。最初的《棋王》作为知青小说的一种，但当寻根浪潮之后，阿城有意从知青小说被修复到寻根文学。“经典化”（如红色经典《青春之歌》）所以重返文学现场，（最近“重返八十年代”，史实的理清太有必要）。（杨晓帆的观点） 84年发表于《上海文学》，85年选入《中篇小说选刊》，阿城84年底写了《一些话》：只是想写一点；王一生这样的痴，也有“历史的眼睛”（没有和文学、寻根扯上关系） 阿城出子名门，父亲<strong>钟惦斐</strong>，在当代文学史上也是比较响的名字，50年代《电影的魔鬼》被打成右派，毛认为名字很怪。钟惦斐当时是电影处的，比较有影响力的电影评论家，50年代之后反右被打。阿城68年起到山西、云南、内蒙插队，云南遇到画家范增，写过美术，70年代，79年左右回到北京，《今天》杂志的组织者，唯独他不怎么样，做美工。后来范增介绍给另一个作家。“天赋极高、绝顶聪明”的人。对他影响很大的作家。 <strong>1984年12月，作协第四次代表大会召开，49年之后文坛作为自由开放风气就是84.12之后，提出“文艺民主”（84年“清除精神污染”刚刚结束，而年底就开放）。</strong>年底，阿城在杭州西湖参加座谈会，主题对新时期文学回顾和展望，非常微妙，对于未来的文学怎么发展没底，（作家：阿城、韩少功、贾平凹；批评家，主要上海、北京，复旦陈思和）韩少功当时关注“文学和文化”，阿城很快从发言中发现了什么，民族总体文化背景，阿城借此和《棋王》联系起来，从普通人的生活中体现出文化蕴意。通过这种联想，很快在《文汇报》中提出这个想法。朱伟的回忆录上暗示阿城在座谈会上发现这样的思想，一步步靠近“文化寻根”。韩少功《作家》《文学的根》，视为寻根的宣言，</p><blockquote><p>“文化有根，应该扎根于何处？应该扎根于民族文化的土壤。”</p></blockquote><p>参与杭州会议的作家1985发表很多作品：如《我的话》《理一理我们的根》7月，阿城发表<strong>《文化制约着人类》</strong>，它的角度不一样：文化只有在强大的文化限制下才有自由和出路——限制之下谈文化，促使了韩少功寻根的理论。9月，阿城<strong>《又是一些话》</strong>不离文化，在韩的基础上有所发展——因为这两篇文化阿城被认为寻根派的重要作家。 被追认的过程中，阿城也非常费心思。肯定会碰到质疑，在接受一个台湾作家对话时说到：“批评时批评家自己建立的世界，……我无权干涉……因为好的批评也是一种创作……我觉得不应该用我的小说来要求批评家”。半推半就从知青小说到寻根小说的渡让。</p><h3 id="寻根文学">寻根文学</h3><p><strong>黄金80年代，除了纪实文学，先锋派之外，就是寻根文学。之所以形成寻根浪潮，从当时中国文学处于世界范围内来看，世界都在关注文化，文化热是世界范围现象，当时有“全球化”概念的提出，“地球村”，对于民族文化的讨论也是当时的重点。</strong>埃托玛托夫，强调全球化环境下，民族如何保存文化，特别是文学中捍卫文学特性。中国作家，最直接的原因，拉美“爆炸文学”。82年诺奖马尔克斯，从60年代之后，拉美以魔幻现实主义为代表的爆炸文学是世界文学最发达、直接文学的中心。之所以长达几十年引领风骚，中国作家得到启示：一是拉美作品从不讳言政治，有着社会现实问题的深层、严峻的思考，对于政治压力下纠缠的、风风雨雨中艰难前行的中国文学富有启发性，85翻译的《百年孤独》，很多作家学习魔幻现实主义的写法，用文学立足于民族文化的土壤。现代化也放在中国人面前，作家思考现代文明与传统文化的矛盾，怎样积淀在中国人的思维之中。各种原因使得寻根文学成为浪潮。——在这之前已有思考，如汪的作品，李航育的作品，1983《最后一个鱼佬儿》。85年开始《鸡窝的人家》《商州初录》等三篇，张扬的秦汉的文化底蕴，身处逆境奋斗不息不惜；韩写下一些列作品。</p><blockquote><p><strong>李航育《最后一个渔佬儿》</strong>刊于《小说月报》1983年第6期，后《当代》1983年第2期转载，是中国当代作家李杭育的代表作品。20世纪80年代中期，“寻根文学”崛起于当代文坛，李杭育的小说《最后一个渔佬儿》是其代表作之一。评论家从两方面赞许其成就：其一，该作以古拙、粗犷、硬朗的笔触描绘葛川江边行将消失的宁静和谐的民俗民风和文化形态；其二，作者以无限同情和感伤的笔调谱写一曲时代落伍者的“挽歌”。</p></blockquote><p><strong>俗人俗事中寻求“真味道”，对于世俗之人、世俗之事的关照，这样的关照在知青小说的写作上有独到之处。</strong>说到有意识地转化为寻根文学，有其独到之处。“心灵辩证法”，所表达地东西超越了主观的意愿。（如张《秧歌》尽管有反共的意识在，在进入创作中为了表现现实，有可能超越、隔绝主观的意愿）寻根文学的发展也需要《棋王》这样广受好评的作品。</p><p><strong>这部小说在80年代小说上还有一个贡献——叙述方式。</strong>叙述语言的节奏、情调、韵味都是我们陌生的，作家朱伟推崇其“语感”：看了这个作品之后“一句“车站上是乱得不能再乱”的开头，确实充分表达了阿城的美学追求，这一句主谓型的陈述句，既简洁又暗示氛围、心理……出色的语感所提供的韵味……又感受到境界的韵味”（混乱，一句话带到文革之中，车站；心态，不满）。这一时期，作家开始关注作品开篇、结尾。最熟悉的是《百年孤独》的开头，梁文道《锵锵三人行》分析，时态很复杂，“时间在晃悠”。汉语语言的处理也很有韵味《中国句型文化》（申小龙）词性变化，产生“陌生化”，产生关注。“紧一紧手和脸”形作动，“全身一软，额头的光”软形作动、动态；笔墨非常节俭，有古典小说、笔记小说的魅力。有质感、有动感，使得汉字生动活泼，语言（句子）非常简短，达到雅俗共赏、大雅大俗的境界，通过短的句子抑制叙事的节奏。“我父亲在时炒得一手好菜”“大家都凝神。之间老者进了大门，立定向前看去”，节奏变化。</p><p>阿城多才。家族宗堂之上“法无法”，喜欢郑板桥“删繁就简三秋树，标新立异二月花”。王朔“北京地界上每过几十年就要出现人精，这几十年就出了阿城”</p><p>《上海文学》编辑蔡襄在谈选用这个作品的原由时，说是因为叙事方式，第二才是文化内涵。这也有修复的意涵再里面（回忆上的修改）。</p><p>84年开始就陆续推出一些作品（王教授当时在读研究生，和贾平凹有一定联系，评论过他的散文）写过一封信，刚完成《商州初录》《鸡窝儿的人家》，但心里没有底，代表了很多作家的状态——彷徨、迷惘，不知道出路，当然也意识到和以前的写作有求新求变，但能否得到认同还是很矛盾。——当时普遍的心态。 84阿城《棋王》，后来被归入寻根派的作家，在84年就已写出了很有分量的作品。<strong>这样的迹象表明，在疾风暴雨式的政治运动高潮之后，作家又准备重新出发。一个方向是寻根；还有一个是1985年初纪实小说；第三个方向就是新潮文学（文学界“85新潮”），还有先锋/探索/实验小说，今天基本确定为先锋小说。</strong>一开始两本刘索拉《你别无选择》（《麦田的守望者》《第二十二条军规》）徐星《无主题变奏》——受到西方现代派小说的影响。高行健《现代小说技巧初探》，从技巧、形式来探讨西方现代小说，对中国作家产生很大影响，启蒙意义的读本，对西方文学的借鉴也成为突出的现象。 刘、徐等的作品世界是荒诞的，个人是孤独的；有意无意对这样的价值立场给予了认同；所塑造的人物，都是玩世不恭的，对现实世界充满反叛性，但反叛的言行举止很难为大众接受。（第一阶段，表现观念的心理，从西方引渡来的心理）随后的发展不得不提到马原，经过马原之后，到了新的阶段（后新潮，如余华、苏童）。在这个过程中，最重要的是马原，其次是残雪。小说形式，更具体是叙事方式上引发了深刻的革命，如果没有马，转变的进程要花费更长时间。</p><h2 id="冈底斯的诱惑1985如何诱惑了我们马原">《冈底斯的诱惑》（1985）如何诱惑了我们？——马原</h2><ul><li>讲授要点：<ul><li>先锋小说价值重估；</li><li>叙事革命的发生。</li></ul></li><li>思考点：马原给当代小说创作带来了什么？</li><li>阅读书目：吴亮《马原的叙述圈套》</li></ul><h3 id="先锋写作中里程碑的作品">先锋写作中里程碑的作品</h3><p>《冈底斯的诱惑》于1983年写成，发表于1985年第二期《上海文学》。</p><p>1987年，马原《亮出你的舌苔或空空荡荡》，引起教众的不满。中宣部发现文学竟然走得那么远，还清除记得1983年清除精神污染还风头很健。1984年年底改变，办刊宗旨提出三性：<strong>“探索性、文学性、当代性”</strong>，《上海文学》成为这类作家的圣地。</p><h3 id="冈底斯的诱惑诱惑了我们什么">冈底斯的诱惑，诱惑了我们什么？</h3><p>谈到马原的作品，离不开批评家吴亮的文章《马原的叙述圈套》。 <strong>实现了故事和人物的消解，完成了意义的解构。</strong>实际上这个小说也许今天能够看懂的也是不多的。马原有关《冈底斯的诱惑》的谈论中也从不去说明作品到底写什么。三个主题故事和穿插。<em>两个汉人探险的故事，穿插藏族女子的故事；第二个一个藏族汉子猎熊的故事，穿插老作家与神，神秘的仰头的故事；藏族两个兄弟，穿插失踪的故事。</em>故事之间的断裂，有意识地把叙事打乱，也形成了叙事的断裂。故事的断裂表现在故事本身断裂，大多已没有结果而结束；叙事的断裂，打破叙事的陈规，<strong>“元小说”（关于小说的小说，用小说的形式揭示小说的文本）叙事行为直接成为叙事内容</strong>，这种写法在中国第一次接触（“此刻在我写作的时候，我的妻子正坐在我的身旁”）。不时跳出故事的场景，来根读者进行现场性对话，这样的小说试图营造一种新颖的、和传统不同的作者与读者之间的关系。小说开头“信不信都由你们”本文中“我只不过在讲述这个故事而已”</p><p>西方“有意味的形式”，马原“形式本身就是内容，三个人同样的事情，描述的……同样一个事情，讲述的是不一样的故事……”，形式就是内容，举例“马原、梁晓声的知青都是不一样的”——寻找和别人的形式不同的形式。 马原在八十年代中期给人们新鲜的阅读经验，通过元小说、空缺、诗化的、叙事的断裂（之前还是强调叙事的完整性）。为什么？“夹生感”，提醒了，通过在这样的形式任何的真实无非是叙述策略所导致的东西。叙事的策略直接影响到叙事的真实性，世界上我们通过阅读接触的世界、号称为真实的东西实际上只是一个人工世界，靠语言组织起来的世界。</p><p>这是先锋小说，通过马原我们认识到叙述的圈套。举个例子，《冈底斯的诱惑》15节，“故事到这里讲得差不多了，但是显然……我们来设想一下，ABC……”。很像博尔赫斯。 写什么不重要，怎么写这才重要。通过马原，我们的当代小说走向了深刻的转型：在之前我们关注的完全是些什么，作品的主题很重要；到他这里完成了怎么写才重要，转变。有人说，经过马原，文学创作 → 写作。以前文学是一种艺术，变为文学是一种艺术——这一转变对小说未来的走向非常重要。 当代文学深陷政治的泥淖中，走出去，所以人们看出，学者“马原第一次把如何叙述提高到本体的高度，叙述……得到了明确的确认”。汪“写小说就是写语言”。到了马原，第一次把如何叙述提到了小说本体的高度。</p><h2 id="红高粱民间的凸显莫言">《红高粱》：“民间”的凸显——莫言</h2><ul><li>讲授要点：<ul><li>“寻根”的式微与“新历史”的初兴；</li><li>民间立场及其审美意趣。</li></ul></li><li>思考点：莫言为革命历史叙事别开生面体现在哪里？</li><li>阅读书目：莫言诺贝尔获奖感言</li></ul><p>略</p><h2 id="一地鸡毛1991与新写实刘震云">《一地鸡毛》（1991）与“新写实”——刘震云</h2><ul><li>讲授要点：<ul><li>新写实之“新”；</li><li>“勘探人生”与消解诗意。</li></ul></li><li>思考点：“新写实”新在何处？</li><li>阅读书目：《钟山》1989年第3期新写实主义小说联展 卷面语</li></ul><h3 id="后新潮">后新潮</h3><p><strong>黄金时代，前面说寻根文学、先锋文学，都是80年代中期，实际上当时的发展显示出各式各样的危机。经过马原，新潮小说完成了后新潮的转换，一般1987年之后的一系列作家算作后新潮阵营。</strong>虽然先锋小说有着悲壮的探索性质，但是还是值得赞颂，才显示出张力（但也潜伏着危机）。</p><blockquote><p>马健， 中国先锋作家。1953年出生年8月18日出生于青岛，1986年移居香港,1997年移居德国，1999年移居英国。八十年代曾以《亮出你的舌苔或空空 荡荡》一文成名。当时刘心武是《人民文学》主编，便全文刊发了高行建推荐的此小说。后引起了轩然大波，已经面市的《人民文学》全面查禁消毁。刘心武辞职。 1986年移居香港，并创办香港新世纪出版社。1997年前往德国鲁尔大学教授中国当代文学。1999年起任英国签约作家，专事小说创作。现定居伦敦。被 法国《阅读》杂志评为本世纪全球最重要五十位作家之一。作品 马建着有长篇小说《思惑》、《拉面者》、《九条叉路》、《红尘》、《肉之土》。中短篇小说集《你拉狗屎》、《怨碑》，文集《人生伴侣》、《发生关系》等。 其小说尖锐幽默。其中《红尘》获英国托马斯·库克国际旅行文学奖，《拉面者》入围美国国际笔会翻译奖，《亮出你的舌头》提名英国独立外语文学奖，入围美国 桐山文学奖。已翻译出版的著作有：德语、英语、意大利语、法语、西班牙语、荷兰语、挪威语、日语、西班牙、瑞典语、以色列语、卡特兰语等二十多语种。北京 写家文学院客座教授。</p></blockquote><p>到1987年，随着商品经济的发展，全社会价值取向发生了倾斜和迁移；如果说之前文学的发展受到政治掣肘。1988马健《亮出你的舌苔或空空荡荡》，惊动最高层，责令大小文学期刊整顿。<strong>L. J. 宾克莱在《理想的冲突》中描述的在87年的中国也出现了。</strong>在当时，纪实文学与所谓纯文学形成了抗衡，一时间通俗文学、大众文学。从此，中国当代文学进入“无主题”时期。</p><h3 id="新写实">新写实</h3><p><strong>“阅读的颠覆”：后新潮的小说，造成了阅读的障碍；另外作家有意无意的孤傲，对读者的自尊造成了刺伤。另一方面，80年代后期出现的则是新写实。</strong>1989年第三期《钟山》（双月刊，6月，比较敏感的时间）正式发出新写实的旗号。80年代中期，对寻根文作家影响最大的是马尔克斯；而80年代后期对后新潮作家影响最大的则是博尔赫斯。1986年，作家们注意到（捷克）米兰昆德拉，捷克方表示不愿意昆德拉的作品被翻译，“流亡作家”，“布拉格之春”在捷克历史上也是有着很多议论的时代。昆德拉在事前就注意到斯大林主义对整个东欧国家形成的压力，1967年就发表过对斯大林主义抨击的言论，在当时是非主流的，所以在布拉格事件发生之后坚持立场就不适合在捷克继续生活，于是流亡法国，他的所有作品写出捷克知识分子在事件之后表现出来的行为，倾向性非常明显。流亡之后，他的写作引起了世界性的关注，特别是如《玩笑》，在次之后只好退而求其次，韩少功与其姐翻译了《不可承受的生命之轻》。昆德拉的内容主要是是政治+性爱，人生（生存）勘探。而池莉《烦恼人生》，关注人生（生存）勘探，对日常生活的表现，所谓“生活流”，从原来大写的人，典型性到小人物的关注。对日常生活生活流的表现，对原始生活的写作，称之为“原生态”，还原式写法。经过87年之前寻根（原生态，还原历史）、先锋，把这样的概念移植过来，还原生活。一直到89年第三期《钟山》。</p><p><strong>新写实：现实主义、现代主义、自然主义，呈现出“新”的东西，包含了两层意思</strong>：</p><ol type="1"><li>其一是写的新，得力于现实主义、先锋小说，四个方面：<ol type="1"><li>一是沉入个体生命深层的视角（视角下沉，和所描写的对象处在平视）</li><li>第二是扩散性的故事结构</li><li>第三写法偏离典型化的结构，采用类型化写法（和现实主义塑造典型，如梁森宝；如《一地鸡毛》中小林，没有名字，只是一类人）</li><li>第四是客观内敛的叙事风格（零度写作；置身事外）；</li></ol></li><li>其二是实，世相，个体在现实人生中的命运际遇，着重写“食、性”、不避丑恶、写琐碎频繁的日常生活事件（对自然主义写作的亲近；原本食色、丑恶都被视为自然主义加以排斥）。所谓“新”，是相对于传统的现实主义。</li></ol><p><strong>在20世纪的西方，二战后已存在。意大利“新现实主义”电影</strong>，起源于电影界，后来波及到文学、小说，<strong>“新现实主义创作六原则”</strong>：用日常生活事件代替虚构的故事；不给观众提供出路的答案（客观、内敛、不动情）；反对编导分家；不需要职业演员；每个普通人都是英雄；采用现实语言。王蒙“毛茸茸的生活”，日常性。（现实主义、自然主义的讨论中，马恩讨论莎士比亚化，反对席勒化；喜欢歌德，反对左拉式的写作（开创自然主义，照相式表现生活））五六十年代抛弃了自然主义，在80年代后期重新挖掘了自然主义写法——达到了什么样的效果。</p><blockquote><p>“新写实比较包容，吸纳、消化多元文化，重组自身功能的能力。”</p></blockquote><p>下面结合刘震云《一地鸡毛》，它是对于新写实完美的注脚。发表于1991，新写实处于末端了。 蔡襄“日常生活诗性的消解”，以前对生活过滤、净化，很难把毛茸茸的生活真实地推到我们面前。 <strong>人对生活的“无力感”</strong>：如小林虽然心有不满但还是被迫这样去做，现实生活对人性的消磨，在座各位用不了多久就是文中的小林。刘巧妙地通过一个特殊的视角，通过人物在作品中的生存状态的揭示提醒我们生活中有很多严酷的东西。在叙述的层面，刘也是非常老辣。有人指出他和其他新写实作家有区别：反讽的运用，尽管不动声色，读之后有苦中作乐的感觉，喜剧的意味。 <strong>刚刚提到，80年代后期，文学出现颓势，新写实有种“挽狂澜于既倒”的姿态，而且这种写作是个体化的，从阿城、汪曾祺的小说有了个人化的，但到寻根、先锋又回到了从前，到了新写实有了再出发的状态。</strong></p><h2 id="废都1993之废贾平凹">《废都》（1993）之“废”——贾平凹</h2><ul><li>讲授要点：<ul><li>安妥破碎了的灵魂的一本书；</li><li>查禁与解禁之间。</li></ul></li><li>思考点：如何看待《废都》的“性”？</li><li>阅读书目：贾平凹《废都》后记</li></ul><p>九十年代小说，《废都》。 <strong>应该说中国社会真正转型是在80年代后期，市场化浪潮全面铺开，文学在之前更多是文化，而之后更多是消费品。</strong> 所以之前所认同的严肃文学、纯文学受到冲击。通俗文学和严肃文学的界限越来越模糊。 陈思和，90年代选编《逼近世纪末小说》，人们对文学前景充满迷惘的情绪。进入90年代之后，1989年六四风波对之后的文学形成了深刻影响。知识分子，及其所代表的精英文化迅速被边缘化。实际上是一个充满复杂性的阶段。</p><h3 id="查禁与解禁">查禁与解禁</h3><p>恰恰是在这一阶段中，小说创作出现了生机。1993年前后，以陕西为中心出现全国性影响的几部长篇小说，如《最后一个匈奴》，光明日报举行过讨论，高建群说这部作品比起其他陕西籍作家算不了什么，他披露不久之后，<strong>陈忠实《白鹿原》贾平凹《废都》将出版（1993）</strong>。两部重要作品，代表当代小说20世纪末最高高度。《白鹿原》获得茅盾文学奖，各个方面让读者满意的作品；而《废都》则是充满矛盾的作品，出版本身就是引人注目的文化现象，（据说在当年），贾平凹之前写有中篇《废都》内容上没有什么关联，《废都》的写作是陕西出版社的约稿，得到了预支的稿费，北京出版社《十月》主编得知此消息后，截胡了，代为支付了给陕西出版社的违约金，因此引起关注（百万稿费），还没出版就做足了广告，未问世之前就吸引了许多眼球。一开始只印了几万本，盗版数量惊人，贾平凹后来统计民间各种盗版达到1200万册60种。 北京出版社上级，北京新闻出版局收到国家出版署的通知，“1993年，我们根据国家新闻出版署的名义，以格调低下，……”遭到查禁。在国外，获得法国女性文学奖，翻译成日文发行六万册，翻译成韩文，被认为文革后最好作品。2009年，北京新闻出版局宣布解禁重新再版，未经过任何增删。</p><h3 id="唯一能安妥我破碎的灵魂的一本书">唯一能安妥我破碎的灵魂的一本书</h3><p><strong>“唯有心灵真实，任由笑骂评说。”</strong>另一点是后记，“人到四十”，贾平凹遭逢人生中一系列困惑，三个方面：1. 父亲去世，贾性格受到父亲很大影响，其后半生在坎坷种度过；2. 家庭解体；3. 贾个人肝病复发，感到人生无常，对未来悲哀，人生大限将临的感觉，“这本书在生命的苦难中唯一能安妥我破碎的灵魂”。 如何理解“安妥灵魂”？在之后，贾也完成了《高老庄》《秦腔》等作品，虽然《秦腔》获得了茅盾文学奖，无法企及《》的高度，巅峰式作品。 “《》在我小说写作中起码是阶段性、开创性、转折性的作品，对后面《白夜》等写作产生重要影响，其实是谁都想写这本书，谁都不敢写这本书”谁都想写，是因为90年代市场化浪潮中会受到瞩目；不敢写，因为文坛还是各种的禁忌——为什么贾敢写？因为生命的苦难，可能是错觉的“大限将至”。贾本性懦弱，80年代初期，清除精神污染中受到批判。日本学者认为“五四之后最杰出的小说，写到了人本身”，贾在记者采访时引用了这个观点。</p><h3 id="废都中的性">《废都》中的性</h3><p>讨论《废都》，首先碰到的是其中性描写，对记者，贾这样回答：<strong>“只有把性描写不当回事才是正常的。”</strong> <strong>中国小说对性描写更客观，而西方的小说中对性描写更主观。</strong>很长时间以来，把性描写的小说一概被主流意识形态斥之为自然主义加以鞭笞。80年代后，开始对爱情的描写，《爱是不能忘记的》中，女性的爱是有性的因素的。传统，性爱完全分离，张贤亮有色性描写，寻根旗帜下，色性描写加速，86之后，《小城之恋》《岛上的世纪》；到新写实，重点部分就是食、性；80年代中期后，色性描写进入野蛮生长的过程中，之后，王小波的作品，90年代后当代小说中色性描写司见惯。《白鹿原》开篇第一句话涉及一个男人和几个女生的关系。90年代之后越来越多作家涉及性描写，是作家理念上的认同有很大关系。<strong>王小波“性是透视灵魂的真正窗口。”台湾作家陈若曦“性是现代文学不可或缺的题材，尤其是现代作家，作为食色性也的……一道迈出自我世界的突破口。”通过性感叹人生，透视人性，一个通道。</strong></p><p>80年代之后性描写，和昆德拉的引进相关，《生命不能承受之轻》描写政治中，性行为的种种变异，表现时代变化在知识分子中的反映，托马斯和特蕾莎、萨宾那的关系。茨威格《昨日的世界》19世纪末20世纪初维也纳禁欲的抨击“凡是受到压抑的东西，总会……所以说到底，那些受到压抑……实际上要比我们今天享有高度恋爱自由的人们要好色得多。……耳闻目睹的越是少，在梦幻中越是多……”</p><p>结合贾个人，传统文人色彩，1984《商州初录》中就有一些色性描写。 抛开其中色情描写，实际上《废都》是寓言小说。有人自然认为是现实主义写作，被问到，贾很矛盾，承认是现实主义的，但又很多意象、心象，都和“心灵的真实”达成了关系。实际上整部小说是一部寓言，小说人物庄之蝶，游走于不同女性的过程，带有程度不同的象征意味贾借此表现庄之类文化人的心态，它们心灵所达成的废墟的状态，"废都二字……西安，西安人的心态，也就是中国人的心态。"这种心态具体浓缩在庄身上，概括为三点：1. 自卑性的自尊；2. 无奈性的放大；3. 尴尬性的焦虑。在不同女性间游走，自恋又自虐；结局倒地在车站的座椅上，不知道自己将走向何方，不能把持自己，是一种知识分子在文化环境中的无奈心理；贾对人生的认识偏向灰暗。 “文学史上，贪婪、吝啬……《废都》是一本把无聊写到极致的大书。” <strong>对明清的戏仿</strong>：贾本人有意在文中用方框代替，我认为是有意味的。方框也是意象的重要的构成。</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当代小说选读 讨论课</title>
      <link href="/posts/d23cc796/"/>
      <url>/posts/d23cc796/</url>
      
        <content type="html"><![CDATA[<h2 id="我从未真正见过火也未见过毁灭更不知新生读阿城孩子王">我从未真正见过火，也未见过毁灭，更不知新生——读阿城《孩子王》</h2><p>《孩子王》写1976年，却没有伤痕文学的色彩，然而，字里行间透出些许窘迫和时代的心酸：知青老杆儿下放到农村，七年劳作之下已适应大队生活，突然被调去教书，而到了学校却发现孩子上课没有书，老师教书也没有材料——在今天看来是无比荒唐的时代，甚至在经历过正统小学教育的“我”看来同样荒诞。于是，老杆儿决定用自己的方式教孩子识字做文章，鼓励“老老实实、清清楚楚”地自己身边之事，而非官样文章、政治宣传，最终因教学出格而被开除。文章暴露出来的关于教育的问题的现实的：物质生产不足，孩子们空有对文化的敬畏却只能口吐政治宣传甚至写不出一件完整的事。这些在90年代后出生的一辈很难想象的事情却真实地发生在不远的过去，而小说中塑造的王福、王七桶的形象却令人动容，这种无书可读、无人会教的困境是否发生在今天的世界某处呢？而孩子对于知识和文化的敬畏又如何？这是阅读过程中一个思考点。</p><p>喜欢上阿城，一部分原因其平淡隽永的文笔，极简、极瘦、极淡。小说最后，老杆儿因为教学失范被开除，“我走出办公室，阳光暴烈起来。望一望初三班的教舍，门内黑黑的，想，先回队上去吧，便顶了太阳离开学校。”他无疑是不舍的，“我现在就走，只是这次学生的作文我想带走，不麻烦吧”；但从另一方面来说，他也是自觉离开学校回队上的，劳作七年的他与学校同仁格格不入，而守规矩教书也永远成不了“孩子王”。</p><p>小说中的字典，如《棋王》的棋，是孩子心中的神圣象征（文化、知识的抽象）；另一方面又似《树王》中山上那颗巨树，在这样的时代难逃被伐的命运。树终于被砍倒，而“山上是彻底地沸腾了”，“一架山秃秃的，尚有未烧完的大树残枝，黑黑的立着，如同宇宙有箭飞来，深深射入山的裸体，只留黑羽箭尾在外面。”但阿城又不是悲观主义的，“我这才明白，我从未真正见过火，也未见过毁灭，更不知新生”，在目睹、参与、见证悲剧的过程中，“我”又看到了生活的幸与福（《棋王》），看到了新生的树与花草（《树王》），也看到了孩子们的作文（《孩子王》）。</p><p>阿城的小说有自传性质，1957年其父钟惦棐成为“右派”之后，阿城也受连累进入社会底层，在云南山村度过了十年知青生活，在劳改期间，他也当过一段时间“孩子王”。可以看出，农村生活给了他很多写作动机，《三王》中的“我”都有着知青的背景，都是以见证人的角度目睹了“异人”的遭遇，如许子东所说，“可以将‘异人’和‘我’和色彩虽淡却无处不在的动乱现实三者之间的三角关系，看作是阿城小说不变的内在结构模式”。而小说围绕着“我”与异人的逐步交流展开，这种交流过程或许就是所谓“寻根”的过程，三部小说中都有那么一个寡言的、精神丰盈如“超人”的角色，他们有一个特点就是不意志坚定一以贯之，而阿城想要寻找的，许正是那动乱沉淀过后剩下的未变者。</p><ul><li>【01】许子东：寻根文学中的贾平凹和阿城</li><li>【02】林宝庆：轻语墨淡话伤痕</li></ul><h2 id="你认为反思文学发展受阻的原因是什么">你认为‘反思文学’发展受阻的原因是什么</h2><p>反思文学源于伤痕文学，是对伤痕文学的深化，但不久便被新的文学主流所取代，我认为它的夭折可能有一下几方面的原因。</p><p>一方面，反思文学发展受阻是由其本身的性质所造就的。</p><p>八十年代初，长期被边缘化的知识分子群体重新回到舞台，文学显现出“包打天下”的气势而位于时代中心，超负荷地承载了政治、社会、历史等诸多要素，不可避免的缺少了些文学性（当然，考虑到八十年代初，改革开放刚刚开始，文革的余波尚未平息，作家的写作能力也有待发展），较为简单和粗糙，因此难以得到长久的留存和发展。可以说，这种感时忧国的“问题小说”本身具有速朽的特点。</p><p>另一方面，反思文学的发展可能是受到了政治以及时代发展的影响。</p><p>洪子诚先生指出，虽然反思文学是伤痕文学的深化，“但‘深化’又可以理解为将‘伤痕’的表达和历史责任的研究，纳入权力机构已经做出了清理的有关‘当代史’叙述的轨道。”【1】因此，虽然作家有意走出伤痕文学“哭哭啼啼，没有出息”（邓）的境况，但还是无法跳脱政治的影响，在81年《关于见过以来党的若干历史问题的决议》的盖棺定论之下，“反思”的主题也多局限在这条所给的轨道之上，多是反右、大跃进、文革等。这一时期的文学，呈现出很强的政治性，追逐主流意识形态，甚至可以说仍然是意识形态控制之下的文学，因此当文学触碰到敏感的社会问题时，很容易发生“越界”，从而在短暂地与政治达成一段时间的默契后分道扬镳。</p><p>《向前看呵！文艺》一文中“提出文艺向前看的口号，提倡向前看的文艺”，“歌德与缺德”的问题成为讨论的焦点，而反思文学也被打上了“向后看”、“缺德”等标签，而经历过文革的很多人也有类似的观点，从易言对《波动》的评价中（“我们主张革命现实主义，认为革命现实主义是最能真实地、历史主义地反映社会生活的一种艺术方法”）便可以看出一些作家始终对于非歌颂、不积极的文章持反对态度。</p><p>而之后改革文学受到主流意识形态的加持之下得以发展，反思文学也随之夭折，文学呈现出新的主流。此外，客观来看，改革开放所提倡的商品经济促使了整个社会价值观的改变，文学和政治的关系也逐渐疏离，社会和经济呈现出欣欣向荣之态，而“向后看”的反思文学在这样的社会发展境况下不受欢迎也是可想而知的。</p><ul><li>【1】洪子诚 《中国当代文学史》北京大学出版社，第259页</li></ul><h2 id="当代小说前景分析">当代小说前景分析</h2><p>技术的发展和媒介的创新给人们的娱乐文化消费提供了更多的自由，而随着电影、游戏、音乐等多样化的娱乐形式的不断发展，现代人的休闲时间也被不断切分，人们阅读小说的时间将不可避免地减少，我认为这是未来一段时间内的趋势。</p><p>科技和媒介的进步对当代小说创作的形式和内容产生影响。</p><p><strong>网络的发展提供了内容消费者与创作者零时差交流的可能性。</strong> 例如，很多美剧采用“制播同步”的创作形式，根据观众的反馈及时修改剧本甚至调整据情，真正做到了和观众的实时共鸣，保障了收视率；而在小说创作上，很多网络小说也采取这样的形式，根据读者的反馈及时调整故事情节。虽然这种以迎合观众为代价的“读者至上”的创作在一定程度上保障了收益，但其以经济利益中心的属性带有妥协性，不可避免地造成作品娱乐化的倾向。</p><p><strong>另一方面，现代化的生活方式给小说内容产生影响</strong>。快节奏的现代生活给人们带来了很大的压力，而阅读小说和电影、戏剧、游戏等形式一样提供了疏解生活压力的手段。科幻、历史、玄幻、悬疑等类型化的小说给予读者强烈的冲击感，可以在一定程度上满足读者的这种诉求。</p><p>总而言之，现代通俗小说在当代似乎出现的肤浅化、娱乐化等特点，追求速食，追求感官刺激。但反过来说，严肃文学却不会消亡，经典型的作品仍然是人们追求的主题，以二手书交易平台“多抓鱼”为例，虽然某些一时流行的大众小说流通量很大，长期来看，真正占据榜单前列的还是经典作品（其榜单完全以算法排序，可以说是对读者兴趣的客观反映）。</p><p>九十年代以来，随着市场化的进程，“大众文化”崛起而占据主流文化市场，但这种趋势不是长期的，当人们的生活水平进一步提高，对于艺术的诉求也会不断提升，而喧嚣过后，有一定审美能力的人群不断扩大，主流读者的取向也会发生变化。毕竟，我国的市场化进程还很短暂，知识分子在经历了一段时间的边缘化之后将重新取得一定的话语权。</p><ul><li>【01】洪子诚，中国当代文学史</li><li>【02】欧阳友权 ，中国网络类型小说流行的原因及其局限分析</li></ul><h2 id="好小说应该具备哪些要素">好小说应该具备哪些要素？</h2><p>利维斯在《伟大的传统》中讨论了“伟大的英国文学”的标准，虽然有所区别，但也可作借鉴。总结下来，他在数中列出的标准可以分为以下几点<a href="#fn1" class="footnote-ref" id="fnref1"><sup>1</sup></a>：对人性的深刻挖掘与同情（陀思妥耶夫斯基）；对现代性的反思（卡夫卡）；语言的精准与简练（阿城）；整体结构不蔓不枝（如象征性媒介在文本中起到的作用，如张《秧歌》）。前两点主要指向内容而后两点则是对形式的要求。</p><p>在不同的范畴，不同的小说类型应该有不同的评价标准：如针对科幻小说，那么我认为科幻世界的整体构建、情节的起伏等因素可作为评价小说好坏的标准——但这些标准并不是通用的。同样，利维斯提出的标准可能更多是针对严肃文学的，但即使是某些优秀的严肃小说也不一定满足利维斯提出的标准。</p><p>因此，下面仅根据自己阅读体验来谈吸引自己的小说所具备的一些要素：</p><ul><li>冲突，或者说矛盾/戏剧性</li></ul><p>这里的冲突可以是多重的。它可以是人物内心的冲突，可以是小说人物之间的冲突，也可以是阶层之间的冲突等。人物内心的冲突，如是心理观念上的转变，典型的例子是《复活》中的聂赫留道夫；人物间的冲突，如《我们夫妇之间》；阶层之间的冲突，显性的如《青春之歌》，更多是隐性的在叙事之中呈现出来的，如《复活》中揭露出的以农民、劳动者为代表的底层人民与既得利益者之间的冲突（当然还是阶层内部的冲突）。</p><ul><li>背景叙述（时代背景、社会环境等）</li></ul><p>要么是彻底架空，也可以对于人性有深刻的挖掘；要么是反映现实，在真实贴近中给人以冲击。但都要对于故事发生的背景有一个明确的定义。（结合写作背景）</p><p>拿科幻小说等通俗性的作品为例，它吸引我的是对于背景的描摹（世界观的构建）——小说作为一种虚构的艺术形式，给我们提供了另一重想象的空间，在这种意义上，其背景塑造的是否宏大是否离奇而富有真实性是我评价一部科幻小说的标准。</p><p>当然，对于现实主义小说来讲，我认为其背景叙述也具有重要的意义，坚实而准确的背景叙述给小说主体内容提供了展开的基础，小说的主题在这种社会文化背景上得以呈现，而我们对于小说的理解也是建立在这种背景上的。</p><ul><li>冲动/共鸣</li></ul><p>冲动指的是激发作家进行写作的欲望，是那种急欲在小说中表达出来的东西，“行于所当行，止于所不可不止”，我觉得苏轼这句话也可以衡量小说优劣的一个角度。略萨在《给青年小说家的信》中说到小说家的起点：“一天，突然感到自己被召唤，身不由己地去从事这种活动——比如写故事，根据自身条件，使出浑身解数，终于觉得实现了自我的价值，而丝毫不认为是在浪费生命。”“小说家不选择主题，是他被主题选择。他之所以写某些事情，是因为某些事情总在跟踪、纠缠、骚扰他。他不得不写。像一个魔鬼，主题折磨他。”<a href="#fn2" class="footnote-ref" id="fnref2"><sup>2</sup></a></p><p>正是这种书写的冲动（可能不同于“主旨”），能够给我们在阅读过程中带来共鸣。这一点，我在读鲁迅的作品是感受最深：读《药》，在对华老拴、夏瑜等的叙述中，能够让人感受到他对于国民、对于革命牺牲者的情感，也可以感受到他作为一个弃医从文的作家的心态，让人感同身受。诚然，在写作的过程中，作家或许会把这种冲动藏起来（比如以隐喻等形式表现出来，如《秧歌》），但在我们阅读的过程中能够体会到、感动到，并且因此带来了个性化的阅读体验。（当然，既然是个性化的可能触发点不一而足，所共鸣之处不一定是作家意于表达的，观点也会有出入，但我认为能够吸引读者的点也一定是作家日常感触深刻之处，作家受牵引而写下的。）</p><p>总而言之，我认为冲突是小说的核心，冲突的精彩与否决定着小说是否有吸引力；而背景叙述很大程度上影响了冲突的呈现方式和表现能力；而我所说的作家冲动则产生了我们在阅读小说过程中与作者的共鸣，并且提供了读者个性化的阅读体验。</p><section class="footnotes"><hr /><ol><li id="fn1"><p>杜萌若：F.R.利维斯《伟大的传统》。<a href="#fnref1" class="footnote-back">↩</a></p></li><li id="fn2"><p>略萨：《给青年小说家的信》赵德明译，上海文艺出版社。<a href="#fnref2" class="footnote-back">↩</a></p></li></ol></section>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿城 </tag>
            
            <tag> 当代小说 </tag>
            
            <tag> 科幻 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>试论阿城《遍地风流》中的风骨</title>
      <link href="/posts/a5c50926/"/>
      <url>/posts/a5c50926/</url>
      
        <content type="html"><![CDATA[<blockquote><p>当代小说选读课程论文</p></blockquote><h2 id="section">01</h2><p>“风骨”一词起源于古代文论，是对于文学作品内容和文辞方面的美学要求。刘勰在《文心雕龙》中首次提出“风骨”的概念：“《诗》总六义，风冠其首，斯乃化感之本源，志气之符契也。是以怊怅述情，必始乎风；沈吟铺辞，莫先于骨”，并强调风骨对于文章的重要意义：“故辞之待骨，如体之树骸；情之含风，犹形之包气。”“故练于骨者，析辞必精；深乎风者，述情必显”。“风”是文章“情”的内核，而“骨”则是文章“辞”的内核，“风骨”是文章语言结构上的美学要求和审美理想。</p><p>在文学作品之外，“风”还是品鉴人物的概念。《汉书》中便已有“风采”之说，而在魏晋期间，“风”和“骨”成为评价士族的常用词汇，《世说新语》中有“羲之风骨清举也”“风骨鲠正”等记述。廖仲安先生指出，“风”指的是人的神情、韵味等一些比较玄妙的抽象层面的概念，而“骨”则是骨相、相貌，是比较具体的概念，此外，风骨概念的背后还包含着当时道德层面的要求。今天来看，关于风骨最为人们所熟知和神往的无疑是鲁迅提出的“魏晋风度”，那些魏晋名士身上所体现的超然绝俗、散漫自由等精神至今仍为许多文人所向往，有人指出这种风骨对中国知识分子的深远影响：“以魏晋风度为开端的儒道互补的士大夫精神，从根本上奠定了中国知识分子的人格风范，其影响是甚为深远的”。在魏晋风度的体系中，鲁迅所提的药与酒，以及玄谈、书法等外在的表现在如今已消退了意义，其价值更多地表现在李泽厚所谓“人的觉醒”，是对传统观念的怀疑和对抗，是陶潜、阮籍等身上所体现的“超然事外，平淡冲和”以及“忧愤无端，慷慨任气”的境界。</p><p>阿城作为一位八十年代举足轻重的知青作家，他最先见诸于世的作品是发表于1984年第7期《上海文艺》的《棋王》，一经发表便以其独特的叙事方式和文化内涵受到众多读者和评论家的关注，王安忆、王朔等著名作家都对阿城很推崇，陈丹青更是称他为“作家里的作家”。其代表作除了“三王”之外，还有《遍地风流》等作品。事实上，虽然《棋王》是阿城发表的首篇小说，但“遍地风流”系列是他更早的创作，他曾坦言，“一开始到乡下，写了‘遍地风流’系列”，而撰写《棋王》时已“在乡下干了几年活”。</p><p>阿城的写作带有私人化的特征。他说自己写作的原因是“在乡下时无事所写”，从不考虑发表，因为“‘文革’是一个没有发表的时代”，并且依状态而行笔，“文章是状态的流露”。可见，阿城的写作很大程度上是出于内心情感流露的需要，是记录、表白、思考、反省的过程，有所发则动墨，无所言则搁笔。在《文化制约着人类》一文中有更为明确的表达：“我在未发表文字前，上面所说的习惯很弱，认为自由写的东西若能满足自己这个世界，足够了，没有绝对的必要大事张扬”。总而言之，阿城的写作是十分私人化的创作，虽是小说，却和日记类似，都是个人化的表达。从这个意义上来看，相较于其他作品，“遍地风流”作为阿城初到农村的所感所思，更能反映出阿城“知识结构”的形成与变化。</p><p>对于《遍地风流》的研究，多着眼于其中的文革主题（如《试论阿城散文集〈遍地风流〉》）、世俗文化（如《世俗的还原与凝聚——阿城创作新论》）以及古典小说的影响（如《从〈遍地风流〉看阿城笔记小说的艺术特征》），本文希望借由“风骨”的两重内涵，分析阿城小说在内容文辞以及人物主题上的美学追求。</p><h2 id="section-1">02</h2><p>阿城的语言向来极为洗练，人称、状语能省则省绝不姑息，多实词、动词而少虚词，句式则多用短句，错落有致，节奏感很强。读他的文字，仿佛是秋天的树，骨感、清峻，然而，语义却绝不因为文字的极简而显得寡淡，反而富有韵味，更耐读，这正是阿城语言的“风骨”。下面以《遍地风流》为例探讨阿城小说中的语言特点。</p><h3 id="句子成分的有意省略动词和意象的堆叠">1. 句子成分的有意省略，动词和意象的堆叠</h3><p>阿城语言之简，首先表现在句子成分的省略，除了对句中修饰语最大程度上的删减，另一个更为突出的特点是对人称的省略。针对句中人称出现的次数，孔庆东曾做过统计，“像《湖底》、《雪山》这样的章节，竟从头到尾不见一个‘我’字。同时，也不见一个‘他’字”，这种无人称的叙述构成了阿城小说语言的一大特色，来看短篇《湖底》的开头：</p><blockquote><p>“后半夜，人来叫，都起了。摸摸索索，正找不着裤子，有人开了灯，晃得不行。浑身刺痒，就横着竖着斜着挠。都挠，咔哧咔哧的，说，你说今儿打得着吗？打得着，那鱼海了去了。听说有这么长。可不，晾干了还有三斤呢。闹好了，每人能分小二百，吃去吧。人又来催。门一开，凉得紧，都叫，关上关上！快点儿快点儿，人家司机不等。这就来，也得叫人穿上裤子呀！穿什么裤子，光着吧，到那儿也是脱，怎么也是脱。”</p></blockquote><p>故事写一群人冬季夜起捕鱼，首段仅由三个三字分句构成，直奔主题，人来叫，人是谁？人又叫谁起？起为何事？开头便奇，而次段更是没有主语，“找”“开灯”“挠”“说”的主体都不明确，而说话者和说话内容亦无区分，问与答融在了一起，人似乎成了抽象意义上的人，叙述者在其中忽隐忽现。 待众人开车到了湖边：</p><blockquote><p>“车转了个向，灯照着网。都择，择成一长条，三十多米，一头拴在车头右边。刚还黑着，一下就能看见了，都抬头，天麻麻亮。都说，刚才还黑着呢。先拢起一堆火。都伸出手，手心翻手背，攥起来搓，再伸出去，手背翻手心，摸摸脸，鼻头没知觉。都瞅水。”“酒拿出来了，说，都喝。喝热了，下水。火不能烤了，再烤一会儿离不了，谁也不愿下了，别烤了，别烤了。都离开了，酒传着喝。”</p></blockquote><p>到这里，叙述者彻底消失，只剩下了不分你我的“人”，人即是我，我亦是人。事实上，“人”这个主语也是隐式的并未在文中出现，只剩下了似副词又似名词的“都”，择网、拢火、暖手、喝酒、对话成了所有人共同的动作。对于这种叙事手法，法国学者杜特莱认为，在《遍地风流》中，阿城通过文本中似乎漫不经心、时隐时现的“我”的存在，“使得自叙者和所描写的风景与情境融为一体”。</p><p>相较于人称和修饰语的省略，动词和名词出现的频率极高，不到两百个字里出现了“择”“拴”“抬”“拢”“伸”“翻”“搓”“摸”“瞅”“拿”“喝”“下”等一系列动作以及灯、网、火、水、天、酒等意象，密度极高的动词和实体，构成了文章之“骨”。叙事的节奏很快，仿佛是电影一幕一幕快速切换，时间和空间不知不觉发生了变换，然而却不显得混乱，只有人物的动作和一些物象充斥在视觉画面中，形成了独特而奇妙的阅读体验。</p><h3 id="标点的省略和替换文本的陌生化">2. 标点的省略和替换，文本的陌生化</h3><p>在很多文本中，阿城处理对话时不使用引号（上面《湖底》的引文即为一例），而在一些常规下应当使用逗号的地方则选用句号分隔，这种标点符号刻意的使用也造成了文本的“陌生化”，取得了别样的艺术效果。例如，短篇小说《大门》的开头：</p><blockquote><p>“一个人对黎利说，黎利记得这个人长着张农民的脸，当然后来黎利见的农民多了，才知道中国人差不多都长着张农民的脸，那个人说，你是毛主席的红卫兵？黎利多少有些得意，说，当然是很严肃地说，是的。那个人说，那好，俺们那儿有四旧要破，毛主席的红卫兵你是不是带个头？黎利说，可以，只要是四旧。另一个人说，他也长着张农民的脸，说，当然是四旧，封建迷信，是个庙。黎利说，庙当然是四旧，有和尚吗？几个人七嘴八舌地说，有和尚有和尚，就是和尚不让破四旧，秃驴们能得很！”</p></blockquote><p>首段第一句有“说”，其后却穿插了黎利对农民形象的回忆，之后再续上那农民所说之话。句子成分和标点的双重省略造成了一定的阅读困难，似乎需要回过头来再看几遍才能理解，这种“陌生化”也是阿城语言的特色，在加强读者注意力的同时带来了别样的阅读感受。这里同样可以看出阿城语言之简：短短几句，便隐式地体现黎利的身份是参加串联的红卫兵，出身城市而初次到乡村见到农民；“才知道中国人差不多都长着张农民的脸”，暗示黎利对于农民、土地和农村生存环境认知发生过变化，与下文一年后黎利面临上山下乡的情节相一致。这么多层的意思，普通人可能用很多句话都不一定能清楚地表达出来，到阿城这里却以这样简简单单的开头表述明白了，足见其语言功力。后面的第二、第五段采用了类似的叙述策略，两个“说”之间插入对说话者的白描，造成节奏上微妙的停顿感，从而达到了在连贯叙事的过程中完成对人物形象的塑造的效果。</p><h3 id="句式短促富有节奏">3. 句式短促，富有节奏</h3><p>正是通过标点对长句的切分，句子成分的省略以及对修饰语的删减，阿城的句子多很短。“阿城是短句作家”，以《湖底》喝酒那段为例，共4句话12分句46个字，其中15个为动词，平均每个分句4字不到，用语之简可见一斑。短促的句式构成了作者叙事的节奏，“语言样貌无非是‘话本’节奏”，然而，“阿城的短句有口语的节奏，但并非口语的词汇”，他突破了口语乏味以及语意重复的弊病，而在短句中着力营造“象”，“口语的简洁，语言意象的营造，诗意的追求，使得阿城的短句形成洁雅的特征”。</p><p>如短篇《天骂》中，写文革中插队到吴村的知青王小燕最终选择留在村里的故事。“天骂”意指当地谁家丢东西时妇人上房顶咒天骂地的行为，文章开头描述吴村地理位置：</p><blockquote><p>“太行以西，山西陕西甘肃青海，一台高过一台，至昆仑，古人说是天上，有瑶池，住西王母。诗人说，黄河之水天上来。因此，要登天，太行是第一阶。鲁地的泰山，只是平川里祭天的小台子吧。”</p></blockquote><p>短句的运用使叙事极快，总共不到90字却在其中完成了语义的多重转换。（正如陈丹青所言，“看他的小说，你得非常当心，一不留神，他里头好几个关节就已经过去了。”）句内通过地名和神话人物的堆叠构成了丰富的意象，为文章添了一分神秘色彩，这里似说书人在吟诵，气势沛然，有股“六王毕，四海一，蜀山兀，阿房出”的味道。如果说这里是语言“雅”的一面，是故事神话性的背景（似《红楼梦》开头），那么接下来则转入“俗”的一面，状农村劳作：</p><blockquote><p>“一天下来，说不上是累，还是不累。躺在炕上，手麻麻的，脚热热的，胯酸酸的，炕硬硬的，把屁股压得扁扁的，于是翻身，腰又弯弯的。坐起来，走出去，天黑黑的，一股热石头味儿”</p></blockquote><p>用语极为生活化，而又富有生机；一连七个叠词，再加上“累”和“不累”的语义相承，进一步强化了了节奏，完整刻画了王小燕在农村劳作之后的感受和状态。</p><h3 id="用字朴实化用方言和古典小说">4. 用字朴实，化用方言和古典小说</h3><p>在用字上，阿城绝不用险字怪字，如王安忆所言，“他的用词绝对是在常用词里的，他的用词绝对不超过一个扫盲标准的用词量”，然而，他通过对方言和古典小说语言的化用，取得了平实而富有韵味的语言效果。</p><p>他语言风格的形成，部分来源于对古典小说的吸收，“从语言的内在结构来看，夯实的白话语言加以古汉语成分的杂糅调和是阿城小说语言的基本面貌”，陈丹青也认为“（阿城的语言）非常精炼，而且能够跟中国的笔记小说，中国的话本小说传统完全衔接，这个传统几乎完全断掉”。</p><p>此外，方言的运用也是《遍地风流》中普遍的现象，阿城认为，“以生动来讲，方言永远优于普通话”。仍以《天骂》为例，其中描写小燕在农村劳作一天之后休息，次日清晨半睡半醒的状态：</p><blockquote><p>“懵懂里听得鸡叫，鸡叫就鸡叫吧，又困过去。懵懂里又听得鸡叫，听听，房东在烧灶，噼噼啪啪，心里明白是早上了。睁开眼躺着，却听出来不是鸡叫，是个婆姨在远远地高声叫。叫的什么，小燕听不懂。”</p></blockquote><p>其中的“婆姨”意指妇女妻子，为陕北、山西一带方言，“困”当作“睡觉”解，亦非书面用语，而“懵懂里”“听得”等都是口语化的表达（文中还有如“息下”“金贵”等方言词汇）。用词口语化、方言化，却又不是口语中常见的表达，加上对古典小说语言的吸收，形成了生动活泼而富有节奏感和表现力的语言效果，达到了汪曾祺所谓“融奇崛于平淡，纳外来于传统，不今不古，不中不西”的境界。</p><p>阿城的语言美学，是“捶字坚而难移”的美学，是“删繁就简三秋树”的美学，也是雅俗共赏的美学，不事奢靡而取其神髓，不求晓畅而求其精当，又在典雅与通俗中找寻语言的节奏与魅力，这正是他语言的风骨。</p><h2 id="section-2">03</h2><p>虽然阿城长期以来被认作寻根作家并作为寻根文学的代表人物被推到舞台中央，但近年来越来越多的研究者开始质疑这一归类，事实上，阿城并未明确表明自己的寻根立场，曾声名“‘寻根’是韩少功的贡献。我只是对知识构成和文化结构有兴趣”。在创作内容和创作风格上，他和其他的寻根作家有着明显的区别，例如，相较于贾平凹的商州、韩少功的荆楚、李航育的吴越，阿城的小说没有一个明确的地理概念，更多的是普遍意义上的传统、世俗文化，正如陈思和先生所言，他的小说描写的是“中国文化中人格的象征，讲气韵，讲精神，讲阴阳柔胜，全合着中国文化传统的谱”。此外，贾平凹等人的作品中的“根”多是不辨是非无论好坏的，有很多传统文化中神秘的或是人性中本能的部分，如《爸爸爸》中迷信、械斗的寨子，《北门口预言》中神秘老人留下的那句“土里出金，河里流血”的预言（可能这也是后来寻根走向批判的原因）。相较而言，阿城在《遍地风流》中所描绘的人物多具有某种品格，在或许艰难的世俗中坚持着自己的“风骨”，下面以其中市井百姓和右派知识分子的形象为例探讨他们身上的“风骨”。</p><h3 id="市井百姓">1. 市井百姓</h3><p>陈思和先生在谈论当代短篇时，曾指出阿城等小说家在创作中对于传统笔记小说的吸收：“他们在中国古典话本小说与西方近代短篇小说之外，又寻找了另一种传统，即古典笔记小说的形式”。亦有人称这些创作为“新笔记小说”，并认为这类小说大致可分为两类：一类志怪，一类志人。</p><p>如果按照这种准则分类，那么阿城的小说大概属与后者，这类志人小说的特点是“多是凡人俗事，但能够见出人物的个性识见、举止德操”，而阿城的小说“突出的是人物强健生命和精神魅力”。</p><p>以短篇《溜索》为例，这篇小说叙述了“我”跟随马帮通过溜索渡江的故事。首句便从声音、牛马的反应写怒江之猛之奇：“不信这声音就是怒江。首领也不多说，用小腿磕一下马。马却更觉迟疑，牛们也慢下来”，又极写山高水急，“我”作为常人之惊之惧：“怒江自西北天际亮亮而来，深远似涓涓细流，隐隐喧声腾上来，着一派森气。俯望那江，蓦地心中一颤，惨叫一声。急转身，却什么也没有，只是再不敢轻易向下探视”，从而衬托出首领之胆识及马帮汉子们之豪情：</p><blockquote><p>“首领稳稳坐在马上，笑一笑。那马平时并不觉雄壮，此时却静立如伟人，晃一晃头，鬃飘起来。首领眼睛细成一道缝，先望望天，满脸冷光一闪，又俯身看峡，腮上绷出筋来。汉子们咦咦喂喂地吼起来，停一刻，又吼着撞那回声。声音旋起来，缓缓落下峡去。”</p></blockquote><p>在环境描写上，《溜索》一文多用比喻、拟人、通感等手法，形成了立体的视听体验，代入感极强，在这样险峻的背景下表现出首领的英明形象及马帮汉子们的英勇群像；此外，通过叙述者“腿抖”“眼涩”等一系列体验和内心无比惊惧的感受，以及牛马在索道上“一路屎尿”“皮肉乱抖”，过溜索后摊在地上半个钟头无法起来等特写，反衬出首领及汉子们的形象。运用这些手法，马帮众人与常人之间仿佛有了显著的区隔，他们在一定程度上被“传奇化”了。</p><p>而在《茂林》中，写的则是“我”在林中借水喝，遇到一对守林老夫妇的经历。开头写林便显出奇气：“好林子，一架山森森的引眼”“林子不是野生，齐齐的极有章法。山也只是普通的山，却因为树而雍容非常”；而老者出场时眼睛很亮，远远就可以看到光亮，亦奇。对话，谈起找水喝而被老者引向林间的泥屋，狗、鸡、窗、灶台、帘……一个个意象纷至沓来，而婆婆正是在这朴素而如“世外桃源”般的环境中出场。更奇的是泥屋内的窗花以及婆婆的剪纸技巧，“只见各种人物极古极拙，怕是只有秦腔才吼得动，又有房屋竹树，都奇诡异常，满纸塞而不滞，通而不泄”，剪得大气，“粗如屋檩，细若游丝”，而正待要看婆婆剪窗花，却无法看清，“只觉得游剪如龙，落纸纷披”。一系列夸张、奇幻的描写，表现出婆婆出神入化的剪纸技巧。如果说剪窗花只能展现婆婆手艺之好，贯穿首尾的茂林则将老者和婆婆同俗世区隔开来——“我”只是误入其中，颇有种“忽逢桃花林”的味道。通过这些手法，类似于《溜索》中的马帮众人，作者完成了对小说中的老者夫妇的“传奇化”。</p><p>可以看到，无论是马帮众人还是守林老夫妇，虽是世俗文化中的普通小人物，作者却以精到的角度塑造出了人物的“质感”，这是有选择性的表现。如他在写给自己作品的翻译者Noel Dutrait的信中所说，“我是只取‘我看到的或喜欢的风度’，不管杰出不杰出，因为‘杰出’的标准未必人人同意”，实际上，他的选择标准就是他眼中的“风骨”，他用自己的审美标准，将一幕幕世俗片段裁剪成小说，表现出他所欣赏的风度。这种风骨，这种审美标准，是在世俗评判之外的。</p><h3 id="右派知识分子">2. 右派知识分子</h3><p>“右派”是阿城文章中反复出现的母题，除了《遍地风流》中的《结婚》《平反》等篇目之外，在他其他的文集中也多有出现，如《文化不是味精》中的《父亲》《古董》等文章。</p><p>这一主题与阿城的特殊经历相关：阿城出生于1949年，而他的父亲钟惦斐在1957年就被打成右派，而他也因为这一层关系受到主流社会的排斥，阿城的大哥里满甚至因此“不能上高中，因为我们这样的子弟是不能上大学的，而高中是为上大学做准备的”。（令人意外的是，这种边缘化却对阿城产生了长远的影响，造就了他与同龄人完全不同的“知识结构”，因为被边缘化所以才能在宣武门外的琉璃厂阅读，并且“有时间你就有可能接触到另外的知识，你的知识结构就跟你的同龄人不一样了”，并称“琉璃厂，是我的文化构成中非常重要的部分”。）</p><p>《结婚》写一对被划为右派的男女结婚之后又马上离婚的故事，陈丹青指出，“小说处就是，好不容易说和了，一个礼拜他们就离婚了”。主人公老林研究音韵，七九年平反后在“废品站”工作，五十岁仍没有结婚，经由工友大刘介绍所谈的对象，自然也是一个右派。然而，两人好不容易在众人的操持下结婚，不到一个星期就申请了离婚，原因是：</p><blockquote><p>“两个人睡觉，鞋子，枕头，摆法各不一样，别扭。独身几十年了，又都不愿意改，何必呢？商量了一下，就算了吧，做个分开住的朋友吧。”</p></blockquote><p>生活习惯不和，是因为独身几十年，是因为长时间因右派的身份被边缘化无法与人正常交流，因此即使最后受到平反也无法融入到社会中了——正如阿城父亲“（被平反回复党籍后）我的党龄现在被确定为四十年，居然有一半时间不在党内”的尴尬境地。 粗人大刘自然无法理解，“没瞅见过这么认真的，要不怎么他们成了右派呢！俩废品”——老林和大刘的单位是废品站，“废品”在这里无疑具有双关意义，阿城在这里借由大刘的话凸显出右派知识分子和普通“粗人”之间的矛盾。这种矛盾体现在小说的各个部分，例如，在废品站的职业教育中有这样一个教条性的定义：“废品是丧失其原始使用功能，但其某些部分，一般地说，仍有其可利用的价值，与垃圾有本质的不同”，对此，一般人的态度默认就是接受，然而，老林却要问上一句：那么，为何还有捡垃圾的呢？对此，老林不置可否，甚至讽刺“看把你独立思考的”，这一句话道出了他们与老林等知识分子的根本区别便在于是否能进行“独立思考”。实际上，很多右派知识分子在那二十年中长期处于被搁置、被压抑的“废品”状态，他们因自身知识结构的不同仍葆有独立思考的能力和习惯，却正因此，他们与这个被彻底改造过的世界格格不入，不仅遭受政治层面的边缘化，还要在被平反之后不得不面临有意识的自我边缘化，右派身份的帽子可以被摘掉，而对很多知识分子来说，他们头上仍留存着一个隐性的帽子并受其束缚。</p><p>另一个短篇《平反》中的老母的形象和老林有异曲同工之处。主人公老母在单位“人缘挺好”，帮工友带饭，下班也是最后一个走检查是否有不安全的地方，甚至为单位内外的人维修无线电。然而，“老母帮不上忙的是国庆，五一”，轮不上，原因便是因为她右派的身份。文章精彩之处在于，七九要给她平反时，老母坚持：</p><blockquote><p>“我说了，我就是右派，无反可平。右派是一个派，左派也应该是一个派嘛，也许人数上多一点。”</p></blockquote><p>这种坚持需要极大的勇气和毅力，却也是常人所不能理解的，事实上，这种疏离从文章开头便显现出来了——老母其实姓毌，却终究无法改正工友的错误只得将错就错，这或许就是阿城所谓的“知识结构沟”。这种讽刺性的错位，正如右派这个帽子将她的身份错置了二十余年，她本是研究无线电的理应呆在大学或研究所，却无奈蹉跎了那么多年只能在单位中为人维修收音机。</p><p>待到组织部来人为她平反，恢复她本来的“名字”（表现为正确读出毌的发音并指出众人的错误），她的言行令人深思：首先是坚持自己的作为左派之制衡的右派立场，象征着她保持思想上的独立性；而体现在行动上，则是结局她恢复往日勤恳为工友服务的身份，仍然处在一个无人理解的地位之中，正如《结婚》中的老林通过离婚保持原有的单身状态。</p><p>老林和老母的这种自我边缘化，体现出来的正是这群右派知识分子的“风骨”。这种风骨，正如阿城在《父亲》中所描述的钟惦斐形象，二十年风雨，平反之后对电影的追求仍未变。这种风骨，一言以概之，最好的或许还是梁漱溟在批判会上的那句“三军可夺帅也，匹夫不可夺志！”</p><h2 id="section-3">04</h2><p>关于小说主题，阿城说“主题亦是我不看重的”，他所追求的是小说人物的质感，和小说的“意象”，“我之所以写小说，是因为有‘意’，行之以‘象’，达到‘意象’”。这种意象取材于作者的旁观，以旁观的姿态捕捉世俗中的风骨，“（《遍地风流》中的）每个短篇中亦是在捕捉风俗和风度，包括自然景物的风度”。</p><p>“局外人”，更准确地说应该是“旁观者”的身份，是阿城在现实中所要追求的风骨。朱伟戏称“阿城的长处，在于他在与你接近时，可以很快进入对你的感悟，在感悟过程中吸收你身上的养分，在悟到你的境界的同时想办法超越你”。他说的可能就是这种状态：对万物——对他人还有自然甚至是自己的——有意识的细致观察，而保持自身独立的状态。</p><p>置身事外冷眼旁观，需要有看破事物的超脱，需要有随遇而安的敏锐。如《棋王》中的王一生，阿城自知因为身份问题必然会被边缘化，而上山下乡是不可避免的选项，因此他主动选择了坐火车去山西插队，而不似其他很多知青纠结于不愿离开北京，离开城市。他对于自身的处境看得通透，持续地对周围的事物甚至自身采取“旁观”的视角，正因为此，才能在乱世中保持自我。也正因为此，十一年的知青经历，不仅没有对他产生负面的影响，反而成了他“知识结构”的一部分（正如被边缘化之后反而在琉璃厂形成了他的文化结构）。阿城坦言对他影响最大的是在云南插队时的经历，2014年，他基于这段经历，根据他对于苗绣的旁观，写作出版了《洛书河图：文明的造型探源》一书，试图用图像学的方法展现文明之源——旁观万物、自我独立，又能化为己用、积极用世，这是“旁观者”的风骨。</p><p>“旁观者”的风骨，也体现在阿城对“名”的态度，他在与施叔青的对话中说：“名的东西是别人的，有名没有名是别人，这是别人在看你的时候使用的。”“（面对突然来的名）毫无所动，我的经验足够排除这些”。无所动，是因为看破，“从零开始最终又复归于零”，正如他在《棋王》中所表达的，“普通人在一种被迫的情况下，焕发出一定的光彩，之后，普通人又复归为普通人”，对于名利的看法、对于写作的看法，不过如此。</p><p>坚持作为一个“旁观者”旁观，却不意味着完全抱有出世的心态或者变为悲观主义者，相反，“阿城是一个乐观主义者”，他发掘普通人生活中的风骨，表现传统文化中有价值的精神。保持自身独立性的同时积极捕捉生活之美，这是阿城的生活哲学，许也是汪曾祺“很庆幸地看到（也从阿城的小说里）这一代没有被生活打倒”的原因吧。</p><h2 id="引用及参考书目">引用及参考书目</h2><p>[1] 阿城. 遍地风流. 江苏凤凰文艺出版社, 2016 [2] 阿城. 文化不是味精. 江苏凤凰文艺出版社, 2016 [3] 阿城. 拖腔. 江苏凤凰文艺出版社, 2016 [4] 廖仲安, 刘国盈. 释“风骨”. 文学评论, 1962.3 [5] 李泽厚. 魏晋风度. 美的历程. 生活读书新知三联书店, 2009 [6] 查建英. 八十年代访谈录. 生活读书新知三联书店, 2006 [7] 孔庆东. 无我之根——《遍地风流》一读. 中国友谊出版社, 2003 [8] 陈思和. 当代文学中的文化寻根意识. 文学评论, 1996 [9] 陈思和. 短篇随谈. 2009.7 [10] 汪曾祺. 人之所以为人——读《棋王》笔记. 1985.3 [11] 苏丁, 仲呈祥. 论阿城的美学追求. 文学评论, 1985 [12] 施叔青. 与《棋王》作者阿城的对话. 文艺理论研究, 1987 [13] 黄岚. 试论阿城散文集《遍地风流》. 学术探索, 2001.11 [14] 文贵良. 阿城的短句. 文学评论. 2009.3 [15] 刘俊. 从《遍地风流》看阿城笔记小说的艺术特征. 牡丹江师范学院学报, 2015.1 [16] 杨晓帆. 知青小说如何“寻根”——《棋王》的经典化与寻根文学的剥离式批评. 南方文坛, 2016</p>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
          <category> paper </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿城 </tag>
            
            <tag> 当代小说 </tag>
            
            <tag> 课程论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>影片精读 note</title>
      <link href="/posts/88d70046/"/>
      <url>/posts/88d70046/</url>
      
        <content type="html"><![CDATA[<h2 id="绪-论">绪 论</h2><p><strong>一、电影释义</strong></p><ul><li>Cinema：电影的总称，可理解为“电影艺术”，指电影独特的表述系统 。</li><li>Movie：指电影过程的最终产品，强调电影的重要和决定因素是运动。</li><li>Film：特别强调胶片，即印上影像的物质媒介物。</li></ul><p><strong>二、艺术的分类</strong></p><p>（三）物质媒介和表现手段</p><ul><li>实用艺术：建筑、园林、工艺品等</li><li>造型艺术：绘画、雕塑、摄影等</li><li>表情艺术：音乐、舞蹈、书法等</li><li>语言艺术：小说、诗歌、散文等</li><li>综合艺术：戏剧、电影、电视等</li></ul><p><strong>三、电影艺术与其他艺术的联系</strong></p><p>1、与戏剧有密切关系</p><p>2、受到文学极大影响</p><p>3、从绘画、雕塑中吸取造型艺术的特点和规律</p><p>4、与音乐的不解之缘</p><p>5、与摄影艺术的天然联系</p><p><strong>四、本课程架构</strong></p><ul><li>绪论</li><li>第一讲 电影作为艺术</li><li>第二讲 电影的主题元素</li><li>第三讲 电影的虚构和戏剧要素</li><li>第四讲 剪辑和蒙太奇理论</li><li>第五讲 画面语言</li><li>第六讲 电影配乐、音效与对白</li></ul><p>第一讲 电影作为艺术</p><p>从电影史的角度总体介绍电影的艺术语言，讨论电影作为艺术所具有的独特性。主要包括：</p><ul><li>画面</li><li>声音</li><li>声画关系</li><li>镜头</li><li>蒙太奇</li></ul><p>第二讲 电影的主题元素</p><p>不同电影体现出不同的主题元素 ：</p><ul><li>以情节为中心</li><li>以情感效果为中心</li><li>以人物为中心</li><li>以风格质感为中心</li><li>以思想为中心</li></ul><p>《大门》、《天生杀人狂》、《小城之春》</p><p>第三讲 电影的虚构和戏剧要素</p><p>好的电影故事应具备的要素：</p><ul><li>戏剧结构</li><li>冲突</li><li>人物刻画</li><li>预言</li><li>象征</li></ul><p>《天使爱美丽》、《两杆大烟枪》、《正午》、《疯狂的石头》</p><p>第四讲 剪辑和蒙太奇理论</p><ul><li>影片剪辑的基本要求</li><li>蒙太奇组合方式</li></ul><p>《刺杀肯尼迪》、《教父2》、《黑客帝国2》、《花样年华》</p><p>第五讲 画面语言</p><p>包括：</p><ul><li>拍摄角度</li><li>构图比例</li><li>光影</li><li>色彩</li><li>镜头景别</li></ul><p>《紫色》、《辛德勒名单》、《四百下》、《十七岁的单车》</p><p>第六讲 电影配乐、音效与对白</p><p>包括：</p><ul><li>对白</li><li>旁白与画外音</li><li>寂静</li><li>主观声音和客观声音</li><li>音乐</li></ul><p>《邦妮和克莱德》、《罗拉快跑》</p><p>《死亡诗社》、《猜火车》、《迷墙》</p><p><strong>五、本课程主要涉及的电影</strong></p><ul><li>《大门》 《天生杀人狂》 《小城之春》</li><li>《两杆大烟枪》 《天使爱美丽》 《正午》 《疯狂的石头》</li><li>《刺杀肯尼迪》 《教父》 《黑客帝国2》 《花样年华》</li><li>《紫色》 《辛德勒名单》 《四百下》 《十七岁的单车》</li><li>《邦妮和克莱德》 《罗拉快跑》</li><li>《死亡诗社》 《猜火车》 《迷墙》</li></ul><p><strong>八、参考书目</strong></p><ul><li>爱森斯坦《爱森斯坦论文选集》，中国电影出版社1985年。</li><li>安德烈·巴赞《电影是什么》，文化艺术出版社 2008年。</li><li>马塞尔·马尔丹《电影语言》，中国电影出版社2006年。</li><li>赵宁宇《世界电影精品读解》，中国广播电视出版社2002年。</li></ul><h2 id="第一讲-电影作为艺术">第一讲 电影作为艺术</h2><p><strong>一、电影在欧洲的诞生</strong></p><p>英国摄影师爱德华拍摄了奔马的分解照片（1878年）</p><p>卢米埃尔兄弟将电影搬上银幕</p><p>卢米埃尔兄弟开始运用电影语言</p><ul><li>远景</li><li>中景</li><li>近景</li><li>特写</li></ul><p>梅里爱</p><p>《贵妇人失踪》</p><p>《月球旅行记》</p><p>英国布莱顿学派：</p><p>威廉逊《鲸吞》（1900）</p><p>鲍特《火车大劫案》、《一个醉鬼的白日梦》</p><p>格里菲斯</p><ul><li>《一个国家的诞生》（1915）</li><li>《党同伐异》（1916）：有史以来最大的艺术成功</li></ul><p><strong>格里菲斯最后一分钟的营救</strong></p><ul><li>开创了“蒙太奇”现手法。</li><li>把各自独立的镜头组合在一起，形成一个有机整体，完成某种叙事的使命。打破线性叙事，创造平行蒙太奇和交叉蒙太奇手法。</li><li>片末本杰明援救埃尔西的一场戏中，在同一时间、不同空间内，三K党队伍和狂欢的黑人镜头交替出现，造成一种心理上的紧张感。</li><li>这种表现手法日后被称为“里菲斯最后一分钟的营救”。</li></ul><p><strong>二、电影在中国</strong></p><p>谭鑫培《定军山》</p><p>中国第一部国产短故事片《难夫难妻》、《庄子试妻》</p><p>《申屠氏》——中国第一个电影文学剧本</p><p>《火烧红莲寺》第一集海报</p><p>《歌女红牡丹》——中国第一部有声电影</p><p>明星影片公司的崭新创作</p><ul><li>《狂流》</li><li>《春蚕》</li><li>《女性的呐喊》</li><li>《上海二十四小时》</li><li>《脂粉市场》和《前程》</li><li>《姊妹花》</li><li>《十字街头》</li><li>《马路天使》</li></ul><p>《十字街头》</p><p>联华影业公司的新成就</p><ul><li>《十九路军抗日战史》</li><li>《三个摩登女性》</li><li>《母性之光》</li><li>《渔光曲》和《新女性》</li><li>《体育皇后》和《大路》</li></ul><p>电通影片公司</p><ul><li>《桃李劫》：中国第一部以有声电影手法创作的影片</li><li>《风云儿女》：由田汉作词、聂耳作曲的电影主题歌《义勇军进行曲》</li><li>《都市风光》：中国第一部音乐喜剧片</li></ul><p>新华影业公司</p><ul><li>《夜半歌声》：马徐维邦编导，源自西方的《歌声魅影》。</li><li>马徐维邦获得“中国的希区柯克”的称号。</li></ul><p>联华影艺社和《八千里路云和月》</p><p>昆仑公司</p><ul><li>《一江春水向东流》</li><li>《万家灯火》</li><li>《乌鸦与麻雀》</li><li>《三毛流浪记》：根据张乐平创作连续性漫画《三毛》改编</li></ul><p>费 穆</p><p>小城之春(1948年版)</p><ul><li>出品公司：上海文华影片公司</li><li>主要演员：韦伟、李纬、石羽</li><li>导演：费穆</li></ul><p>编剧：李天济</p><p>摄影：李生伟</p><h2 id="第二讲-电影的主题元素">第二讲 电影的主题元素</h2><p><strong>一、电影的中心和主题</strong></p><ul><li>指将影片整合在一起的中心内容或特殊的关注点。电影讲述了什么将决定电影怎样被制作出来。</li><li>电影的主题包括：（1）情节；（2）情感效果或情绪；（3）角色；（4）风格或质感；（5）思想。</li></ul><p>（一）以情节为中心</p><ul><li>常出现在冒险故事和侦探故事中。</li><li>这类电影可以让观众从枯燥沉闷的日常生活中暂时逃离出来，所以动作节奏快且激烈。人物、思想和情感效果都从属于事件，最后的结局极为重要。</li><li>《蜘蛛侠》，《黑鹰坠落》，《角斗士》，《泰坦尼克号》</li></ul><p>（二）以情感效果或情绪为中心</p><ul><li>以某种情绪或情感效果作为统摄性要素贯穿全片。情节从属于它们要实现的情感效果。</li><li>多出现在大多数恐怖电影、希区柯克的悬疑惊悚片、浪漫情调的诗化电影。</li><li>《闪灵》、《钢琴课》、《沉默的羔羊》、《小城之春》、《城南旧事》</li></ul><p>（三）以人物为中心</p><ul><li>通过动作和对话刻画人物，情节为理解人物服务。</li><li>影片的人物这类影片的主题在于塑造中心人物，他有区别于其他普通人的品质和不同寻常的个性。</li><li>《美丽心灵》、《巴顿将军》、《大门》</li></ul><p>（四）以风格、质感或结构为中心</p><ul><li>此类电影用相当不同的方式讲故事，具有将自身与其他电影相区别的特质。</li><li>这种独特的风格、质感或结构渗透进整部影片，使所有电影元素交织在一起。</li><li>《失忆》（Memento）、《低俗小说》（Pulp Fiction）</li></ul><p>（五）以思想为中心</p><ul><li>此类电影中的动作和人物具有超越电影自身语境的意义，能有助于观众理解生命、经历或人类处境的某个方面。</li><li>该思想可以直接通过某个特定的事件或人物得到传达；或间接呈现，需要观众寻找适合全片的最佳解释。</li><li>《天生杀人狂》、《飞越疯人院》、《辛德勒名单》、《蓝》、《白》、《红》、《罗拉快跑》</li></ul><p>费穆小城之春(1948年版)</p><p>大倒叙的叙述框架</p><ul><li>以一个大闪回构成了影片的主部。倒叙格局由片幕段落的４个镜头所界定。</li></ul><p>以一个大闪回构成主部</p><ul><li>开头与影片结尾玉纹(偕礼言)目送三人远去的段落彼此连贯；它们首尾呼应共同构成了影片的现在时，于是影片成为在城墙上目送恋人的玉纹的回忆。</li></ul><p>旁白</p><ul><li>旁白让我们明白所发生的一切都是一个回忆。</li><li>影片中的主观和客观永远都交错在一起。</li></ul><p>相关电影</p><ul><li><p>《大门》</p></li><li><p>《天生杀人狂》</p></li><li><p>《小城之春》</p><p>​</p></li></ul><h2 id="第三讲-电影的虚构和戏剧要素">第三讲 电影的虚构和戏剧要素</h2><p><strong>一、故事、情节、论述</strong></p><ul><li>故事（story）：在虚构的或者历史上某段时间中发生的一系列假设的事件。</li><li>情节（plot）：决定故事中的不同事件以何种顺序进行呈现，是运用叙事策略的结果 。</li></ul><p>举例：</p><ul><li>故事：“王死了，然后王后也死了。”</li><li>情节：“王死了，然后王后由于哀伤过度而死了。”——逻辑上因果关系</li><li>情节：“后死了，没有人知道她的死因，后来发现她是由于过度哀痛国王而逝世的。”——打破故事的线性顺序</li><li>论述 讲述（discourse）：指电影故事的表现形式，即以何种风格向观众呈现故事。</li></ul><p><strong>二、电影的虚构</strong></p><ul><li>戏剧化表现（dramatization）：在叙事电影中，以表演呈现事物的艺术，主题的重要部分可以借此表现或表演出来。</li><li>一个“的故事”有形式、结构、有意义的秩序；它制造期待并满足它们，这在生活中并不常发生。</li></ul><p><strong>三、叙事结构（narrative structure）</strong></p><ul><li>叙事结构就是讲故事的方式。</li></ul><p><strong>电影的基本结构</strong></p><ul><li>镜头（shot）：一次拍成的影片片断 。</li><li><strong>景（scene）</strong>：指一个连贯的动作，可以在一个镜头中出现，或通过一系列镜头出现。</li><li><strong>场（sequence）</strong>：<strong>一部影片中的行动的一个主要部分。一般由若干景组成，但有时也可能只包括一个景。</strong></li><li>幕（act）：电影的主要结构单位，通常包括一个以上的场，它推动情节的进行，以完成首尾连贯的戏剧性动作。幕是编剧的标准惯例，<strong>三幕结构</strong>是现今电影的通则。</li></ul><p>线性结构：《教父》</p><ul><li>第一幕：表现拥有权力的维托。他的生活和经营企业的本事表现在他处理女儿康妮婚礼当天的各种状况上。</li><li>第二幕：维托的权利遭受所罗索的挑战。维托因拒绝资助所罗索倡议的毒品生意而被枪击。</li><li>第三幕：长子桑尼在维托住院时接管一切。迈克尔杀掉所罗索与警察、巴西尼暗地左右康妮的婚姻、迈克尔在西西里举行婚礼和新娘被杀、桑尼的死亡。——情节的转折点</li><li>第四幕：迈克尔控制了家族事业，但仍继续父亲的方向。巴西尼的威胁仍存在，因此迈克尔的权力至此尚未明确。这幕以维托的自然死亡结束。</li><li>第五幕：迈克尔杀光所有敌人完全掌控权力。他除掉巴西尼和其他“五大家族”的头目，化解了最早以所罗索为代表的威胁。新教父产生，但还不是全知全能的。</li></ul><p>圆形结构：《低俗小说》</p><ul><li>导演：昆丁·塔伦蒂诺</li><li>1994年法国戛纳电影节“金棕榈”大奖；</li><li>1995年奥斯卡最佳原著剧本奖。</li></ul><p>影片结构</p><p>由片头片尾和三个故事共五部分：</p><ul><li>影首序幕</li><li>“森特和马沙的妻子”</li><li>“表”</li><li>“妮的处境”</li><li>片尾的尾声</li></ul><p>影片故事叙述</p><ul><li>快餐店里两个青年准备打劫。</li><li>文森特和朱尔斯到公寓抢回钱箱并杀人灭口。</li><li>酒吧里黑社会老大马赛勒斯收买拳击手布奇。</li><li>文森特到毒贩家购买毒品。</li><li>文森特带老板妻子美亚出去玩。</li><li>布奇赢了比赛，却在逃亡途中跟马赛勒斯冤家路窄。</li><li>公寓里的六枪奇迹，失手杀人和处理尸体。</li><li>快餐店里，朱尔斯教育两个打劫青年。</li></ul><p>主题</p><ul><li>暴力：在生活中，包括战争、拳击等形式在内的暴力已经无处不在，在它面前生死、对错丝毫没有公正可言。</li><li>20世纪70年代文化的复古：类似于黑色帮派影片的风格，乡村、朋克的电影音乐，朱尔斯蓬松爆炸的卷发和米娅的紧身衬衫、喇叭裤 。</li></ul><p>叙事的复杂性：《教父2》、《罗生门》</p><p>《罗生门》</p><p>结构</p><ul><li>1．下午时分，大雨中的罗生门，樵夫、行脚僧、打杂的谈论林中杀人案。</li></ul><p>——第一叙述时空</p><ul><li>2．同一天上午，纠察使署，见证人樵夫、行脚僧与当事人强盗多襄丸、武士妻子真砂、武士的代表女巫对武士被杀事件提供陈词。</li></ul><p>——第二叙述空间</p><ul><li>3．三天前，丛林中，武士被杀案件的具体呈现。</li></ul><p>——纯粹的故事时空</p><p>叙事结构</p><ul><li><strong>版本一：</strong>强盗多襄丸说是他杀死武士。他垂涎真砂的美貌，不惜代价一定要弄到手；不想杀害武士，但占有真砂准备离去时，真砂叫住他，说他与她的丈夫必须有一人得死，她不愿自己的耻辱让两个男人知道，二人必须决斗，他们才打斗起来；他与武士决斗十分激烈，大战23回合才分出胜负，他是堂堂正正比武杀死了武士。</li><li><strong>版本二：</strong>武士妻子真砂说是自己杀了丈夫。她遭强暴后极为悲愤，但丈夫冷酷的眼神却让她绝望。她神智错乱，恍惚间误杀了丈夫。</li><li><strong>版本三：</strong>借女巫之口的武士承认是自杀，因为妻子在遭强暴后，不仅没有痛苦，反而在强盗多襄丸面前显示出从未有过的美丽；不仅答应跟随多襄丸走，还叫多襄丸杀死自己。武士在极度屈辱和绝望中自杀。</li><li><strong>版本四：</strong>旁观者樵夫说，强盗多襄丸占有真砂后，跪在地上请求真砂跟他走，真砂将捆绑丈夫的绳子解开，意为两人决斗。武士骂真砂是妓女，不愿为之拼命，可以奉送给多襄丸。多襄丸听后很尴尬，也犹豫起来。真砂于是狂笑，讽刺他们都不是真正的男人。刺激之下，二人打斗，水平都很差。最终，武士卡在树丛中被杀。</li></ul><p>主题</p><ul><li>真相</li><li>谎言与人性恶</li><li>人道主义的胜利</li></ul><p>相关电影</p><ul><li>《两杆大烟枪》</li><li>《天使爱美丽》</li><li>《正午》</li><li>《疯狂的石头》</li></ul><h2 id="第四讲-剪辑和蒙太奇理论">第四讲 剪辑和蒙太奇理论</h2><p><strong>一、镜头</strong></p><ul><li>是电影系统中的基本单位。</li><li>各个元素有意义地安置在镜头之中（场面调度）。</li><li>当一连串镜头并置时，顺序本身即成为重要的安排（蒙太奇）。</li></ul><p><strong>二、场面调度</strong>（<strong>mise-en-scèine</strong> ）</p><ul><li>电影中的场面调度是场景（布景或外景）与摄影机相互关系的作用。</li><li>电影的场面调度包括：打灯、走位、制作设计（服装、道具和布景）、底片的选择（黑白或彩色、细粒子或粗粒子）、画面比例（银幕的比例）、取镜（同时要呈现多少布景或角色）、摄影机的位置和运动，以及声音范围等。</li></ul><p><strong>三、蒙太奇（montage）</strong></p><p>普多夫金试验</p><p>A 怯懦</p><p>1、一个人在笑</p><p>2、手枪直指着</p><p>3、惊惧的脸</p><p>B 勇敢</p><p>1、惊惧的脸</p><p>2、手枪直指着</p><p>3、一个人在笑</p><p>【镜头本身没有含义，镜头的顺序给人不同的联想】</p><p>库里肖夫效应</p><p>莫兹尤辛几个静态的没有表情的特写镜头和其他影片的三个镜头分别并列：</p><ul><li>一盘汤（沉重辛酸的心情）</li><li>一个女孩在玩一只滑稽的狗熊玩具（慈爱和喜悦）</li><li>一具在棺材里的老妇的尸体（哀痛）</li></ul><p>【面部有了表情，还是多变的】</p><p>库里肖夫效应的含义</p><p>从一个开场镜头开始，引导观众从一些不同元素的镜头中，推断这些镜头之间在空间和时间上的延续性。</p><p>蒙太奇思维的由来及概念</p><ul><li>Montage来自法文动词monter，指一个镜头置于另一个镜头之后的方式 。 作为一种<strong>思维方式</strong>，早已存在于人类生活之中。历经库里肖夫，爱森斯坦等电影艺术家的探索、整合，现已成为影视艺术独特的审美语言。</li><li>蒙太奇的完整概念有三层含义：<strong>思维、剪辑、基本结构手段和技巧</strong>。</li></ul><p>电影蒙太奇</p><p>电影创作的主要叙述手段和表现手段之一。电影将一系列在不同地点，从不同距离和角度，以不同方法拍摄的镜头排列组合起来，用以叙述情节，刻画人物。当不同的镜头组接在一起时，往往会产生各个镜头单独存在时所不具有的含义。</p><p>小说中的蒙太奇：</p><p>“环顾了一下屋内的每一件家具。……首先是我躺的那张床，在巴黎居然会见到这样的四柱大床……然后是那个大理石面的洗脸盆架，我因为急于倒水，把一部分水泼溅在石面上，水珠正在越来越缓慢地滴到砖地上去。另外有两把小椅子，上面堆满了我的外套、背心和裤子。一把巨大的圈椅，上面盖着肮脏的白麻布，在椅背上我挂上了我的领结和硬领。一个抽屉柜，上面已经掉了两个铜拉手，顶上有一只花花绿绿的破磁笔架，似乎算是一件装饰品。那张梳妆桌配有一块极小的镜子和一个极大的针插。窗子是出奇的巨大。”</p><p>“满心惊慌，在同一刹那间把脸忽而转向后，忽而转向前，忽而转向这边，忽而转向那边；我真以为怒不可遏的哥哥、全副武装的仆人都即将露面，盛怒的姊姊将大声呼喝，父亲满面怒容，脸色甚至会比我所看到的、或我所畏惧的出鞘刀剑还可怕三分。”——S·Richardson《克拉丽莎》【心理蒙太奇】</p><p>诗歌中的蒙太奇</p><ul><li>白骨露于野，千里无鸡鸣——曹操《蒿里行》</li><li>可怜无定河边骨，犹是春闺梦里人。——陈陶《陇西行》</li></ul><p>树初黄叶日，人欲白头时。——白居易《途中感秋》</p><p>雨中黄叶树，灯下白头人。——司空曙《喜外弟卢纶见宿》</p><p>窗里人将老，门前树已秋。——韦应物《淮上遇洛阳李主簿》</p><p>对比与平行</p><p>明眸皓齿今何在？血污游魂归不得。清渭东流剑阁深，去住彼此无消息。——杜甫《哀江头》</p><p>积累式</p><p>碧云天，黄花地，西风紧，北雁南飞。晓来谁染霜林醉？总是离人泪。——王实甫《西厢记》第四本第三折[正宫][端正好]</p><p>【前面的都是五个空镜头，最后是核心。前面五个空镜头渲染离人泪的情感，但只给前五个镜头就会不知所云】</p><p>空镜头</p><p>水自潺潺日自斜，尽无鸡犬有鸣鸦。千村万落如寒食，不见人烟空见花。——韩偓《自沙县抵龙溪县，值泉州军过后，村落皆空，因有一绝》</p><p>画面跳跃</p><p>梳洗罢，独倚望江楼。过尽千帆皆不是，斜晖脉脉水悠悠，肠断白蘋洲。——温庭筠《梦江南》</p><p>蒙太奇分类</p><ul><li><strong>画面蒙太奇</strong>：把电影镜头有机地、艺术地加以组接剪辑，使之产生连贯、呼应、对比、暗示、联想、衬托、悬念及形成特定的节奏，从而组合成各个有组织的片段、场面，直到成为一部完整的影片。</li><li><strong>外部蒙太奇</strong>：音响蒙太奇、色彩蒙太奇</li><li><strong>内部蒙太奇</strong>：单个镜头内部的<strong>场面调度</strong></li></ul><p>蒙太奇手法</p><ul><li><strong>叙事类：平行、交叉、连续、复现</strong></li><li><strong>表现类：对比、情绪（心理）、隐喻（象征）</strong></li></ul><p><strong>爱森斯坦</strong></p><p>百年电影史上十大导演之一，使蒙太奇从技术发展到艺术，发展和完善了电影蒙太奇理论。</p><p><strong>《战舰波将金号》（1925）</strong></p><p><strong>《公民凯恩》</strong></p><p>相关电影</p><ul><li>《刺杀肯尼迪》</li><li>《教父2》</li><li>《黑客帝国2》</li><li>《花样年华》</li></ul><h2 id="第五讲-画面语言">第五讲 画面语言</h2><p><strong>一、画面的构成</strong></p><ul><li>构图</li><li>色彩</li><li>光线</li><li>运动</li></ul><p>构图</p><ul><li>影视作品中，运用镜头成像特性与造型手段，赋予所要表现的对象和意图以相关的造型因素。</li><li>影视构图的基本要素：<strong>主体、配体、环境、景别</strong></li></ul><p>景别</p><ul><li>景别：被拍摄主体在画面中呈现出来的范围。</li><li>一般分为五种：<strong>远景、全景、中景、近景、特写</strong></li></ul><p>色彩</p><p>色彩具有表意功能：</p><ul><li>还原客观世界的本来面貌；</li><li><strong>刻画人物</strong>，如《人证》；</li><li><strong>营造气氛</strong>，如《现代启示录》；</li><li><strong>表现主题</strong>，如《蓝》、《白》、《红》。</li></ul><p>光线</p><p>光线的表意功能：</p><ul><li><strong>造型作用</strong></li><li><strong>塑造人物形象</strong></li><li><strong>渲染环境气氛</strong></li></ul><p>【 《霸王别姬》：逆光——侧光——顶光。都是通过烟雾打过来这种光线带来了一种浓郁的人文色彩——暗示着人物无法走出民族文化环境（命运 舞台灯光永远跟着人物）】</p><p><strong>二、镜头</strong></p><ul><li>镜头的含义：</li></ul><p>指拍摄过程中摄影（像）机从开机到关机这段时间内不间断地拍摄下来的一个叙事段落，在特定的场合下又称为“画面”。</p><p><strong>三、场面调度</strong></p><ul><li>指导演对一个场景内演员的行动路线、地位和演员之间的交流等表演活动所进行的艺术处理，以达到叙事和表意的目的。</li></ul><p>场面调度的基本层次</p><ul><li>（1）演员调度：指导演通过演员的运动方向、所处位置的更动以及演员与演员之间发生交流时的动态与静态的变化等，造成画面的不同造型、不同景别，揭示人物关系及其情绪的变化，以获得比较好的叙事效果。</li><li>（2）镜头调度：指导演运用摄影机方位的变化，如<strong>推、拉、摇、移、跟等运动方法，俯、仰、平、斜等各种不同视角和远、全、中、近、特写等各种不同景别的变换</strong>，获得不同角度、不同视距的镜头画面，讲述人物关系和环境气氛的变化。</li></ul><p>【《公民凯恩》：“孤岛”与“玫瑰花蕾”“敖德萨阶梯”的不同镜头剪切不同，通过场面调度】</p><p><strong>四、长镜头（Long Take）</strong></p><ul><li>“短镜头”的对称，指在一段持续时间内连续摄取的、占用胶片较长的镜头。能包容较多所需内容或成为一个<strong>蒙太奇句子</strong>。其长度并无明确的、统一的规定。长镜头的使用会直接影响到影片的<strong>步调节奏和韵律</strong>。</li><li>一般分为<strong>固定长镜头、变焦长镜头、景深长镜头、运动长镜头</strong>四种。</li></ul><p>特吕弗和他的《四百下》</p><p><strong>长镜头与蒙太奇对比</strong></p><ul><li>a、蒙太奇出于讲故事的目的对时空进行分割处理，场面调度追求的是不作人为解释的时空相对统一；</li><li>b、蒙太奇的叙事性决定了导演在电影艺术中的自我表现，场面调度的纪录性决定了导演的自我消除；</li><li>c、蒙太奇理论强调画面之外的人工技巧，场面调度强调画面固有的原始力量；</li><li>d、蒙太奇表现的是事物的单含义，具有鲜明性和强制性，场面调度表现的是事物的多含义，它有瞬间性与随意性；</li><li>e、蒙太奇引导观众进行选择，场面调度提示观众进行选择。</li><li>f、蒙太奇艺术始终使观众处于一种被动的地位，“场面调度”的理论让观众自由选择对事物的解释。</li></ul><p><strong>相关电影</strong></p><ul><li>《紫色》</li><li>《辛德勒名单》</li><li>《四百下》</li><li>《十七岁的单车》</li></ul><h2 id="第六讲-电影对白音效与配乐">第六讲 电影对白、音效与配乐</h2><p><strong>电影声音</strong></p><ul><li>1927年10月23日，美国摄制的《爵士歌王》公映，标志电影进入有声时代。</li><li>影视艺术声音的类型包括：人声、音乐、音响</li></ul><p><strong>一、电影对白</strong></p><ul><li>舞台剧中的对白是极其重要的元素，使用一种缓慢而有韵律的节奏使观众有必要听到几乎每一个词。</li><li>电影对白可以比舞台上处理得更贴近现实，节奏也更快一些。</li><li>基本原则：影片中的对白应该服从于视觉图像，尽量不要谋求舞台剧对白那样的主导地位。</li></ul><p><strong>二、电影音效</strong></p><ul><li>1、讲述内心故事</li><li>2、暗示主观心理状态</li><li>3、对声音作用非同寻常的强调</li><li>4、声音可以成为剧情手段</li><li>5、声音作为转场元素</li><li>6、作为音响效果的寂静</li></ul><p><strong>三、电影配乐</strong></p><p>《罗拉快跑》音乐的舒缓与画面的紧张形成对立，张力，让人记住</p><p>无声声轨，让观众去体会，有时间缓冲</p><p><strong>四、声画关系</strong></p><ul><li>声画合一：声画同步</li><li>声画分立：声画分离</li><li>声画对位：</li></ul><p><strong>相关电影</strong></p><ul><li>《邦妮和克莱德》</li><li>《罗拉快跑》</li><li>《死亡诗社》</li><li>《猜火车》</li><li>《迷墙》</li></ul><h2 id="影片介绍">影片介绍</h2><ol type="1"><li>《大门》奥利佛斯通——擅长电影的剪辑</li></ol><p>人物传记影片，主唱：吉姆莫里斯 “大门乐队”；多面性格</p><p>出身于军官家庭 出身于1943年 美国——同时也是诗人——只活了27岁</p><p>知名的摇滚乐演出事件——他想让别人的印象是有思想的人，但是别人都把他看作是性感的、流行的——内心的很多矛盾冲突；事件的选取决定了这部电影的价值取向</p><p>剪切；色彩使用；电影和音乐的配合</p><ol type="1"><li>《天生杀人狂》Natural Born Killers（一般电影500-600的镜头，而这部差不多2500个镜头 大量快速剪辑的镜头 又不影响剧情的连续性）</li></ol><p>剧本是另一个著名导演</p><p>斯通的电影有强烈的自己的意思形态——而昆丁的剧本是要把各种意识形态都抽空的；不需要解说，不需要社会意识形态——电影上映后，两人的友谊就结束了（两人成长中的家庭；大众传媒的因素，催化了这两个人，对杀人行为赋予了社会内涵，与昆丁的想法不同）——昆丁《Kill B》</p><ol type="1"><li>《小城之春》1948年版 费穆（两个版本）</li></ol><p>强调情趣和情感的诗画作品/影片（不同于好莱坞的故事 剧情取向） 只出现了5个人物，主要人物两男两女，四个人的两对三角恋</p><p>在人物形象的设置，情节</p><p>虽是48年拍的，却有现代的意识，就算在现在也很难超越</p><p>2005年 第五代导演 田壮壮 也翻拍了 可做对照（48年版 很多女主人公的画外音推动故事情节发展）画外音的叙事功能</p><ol type="1"><li>《两杆大烟枪》Lock, Stork and Two Smoking Barrels 盖瑞（英国）</li></ol><p>是一部很复杂的电影，1998</p><p>镜头的使用，结尾处开放式的结局，英国的风味，黑色幽默</p><ol type="1"><li>《天使爱美丽》</li></ol><p>法语电影</p><p>色彩的使用（红色 绿色 蓝色）——情节</p><ol type="1"><li>《正午》High Noon</li></ol><p>西部片（歌舞片也很少有人看） 70年代消亡（这部电影中也有一些反西部片的元素 消解西部片的元素） 53年奥斯卡 最佳导演奖</p><ol type="1"><li>《疯狂的石头》</li></ol><p>多线索并进，盖里奇《两杆大烟枪》昆丁《》</p><p>抄袭？——有很多值得借鉴的原创性的东西</p><ol type="1"><li>《刺杀肯尼迪》奥利佛斯通</li></ol><p>1992年奥斯卡最佳摄影、剪辑奖</p><p>此片献给一切追求自由的年轻人</p><p>对于真相、追求的；美国的精神——意识形态的宣传——但是以商业形式拍摄，成功</p><p>奥利佛斯通《越战》三部曲，永远可以从他的电影中解读他的思想</p><ol type="1"><li>《教父2》</li></ol><p>涉及到电影的五种要素，最完美的呈现——典型的电影教科书</p><p>三部曲，推荐第一部和第二部——黑帮电影类型（不同于黑帮电影没有妻子，一个家族）</p><ol type="1"><li>《黑客帝国2》72界奥斯卡最佳剪辑、效果、音响、音效剪辑奖；选第一部和第二部</li></ol><p>好莱坞重要电影类型：科幻片</p><p>出现之前，一般的科幻片讲人对未知世界的探索</p><p>电脑网络的虚拟世界：拍摄技巧：三个不同的时空转换，人物设置</p><ol type="1"><li>《花样年华》in the mood for love王家卫</li></ol><p>相似于《小城之春》，诗话电影：故事下人物的生态心里——道具和服装值得称道——剪辑是王家卫的御用剪辑师（色彩、镜头、画面切换）</p><ol type="1"><li>《紫色》斯皮尔伯格</li></ol><p>女性主义的电影，艺术电影</p><p>西里；秀格 索菲亚</p><ol type="1"><li>《辛德勒名单》斯皮尔伯格</li></ol><p>战争电影《血战钢锯岭》《敦刻尔克》（撤退）</p><p>战争与人性</p><ol type="1"><li>《十七岁的单车》Beijing Bicycle第六代王小帅（张艺谋 陈凯歌《霸王别姬》）柏林电影节奖</li></ol><p>青春成长电影</p><p>第六代拍摄风格与第五代（历史）不一样，第六代立足于现实社会，承袭了意大利***风格；汪峰的原创音乐</p><ol type="1"><li>《四百下》法国 特利佛</li></ol><p>法国新浪潮——长镜头电影</p><p>一个小男孩并不被家庭，一个人去大海</p><ol type="1"><li>《邦尼和克莱德》</li></ol><p>一对情侣疯狂杀人的故事，50年代</p><p>亚类型 公路电影（开创）</p><ol type="1"><li>《罗拉快跑》</li></ol><p>三段式剧情</p><ol type="1"><li>《死亡诗社》</li><li>《猜火车》</li><li>《迷墙》音乐电影</li><li>《La La Lan》</li><li>《敦刻尔克》</li><li>《水形物语》</li></ol>]]></content>
      
      
      <categories>
          
          <category> Notes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程笔记 </tag>
            
            <tag> 电影 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
