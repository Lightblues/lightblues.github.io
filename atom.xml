<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Easonshi&#39;s Space</title>
  
  <subtitle>O ever youthful!</subtitle>
  <link href="https://lightblues.github.io/atom.xml" rel="self"/>
  
  <link href="https://lightblues.github.io/"/>
  <updated>2022-10-08T15:36:21.780Z</updated>
  <id>https://lightblues.github.io/</id>
  
  <author>
    <name>Easonshi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>感 | 理性, 试论善恶</title>
    <link href="https://lightblues.github.io/posts/440b3fc6/"/>
    <id>https://lightblues.github.io/posts/440b3fc6/</id>
    <published>2022-09-22T07:51:12.000Z</published>
    <updated>2022-10-08T15:36:21.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>秋天第一道月光 / 射在窗上 / 震颤玻璃。 第一阵秋风袭来 / 一大群叶子 / 逃进我房间里避难。 —— 阿巴斯 from MONO 海报</p></blockquote><ol type="1"><li>何以为恶: 我相信, 世间可悲之事多非本着恶的意愿所为, 大逆不道者亦有其道.</li><li>何以分善恶? 结果论之外, 善恶本质何在, 行动的动机, 思维的起源?</li><li>善的意愿/本能: 乃至罪大恶极者, 估计也有着善的意愿; 但意愿不等于结果 (论断的结果, 大概多是妥协的合理性).</li><li>边界: 至少, 起初的善的意愿有其边界, 所谓「差序格局」, 对于遥远不可设想世界的同理心的天然缺失.</li><li>多样性: 所以边界仅在一念. 模糊性是天然存在的, 评价的权利不等于事实的边界. 善的多样性塑造了恶的多样性.</li><li>伪善: 既然善的共识和善的评价本身存疑, 何来「伪善」? 真诚可贵, 身心合一, 善恶存乎己. 欲念与行动的分离, 纲常对常识的规训, 是为伪善.</li><li>动机: 善的动机何在? 支撑前行的动力. 合理化, 自我合理化. 虽然不可否认受道德的约束, 但规训一定是自我的.</li><li>计算: 规训, 这样严肃的表达, 不能掩盖人性天然顺服的合理与自然. 直面善恶的模糊性, 也不必羞于谈论善恶的计算.</li><li>偏执: 执迷其道, 乃至有违伦理, 抑或成为超人. 偏执本身不为恶, 观念也不等同于行动. 欲望被执行或被掩埋, 善意被理解或被扭曲. 偏执有其偶然性.</li><li>视角主义: 计算有高下, 行为的方式有别. 但在善恶的辩证下, 底线是什么? 求诸理性? 理性之下的人性是什么?</li><li>宽容: 相信善的意愿同在, 并承认动机的脆弱和结果的模糊性. 是以, 宽容尤其必要.</li></ol><p>尾: 中途看到豆瓣上谌洪果老师的《善的脆弱性》十五讲. 不甚了了担又心向往之, 心乱脑空, 姑且望文生义闭门漫游. 没有终点的路径, 但行走本身有意义.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;秋天第一道月光 / 射在窗上 / 震颤玻璃。 第一阵秋风袭来 / 一大群叶子 / 逃进我房间里避难。 —— 阿巴斯 from MONO 海报&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;何以为恶: 我相信, 世间可悲之事</summary>
      
    
    
    
    <category term="Misc" scheme="https://lightblues.github.io/categories/Misc/"/>
    
    
    <category term="杂感" scheme="https://lightblues.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
  </entry>
  
  <entry>
    <title>感 | 负债, 又回高中</title>
    <link href="https://lightblues.github.io/posts/b40421d0/"/>
    <id>https://lightblues.github.io/posts/b40421d0/</id>
    <published>2022-09-11T07:49:04.000Z</published>
    <updated>2022-10-08T15:36:21.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有太多太多魔力 太少道理 / 太多太多游戏 只是为了好奇 / 还有什么值得 歇斯底里 / 对什么东西 死心塌地 / 一个一个偶像 都不外如此 / 沉迷过的偶像 一个个消失 / 谁曾伤天害理 谁又是上帝 / 我们在等待 什么奇迹 / 最后剩下自己 舍不得挑剔 / 最后对着自己 也不大看得起 / 谁给我全世界 我都会怀疑 / 心花怒放 却开到荼蘼 —— 林夕 Faye Wang 《开到荼靡》</p></blockquote><ol type="1"><li>做题生活: 梦回高中, 又逃不开应试教育的话题, 作为最基本的道路. 不说「小镇做题家」, 考试与成绩确也是多数人的共同经验, 量化分数成为多数人的度量指标.</li><li>我感: 是庆幸的, 因为成绩还不错所以有特立独行的权力; 虽说反抗也是小心翼翼的内心独白, 大概在死板智商上寻求得某种优越感. (当然, 叛逆也是青春期的帅气与资本).</li><li>感他: 感慨那重读三四年的勇气, 但转念通情却也并非不可理解; 一念差池, 切不要全以个体经验揣度他人处境. 成本收益的核算永无法放在个体的决断上. 应当设想, 西绪福斯是幸福的.</li><li>正反馈: 做题生活的快乐在于其 (相对及时可靠的) 正反馈. 应试教育的可数知识点可以放进 list, 而考试成绩是最及时的衡量指标. 应试阶段的内容因其基础对绝大数多人没有智识上的难度, 差异最多在时间效率上.</li><li>做题春药: 于是单一指标干涉生活乃至自我价值, 在忙碌与疲惫中驯化. 可数的题目是必要迈过的坎, 增长的题量是最好的兴奋剂.</li><li>纯粹之美: 极权之诱惑, 是否也有这种确信呢? 规则的刚性有时大过其公平性. 纯粹是极端之没, 中道难矣; 如何甘于平庸?</li><li>大学之阶越: 较直观的体验是「正反馈的消失」 (当然因学校专业而定). 根本的, 是人工构建的价值体系变成了更为现实更为多元的衡量标准. 原本若沉浸在纯粹的世界设定下对大学生活抱有「樱花色」的想象, 总会有落差感.</li><li>心欲静难: 一下子要接受各方面的事务, 千头万绪无从抓手. 更重要的冲击来自价值观, 上帝死得干脆, 一下子浮游在波涛中, 再难放下那张书桌了.</li><li>诱惑难逃: 入学的另一重冲击来自自天南海北的同学, 地区差异大过内部的奇装异服甚矣. 或许是第一次自我管理乃至初次离家, 诱惑是来自方方面面的. 基础教育的美好与局限都来自封闭的建构, 而世界之大大于食堂寝室.</li><li>自律: 是以, 坚持自律是值得尊敬的. (只是尊敬, 作为无神论者对后天影响抱有虚妄的自信.) 敬佩则已, 求诸己身是难上加难; 最后或许接受了并非自己要的那条道路, 岔路渐分.</li><li>复杂性: 据说大学更是被建筑的「象牙塔」, 只是选择多了而秩序依旧井然; 而步入社会是进入更大的复杂性, 乃至混沌与荒芜. 何以面对这种复杂乃至荒凉?</li><li>权衡: 选择越来越重要. 并接受了自己某方面的无能, 通识下真正深入所需的天赋不再 (或者, 历史环境成为沉重负担). 时间不得已成为天平上需要斟酌的砝码, (更难以接受的, 码上天平的还有金钱) 收缩起那些无畏伸展的好奇, 逐渐接受社会的细分. (或许成熟的标志)</li><li>规划: 选择困难的从来不是打勾, 而是那被放弃的可能性. 贪欲总想要那最优解, 但人生哪里来的最好状态. 放弃多是件好事, 从核心出发的延展是更为正确的道路; 生而有涯, 而无端无畏好奇无涯.</li><li>何以? 原本自居理性, 长大才发现感性居多, 并沉湎在自我的积极性中. 素没什么规划, 但也在与自我纠缠中意识现实方向的重要性. 放下「四叠半神话大系」, 在月光璀璨中漫步吧.</li></ol><p>尾: 又谈到高中生涯, 往后一切初见端倪, 而多不自知. 但总体下来, 又太多决定论的意味; 还是要承认自我的怯懦与虚弱, 循路前行.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;有太多太多魔力 太少道理 / 太多太多游戏 只是为了好奇 / 还有什么值得 歇斯底里 / 对什么东西 死心塌地 / 一个一个偶像 都不外如此 / 沉迷过的偶像 一个个消失 / 谁曾伤天害理 谁又是上帝 / 我们在等待 什么奇迹 / 最后剩下自己 舍</summary>
      
    
    
    
    <category term="Misc" scheme="https://lightblues.github.io/categories/Misc/"/>
    
    
    <category term="杂感" scheme="https://lightblues.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
    <category term="生活" scheme="https://lightblues.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>感 | 欲望, 或论躺平</title>
    <link href="https://lightblues.github.io/posts/2430d599/"/>
    <id>https://lightblues.github.io/posts/2430d599/</id>
    <published>2022-09-11T07:47:51.000Z</published>
    <updated>2022-10-08T15:36:21.780Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>日々私たちが过ごしている日常というのは、実は奇迹の连続なのかもしれん。 我们每天度过的称之为日常的生活，其实是一个个奇迹的连续也说不定。 —— あらゐけいいち 《日常》</p></blockquote><ol type="1"><li>何谓欲望? 个体的选择, 但更多是环境的塑造. (本就是个后天决定论者, 因此私以为后者之影响更深. )</li><li>欲望之不自主: 可悲在于不明白欲念的来源, 本真藏在努力、忙碌与焦虑的面具下; 消费社会的灯红酒绿更艳, 权钱掩映下的美色愈加.</li><li>欲望的螺旋: 牵扯在其中, 并且因为环境的选择性激励强化自身的信念 (又见回音壁); 或许也是沉没成本, 很多的人生选择的常态是没有退路.</li><li>周折: 一方面是直面世俗的勇气, 另一方面又缺少圈地自娱的勇气; 于是怯懦在夹缝中周折.</li><li>躺平的勇气: 对世俗的抗争, 所有的压力的根本不来自自身; 当然「抗争」并非躺平的起点和终点, 看开说到底是撇清身心外物, 或曰「与自我和解」.</li><li>躺平的条件: 然看清何其困难, 往来多歧路, 身累心不停; 更多也非个人的决断, 机遇与环境同样作为因素, 而觅得同行者又何其珍贵.</li><li>常识: 「躺」本身就不在我的词汇表中 (过于现代且形象的比喻缺乏灵动), 在此借用不过权且; 只是在流光魅影的社会常识何其飘摇, 反倒是「不日常」成为了日常.</li><li>日常的暴戾: 也正因这种高压锅的状态, 生活成为自设置的战场; 如憋气快要溺水的边界, 胸腔充斥郁闷的惰性气体; 或而爆炸, 或而渗透, 内吸收.</li><li>平庸之善: 所以日常是重要的, 扎实的生活, 善并不困难; 并不难, 若撇开欲望世俗的成见, 若赤条条坦诚见, 若非包裹在夹心阶层中.</li><li>何以自由? 解脱, 撇开乃至不负责任? 索性世俗到底, 化欲望为本能? 停留在夹缝中周折, 高低错位中寻安生? 入世而出世, 冷观红尘烟火?</li><li>都是, 都尊重. 只希望不要忘记善之平庸.</li></ol><p>又: 没有回答的诘问, 但提出问题总是标记; 即使知非原意也无端去蹭「恶的平庸性」, 大概出自对日常闪光的尊重.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;日々私たちが过ごしている日常というのは、実は奇迹の连続なのかもしれん。 我们每天度过的称之为日常的生活，其实是一个个奇迹的连续也说不定。 —— あらゐけいいち 《日常》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;何谓欲</summary>
      
    
    
    
    <category term="Misc" scheme="https://lightblues.github.io/categories/Misc/"/>
    
    
    <category term="杂感" scheme="https://lightblues.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
    <category term="生活" scheme="https://lightblues.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>感 | 沉浮, 或论封装</title>
    <link href="https://lightblues.github.io/posts/be128d74/"/>
    <id>https://lightblues.github.io/posts/be128d74/</id>
    <published>2022-09-09T09:29:50.000Z</published>
    <updated>2022-10-08T15:36:21.780Z</updated>
    
    <content type="html"><![CDATA[<p>沉浮在使用封装的「舒适性」与对底层理解的「通透感」之间. (又是欲望与能力的纠缠)</p><blockquote><p>有感于近日体验, 也不免受到一些相关讨论的影响 (但更多是个人呓语).</p></blockquote><ol type="1"><li>封装的必要性: 功能上的复用, 逻辑上的完整, 学习上的层次.</li><li>封装的问题: 对于底层的遮盖 (较好的例子可能是 keras); 解封装的困难.</li><li>(个人) 被封装的问题: 对于底层的忽略; 习惯了「黑盒」之后对于「被封装」的忽略乃至麻木.</li><li>解封装的难度: 生啃基本原理/底层代码的困难; 时间和精力上的不允许 (成本收益).</li><li>封装的普遍性: 不独代码上的, 电子元器件的封装, 工业化标准件的归一化, 乃至社会服务的封装.</li><li>封装的不可靠性: 功能层面, 隐私层面; 对于接口的误解, 乃至设计上本身的忽略...</li><li>封装之美与美的丧失: 封装本身的「优雅」, 好的封装的秩序感; 但一定也会有个性化的丧失, 对人性的忽略.</li><li>封装的层级: 高度层级化在兼容不同层级功能的和理性, 以及在认知上的一定合理性; 扁平化对于学习和使用上的简化, 但也可能带来 API功能上的丧失.</li><li>解封装的诱惑: 剥洋葱的层级式快感, 智识上的愉悦; 但要注意「解封装」本身的程式化的枯燥, 没有全局视角带来的局限性...</li><li>对封装物的反思: 封装的必要性? 合理性? 如何进行基于基本功能的简化?</li><li>如何应对: 对于被封装物的「俯瞰」 (当然有赖于文档与信息的透明度); 快速的决断与选择.</li></ol><p>相关链接</p><ul><li>晚点谈 Late Talk ep13 <a href="https://podcast.latepost.com/13">是否在现代社会过非技术式生活：和李如一聊聊封装与日本</a></li><li><a href="https://masterpa.mirror.xyz/S1Lq2DaSTe9o2wr5PxWsh_1sGNWrrKR8hceuxAXVGTU">一个被封装的未来</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;沉浮在使用封装的「舒适性」与对底层理解的「通透感」之间. (又是欲望与能力的纠缠)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有感于近日体验, 也不免受到一些相关讨论的影响 (但更多是个人呓语).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol type=&quot;1&quot;&gt;
&lt;li&gt;封装的</summary>
      
    
    
    
    <category term="Misc" scheme="https://lightblues.github.io/categories/Misc/"/>
    
    
    <category term="杂感" scheme="https://lightblues.github.io/tags/%E6%9D%82%E6%84%9F/"/>
    
    <category term="code" scheme="https://lightblues.github.io/tags/code/"/>
    
  </entry>
  
  <entry>
    <title>赛博漫谈 | git 作为方法</title>
    <link href="https://lightblues.github.io/posts/92983cd0/"/>
    <id>https://lightblues.github.io/posts/92983cd0/</id>
    <published>2022-08-26T06:46:20.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我已经不再知道些什么, 也不在乎, 而且不认为这有什么要紧的, 而突然间, 我感到了真正的自由. —— 杰克凯鲁亚克, from MONO 0817日签</p></blockquote><p>仍然相关过分伸展的欲望...</p><p>文笔颓唐, 但我还要说自己是个无可救药的乐天派.</p><h2 id="记录的欲望">记录的欲望</h2><p>纯然的秩序是美, 如置景规范的相片, 如烟雨纷纷的飞雪. 所以秩序存在着一定的吸引力, 整理是一种天然的欲望.</p><p>没有打理卫生的决心, 但能鸠占鹊巢还是向往整洁的环境的. 适度的强迫症或洁癖值得钦佩, 虽然对个人而言行动的决心抵不过身体的惰性.</p><figure><img src="https://raw.githubusercontent.com/Lightblues/BlogImg/master/uPic/2022-08-26-22-59-11.png?token=AJXWMIHBUJJ7GY2YHGSWUELDDOBSO" alt="2022-08-26-22-59-11" /><figcaption>2022-08-26-22-59-11</figcaption></figure><center>from 隐入尘烟</center><p>惰性人人有之, 据说还是生产力进步的原动力, 似乎还没那么糟糕. 如何借工具来填补惰性? 所谓科学方法论.</p><p>缺乏实在的行动力, 但川水东流若留不下些许印记总还是过分虚无了; 是以, 退而求之于记录的欲望. 「记录」, 是秦皇汉武的丰功伟绩, 是传道授业的细水长流, 是私密阴幽的私人日记.</p><p>诉诸记录, 因为个体性没有那么坚强; 用数量作标尺, 给自己交上答卷; 来掩盖眼睛里的空洞, 走在那阳关大道抵御寒冷.</p><p>诉诸记录, 也因记忆的淡薄. 一方面是回忆的不可靠, 另一方面是脑容量的有限. 这里的目的是个人的了, 但记录不等于记忆, 哪怕一手的记录也不一定可靠, 更何况记录有被置之高阁的无限可能性.</p><h2 id="git-作为方法">git 作为方法</h2><p>与自己试图诚实的对谈总陷入悲观的论断; 那还是回归现实, 从熟悉的技术谈起.</p><p>所谓git, 也即 存档、同步、修改、筛选、记录. 之所以称之「方法」, 因为有了一套切实可行的技术方案, 并且行之有效.</p><p>「方法」的标准如何? 冗杂如wechat可以是工具但绝非方法, 盛赞如Notion若仅仅是编辑和视觉上的优秀也仅仅是做好了一个合格的工具 (虽然也很难值得尊敬).</p><p>成其方法, 因为坚持了基本功能的必要性和成熟型, 因为在实现功能的同时保守了基本的克制, 因为在对工具的使用者保持了起码的尊重.</p><p>当然, 所谓方法, 更多是个人层面的感受. 一个阶段的觉醒, 恰好遇到了合适的对象.</p><p>作为方法, 保持一种「归档」的态度. 其一, 对于记录抱有对得起自己的尊重, 文字上简练, 态度上的真挚; 其二, 对于任务阶段性的划分, 对过去的时间负责, 对现下的目标和执行的决策负责. 每个repo都看作一个作品.</p><p>作为方法, 学会对于内容的「选择」. 筛选是一道永恒的难题, 内容的选择是价值上的权衡, 如何评估和预测其在 历史、当下、未来 的价值, 在容量有限的背包中装下对于个体价值最优的物品? 价值观上的幼稚, 心态上的孤僻与软弱, 容易抱着陈芝麻烂谷活在现在和过去的夹缝中. 把遗传学上来自遥远祖先的第三只眼看向未来, 对于一切物品作新的评估, 尝试走出历史的迷宫.</p><h2 id="不作为目的">不作为目的</h2><p>「工具论」的诱惑, 在于给你指明了一条清晰的路径, 在这路的起点有笑容甜美的向导; 然而, 它难以给你描绘这条路的通向何方, 跟着面容模糊的导游一路走下去, 有着心智上的无比轻松, 并容易忘记那方向上的不确定 (多么像应试教育).</p><p>千万人有着千万差异的需求; 尽管其他多数是不成熟乃至不成立的需求, 但差异性是客观的存在; 而草创的那些创作者们容易扮演先知的角色, 规训普罗大众那才是康庄大道 (尽管可能并非有意); 悲哀在于, 由于需求或智识上的不成熟, 在不加审视的基础上丢掉那个性化的光点, 接受形形色色的宗教宣传完成自我规训.</p><p>所以, 近期越来越喜欢纯文本的编辑, 抛弃那些成熟单一的工业预制品, 尝试探索合乎个性需求的创作版图.</p><p>警惕工具或方法上的新颖, 尝试更为底层的自由的方式, 也是因为感知到了流行的产品形态对于个性的扼杀, 不谈审查, 言语的匮乏和工具上的单调, 连创作都是可悲的同质.</p><p>当然, 这些离自己有些遥远. 自己的问题, 在于尝试新事物之后的「兴奋」无法持续, 迅速转化为功能上习得之后的空虚与「倦怠」. 工具上的创新往往屈指可数, 因此这些微的助力无法弥补源泉上的枯竭; 方法层面的熟悉需要较长时间的消化, 但也不能沉迷流程上的规范与整饬, 无法代替底层的反思; 亦即, 目的还需要自己去寻找呐.</p><p>「土地」最为公正, 无论贫富, 种下一斤麦子, 都能收获十斤二十斤麦子.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我已经不再知道些什么, 也不在乎, 而且不认为这有什么要紧的, 而突然间, 我感到了真正的自由. —— 杰克凯鲁亚克, from MONO 0817日签&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;仍然相关过分伸展的欲望...&lt;/p&gt;
&lt;p&gt;文笔颓唐</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
  </entry>
  
  <entry>
    <title>Less is More | 写在 Guardian 之后</title>
    <link href="https://lightblues.github.io/posts/536b7142/"/>
    <id>https://lightblues.github.io/posts/536b7142/</id>
    <published>2022-08-15T07:44:41.000Z</published>
    <updated>2022-10-08T15:36:21.760Z</updated>
    
    <content type="html"><![CDATA[<p>翻了下LC <a href="https://leetcode.cn/u/easonshi/">主页</a>, 居然也参加了33场周赛, 到现在基本稳定在2300左右 (还记得大概第300场周赛拿到Guardian的些许兴奋). 主要开始刷LC是去年12月到今年2月, 中间停了两个月, 然后是5月到8月在家集中刷题, 题量达到780左右. 除了瓜店的徽章, 还打卡了2月份的周日一题全勤. 基本目标达成, 进入低欲望.</p><p>算迈过了第一阶段, 也算是陷入了瓶颈期. 简单些的周赛基本可AK, 但遇到难题直接当机, 而解法上的「优雅」始终无法达成 (层云叠嶂), 并且深陷对于能力的不自信.</p><p>小小题量难谈「小镇做题家」, 也自知训练方式上的不科学; 一开始快速发展迟滞, 并深见山峰之陡峭.</p><p>其实也没有太多的期许, 而刷题本身所带来的「乐趣」其实也无非「付出可以看到较为确定收获」的确定性, 但在底层能力上的提升是值得怀疑的; 说到底, 有种自欺欺人的无奈. 当然, 自己是无可救药的乐天派, 快速兑现的快乐总好过漫漫征途不见星月.</p><p>更为困难的, 反倒是克制攀登的欲望; 峰巅本身的诱惑毋庸置疑, 而登山者的传说确也动人; 一方面是山高路远无枝可依, 另一方面却是幽幽险径不见天月. 漫漫长征催人老.</p><p>上帝已死, 世界铺展开无限的可能. 生有涯而宇宙无垠, 独欲望更无涯.</p><p>所以旅行者啊, 带上罗盘, 独行路上祝有派蒙相伴.</p><p>何以武侠? 「侠之大者为国为民」固然不错, 「问世间情问何物直教人生死相许」在当今或许更为动人; 更为私人的理由, 则无外乎其简单纯粹 —— 纵使勾心斗角生死以搏, 纵使国仇家恨怒火焦心, 却有着一条忽隐忽现的准绳牵引着武侠世界的快意恩仇. 孩童较于成人的快乐, 难道不就是那种简单纯粹吗? 恶也恶得纯粹, 所以总有可爱之处. 因此, 虽早知结局也还要读下去, 虽万死也不辞.</p><p>不独武侠, 不独小说, 那些艺术性的共创, 乃至政治、科学理论化的建构, 一切描绘此般美好途径的解答不都有着这海洛因般的诱惑吗? 听闻《现代性与大屠杀》, 总有种似曾相识.</p><p>作为资深阿宅, 对于一般的宏大叙事自然有种本能的不关切; 而受限自身的阅读经验, 对于任何试图宣扬此种美好图景 (甚至没有任何副作用) 的传教也有着天然的抵触. 真是可悲可敬的无神论者呢.</p><p>问题太多, 而答案更多, 痛苦由是生. 有部《九阴真经》该多好.</p><p>收敛起无节制蔓延的欲望吧, 闭目塞听 (必要的时候); 快乐在有选择, 痛苦在有太多选择, 悲哀在不知选择; 我许你远大前程, 我许你平安喜乐 —— 听, 又是那神在传教</p><p>LESS IS MORE.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;翻了下LC &lt;a href=&quot;https://leetcode.cn/u/easonshi/&quot;&gt;主页&lt;/a&gt;, 居然也参加了33场周赛, 到现在基本稳定在2300左右 (还记得大概第300场周赛拿到Guardian的些许兴奋). 主要开始刷LC是去年12月到今年2月, 中间</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="LeetCode" scheme="https://lightblues.github.io/tags/LeetCode/"/>
    
    <category term="欲望" scheme="https://lightblues.github.io/tags/%E6%AC%B2%E6%9C%9B/"/>
    
  </entry>
  
  <entry>
    <title>Hackintosh+Windows+Arch 新体验</title>
    <link href="https://lightblues.github.io/posts/185494e9/"/>
    <id>https://lightblues.github.io/posts/185494e9/</id>
    <published>2022-01-30T04:27:03.000Z</published>
    <updated>2022-10-08T15:36:21.760Z</updated>
    
    <content type="html"><![CDATA[<p>回家复归台式机, 重新配置一下. 尝试在 Windows 环境下写代码, 终归是哪儿都觉得不太顺; 而 Arch 美则美矣一些常用软件还是有些不方便; 故, 半年之后终又折腾起了黑苹果, 从 Clover 转到 OC; 在调整硬盘划分的过程中将 Arch 转到了新的分区. 总结一下.</p><p>硬件列表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">技嘉Z390 AORUS PRO WIFI</span><br><span class="line">I5 9600K</span><br><span class="line">金士顿 Fury 2666 *2</span><br><span class="line">西数SN750 + 三星 970EVO</span><br><span class="line">fenvi T919 网卡</span><br></pre></td></tr></table></figure><p>分区记录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">(base) ➜  ~ diskutil list</span><br><span class="line">/dev/disk0 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *500.1 GB   disk0</span><br><span class="line">   1:                 Apple_APFS Container disk3         214.7 GB   disk0s1 <span class="comment"># Time Macktime</span></span><br><span class="line">   2:       Microsoft Basic Data disk0s2                 285.4 GB   disk0s2 <span class="comment"># 待定</span></span><br><span class="line"></span><br><span class="line">/dev/disk1 (internal, physical):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      GUID_partition_scheme                        *500.1 GB   disk1</span><br><span class="line">   1:           Windows Recovery                         523.2 MB   disk1s1 <span class="comment"># EFI 分区</span></span><br><span class="line">   2:                        EFI NO NAME                 104.9 MB   disk1s2</span><br><span class="line">   3:         Microsoft Reserved                         16.8 MB    disk1s3</span><br><span class="line">   4:                 Apple_APFS Container disk2         184.9 GB   disk1s4 <span class="comment"># macOS</span></span><br><span class="line">   5:           Linux Filesystem                         157.3 GB   disk1s5 <span class="comment"># Arch</span></span><br><span class="line">   6:           Linux Filesystem                         52.4 GB    disk1s6 <span class="comment"># Ubuntu, 基本不用了</span></span><br><span class="line">   7:       Microsoft Basic Data Win11                   104.9 GB   disk1s7 <span class="comment"># Windows</span></span><br><span class="line"></span><br><span class="line">/dev/disk2 (synthesized):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +184.9 GB   disk2</span><br><span class="line">                                 Physical Store disk1s4</span><br><span class="line">   1:                APFS Volume Macintosh - Data        36.0 GB    disk2s1</span><br><span class="line">   2:                APFS Volume Preboot                 338.8 MB   disk2s2</span><br><span class="line">   3:                APFS Volume Recovery                1.1 GB     disk2s3</span><br><span class="line">   4:                APFS Volume VM                      1.1 MB     disk2s4</span><br><span class="line">   5:                APFS Volume Macintosh               15.8 GB    disk2s5</span><br><span class="line">   6:              APFS Snapshot com.apple.os.update-... 15.8 GB    disk2s5s1</span><br><span class="line"></span><br><span class="line">/dev/disk3 (synthesized):</span><br><span class="line">   <span class="comment">#:                       TYPE NAME                    SIZE       IDENTIFIER</span></span><br><span class="line">   0:      APFS Container Scheme -                      +214.7 GB   disk3</span><br><span class="line">                                 Physical Store disk0s1</span><br><span class="line">   1:                APFS Volume TimeMachime             27.2 GB    disk3s2</span><br></pre></td></tr></table></figure><h2 id="mackintosh">Mackintosh</h2><h3 id="opencore-安装">OpenCore 安装</h3><ul><li>主教程 | <strong>国光的黑苹果安装教程</strong> <a href="https://apple.sqlsec.com/">https://apple.sqlsec.com/</a></li><li>官方教程 <a href="https://dortania.github.io/OpenCore-Install-Guide/">https://dortania.github.io/OpenCore-Install-Guide/</a></li><li>OC 编辑器<ul><li><a href="https://github.com/corpnewt/ProperTree">ProperTree</a></li><li><a href="https://mackie100projects.altervista.org/download-opencore-configurator/">OpenCore Configurator</a></li></ul></li><li>可以先找一个类似的配置好的 EFI 参考，例如 <a href="https://github.com/timche/hackintosh-opencore-z390-aorus-pro-wifi">hackintosh-opencore-z390-aorus-pro-wifi</a>; 我的放在了 <a href="https://github.com/Lightblues/EFI-Aorus-Z390">here</a></li></ul><h4 id="debug">Debug</h4><ul><li>蓝牙<ul><li>原本以为不能用是网卡的问题, 尝试 <a href="https://github.com/acidanthera/BrcmPatchRAM">BrcmPatchRAM</a> 无果; 结果还是 USB 的问题</li></ul></li><li>有线网卡<ul><li>IntelMausi</li></ul></li><li>多引导<ul><li>Fight Windows 引导: 还是直接看国光的 <a href="https://apple.sqlsec.com/5-%E5%AE%9E%E6%88%98%E6%BC%94%E7%A4%BA/5-6.html">教程6.6</a> 吧, 就是用 <a href="https://sqlsec.lanzouw.com/iDaQ1ubeg6h">EasyUEFI</a> 配置</li><li>详见 <a href="https://dortania.github.io/OpenCore-Multiboot/empty/diffdisk.html">教程</a></li></ul></li><li>HDMI 睡眠后显示器无法唤醒: 启动参数添加 <code>igfxonln=1</code>; from <a href="https://macoshome.com/hackintosh/hcourse/5449.html">here</a><ul><li>休眠的问题比较复杂, <a href="https://dortania.github.io/OpenCore-Post-Install/universal/sleep.html">教程</a></li><li>尝试过 <a href="https://github.com/acidanthera/HibernationFixup">HibernationFixup</a> 没作用</li><li>关于 macOS 的睡眠种类参见 <a href="https://heipg.cn/tutorial/enable-sleep-mode-for-hackintosh.html#%E9%80%89%E6%8B%A9%E4%BC%91%E7%9C%A0%E6%A8%A1%E5%BC%8F">here</a></li></ul></li><li>USB 映射<ul><li>遇到的: 要么是 USB3.0 失效, 要么 USB2.0 失效: 需要用到 <a href="https://github.com/Sniki/OS-X-USB-Inject-All/releases">USBInjectAll</a> 和 <a href="https://github.com/corpnewt/USBMap">USBMap</a>.</li><li>具体的 USB map 参见 <a href="https://dortania.github.io/OpenCore-Post-Install/usb/intel-mapping/intel.html">教程</a></li><li>另外司波图也有一个自己定制的 <a href="https://www.bilibili.com/video/BV1Aa4y1j7CL">教程</a></li></ul></li><li>关于 NTFS 挂载<ul><li>同一张硬盘上的分区会被自动只读形式挂载, 看着有点难受</li><li>尝试配置了 fstab 但好像不太行; 参见 <a href="https://gist.github.com/CharlesThierry/7305166b208d6f6cdd37962761d5ac23">here</a>; 另外参见 <a href="https://juejin.cn/post/6897075697849171975">解决Linux无法读写U盘中的NTFS问题</a></li><li>看到有用 ntfs-3g <a href="https://www.bilibili.com/read/cv13273551">实现</a> 的, 有需求尝试吧</li></ul></li><li>关于更新<ul><li>看到小红点没忍住, 尝试从 Monterey 10.1 更新到 10.2, 果然失败了; 然后发现 OC 好像回归到了很早的一个版本, 无论怎样修改 plist 都没用, 最后 <strong>重置 NVRAM</strong> 解决了</li><li>No zuo, no die</li></ul></li><li>添加其他系统的引导<ul><li>参见 <a href="https://blog.csdn.net/qlpdong/article/details/118572750">OpenCore添加ubuntu引导，引导三系统（Macos+Windows+Linux）</a> 其实就是在 OC 的配置项中添加了一列</li></ul></li></ul><h3 id="回顾-clover-安装">回顾 Clover 安装</h3><p>总结一下之前写的 Clover 安装过程, 以资比较.</p><ul><li>安装主要参考了 Sleele 大佬的 <a href="https://sleele.com/2019/07/14/gettingstartedtutorial/">黑苹果入门教程</a></li><li>资源来自 <a href="https://blog.daliansky.net/">黑果小兵的部落格</a></li><li>选购指南 <a href="https://www.tonymacx86.com/">TonyMacX86</a></li></ul><p>安装流程</p><ul><li>下载, 制作安装 U盘<ul><li>这里用的是 App Store 下载的方式, <code>sudo /Applications/Install\ macOS\ Mojave.app/Contents/Resources/createinstallmedia --volume /Volumes/MyVolume</code> 即可</li><li>找到的对应机型的 EFI 文件复制到启动盘的 EFI 分区下, 参见 <a href="https://github.com/daliansky/Hackintosh">Hackintosh 黑苹果长期维护机型 EFI 及安装教程整理</a></li></ul></li><li>U盘 启动, 安装系统</li><li>配置 EFI<ul><li>第一次很顺利, 直接用了他人配置好的 EFI 就上车了, 因此没有太多研究</li><li>用 <code>sudo diskutil mount disk0s1</code> 挂载替换 EFI 即可; 或者用 Clover Configurator 挂载</li></ul></li></ul><p>定制 USB</p><ul><li>用了 sleele 的 <a href="https://sleele.com/2019/06/07/%E4%BD%BF%E7%94%A8hackintool%E5%AE%9A%E5%88%B6%E9%BB%91%E8%8B%B9%E6%9E%9Cusb%E9%A9%B1%E5%8A%A8/">使用Hackintool定制黑苹果USB驱动</a></li><li>关于 WiFi 等问题, 由于用了 PCIE 网卡, 需要禁用主板 WiFi</li></ul><h3 id="macos-软件栈">macOS 软件栈</h3><ul><li>Hackintosh<ul><li>Hackintool</li><li>OpenCore Configurator: OC配置; EFI挂载</li></ul></li><li>软件管理<ul><li><a href="https://brew.sh/">brew</a>:<ul><li><a href="https://formulae.brew.sh/cask/visual-studio-code">VS Code</a>: 官方下载安装包好慢来着</li><li>uTools: 启动管理</li><li>其他列表见下</li></ul></li></ul></li><li>工具<ul><li>阿里云盘 aDriver: 文件下载</li><li><a href="https://www.notion.so/">Notion</a>: 跨平台笔记同步</li><li>效率<ul><li>PopClip</li><li>Magnet 窗口管理</li><li>MacCleaner 系统清理/管理</li></ul></li></ul></li><li>常用<ul><li>PDF Expert</li><li>MWeb</li><li>Transmit SFTP工具, 同步配置</li><li>MagNet 窗口管理</li></ul></li><li>Code<ul><li>git: <code>ssh-keygen</code></li><li>其他的直接看下面代码吧</li><li>EasyConnect 学校 VPN</li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># brew</span></span><br><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># vim 复制已有的配置文件</span></span><br><span class="line">cp code/00-config/configs/shell/.vimrc ~/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置 zsh</span></span><br><span class="line">brew install --cask iterm2</span><br><span class="line"><span class="comment"># Install Oh My Zsh</span></span><br><span class="line">sh -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>&quot;</span></span><br><span class="line">chsh -s $(<span class="built_in">which</span> zsh) <span class="comment"># 似乎  Monterey 默认就是 zsh?</span></span><br><span class="line"><span class="comment"># ! 因为备份了配置, 直接复制过来</span></span><br><span class="line">cp code/00-config/configs/shell/.zshrc ~/</span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-syntax-highlighting</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$&#123;ZSH_CUSTOM:-~/.oh-my-zsh/custom&#125;</span>/plugins/zsh-autosuggestions</span><br><span class="line">brew install autojump <span class="comment"># j</span></span><br><span class="line"><span class="built_in">source</span> ~/.zshrc</span><br><span class="line"><span class="comment"># 基本软件</span></span><br><span class="line">brew install tree</span><br><span class="line">brew install trash <span class="comment"># 用 trash 替换 rm</span></span><br><span class="line">brew install carlocab/personal/unrar <span class="comment"># x=extract 解压 rar 文件调用</span></span><br><span class="line">brew install bat <span class="comment"># 增强 cat</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># VS Code; Sublime</span></span><br><span class="line">brew install --cask visual-studio-code</span><br><span class="line">brew install --cask sublime-text</span><br><span class="line"></span><br><span class="line"><span class="comment"># conda</span></span><br><span class="line">brew install --cask miniconda</span><br><span class="line">conda init zsh</span><br><span class="line"></span><br><span class="line"><span class="comment"># go</span></span><br><span class="line">brew install go <span class="comment"># VS Code 可以自动识别安装相关调试工具</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Applications</span></span><br><span class="line">brew install --cask neteasemusic <span class="comment"># 网易云音乐</span></span><br><span class="line">brew install --cask iina <span class="comment"># IINA</span></span><br><span class="line">brew install --cask wechat qq <span class="comment"># WeChat QQ</span></span><br><span class="line">brew install --cask keka <span class="comment"># 压缩软件</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tools</span></span><br><span class="line">brew install --cask utools <span class="comment"># uTools</span></span><br><span class="line">brew install --cask eudic <span class="comment"># 欧路词典</span></span><br><span class="line">brew install --cask karabiner-elements <span class="comment"># 改键</span></span><br></pre></td></tr></table></figure><p>记录一下目前安装列表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">(base) ➜  code brew list</span><br><span class="line">==&gt; Formulae</span><br><span class="line">autojump gdbm  mpdecimal python@3.10 sqlite  tree</span><br><span class="line">ca-certificates go  openssl@1.1 readline trash  xz</span><br><span class="line"></span><br><span class="line">==&gt; Casks</span><br><span class="line">eudic   miniconda  qq   visual-studio-code</span><br><span class="line">iina   neteasemusic  sublime-text  wechat</span><br><span class="line">iterm2   popclip</span><br></pre></td></tr></table></figure><h2 id="arch-linux">Arch Linux</h2><h3 id="将系统转移到新的分区">将系统转移到新的分区</h3><p>出于两张硬盘分区比较混乱, 试图重新整理一下, 这里将西数盘上安装的 Arch 系统转移到三星那张的一个分区下, EFI 统一管理.</p><p>在此过程中重新看了一点点 Arch 的教程, 真的极为全面; 接受其一定门槛和投入时间的前提下收获也是很多的. 所以下面附了很多官方的教程</p><ul><li>主教程<ul><li>Arch 迁移到另外的硬盘 <a href="https://wiki.archlinux.org/title/Migrate_installation_to_new_hardware_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">migrate installation</a></li><li>Arch 安装教程 <a href="https://wiki.archlinux.org/title/installation_guide">Install</a></li><li><a href="https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">UEFI</a> 统一可扩展固件界面. 例如其中提到使用 <code>efibootmgr</code> 来操作 UEFI 固件启动管理器设置, 似乎很赞!</li><li>另外参见 <a href="https://juejin.cn/post/6990623175906164772">Arch Linux 系统迁移</a></li></ul></li><li>具体包括<ul><li><a href="https://wiki.archlinux.org/title/Rsync">Rsync</a> 带有权限全盘拷贝</li><li>分区, <a href="https://wiki.archlinux.org/title/Partitioning_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">partition</a></li><li>文件系统 <a href="https://wiki.archlinux.org/title/File_systems_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">file system</a></li><li><a href="https://wiki.archlinux.org/title/fstab">fstab</a></li><li><a href="https://wiki.archlinux.org/title/GRUB_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">GRUB</a></li></ul></li><li>其他的<ul><li>引导过程 <a href="https://wiki.archlinux.org/title/Arch_boot_process_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Arch Boot Process</a></li><li>包管理 <a href="https://wiki.archlinux.org/title/Pacman_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Pacman</a></li><li>编辑器 <a href="https://wiki.archlinux.org/title/Vim_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">Vim</a></li><li>软件列表 <a href="https://wiki.archlinux.org/title/List_of_applications">List of Applications</a></li></ul></li></ul><p>简单记录相关命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 将系统复制到新驱动器</span></span><br><span class="line"><span class="comment"># 分区，构建文件系统</span></span><br><span class="line">sudo fdisk /dev/nvme1n1</span><br><span class="line">lsblk -f <span class="comment"># --fs 输出文件系统信息</span></span><br><span class="line">sudo mkfs.ext4 /dev/nvme1n1p5</span><br><span class="line"><span class="comment"># 用 rsync 将全盘复制到新分区</span></span><br><span class="line">sudo pacman -Syy rsync</span><br><span class="line">rsync -aAXHv --exclude=&#123;<span class="string">&quot;/dev/*&quot;</span>,<span class="string">&quot;/proc/*&quot;</span>,<span class="string">&quot;/sys/*&quot;</span>,<span class="string">&quot;/tmp/*&quot;</span>,<span class="string">&quot;/run/*&quot;</span>,<span class="string">&quot;/mnt/*&quot;</span>,<span class="string">&quot;/media/*&quot;</span>,<span class="string">&quot;/lost+found&quot;</span>&#125; / /mnt</span><br><span class="line">lsblk -f <span class="comment"># 检查一下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 2. 更新fstab</span></span><br><span class="line">sudo mount /dev/nvme1n1p5 /mnt</span><br><span class="line">sudo arch-chroot /mnt</span><br><span class="line"><span class="comment"># 这里进了新系统的环境，生成新的 fstab, 因此需要根据新系统下的挂载情况挂载相应的磁盘</span></span><br><span class="line">mount /dev/nvme1n1p2 /efi <span class="comment"># 这块磁盘上的 EFI 分区</span></span><br><span class="line">sudo pacman -S --needed arch-install-scripts <span class="comment"># 包括 arch-chroot, genfstab 等</span></span><br><span class="line">genfstab -U / &gt;&gt; /etc/fstab <span class="comment"># 如果是直接 mount 的话应该是 genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 3. 重新安装引导加载程序 grub</span></span><br><span class="line"><span class="comment"># 安装，这里的 esp 即EFI系统分区，例如上面 mount /dev/nvme1n1p2 /efi 就是用 /efi</span></span><br><span class="line">grub-install --target=x86_64-efi --efi-directory=[esp] --bootloader-id=GRUB</span><br><span class="line"><span class="comment"># 下面配置 grub，采用 grub-mkconfig 自动生成 (也可以手动写)</span></span><br><span class="line"><span class="comment"># 多系统引导，采用 os-prober </span></span><br><span class="line">sudo pacman -S os-prober </span><br><span class="line"><span class="comment"># 挂载其他系统所在分区; 经测试 Windows 也可以识别</span></span><br><span class="line">sudo mount /dev/nvme1n1p6 /root/sysA</span><br><span class="line">grub-mkconfig -o /boot/grub/grub.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成!</span></span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure><h3 id="软件配置更新">软件配置更新</h3><p>包管理基本语法; 安装软件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pacman</span></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">pacman -Qs gold <span class="comment"># 查询相关软件</span></span><br><span class="line">sudo pacman -Rs goldendict <span class="comment"># 卸载包及用不到的依赖</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># yay</span></span><br><span class="line"><span class="comment"># 注意 yay 不要用 sudo</span></span><br><span class="line">yay -S google-chrome</span><br><span class="line">yay -S eudic        <span class="comment"># 欧陆词典</span></span><br><span class="line">yay -S notion-app   <span class="comment"># Notion</span></span><br></pre></td></tr></table></figure><h3 id="相关命令记录">相关命令记录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分区</span></span><br><span class="line">fdisk -l <span class="comment"># 查看</span></span><br><span class="line">fdisk <span class="comment"># m 帮助; w 写入</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件系统</span></span><br><span class="line"><span class="comment"># 查看现有文件系统</span></span><br><span class="line">lsblk -f</span><br><span class="line">mkfs.ext4 /dev/partition <span class="comment"># 比如 ext4 格式</span></span><br><span class="line">mount /dev/sda1 /mnt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成 fstab, 其实可以自己写，这里用了 arch-install-scripts 包里的 genfstab</span></span><br><span class="line">sudo pacman -S --needed arch-install-scripts <span class="comment"># 包括 arch-chroot, genfstab 等命令</span></span><br><span class="line"><span class="comment"># 生成前将所需的目录都挂载好</span></span><br><span class="line">genfstab -U -p / | less <span class="comment"># 检查一下</span></span><br><span class="line">genfstab -U -p / &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure><p>GRUB</p><ul><li>Arch <a href="https://wiki.archlinux.org/title/GRUB">GRUB</a>; 例如用到了其中的 rescue<ul><li>参见 <a href="https://www.cnblogs.com/peach-blossoms/p/15228957.html">linux 开机如何进入grub 命令行模式，并通过grub命令进入系统</a></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># rescue</span></span><br><span class="line">grub rescue&gt; <span class="built_in">set</span> prefix=(hdX,Y)/boot/grub <span class="comment"># ls 找到系统分区</span></span><br><span class="line">grub rescue&gt; insmod (hdX,Y)/boot/grub/i386-pc/normal.mod <span class="comment"># 可能是 /boot/grub/x86_64-efi/normal.mod</span></span><br><span class="line">rescue:grub&gt; normal</span><br></pre></td></tr></table></figure><h2 id="windows">Windows</h2><p>简单记录一些常用软件</p><ul><li>系统相关<ul><li>鲁大师?</li><li>refus, balenaEtcher</li><li>CPU-Z， GPU-Z</li><li>DiskGenius 磁盘管理</li><li>CrystalDisk</li><li>EasyUEFI 直接配置 BIOS, 类似 <code>efibootmgr</code></li></ul></li><li>效率<ul><li>SpaceSniffer 空间管理</li></ul></li><li>工作<ul><li>Office 系列?</li><li>IDM 下载</li><li>PotPlayer</li><li>Everything</li><li>Wox?</li></ul></li><li>Code<ul><li>Xftp, Xshell</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;回家复归台式机, 重新配置一下. 尝试在 Windows 环境下写代码, 终归是哪儿都觉得不太顺; 而 Arch 美则美矣一些常用软件还是有些不方便; 故, 半年之后终又折腾起了黑苹果, 从 Clover 转到 OC; 在调整硬盘划分的过程中将 Arch 转到了新的分区. </summary>
      
    
    
    
    <category term="Software" scheme="https://lightblues.github.io/categories/Software/"/>
    
    
  </entry>
  
  <entry>
    <title>2021 终</title>
    <link href="https://lightblues.github.io/posts/37970cd1/"/>
    <id>https://lightblues.github.io/posts/37970cd1/</id>
    <published>2022-01-01T06:24:34.000Z</published>
    <updated>2022-10-08T15:36:21.732Z</updated>
    
    <content type="html"><![CDATA[<p>尝试了种种方式开头, 总找不到合适的总结, 删改修剪之下不免又沦为流水; 索性放弃自我逼供, 随波逐流去也.</p><p>从某次的供词开始吧:</p><ul><li>心如荒原 对万物保持着门外汉式的好奇与好感 而多不得入其门</li><li>不会日语不看漫画的伪动漫迷 二次元考古爱好者 EVA启蒙 万事屋入教 今敏渡边信徒</li><li>阿城读者 性杂食 也读江南 也读王小波 也读点科幻</li><li>卫兰听众 五音不全乐器白痴 Bob Dylan听众 菅野洋子宇多田光听众</li><li>播客迷 欲望大于能力 自暴自弃的拖延症晚期</li><li>社恐患者 深度语言障碍 阿尔兹海默症预备役</li><li>日常失眠 爱好发呆 喜落日 看悲剧 但实际是个无可救药的乐天派</li><li>出身渔村 数次溺水但屡教不改的旱鸭子</li><li>科技圈外围 半个果粉 却也是粘连科技观众 半个米粉</li><li>无知无畏无神论者 跑题跑掉跑者</li></ul><h2 id="门外汉式的好奇">门外汉式的好奇</h2><p>好听点叫好奇心, 难听点叫没定性?</p><p>2021年, 仍然有着各种的尝试和放弃, 欲望与冷感. 辗转, 却总有外围人士不得其门而入的挫败感.</p><p>不仅是过去的这一年, 整个本科四年, 再回溯到更久远的时间, 这种「门外汉」的感觉始终存在着.</p><p>原因, 一在泛滥的好奇心, 沉迷表面光彩; 二在常识和专业素养的缺失, 缺乏理解的基础.</p><p>「专业素养」, 居然用了如此严肃且冠冕堂皇的词; 然而大意确是如此, 对于全局而非碎片的理解, 对于历史脉络的理清, 体系的共识和讨论的起点.</p><p>那么对于新年的第一条期许, 便是寻那条道, 入其门. 何以寻路? 常识的汲取和世界观的构建.</p><p>2021, 值得庆幸的一点改变, 或许是更容易放弃了. 不再硬着头皮看半知不解的文字, 看到一半的漫丢下便也丢下, 流行的电影也学着去认真欣赏. 少些固执尝试妥协, 也多些坚持.</p><h2 id="关键词-信息素养">关键词: 信息素养</h2><p>或言之, 互联网生存能力. 信息茧房, 回音壁, 太多的词汇和理论, 总而言之就是生存在这样的时代下如何与外界进行信息交互, 包括有意识的筛选, 过滤, 处理, 反馈.</p><p>这不是网络时代所特有的问题, 泛而言之上面讨论的内容也属于此; 然而, 技术的出现无疑让这一问题更为尖锐, 尤其是最为直接的表现, 如屏幕使用时间、内容获取渠道、观点言说方式等.</p><p>所以对待信息的方式成为了当下时代更 Meta 的话题, 在写的「赛博漫谈」系列算是一种尝试, 另外今年的阅读和播客收听也更多偏向这一话题.</p><p>张驰原 在 <a href="https://freemind.pluskid.org/misc/2021-summary/">今年的年终总结</a> 中统计了使用手机的时间和次数, 平均每天一小时的手机屏幕时间, 30次 pickup, 可做参考.</p><p>2021, 社交媒体见证了太多明星大V的起起伏伏, 毫无感冒的自己也被迫接受着讯息, 时常怀疑着种种事件的无聊和荒谬.</p><p>互联网时代自然是诸神退位, 我们早不是「慕强」一代; 然而公众偶像不存在的同时, 又有太多的芸芸众生被以各种理由推上神坛又被剥下遮羞布; 权力成为无聊的游戏, 平台独裁的同时放任着多数暴政, 注意力成为了不知是被大众还是资本玩弄的对象 (方可成老师在《2021年全球传媒业热点报告》中多次提到的话题).</p><p>所以, 期许之二, 继续培养自己的媒介素养, 做减法, 做加法.</p><h2 id="日常">日常</h2><p>不觉疫情已两年, 「不正常」真的成为常态, 时光在封锁中呼啸而过.</p><p>就像李如一经常提到的一句话, 冷眼观网络, 时常不是惊叹技术的进步又多块, 而是感叹世界的变化太慢. 2021, 日常生活似乎没有太多的变数, 每天仍「平安」打着卡, 尤其大四以来工作日与周末的界限模糊了, 四年老咸鱼换了个身份在这文秘职业技术学院又续费三年, 懒散捧着肚皮晒冬日暖阳.</p><p>或许是疫情, 或许是专业压力, 或许更多源于自己, 迷失在这古井无波的日常中.</p><p>当然, 实际上这一年来也发生了太多惊喜之事; 多藏在了阿尔兹海默症预备役的记忆黑洞中, 时不时散发出点霍金辐射, 撞击到生活日常我, 欣喜满怀.</p><h2 id="来点真正的总结吧">来点真正的总结吧</h2><p>写给自己的文字不知为何总感觉有点丧气, 但正如自己所言「实际是个无可救药的乐天派」; 大概思考不够, 故作惆怅罢.</p><p>那就转向他者, 从年度列表中找点能量:</p><ul><li>年度书籍, 就给《神经漫游者》, 一敬其科幻史上的地位, 二是由于今年元宇宙等概念的火热, 三在威廉吉布森笔下世界的自由狂想.</li><li>年度动漫就给《漂流少年》, 说实话还没看完, 看到一半画风、叙事、音乐都很对胃口 (看到音乐顾问是渡边).</li><li>年度监督, 汤浅政明, 才追的《四叠半神话大系》和《春宵苦短，少女前进吧！》, 让人又爱又恨的强烈个人风格.</li><li>年度应用不得不给 VS Code, 也是今年才算慢慢得把各种代码和文字写作搬到 Code 上来, 远离各种臃肿的软件; 开源性, 自由度, 高性能.</li><li>手机上的年度 App 则是 小宇宙, 从固执许久的 Pocket Cast 搬过来, 确实有着一定的本土优势; 另外惊喜的是 微信阅读, 相较于前两个字的软件给人的感觉要好很多; 问题在自己今年也没看什么书, 希望能预定明年的年度App?</li><li>年度网站就留给 GitHub, 事实上也是用得较多, 获取信息完整性较高的平台; 一直说「漫游」网络, 这种感觉比较显著的是Wiki, 是个人博客, GitHub 居然也能给到这种愉快浏览体验.</li><li>歌手就是 宇多田光 了, 《终》前后循环好多天的 One Last Kiss 和 Beautiful World.</li></ul><p>2021, 运动方面有了更多的尝试, 算是学会了简单的扑腾, 羽毛球方面有所加强; 科研方面算是正式入门, 在各种方法上有些尝试, 但态度和状态上有待改进; 睡眠规律了些, 尽量在 12点之前闭眼, 但绝对时间还是比较少, 健康管理可以规划起来.</p><p>新的一年, 新的身份, 还是那句 ——</p><blockquote><p>且将新火试新茶.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;尝试了种种方式开头, 总找不到合适的总结, 删改修剪之下不免又沦为流水; 索性放弃自我逼供, 随波逐流去也.&lt;/p&gt;
&lt;p&gt;从某次的供词开始吧:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;心如荒原 对万物保持着门外汉式的好奇与好感 而多不得入其门&lt;/li&gt;
&lt;li&gt;不会日语不看漫画的伪动漫</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
  </entry>
  
  <entry>
    <title>十光 | 故都</title>
    <link href="https://lightblues.github.io/posts/db8a6271/"/>
    <id>https://lightblues.github.io/posts/db8a6271/</id>
    <published>2021-12-26T07:07:10.000Z</published>
    <updated>2022-10-08T15:36:21.776Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>蔷薇皇帝建立胤朝的时候，草原上可有几百个部落，大家你抢我的牛羊，我抢你的女人。每到春天没有了粮食，羊群饿得最瘦的时候，就要开战，几百几千个牧民赶着马上阵，到处都死人。——《九州·缥缈录Ⅰ：蛮荒》</p><p>易水流，汴水流，更年易过又休休。两家都好住，前后总成留。——《金史·五行志》 from 周思成《隳三都》</p></blockquote><p>草原, 裸露着直陈, 沉默着摧残, 是故事的起点和终点.</p><p>小武是滚在禾草上生长的, 手心积着泥土的腥味, 头发蓬松如蛛网, 走姿介于站立与骑乘之间, 目光涣散, 神游. 草原的天空低沉又遥远, 夜布着点点的星, 偶尔传来幽幽嚎叫, 不辨是否为草原狼的眼; 昼间则是滴水的蓝, 朵朵云稀疏挂着, 闲散, 随着风流; 傍晚, 红霞翻腾如奔马, 一次次颜色的冲锋, 终为苍穹漆上一层黑.</p><h2 id="小灰">小灰</h2><p>小武有一匹只有他能驾的马, 名灰, 一色, 健壮, 所向披靡. 倘回到征伐年代, 想必是将军座下骑. 小武时常想, 那时候的自己, 是将军、士卒、王侯, 抑或流民、早夭的孩童? 都是, 都不是, 小武灰着眼, 不知今夕何夕.</p><p>武是灰命定的主人, 没有道理, 如人类对于糖分的天然渴求. 在马上厮磨的人大抵不会太沉, 负上一人的重量不痛不痒, 马与人的关系是亘古流传的规律. 何谓亘古? 历史总有一个尽头, 想象中的无边无际远, 往往不过几代轮回. 小灰似记得过去每一代的主人, 但记得又如何, 马的生命一眼望到了头, 沉浸在日常的欢愉中.</p><p>草民自然有双火眼, 小武眼球灰混, 但极目望得比谁都远. 他时常望着天地交接, 恍惚间日夜流转, 耳边响起隆隆战马, 草木新生而荣枯; 原来, 小武的眼中从藏着太多历史, 自古的剧目在这双眸中轮回.</p><p>小灰重复着千古来的职责, 而每天都是新的一生. 他避开过去每一个蹄迹, 每一脚都踏上新的土地. 奔跑, 饮食, 草原上的人与生物早已达成默契; 小灰记得武每一晚的住宿, 小武也放任灰在基本路线之外的踱步, 沉默是草原的底色. 记得又如何? 忘却是最好的快乐良方. 每一口是新鲜的甘草, 每一朵云都独一无二.</p><p>他独行, 但从不寂寞, 草原上有无尽生灵, 每一片土地都在呼吸. 他信步, 偶尔遇见同类, 或相逢一笑, 或拥吻交媾, 或怒目而视. 恋人在遥遥草原的另一侧, 偶尔随着风传来几声低沉呼唤, 一切都在风的媒介中.</p><p>在草原, 人是马的附庸.</p><h2 id="故城">故城</h2><p>除了禾草, 石头是草原唯一的幸存者. 无边际的绿之间, 故都遗骸伫着点点灰色. 城没有门, 房没有顶, 只剩这一颗颗顽石倔强着, 抗衡着.</p><p>故都是草原的遗迹, 乱石间, 草是最后的居民. 还有风在迷宫中游荡, 无止尽的风, 仔细听, 风中藏着千百年前的人声. 摸过荒草下的每一块石头, 小武有时免不了神游故国, 新建都时的旺盛与残酷, 开城门时的涌动与欲望, 遭围城时的绝望与顽强. 抚着风吹砂石的痕, 小武了然每一块石的脾性. 喝酒, 烧烤, 这方城池被刻上这一届主人的气味.</p><p>来客有言, 此城是某朝某部故都, 烽火连天, 某年某月限于围城, 烧杀屠戮几许.</p><p>来客有言, 此地战马血统悠久, 披坚执锐, 铁蹄之下所向披靡.</p><p>来客有言, 旱涝经年, 饿莩遍野, 天地不仁, 此草是鲜血的浸染.</p><p>小武只是听着, 也不辩驳这些妄言, 指点江山的意气消磨后, 来客自然尽兴而去. 历史哪有这么简单的规律, 小武载着千万人的记忆, 每一个陈述都彼此矛盾. 所谓历史, 任人乔装, 巧合成为定律, 凡人成为英雄.</p><p>草原荒芜, 除了和小灰说话, 对羊群倾诉, 故城自然也是小武的沟通对象. 多时候, 小武只是听, 听着亿万幽灵的声音从石缝中飘出来, 重重叠叠不辨彼此. 大多听不真切, 听久了, 却多少能猜个大半 —— 灵魄说自说, 小武听自听, 至于猜对猜错多少, 估计也只有风知道.</p><p>小武的灰眸载着万千记忆, 重压下肉体也变得迟缓. 马背上睡, 马背上饮酒, 有时涣散着远天, 突然便扑通栽到草土中. 小武是个好骑手, 酣醉之下也能勾卧马腹, 但这种事情, 谁也说不好. 栽倒了, 灰也不管, 静静站着, 看天, 马眼如小武的灰眸, 似代替他看着.</p><p>小武也说, 对着草原上的每一块石头. 替相隔天涯的情人传递情愫, 替世世代代的仇家宣战鸣鼓. 死去的灵魂还能沟通, 但时间似静止了, 只剩下残存的欲望喧嚣. 说的太多, 忘的太多, 小武自己的魂魄蜷缩在角落, 注视着魂灵们的剧目; 大概是有意为之, 空出自己的躯壳, 让亿万灵魂在身体里轮转.</p><p>要说什么是永恒, 欲望大抵是少数其一.</p><h2 id="牧羊">牧羊</h2><p>小武谁人? 草原的子民天职自然是牧羊. 小武也有自己的羊群, 少时几十, 多时数千. 春时多些, 秋冬也不知都跑到哪去了. 但不打紧, 水木丰盛的世界, 它们自然会回来.</p><p>羊群是地上的朵朵白云, 小武拿彩笔为每朵云画上符号. 它们是小武的孩童, 欢聚又四散, 跳跃在草原的角角落落, 奔跑在小武没有去到的碑界. 小武有时放任着羊群的奔散, 时而又为自己的放浪而沮丧. 欲望淹没了城市的高楼, 在这漫无边际的草原更是肆无忌惮地弥散开来; 羊群多时没有节制, 竭泽, 蝗虫, 小武也厌恶自己的毫无规划; 好奇心呈圆形拓展, 又如同泡沫, 触之即碎, 又从原点开始.</p><p>羊儿是秋衣, 也是棉被, 是符节, 也是堡垒.</p><p>当然, 我们也知道, 小武的自我小得可怜, 所以沮丧也是一时的; 更多时候是没心没肺, 高兴也好无聊也罢, 任欲望拓展开去, 放任自流</p><h2 id="火车">火车</h2><p>小武何人? 你若问一个真正在草原生活的人, 大概不会有答案. 他是迷失在草原的游者, 牵着细瘦稗马, 不知哪一天消散在草原的风中; 他妄想着草原的主人, 妄想着史诗的征战与落幕. 要说他有什么特别, 他同历史画卷里千千万万的游着并无二样, 飘荡在茫茫草原, 对着瘦马与牛羊细语; 忽而咆哮, 忽而诧于惊雷; 最后的最后, 只不过添了禾草下的一副骸骨, 夜穹上的一颗星.</p><p>火车隆隆而来, 两根坚硬钢轨笔直刺过低矮的草原, 蒸腾起朵朵灰云. 镜头来了又去, 烟酒燃烧沉积, 夜升月挂, 牛羊披着星斗散在无声的风中.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;蔷薇皇帝建立胤朝的时候，草原上可有几百个部落，大家你抢我的牛羊，我抢你的女人。每到春天没有了粮食，羊群饿得最瘦的时候，就要开战，几百几千个牧民赶着马上阵，到处都死人。——《九州·缥缈录Ⅰ：蛮荒》&lt;/p&gt;
&lt;p&gt;易水流，汴水流，更年易过又休休。两家都</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="十光" scheme="https://lightblues.github.io/tags/%E5%8D%81%E5%85%89/"/>
    
  </entry>
  
  <entry>
    <title>十光 | 新隅</title>
    <link href="https://lightblues.github.io/posts/e8dd01b4/"/>
    <id>https://lightblues.github.io/posts/e8dd01b4/</id>
    <published>2021-12-18T08:28:12.000Z</published>
    <updated>2022-10-08T15:36:21.776Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>总之，重点在于不要错失良机，良机是只好机会，你懂吗？良机这种东西很难掌握，你必须要掌握那个良机不可。否则的话就再也没有机会。 —— 《四叠半神话大系》</p></blockquote><h2 id="新隅">新隅</h2><p>小镇直突突挂在柏油路上, 东西约二里, 南北数百步; 光溜溜的黑体招牌吊在统一的蓝色水平木栏, 直陈店内的功用; 小镇无名, 为着故事的进行, 不妨称之「新隅」.</p><p>小津生、长于此, 走路, 从东到西, 从西到东. 平淡如水的生活, 用脚步度量地球母亲的脸颊, 家在一头, 学校在另一头, 踱步一趟大概一千五百多步, 数不了几分钟, 便是尽头, 没有标志, 人气断然止住了.</p><p>最多的大概是食品店, 理发店, 烟酒, 五金、装潢、水电, 对了, 还有小小的诊所和公安局. 菜市场、超市、银行、邮递局, 半现代的文明还是蔓延到了小镇. 在远处, 小学, 寥寥的乡镇企业, 尽头. 所以虽小, 却也是五脏俱全, 生老病死, 婚丧酒宴, 来去也梦一场.</p><p>对了, 不能少的有麻将馆, 无标牌, 窄窄门栏幽幽通向二层, 烟雾缭绕. 麻将、棋牌, 小津怀疑这是传统社会仅有的智力活动. 或紧张, 或松弛, 牌场是少数有着明晰规则的地方. 就像这些幽幽的雀馆, 是刻着的不成文法典, 规则在小镇都是隐晦、暧昧的. 镇民却有神性, 昏昏愚昧却洞悉着所有法条. 小津身体里缺了这份法典, 迷眼望着人来车往, 如同幼时踟蹰雀馆外, 怀疑内里居住着妖怪, 闭上眼, 还有阴阴的风.</p><p>新隅太小, 甚至没有声色犬马, 绯色新闻. 或许有, 在小津的视域外; 通常是男人, 一条半透明的猩红的线, 遥遥牵到一个女人手里; 但过了边界, 隐了踪迹, 断了, 小镇有其疆域.</p><h2 id="小津">小津</h2><p>小津是个好孩子, 听话, 父母言即为戒律, 曾经. 饭前要洗手, 放学后回家, 用完东西物归原地.</p><p>听话, 但止不住脑子乱转. 好孩子口中有太多想问不敢问的. 睡前和起床刷牙有何区别, 为什么金桂落了又开, 抄青菜放半勺油还是更多 —— 当然, 问题都没有答案. 不懂, 生记着世界运作的规律, 严格; 但也愈发患得患失, 煮饭应该多少粒米, 祭祖拜叩几次, 一年见一次的长辈该叫什么, 颤抖着手, 迟疑着嘴, 伏地不起.</p><p>只好沉默, 沉默久了, 倒也真成了哑巴.</p><p>小津成绩好, 父母长辈向外总少不了说两句. 学校用着另一种语言, 这个世界小津如鱼得水, 浅水, 浮泛. 哑巴有坏, 从小自不是受人偏爱的; 也好, 安静些 —— 世界依然如迷雾, 但言语隔绝着, 目睹外边的刀光剑影, 倒也安全.</p><p>父母也像小镇来客, 邻里熟稔, 但总不是一样的. 像落寞的贵族, 像流亡的遗族, 小镇如楚门的世界. 小津不懂新隅的脉搏, 人来客往, 加密了的对话, 随机的脸庞.</p><p>奇怪, 幼时, 尚未上学, 总也跑不到新隅尽头; 如今不过千步, 却也记不得尽头之外景致.</p><h2 id="暗涌">暗涌</h2><p>倒也非一尘不变, 长久间, 小镇迎来送往不少人, 新陈代谢. 招牌旧了, 新了.</p><p>平静如水下涌着暗潮. 故事通常在冬季, 是南方沁骨的寒, 夜色透过皮肉冲撞. 某某进了局子, 吸毒, 嫖娼, 传言总在冬天发酵. 主人公面目模糊, 是镇民许久的故人, 却总有长久一段的不往来, 相熟, 陌生. 对一个被代谢掉的人的故事, 划清界限, 添油加醋, 传到小津耳中, 早光怪陆离.</p><p>公安局是小镇的外来者, 飞地, 伫着结结实实的钢筋水泥, 国徽, 旗帜, 只存在于这些乡野故事中. 小津只路过, 半闭眼, 似看到远古的巨人在牢笼安睡, 吞云吐雾, 守卫瘦小如纸片, 铭刻着符文在风中飘.</p><p>小镇在睡梦中苏醒, 张开饕餮大口啸两声, 音波在可听范围外. 镇民是巨兽毛发间的寄居者 (大概也分原生、外来, 小津自属后者), 巨兽醒来是所有人入眠的时刻, 吃着孩子的梦, 闭上眼, 在天亮起前收缩成原来模样.</p><p>小津不多懂的, 是镇上的傻子. 游荡, 守卫着镇子安宁, 笑, 无意义的笑声, 钓鱼, 那他少有手脚消停的时刻. 小津听傻子讲的故事, 和其他版本都不一样, 简单, 灰白, 可靠, 低低吟唱着. 傻子垂钓着总无动静的钩, 冷笑着万事万物来去, 倒像个哲人.</p><p>镇民一天天老去, 死去, 傻子却总没变, 小津怀疑自己也没长大.</p><h2 id="扑通">扑通</h2><p>记忆中, 小津总落水, 幽幽明明, 水贴着耳廓流动, 声直连到心脏, 扑通, 咕咚. 下沉无比漫长, 水浑浊、暧昧, 泥土的气味, 似有游鱼撞上脚, 黑了.</p><p>记忆总是片段, 被巨兽吃剩的残羹, 轮播着. 半闭眼, 小津能看到远古战场, 厮杀着, 吟唱着, 在小镇寂寥的生活下; 自然, 镇民熟视无睹, 只有小津能看到月球背面. 有个黑影知道小津, 眼神直直盯着他, 穿越远古, 奔涌过来, 跑, 小津只能跑, 嘶哑着发不出声音, 无声叫喊, 很快就没气了; 摔了一觉, 头破血流, 睁开眼, 黑影又消失, 只留一阵肃杀, 仅心脏的跳动留下些许证明.</p><p>小津想, 长大些自然能懂小镇的事, 然而怎么也长不大. 密码毫无音讯, 体内没有神性复苏的可能性. 只在一次次的扑通入水, 在溺亡的恐惧、清净中, 重复着时光片段.</p><p>小镇少有新鲜事, 反刍着陈年旧事, 真相一代代传播, 一代代异化.</p><p>小镇是老年人的小镇, 缓慢、沉默, 相熟到知根知底的无话可说.</p><p>小镇也是普通孩子的小镇, 但不属青年, 永不是小津的小镇.</p><p>小津现在还徘徊在新隅的路上, 问着无人解答的问, 吟着无人聆听的诗, 疑心沉睡小镇的兽, 不辨小镇居民的脸. 如果你来到新隅, 记得听他逃亡的故事, 夜色下万物的变形. 他当然会老, 生理上. 问他, 他大概会告诉你, 世界在不停回退, 早晚蜷缩进子宫, 温暖.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;总之，重点在于不要错失良机，良机是只好机会，你懂吗？良机这种东西很难掌握，你必须要掌握那个良机不可。否则的话就再也没有机会。 —— 《四叠半神话大系》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;新隅&quot;&gt;新隅&lt;/h2&gt;
&lt;p&gt;小镇直突突挂在</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="十光" scheme="https://lightblues.github.io/tags/%E5%8D%81%E5%85%89/"/>
    
  </entry>
  
  <entry>
    <title>赛博漫谈 | 媒介视角下的元宇宙冷思考</title>
    <link href="https://lightblues.github.io/posts/70447ef0/"/>
    <id>https://lightblues.github.io/posts/70447ef0/</id>
    <published>2021-12-15T04:00:36.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<p>「元宇宙」概念早已烂熟于大街小巷, 然而关于它究竟是什么, 却少有人真正说得清; 作为一个八字还没一撇的未来幻想, 可以说一千个人里就有一千种的 Metaverse. 那么为何要再去谈它? 首先, 自然是因其火热, 因其模糊性. 然而, 激发我兴趣的更在于公众讨论这一现象本身.</p><p>正如一档播客中所言, 细想互联网时代 (或者更准确地说, 移动互联网时代) 以来, 我们很少再有全民对于未来世界进行的公众讨论了. 反思现在的社会生活, 我们几乎不得不承认, 当前世界的生活样态是完全围绕互联网展开的. 在互联网作为甚至比水电更为重要的基础设施的当下, 我们似乎无法想象一个没有「网」的世界; 而伴随着对于不久远过去的记忆的丧失, 我们似乎也丧失对于未来世界的想象, 历史终结于互联网.</p><p>从这一点来看, 「元宇宙」这一概念破圈成为街头巷尾热议的话题, 激发了普罗大众对于未来的广泛讨论和想象, 这一文化现象本身就值得讨论.</p><p>回望互联网刚刚兴起的那段时间, 那时候瀛海威时空广告词中用的还是「信息高速公路」, 那时候的人们形容访问互联网的行为是「网上冲浪」, 从这些埋进历史的故纸堆的词汇当中, 我们还是能够瞥见那时的人们对于方兴的互联网有着多少的想象. 关于 Meatverse, 不论说是未来科技前夜, 还是说资本炒作下的泡沫, 至少从对其的广泛讨论这一现象来看, 我觉得倒和那个时候有某种类似之处.</p><p>因此, 讨论这一话题是成立的. 那么, 如何谈起? 未来尚未到来, 那么只好泛泛而谈; 结合自身兴趣, 以下就从元宇宙的概念/定义出发, 结合麦克卢汉的游戏延伸理论, 来谈谈元宇宙作为一种媒介对于个体和社会的意义和影响, 以及我们当如何看待和理解元宇宙.</p><h2 id="元宇宙何谓">元宇宙何谓</h2><p>如前所述, 元宇宙的一切还处于混沌, 由于技术和概念上的模糊性, 由于风口浪尖众说纷纭; 即然对于它的精准描述几乎不可能, 以下就简要从基础技术、个体经验、概念发展史三个视角来看它的不同面向.</p><blockquote><p>The metaverse is a hypothesized iteration of the Internet, supporting persistent online 3-D virtual environments through conventional personal computing, as well as virtual and augmented reality headsets.</p><p>一个持久化和去中心化的在线三维虚拟环境, 可以通过虚拟现实眼镜、增强现实眼镜、手机、个人电脑和电子游戏机等进入人造的虚拟世界. -- wiki</p></blockquote><p>以上 wiki 的定义出于技术视角. 例如, 这里的一个重点是 3-D virtual environments, 所以从交互形式上就有别于当今的互联网. 定义中还有「持久化」「去中心化」等关键词, 这些就提出了大规模实时在线、分布式计算推流、去中心化网络等技术层面的要求. 当然, 这里提到的仅仅是一小部分, 美国一个很早开始就关注元宇宙的风险投资人 Matthew Ball 在他的网站上给出了更为全面的 <a href="https://www.matthewball.vc/the-metaverse-primer">描述</a>, 有兴趣可以去看看.</p><p>除了技术层面, 从个体经验出发来看元宇宙无疑是更为直观的. 还是回到 1992年, 来看看尼尔·斯蒂芬森在小说《雪崩》中对于 Metaverse 最初的构想:</p><blockquote><p>只要带上耳机和目镜, 找到一个终端, 就可以通过连接进入由计算机模拟的另一个三维现实. 每个人, 都可以在这个与真实世界平行的虚拟空间中拥有自己的分身.</p><p>这条大街与真实世界唯一的差别就是, 它并不真正存在. 它只是一份电脑绘图协议, 写在一张纸上, 放在某个地方. 大街, 连同这些东西, 没有一样被真正赋予物质形态. 更确切地说, 它们不过是一些软件, 通过遍及全球的光纤网络供大众使用. 当阿弘进入超元域, 纵览大街, 当他看着楼宇和电子标志牌延伸到黑暗之中, 消失在星球弯曲的地平线之外, 他实际上正盯着一幕幕电脑图形表象, 即一个个用户界面, 出自各大公司设计的无数各不相同的软件.</p></blockquote><p>耳机和目镜是交互形式, 这一点和现今的 RV设备或游戏舱有类似之处; avatar 的概念有社交互动属性, 其实也和 MMO 游戏类似. 比较有特点的, 或许就是地图的玩家/用户自建属性, 并且虚拟世界是构建在去中心化的协议之上的, 而非集权于某家游戏公司. 综合来看, 这里的元宇宙想象有点类似 VR技术、MMO游戏设定、去中心化协议等的融合, 只不过在交互方式、拟真水平、自由程度上更高罢了. 直观来看, 其初级形态可以参考现在的一些电子或 VR游戏, 终极形态可以想象《黑客帝国》《攻壳机动队》等.</p><p>当然, 稍微看点科幻作品、动漫, 乃至网络小说, 对于这样的描述就不会感到新奇. 元宇宙概念的突然兴起, 自然是和资本炒作以及互联网巨头的概念宣传有关. 因此, 下面就概览这一概念的发展/泡沫史 (from 百科):</p><ul><li>2021年初, Soul App 在行业内首次提出构建“社交元宇宙”；</li><li>3月, 被称为元宇宙第一股的罗布乐思（Roblox）正式在纽约证券交易所上市；</li><li>5月, 微软首席执行官萨蒂亚·纳德拉表示公司正在努力打造一个“企业元宇宙”；</li><li>8月, 英伟达宣布推出全球首个为元宇宙建立提供基础的模拟和协作平台 Omniverse；</li><li>8月, 字节跳动斥巨资收购VR创业公司Pico；</li><li>10月, 美国社交媒体巨头 Facebook 宣布更名为 Meta；</li><li>11月, 虚拟世界平台 Decentraland 公司发布消息, 巴巴多斯将在元宇宙设立全球首个大使馆, 暂定2022年1月启用. (巴巴多斯是加勒比海上的一个岛国)</li></ul><p>社交、游戏、企业、技术平台, 无外乎这些. 就不去翻更古早的旧账了, 这里破圈的重要节点, 大概 Facebook 改名事件 —— 作为一家将近 30亿月活的社交媒体公司, 其任何动向自然会引发热议, 更不用提改头换面了 (脸都不要了). (当然, 机缘巧合之下, 更早进入我视野的是 Nvidia 的 Omniverse; 作为科技圈外围人士, 技术相关的新闻自然是更戳 xp.)</p><p>尽管无法切实描绘元宇宙的一个图景, 从相关技术、相关公司的宣传运营, 乃至小说电影作品中的想象中, 我们还是能够瞥见一枝半叶. 而以上的几个视角, 或多或少都和游戏有一定的关联; 于此同时, 其核心的 3D交互数字社会又有着强烈的媒介特性. 因此, 以下就围绕麦克卢汉的游戏媒介理论, 先对该理论进行简单介绍, 再从媒介视角来对元宇宙进行一些探讨.</p><h2 id="游戏作为媒介-游戏-人的延伸">游戏作为媒介 | 游戏 —— 人的延伸</h2><p>这里简要介绍麦克卢汉《理解媒介》一书中的游戏媒介理论, 并补充我的一些看法. 在书中, 他认为游戏是「人的延伸」, 这和他的核心论述「媒介是人的延伸」相一致. 在麦氏的概念中, 媒介包括了丰富的内涵, 不仅是传播信息的物理介质, 还包括信息乃至人的行为本身. 游戏作为很多人共同参与的行为, 自然就可以理解为一种媒介; 由此出发, 就可以自然地将他的媒介延伸理论应用到游戏行为上.</p><p>简言之, 游戏作为「人的延伸」, 在个人层面上包括了三层意义: 首先, 媒介是人的感官的延伸, 帮助人们扩大信息传播活动; 而随着感官的延伸, 人的思想和情感得以延伸; 最后, 感官和思想情感的延伸进一步改变了人的思维、情感和生活方式, 改变了媒介环境和客观环境在人们心目中的比例.</p><h3 id="游戏是感官的延伸">游戏是感官的延伸</h3><p>任何媒介都不外乎是人的感觉和感官的扩展或延伸：文字和印刷媒介是人的视觉能力的延伸, 广播是人的听觉能力的延伸, 电视则是人的视觉、听觉能力的综合延伸. 通过这样的一些媒介, 人能够超脱超过物理距离的限制进行信息交换, 构建连接.</p><p>所谓感官延伸, 我认为不仅是单纯物理上的知觉延伸, 更是整体性社会的虚拟化构建. 正如 Roblox 的 CEO Dave Baszucki 所说, 「元宇宙至少包括以下要素：身份、朋友、沉浸感、低延迟、多元化、随地、经济系统和文明」; 可以看到, 这里元宇宙定义首先蕴含了对于现实世界的模拟, 人们在其中延续了现实世界中的社交关系、身份认证, 乃至构成经济和文化. 也就是说, 元宇宙世界是对于现实生活的延续, 个体进入这个数字世界的同时, 与这一世界的其他人构成了连接和信息交换的能力/权力.</p><p>现在的 VR 技术可以在感官上可以带来很高的拟真性, 然而它并没有满足我们对于「元宇宙」的想象, 我认为一个原因就在于, 现在的 VR游戏无法构成上述意义的数字世界, 在提供感官刺激的同时没有带来感官上的「延伸」, 也即, 人与人之间的连接.</p><h3 id="游戏是人们的思想情感欲望想象的延伸">游戏是人们的思想、情感、欲望、想象的延伸</h3><p>游戏很重要的一个特点在于「虚拟性」. 荷兰语言学家和历史学家赫伊津哈在《游戏的人 —— 文化的游戏要素研究》中提到, 「游戏并非“平常的”或“真实的”生活, 它步出了“真实的”生活, 进入一个暂时的活动领域, 带有它自己的倾向」. 这本书出版于 1940年代, 显然, 这里说的游戏是现实生活中的传统游戏; 然而这一论断放在如今的电子游戏上, 无疑更为自然和贴切.</p><p>不单游戏如此, 传统媒介中的很多非现实题材作品, 比如说小说、电影, 它们也是提供了一个虚拟的世界, 也致力于给人以虚拟化的感受; 只不过相较于这些传统的媒介, 视听语言的电子游戏在这一方面无疑带有天然的优势, 而这里的元宇宙, 其所能给人带来的虚拟体验显然是更为强烈的.</p><p>尽管是虚拟性的, 但着并不妨碍我们在其中投注私人的情感和欲望. 实际上, 或许正是游戏的虚拟性给我们的情感投入提供了相较现实生活更为简便的通道. 这一点, 从传统的文艺作品中即可见一斑; 正因为与现实世界的差异, 才能更方便地代入私人的偏好和想象, 而人们也通过这种虚拟的情感投注获得某种程度的满足.</p><p>因此, 我们说「游戏化」, 必然是要参与一个混杂了现实与想象的于此同时又与现实有一定区隔的环境/空间, 这一空间可能是语言文字所虚构的, 也可能是游戏或虚拟现实技术为我们创设的; 我们在参与游戏的过程中获得了情感释放和欲望满足.</p><p>在 2006年末和 2007年初有一款非常热的游戏《第二人生》, 算是对于斯蒂芬森《雪崩》中所构想的 Metaverse 的初步实践. 当然, 《第二人生》中所提供的「未来」还是非常原始的, 它从画面上来说拟真程度不高, 也不是 3D的. 然而, 或许出乎我们的意料, 这个游戏现在还活着并且维持在 80万左右的月活用户. 参见 <a href="https://www.theatlantic.com/magazine/archive/2017/12/second-life-leslie-jamison/544149/">这里</a> 的一篇报道, 那些现在还在坚守的游戏玩家, 或者说「居民」, 他们在其中投注了太多了时间、精力、情感和欲望, 他们在这一虚拟世界中社交、经营、交易、生活, 几乎已经无法离开这个游戏/世界. 仅从这一点即可见, 游戏在作为我们感官延伸的同时, 也承担着我们情感延伸的载体.</p><p>总而言之, 媒介是我们感官的延伸, 扩展人获取信息的能力, 参与构建人际连接; 而在这一过程中, 自然也包含了人们的思想、情感、欲望、想象. 可以想象, 若是未来在一个高度拟真的、高度自由的元宇宙中生活, 身处其中的我们一定会对这一世界产生更强的情感连接.</p><h3 id="游戏塑造认知">游戏塑造认知</h3><p>媒介所带来的感官、情感、想象的延伸, 反过来会改变人的交互方式, 改变媒介环境, 乃至塑造我们的认知.</p><p>还是麦克卢汉那句著名的「媒介即信息」, 媒介形态本身即带有其天然属性, 因此他认为不同媒介所能承载的内容从本质上来讲是存在差异的. 尼尔·波兹曼在 1985年出版《娱乐至死》中也提到, 「为我们提供纯粹的娱乐是电视最大的好处, 它最糟糕的用处是它企图涉足严肃的话语模式 —— 新闻、政治、科学、教育、商业和宗教 —— 然后给它们换上娱乐的包装」.</p><p>我们知道, 波兹曼是明确反对电视企图占据严肃讨论空间所造成的万物娱乐化的, 图像媒介和文字媒介所传递的信息是截然不同的, 图像文化侵占生活中所有讨论空间, 必然会影响人的言说、思维方式, 乃至影响整个社会的经济和文化形态. 如今, 尼尔·波兹曼所警惕的电视已经无法吸引很多人的注意力; 如果在他那个年代, 他所担忧的是电视为代表的图像化媒介对于文字媒介的侵占, 那么现在, 影响和塑造我们的媒介无疑更为丰富和直接了, 它是移动设备、社交网络, 是购物软件、短视频应用, 是电子游戏、网红博主.</p><p>10年代之前, 可以听到家长把游戏称为「电子鸦片」「电子海洛因」, 如今好像少有人再提了 (心智健全的); 讽刺的是, 玩游戏的那些孩子或许进入了大学成为了社畜, 而当年视电子游戏为洪水猛兽的家长们很多却成了网络团购和短视频最忠实的用户/消费者. 时代的车轮无可遏制, 媒介形态也在不断更迭, 不难设想抵制游戏的和消费短视频的人在认知层面上一定发生了很大的转变.</p><p>无意对于媒介分个高低, 这里想要强调的只是, 我们所消费的媒介一定会在某种程度上塑造我们的认识, 乃至于影响社会形态和社会共识; 这一点我们从现今的互联网上已经得到了充分的验证, 并且电子游戏的发展也必然会产生很多深远的影响; 这里我们要提的元宇宙, 如果真能像未来学家们所宣扬的一样到来, 那么一定会从根本上改变我们的认知, 改变我们的行为模型.</p><h3 id="游戏是社会生活的延伸">游戏是社会生活的延伸</h3><p>以上分三点介绍了游戏作为一种媒介作为「人的延伸」的意义, 其扩展了人的感官, 承载了人思想情感欲望想象的投注, 并在潜移默化中所造我们的认知. 其实从上面的论述中也可以看出来这一过程必然是社会化的. 这里就简单强调一下, 游戏作为一种媒介一定是带有社会属性的,而作为未来畅想的元宇宙更是如此.</p><p>这里给一个旧时代的例子. 约翰·W·道尔在《拥抱战败 —— 第二次世界大战后的日本》中提到, 1946年, 美国占领军控制下的战后日本, 在城市里的儿童们之间, 流行着三种游戏：“黑市游戏”、“潘潘游戏”和“民主游戏”, 内容分别是为模仿黑市交易、假扮妓女拉客以及模仿左翼示威活动. 孩童是社会的一面纯真/残酷的镜子, 而流行在孩童之间的游戏, 就表达了孩童的观察、想象和欲望. 从这些儿童游戏当中, 我们可以看到当时日本社会的经济和文化状态, 看到日本对于美国人和美国统治的复杂态度.</p><p>旧时代的孩童游戏如此, 现今的 (严肃) 电子游戏如此, 而未来的元宇宙作为游戏更是如此. 我们可以看到, 尽管游戏是虚拟性的, 但任何的虚拟不会是纯然空中楼阁, 必然能在某一定程度上找到现实的投射. 用麦克卢汉《理解媒介》中的一句话作结: 「游戏是对日常压力的大众反应的延伸, 因而成为忠实反映文化的模式. 它们把全民的行为和反应熔于一炉, 使之成为一个动态的形象.」</p><h2 id="元宇宙作为游戏-游戏化的社会">元宇宙作为游戏 | 游戏化的社会</h2><p>以上借助媒介延伸理论探讨了游戏作为一种媒介, 其对于个体和社会的意义和影响, 并在与游戏的比较中考察了元宇宙和游戏相类似的一些特质. 然后元宇宙是 (电子)游戏吗? 如何看待其潜在的成瘾性危险? 现在的我们又当如何看待它?</p><h3 id="元宇宙不是游戏">元宇宙(不)是游戏</h3><p>首先, 我认为至少短期内元宇宙的实现方式是游戏. 这里的「游戏」, 还不是上面论述中广义的游戏, 而是狭义上如今的电子游戏. 尽管很多投资人都宣扬着「元宇宙不是游戏」, 但悖谬的是他们所能举出的例子多能被现在的电子游戏所包含. 因此, 更为准确的说法, 应该是「元宇宙不只是电子游戏」.</p><p>不止如此, 几度起落的虚拟现实 (VR) 技术, 其目前主要的应用场景也是电子游戏. 我觉得这是非常合理的, 如一些历史学家所言, 人类区分于其他物种的一项能力就在于拥有想象/虚构的能力, 也因此我们的很大一部分欲望都是需要在虚构中得到满足的. 相较于小说、音乐等相对间接的媒介, 直接实时交互的, 图像和声音的电子游戏是更为直观的, 能够带来更高的感官刺激的虚拟媒介. 因此, 可以更直接简单地满足人的这一需求的媒介理所当然会吸引到更多人, 也必然会是未来发展的趋势.</p><p>那些投资人宣扬游戏不是电子游戏大概可以圈到更多注目, 然而实际上, 一项技术在电子游戏的发展过程中成熟完全不是一个问题或污点; 一个直接的例子或许是显卡技术的发展 (参见下一节). 目前的元宇宙构想远远没有成熟, 而相关的技术必然会围绕着电子游戏的发展而进步, 不妨拭目以待.</p><h3 id="社会生活的游戏化">社会生活的游戏化</h3><p>上面讲的是狭义上的电子游戏, 而从更广泛的定义来看, 我觉得「游戏化」是一个非常普遍的社会现象. 技术的进步给我们带来了更多对于现实世界拟真、建模的能力, 并且相较于原本的物理世界, 人们更乐于幻想这样一个被数字化、中介化的社会. 这一过程其实就是广义上的游戏化过程.</p><p>一个比较明显的例子就是微博上的明星打榜现象. 我们喜欢一个明星不再是单纯去看 TA 的作品, 而需要通过实际的亲身行为来提升 TA 的知名度. 我们知道游戏的一些重要特性就是其明确的规则, 高度的建模能力, 以及实时、清晰的反馈; 在这里, 实时更新的排行榜, 数字化的明星指数不就是提供了这些吗? 打榜行为是数字化、娱乐化、游戏化了的人的行为. 此外现在的饭圈文化, 也把粉丝和明星之间的关系, 从原本明星到粉丝的单向传递, 转化为了双向的养成关系. 偶像不再如昔日巨星靠个人魅力一呼百应, 而更多是小心翼翼回应了粉丝群众的某些期待; 而粉丝也从虚拟的对于偶像的养成、陪伴, 或者说游戏过程中得到的高度的正向反馈, 得到了虚拟的满足.</p><p>再举个例子, 拿元宇宙学家经常举的游戏《堡垒之夜》来说, 官方放出的一些彩蛋, 例如致敬《2001太空漫游》的一个黑色石碑, 一个突然出现欲将发射的火箭, 这些突发性的事件都足够引起全体游戏玩家的狂欢; 这种狂欢不是一个人的而是所有玩家所共同参与的. 这里的狂欢过程取消了原本的固定游戏规则, 而将玩家吸引到了一场新的集体无意识游戏中去 —— 这和现实社会中的某些公众议题何其相似 —— 实际上, 现在对于「元宇宙」的普遍讨论本身何尝不是一场游戏.</p><p>更广泛地设想, 我们来看社交网络上的建构、朋友圈的经营、微博上的论战, 它们和传统的现实接触相比, 无不增加了更强的互动性、反馈性、娱乐性, 都可以说是「游戏化」的体验.</p><h3 id="何以元宇宙">何以元宇宙</h3><p>我们说元宇宙的实现形式就是电子游戏, 并且认为现如今的很多社会生活都是被游戏化了的, 听起来似乎有点危言耸听. 那么最后, 就在从媒介的角度来谈谈我们当如何对待元宇宙.</p><p>首先, 我们不必过程恐慌. 现在对于它的描绘很容易让我们联想到一些科幻作品中的世界, 然而, 正如复旦中文系教授严锋所言, 科幻作品更多是会对于未来世界唱衰的 —— 它们在提供给我们未来世界想象的同时, 也在这个世界危险的边缘架构了一个刺激的故事. 一方面, 请放心, 技术上还有很长一段路要走, 我们还远没有到要去选择红药丸还是蓝药丸的地步. 另一方面, 也请放心, 现实世界没有那么脆弱, 它不会那么轻易就退位, 毕竟我们还是以物理的方式存在着.</p><p>因此, 与其无目的地去跟着科幻作品的视角去想象元宇宙世界, 不如更为切实地, 把元宇宙看作是一项新的技术, 一种新媒介. 不如去思考, 这种媒介相较于传统媒介或传统电子游戏有怎样的特性, 社会关系如何在这一世界中构建.</p><p>不过分期待也不极端抵制, 一个新媒介/技术产生的同时必然会有很多的热望与担忧, 然而到最后我们似乎总能找到一个合适的方式与其共处, 融汇到我们的日常生活中不咸也不淡. 就拿「成瘾」或者「沉迷」这一话题来说, 中国政法大学的教授孟庆延说「沉迷是一个人的普遍状态」, 他认为刻意去对抗人的基本需求几乎是不可能, 然而, 在一个健全的多元化的自由的社会中, 我们必然可以在其他途径找到各种机制去对抗单一媒体所带来的沉迷.</p><p>确实, 每天打十个小时的游戏也会让人厌倦, 连续看五六部电影中的日日夜夜也止不了我们想在现实的阳光下散散步的心情. 不同的媒介有着其独特的性质, 一定能够满足我们某个特定方面的需求, 正如三维动画无法取代乃至二维作画的魅力, 电子阅读器无法替代实体书籍带来的物理经验. 我们期待一个满足我们所有需求的媒介是不现实的, 游戏不能, 我想元宇宙大概也不能. 从更本上来说, 这根植于人内心的多样性, 生物的本能让我们一定会厌倦单调重复的媒介, 吃着山珍海味总想尝尝低分辨率的小米粥.</p><p>麦克卢汉对于游戏是乐观的. 他认为, 「游戏是我们心灵生活的戏剧模式, 给各种具体的紧张情绪提供发泄的机会.」「游戏是像迪斯尼乐园的一种人为的天堂, 或者是一种乌托邦似的幻景, 我们借助这种幻景去阐释和补足日常生活的意义.」 游戏化的各种经验均如此, 不特电子游戏或虚拟现实.</p><p>那么, 就以他的这段话作结:</p><blockquote><p>难道我们喜欢的游戏, 不正是给自己提供了一种超乎社会机器垄断暴政的一种解脱吗? 一句话, 亚里斯多德的戏剧思想——既是模拟表演又是持续压力的解脱——不正是完美地解释了各种游戏、舞蹈和欢乐吗? 嬉耍和游戏要受人欢迎, 就必须传达日常生活的回声.</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;「元宇宙」概念早已烂熟于大街小巷, 然而关于它究竟是什么, 却少有人真正说得清; 作为一个八字还没一撇的未来幻想, 可以说一千个人里就有一千种的 Metaverse. 那么为何要再去谈它? 首先, 自然是因其火热, 因其模糊性. 然而, 激发我兴趣的更在于公众讨论这一现象本</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="网络" scheme="https://lightblues.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="漫游" scheme="https://lightblues.github.io/tags/%E6%BC%AB%E6%B8%B8/"/>
    
    <category term="媒介" scheme="https://lightblues.github.io/tags/%E5%AA%92%E4%BB%8B/"/>
    
    <category term="元宇宙" scheme="https://lightblues.github.io/tags/%E5%85%83%E5%AE%87%E5%AE%99/"/>
    
  </entry>
  
  <entry>
    <title>赛博漫谈 | What a wonderful world</title>
    <link href="https://lightblues.github.io/posts/8cedf62b/"/>
    <id>https://lightblues.github.io/posts/8cedf62b/</id>
    <published>2021-12-04T06:25:24.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>您那小小的歌唱着的鸟儿，即将飞向远方了。夜莺请一直往南走吧，到暖和的地方去生活。——《扬名立万》</p></blockquote><p>于是今年大概是所谓「播客元年」, 即使每一年是太多事物的元年也见证了多少泡沫的破碎; 但当看到网易云和QQ音乐不惜在底部栏新增一个「播客」页面, 终于意识到播客成了互联网流量巨头新的宠儿.</p><p>实际上, 播客这一形式早已不新鲜, 不鸟万先生的《IT公论》开播自2013年11月, 而 Apple Podcast 从 iTunes 独立出来则是 2012年, 更不用提英文世界中的媒介尝试和发展历史.</p><p>那么何为播客, 为何又要谈播客?</p><h2 id="播客何为">播客何为</h2><p>Wiki 告诉我, 播客 「是一种数字媒体，指一系列的音频、视频、在线电台或文字以列表形式经互联网发布，听众可下载或串流当中的文件以欣赏」「播客创作者将音频或视频上传至RSS或在线播客平台，听众或观众则通过软件获取节目更新」.</p><p>播客为何? 数字音频, 支持下载或者流播, 从媒介上看几乎和音乐或脱口秀节目差不了多少; 而从内容和交互形式来看, 又何传统电台神似, 无非媒介从无线电波转为网络. 那是什么赋予了「播客」区分于音乐、广播、视频等其他媒介的特性?</p><p>恐怕还要追溯到这一声音形式的起点 —— 根据 wiki, Tristan Louis 于2000年10于在一个 draft 中提出了在 RSS feed 中附加音视频文件的概念, Dave Winer, 也是 RSS 格式的创作者完成了实现. 是的, 这大概是播客原生区别于其他声音媒介的地方了; subscribe 行为在播客收听过程中起着重要的角色, 而 RSS技术使得任何人在「第一时间收听播客」更新成为了可能.</p><p>在这里, 信息的传播是相对单向的: 主播作为内容生产者, 而听众多是纯粹的信息接受者, 在平台出现前的很长一段时间内, 观众反馈是相对薄弱和落后的, 但也正因为此, 主播的生产又了更多「创作」的属性; 类似平台化之前的网络小说, 相较于强反馈下的「共同创作」, 古早年代弱反馈的创作形式给予了作品更多生产者的个人特质; 当然, 空山自语显得太孤独且难以持续, 反馈总归是有的, 最浪漫的大概还是邮箱或者是网站留言, 沟通的「成本」自然能够天然起到过滤作用, 身为主播偶然间收到听众反馈大概是意外之意.</p><p>当然, 现在时刻再去宣传所谓的「泛用型播客客户端」似乎显得古板且不合时宜, 事实上自己的收听入口也已从单纯的 Pocket Casts 转为 小宇宙 平台; 尽管如此, 这里的收听逻辑大概还是和传统音乐推流有着某些微妙差别, 至少可以体现在算法推荐和主动关注这一行为上(当然, 小宇宙也是靠每日三档推荐起家的, 但毕竟还是人工筛选). 所谓泛用, 即在自由收听的权利, 在于主动关注行为, 在于可免除无关信息的自由; 而与之相对的, 则是平台的流量垄断, 信息轰炸的不胜其烦, 竞价搜索与关键词屏蔽.</p><p>未免有些庸人自扰, 然而内容获取方式的开放性越来越成为考虑信息媒介的重要因素; 所以在承认平台的诸多方便的同时, 自己算是「反平台」的, 带着对于所谓「互联网精神」的期待, 妄想着内容生产者的绝对主权, 平台作为内容托管和集成方的「可替代性」(即使对于Google相对信任的同时警惕着平台为恶的可能性).</p><p>平台带来的便捷是需要肯定的, 事实播客形式走向大众自然是和收听方式的平民化有着重要关系, 与此同时也共同促进了播客生产的繁荣(事实上, 自己作为消费者也受益); 但也正因为此, 坚持独立运营才显得珍贵, 这里的浪漫, 大概是和独立电影独立网站给人带来的感受类似.</p><p>自己也不是最早一批的听众, 事实上入坑不算早, 18年《一天世界》算起, 却也多多少少听了各种类型的播客. 然, 不得不承认早先的第一印象对于媒介观念的塑造作用, 最早的收听体验也一定程度上塑造了自己对于播客内容的期待. 前说播客是主播的创作, 确实, 但真正意义上的单口却也不多, 更多的还是对话为主, 半私密半公开性质的对话; 然而对话太多了却也有些疲惫, 平和中正之间竟有点期待一个人的独断与专横. (事实上也非常欣赏对话节目, 近期听到《科技吱声》ep1 请到夏笳和李永乐老师, 碰撞在一起也极为有趣)</p><p>好吧, 我所怀念与期待的根本不在单口或对话, 不在题材与形式; 不过偶尔回顾风口吹起之前的试水者们, 想到技术形式对于内容创作赋予的可能性, 发一点牢骚与感慨.</p><h2 id="海盗电台">海盗电台</h2><blockquote><p>当我们在关注新媒体艺术的时候，会发现它与黑客文化、创客和DIY文化中有若干的交际，比如说它们都崇尚非商业的运作；会和反主流文化紧密结合并为小众群体发声；会涉及到对技术元素创造性的，突破其原有功能的利用；并且相比其他类型的艺术创作，技术爱好者们在这一领域扮演了更加重要的角色。</p></blockquote><p>Dr.Quest 先生在关于科技、独立媒体与艺术的一次 <a href="https://zhuanlan.zhihu.com/p/267865163">演讲</a> 中这样说到. 是的, 在新的媒介出现或创新的同时, 免不了艺术特质的关照, 这里的关照者可能是媒体艺术家也可能正是技术爱好者. 在一项技术的诞生之初, 可能没有人能够想到其经过长时间发展后的主流应用场景, 而萌发之初总是热望多于警惕的, 艺术的关照赋予了技术/媒介更多的可能性, 对待艺术和生活的敏锐感受力. 我们在使用媒介的同时, 也无时无刻不在接受着媒介的驯化, 从使用习惯到对媒介内容的想象. 偶然跳出来反观, 或者回顾媒介发展的历史, 或许能得到意料之外的收获.</p><p>所谓 Pirate Radio, 简言之主要是二战之后, 特别是1960年的英国的那些无执照非商业的广播电台. 那部 2009年的电影《海盗电台》的原型 Radio Caroline, 即是 Ronan O'Rahilly 为了更为自由地播出摇滚乐, 在领海之外的船上架设电台进行广播, 从而规避无线电法规的限制.</p><p>现在的播客似乎与当年的海盗电台有某种类似性, 不过 60年代反抗的可能是英国政府的媒介管控, 而在所有人乃至机器都可以内容生产的年代, 我们应该警惕的或许是赫胥黎所描述的无聊烦琐的世事. 那个狂妄单纯又似乎孕育着无穷可能性的60年代, 虽然不一定让人怀念或期待, 却也放任着一点妄想.</p><p>最后的最后, 想到的无非是内容创作的自由与边界, 独立托管所要求的耐心与勇气, 又落窠臼, 暂且搁笔; 见谅文字的跳脱, 鸡飞狗跳兵荒马乱, What a wonderful world.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;您那小小的歌唱着的鸟儿，即将飞向远方了。夜莺请一直往南走吧，到暖和的地方去生活。——《扬名立万》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是今年大概是所谓「播客元年」, 即使每一年是太多事物的元年也见证了多少泡沫的破碎; 但当看到网易云和QQ音</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="网络" scheme="https://lightblues.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="漫游" scheme="https://lightblues.github.io/tags/%E6%BC%AB%E6%B8%B8/"/>
    
    <category term="播客" scheme="https://lightblues.github.io/tags/%E6%92%AD%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>赛博漫谈 | 媒介即隐喻 媒介即认知</title>
    <link href="https://lightblues.github.io/posts/511ce731/"/>
    <id>https://lightblues.github.io/posts/511ce731/</id>
    <published>2021-11-28T08:06:47.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>But remenber, please, the Law by which we live, wer are not built to comprehend a lie. 但是, 请记住我们存活的法则, 我们被造出来, 可不能理解谎言. ——The Secret of the Machines, BY RUDYARD KIPLING, 摘自《我这样的机器》</p></blockquote><p>于是, 免不了谈到「媒介」 —— 作为形式, 作为技术, 作为手段; 作为包围着现代生活的方方面面, 作为人际沟通的方式, 作为我们对于世界的想象.</p><h2 id="媒介即信息">媒介即信息</h2><p>逃不掉麦克卢汉那句「媒介及信息」(The medium is the message, Understanding Media: The Extensions of Man, 1964). 简言之, 传播内容受到传播形式的影响. 自然, 这里的媒介无非是六十年代的那几样, 文字、电报、图片、电影 —— 作为前互联网时代的观察, 当时的媒介形态相较于今还算简单; 然而从媒介的物理形态而言, 却也覆盖了生物的多数感官.</p><p>最近才读那本畅销书《娱乐至死》, 波兹曼进一步补充「媒介即隐喻」 —— 单纯从信息论角度来理解是显然的: 信息有着单一明确的属性, 而人类日常的会话、新闻的扩散、观念的传教怎么可能有单一明确的理解呢? 再不解风雅一点, 不同媒介承载的信息量有别 (从文字和图片影响的存储空间即可看出来), 又如何通过不同的媒介所无损转换?</p><p>举例: 即使是 (文学领域的?) 常规理解追求写实的翻译, 准确也只占「信达雅」其一; 而即使是专业领域, 对于某个词汇寻找到合适的译名也是难之又难; 这还只是新词, 倘若牵涉伦理政治领域, 原生概念与外来译名之间的关系几乎难以下手. 仅仅是翻译即如此, 更不用提不同媒介之前的转换, 小说和电影, 动漫和游戏的的改编几乎是另一种创作.</p><p>所谓「隐喻」, 大抵是以一物理解另一物. 这几乎是人类认知的基础, 也无可厚非. 书中举的一个例子, 前影像时代, 人们对于历史人物/政治家的第一联想是其言论/政治思想, 而当下我们一提到公众人物, 乃至爱因斯坦, 首先进入脑海的大概会是一个图像 —— 照片上的脸也好, 电视电影中的片段也罢. 图像作为人类感官的一等公民, 具有天然的侵略性, 几乎是生物的生存本能.</p><p>波氏颇为悲观「这就是思维方法在以文字为中心的文化和以图像为中心的文化中的不同体现」. 在图像颠覆文字占据媒介统治地位的今天, 倒也不必消沉如此. —— 用他自己的话来说, 毕竟「这本书是对20世纪后半叶美国文化中最重大变化的探究和哀悼」, 那还是「印刷术时代步入没落，而电视时代蒸蒸日上」. 而在媒介形式极大丰富的当下, 网络早已颠覆一切旧的成为无论何种意义上的头等媒介, 游戏也早已不是家长口中的洪水猛兽, 电子化的浪潮覆盖了生活的方方面面; 网络时代原住民, 有必要对于图像世界抱有这样的警惕吗?</p><p>或许不必, 媒介不复八十年代的媒介, 世界也不复八零年代的世界. 波兹曼所批判的「电视」几乎沉没在互联网的海洋 (或者以各种身份复活着), 而被他寄予厚望的计算机也远不在他的想象. 我们如今再读, 这些警句真正有价值的, 或许在于对媒介特质的反思, 在于对媒介霸权的警惕.</p><h2 id="媒介即认识论">媒介即认识论</h2><p>波氏进一步指出「媒介即认识论」, 而今看来也不是新鲜的论题了. 以个人的话来理解, 所谓隐喻, 即人的感知必须借助各种形态的物理物的中介, 而信息在这一传播过程中必然受到干扰和损失, 乃至误解和争端; 既然媒介即信息, 而信息塑造了我们对于世界的认知, 所谓「媒介生态」, 这几乎就是废话了.</p><p>私以为, 媒介不仅决定认识论, 不同媒介的特性、接触媒介的时间和成分、使用媒介的方式, 都对认知有着深远影响.</p><p>首先, 不同媒介有着各自的特性: 设想同样的一段文字, 在屏幕上快速划过, 在纸质媒介上阅读, 听他人口述, 乃至配合上影像, 所带来的体验自然是截然不同的. 波氏也多次在文中提到, 「为我们提供纯粹的娱乐是电视最大的好处，它最糟糕的用处是它企图涉足严肃的话语模式 —— 新闻、政治、科学、教育、商业和宗教——然后给它们换上娱乐的包装」. 他所反对的不是影像媒介本身, 而是影响侵占公共空间乃至辐射社会的总总话题所造成的「严肃」性的丧失. 公众图像文化是娱乐化的文化, 而一切被公众图像化所带来的必然是一切被被娱乐所边缘、颠覆、重塑.</p><p>媒介有其特异性. 单论文字和影像, 对于类似的一段场景可以给人带来全然不同的体验. 影像的信息量过于密集, 以至于一下子占满了想象空间; 所以才会对那么多的改编影视作品怨声载道, 对于文字的想象各异, 而影像所能呈现的可能性过于单一了.</p><p>和其他的很多体验一样, 首次接触的影响是深远的, 若没有外部影响要自发对于一面印象的改变大概要付出很多的努力. 媒介亦如此, 遥想八九十年代第一次接触到「电脑」正襟危坐学着命令行的那些人, 和现今笨重主机被丢弃在书房不带有丝毫好奇随手点亮图形化界面的孩童, 他们对于这种机器的想象自然是截然不同的 —— 不过是一个笨重的固定版本笔记本电脑, 甚至没有平板或手机那样的交互方式, 这又有什么神奇的呢?</p><p>在媒介极大丰富信息极大过载的时代, 信息有筛选的必要, 媒介也必须有所取舍. 在不得不承认媒介的特异性的基础上, 什么是你/妳接收/生产信息最有效的媒介? 如何通过不同媒介构建对于世界的想象? 如何协调媒介认知培养媒介习惯?</p><h2 id="作为技术的媒介">作为技术的媒介</h2><p>还记得本科阶段旁听过小半学期《新闻学导论》, 谈到传播学视角下媒介的三个层次: 技术/生产方式、内容/体裁、媒介习惯/实践. 这里就仅关注作为技术的媒介. 媒介终究是和技术高度挂钩的, 媒介与人类记录生活和自然的技术的发展相同步, 并反过来塑造人的沟通和认知方式.</p><p>「复制」成为媒介发展过程中一个重要的衡量指标, 留声机对于声音的复制、摄影术对于光影的复制、纪录片对于图像和声音的复制. 然而这绝不意味着「真实」, 而是如上所述这种被中介了的虚拟了的真实; 更何况真实并未信息生产者/传播者的本意, 一切的传播无非是种宣传. 实际上, 真实并非构成媒介好坏的指标, 有些媒介有这天然的妄想属性, 例如 Paprika 在我的动漫观影体验中所确立的某种「动画性」.</p><p>关于教育, 波氏指出或许有些东西可以复制, 但复制过程中会丢失什么这样问题, 答案可能是「一切赋予教育重要性的东西」. 衍生一下, 媒介在复刻现实世界的同时丢掉了什么? 虽然没读过, 但大体听说波兹曼另一本《童年的消逝》提到电视的出现让文字不再是成年人的专属空间, 解除了言语的黑箱于是童年不复存在. 「真正的危险不在于宗教已经成为电视节目的内容，而在于电视节目可能会成为宗教的内容」; 科学替代上帝成为世界的规则, 尼采喊着「上帝死了」的时候大概人类的童年也消逝了. 不再有神秘的黑箱也没有所谓神性, 世界清清朗朗恍如计算机设计.</p><p>原本还想的是具体媒介形式, 如播客作为沉寂又复兴的媒介, 互联网大旗下不同交互形式所构成的细分媒介形式; 细想来居然无话可说也了无兴致, 姑且如此, 就以这段著名断言作结:</p><blockquote><p>奥威尔害怕的是那些强行禁书的人，赫胥黎担心的是失去任何禁书的理由，因为再也没有人愿意读书；奥威尔害怕的是那些剥夺我们信息的人，赫胥黎担心的是人们在汪洋如海的信息中日益变得被动和自私；奥威尔害怕的是真理被隐瞒，赫胥黎担心的是真理被淹没在无聊烦琐的世事中；奥威尔害怕的是我们的文化成为受制文化，赫胥黎担心的是我们的文化成为充满感官刺激、欲望和无规则游戏的庸俗文化。正如赫胥黎在《重访美丽新世界》里提到的，那些随时准备反抗独裁的自由意志论者和唯理论者“完全忽视了人们对于娱乐的无尽欲望”。在《一九八四》中，人们受制于痛苦，而在《美丽新世界》中，人们由于享乐失去了自由。简而言之，奥威尔担心我们憎恨的东西会毁掉我们，而赫胥黎担心的是，我们将毁于我们热爱的东西。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;But remenber, please, the Law by which we live, wer are not built to comprehend a lie. 但是, 请记住我们存活的法则, 我们被造出来, 可不能理解谎言. ——Th</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="网络" scheme="https://lightblues.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="漫游" scheme="https://lightblues.github.io/tags/%E6%BC%AB%E6%B8%B8/"/>
    
    <category term="媒介" scheme="https://lightblues.github.io/tags/%E5%AA%92%E4%BB%8B/"/>
    
  </entry>
  
  <entry>
    <title>赛博漫谈｜不要问科技给了什么，问它拿走了什么</title>
    <link href="https://lightblues.github.io/posts/88153aab/"/>
    <id>https://lightblues.github.io/posts/88153aab/</id>
    <published>2021-11-21T21:03:57.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>我不能去憎恨别人，因为我没时间。 ——《生之欲》</p></blockquote><p>无主题漫谈第一期</p><h2 id="关于在线生活">关于在线生活</h2><p>题源《一天世界》ep79。那便顺着这一期播客的主题，关于 social distance 或者「在线生活」对于人生活方式的影响开始吧。</p><p>其中提到，我们大概已经「无法想象没有互联网的生活」。是的，技术所带来的社会发展往往是不可逆的，接受某种生活方式的同时意味着对于过去所习以为常的作息的诀别，再回首已是积重难返。电力、燃油、通讯、屏幕……当一项技术成为「基础设施」浇筑在日常生活中，过去的被替代者成为真正或美好或不的昨日世界。能够取代的，或许只能是时代浪潮的下一次变革。</p><p>当然，我不是否认「独身自好」的可能性，在哪一个年代我们都不能忽视那些「至今不用手机」「不接触互联网」的人们 —— 或是时代淘沙，或是思想家，或是行为艺术；同样不可否认的是这种诀别所带来的可能的快乐与满足。然而，这样的生活方式终归只是少数派，这里涉及的是总体论上对于社会心理的影响。</p><p>那么，作为现今生活底层结构的「互联网」，对于我们的世界产生了怎样的改变？这自然是大之又大的话题，联网是 Tim Berners-Lee 那一代人的想象还是现今璀璨着的「移动互联网」？是互联互通所带来的信息生产和流程的极大变革，乃至对于全球化及其所带来的各式后遗症？</p><p>还是从小出发吧，如播客中提到的，「后疫情」时代，对于口罩、洗手的观念、乃至「洁癖」的定义都会产生持久的变化，而「911」所带来的公众隐私领域的缩减也是几乎不可逆的；公众事件的影响如此，而塑造了生活方式的互联生活，对于社会状态和心理的影响同样是巨大且不可悖逆的。</p><p>正如「线上生活」，九十年代关于互联网的想象绝对不会如现在这般；无所谓悲哀或庆幸，那个电脑上可爱企鹅的滴滴滴声变成了桌面上呜呜的震动，坐在案前构思着邮件内容的身影变成了一块四五寸屏幕上翻飞的手指，下载一张图片还要几分钟的等待变成了4K直播无延迟。不仅是疫情隔离所带来的被迫线上生活，我们逐渐习惯了 online 的生活，接入网络的价值甚至和加入世贸类似，与世界建立起了连接；如今，大概断水断电所带来的焦虑都赶不上断网。</p><p>起了这样一个大而泛的题，自知没有能力驾驭，尝试去探讨，大抵是希望给后续的话题画个界限，警醒不要再拘泥于技术的细枝末节中，更要去反思互联网/技术的多面性，反观当下的生活。无法也无意拒绝互联生活的，但意识到「在线上生活的同时存在着线下的可能性」这一点就有其意义。</p><p>昨夜风雨，银杏一地落黄。</p><h2 id="关于科技带来的">关于科技带来的</h2><p>自诩算是个科技圈编外人员 —— 汲汲于科技带来的可能性，对于「未来生活方式」的热望，而所谓「编外」，自然是尚不得其门而入，游离徘徊而已。因此，总归是技术乐观主义的。然而，在宣告着「技术无罪论」的同时，也不得不承认着其可能的影响 —— 现实层面，无论是父母辈对于手机乃至游戏的反向依恋，还是微博或「朋友圈」所带来的社交压力乃至厌倦，或图像、音视频伪造技术所可能带来的社会隐患，对了，还有已成为社会热议的人工智能伦理、自动驾驶伦理等。</p><p>所以，更准确的表述/期待，应该是：在理解技术基本原理的前提下，信仰技术所能带来的改变。是以，对自己的期待是在「沉迷」某一技术之前，先对其实现细节有一定的认知基础。当然，这样的期待切实去实现的几乎不可能 —— 在学科严重细分、「博学家」早已不复的年代。毕竟技术的底层是难以穷尽的，完全个人维护的软件几乎是神话，芯片和计算机的制造早已不是一家公司可以实现的，更不必说自己早知与物理无缘。</p><p>这种期待的可能性在于开放的文档体系，在于自由的开源社区，在于互联网作为资源网络本身。技术在商用、商品化的过程中，必然是满足了人的某种惰性，提供便利的同时必然做了大量的简化；但这样高层封装掩盖了大量的实现细节；这种细节或许大多无关紧要，但总有少数的核心思想是无可逃脱的。沉沦水面之上的功用纵然简单，但不能忽视盲目 addict 技术的危险性，底层原理的认知缺失，很容易让人相信那些神奇黑箱，甚至忽视基本常识，无知者最无畏。</p><p>有「圈外」人员提到对于「科技圈」的印象，会有圈地自萌的厌恶感。这样的反感自有其原因 —— 直接观感，或许是论坛社区三句不离「01编程」「徒手造芯片」的段子手，或许是诚心发问被一句「linux大法好」、询问IDE配置却被推荐 Vim Emacs 的憋屈。然而，这些绝非我所想象的疆界，大抵不过如我这般编外人员的叫嚣。另一方面，却不得不承认「入圈」的门槛，确实存在着一定的 threshold —— 又来了，首先要过的一堆的专业名词。然而，所谓「圈」总有其入圈代价，而技术圈层的优势在于其无与伦比的开放性，互联网之处本身就有着先天的技术属性，在合理搜索的情况下你几乎可以零成本得到所有问题的答案，所需要的只有时间和精力。</p><p>自然，编外无权为其代言，把技术作为手段而非目的，在有着基础认知的前提下勇于去拥抱技术创新，是目前的期许 —— 非但计算机相关，生活的一切领域又何尝不是如此？</p><h2 id="关于信息与奴役">关于信息与奴役</h2><p>再谈谈技术所带来的观念上的转变。节目中提到，一个显见的概念是「对于孤独的忍耐力」，诚然，和一个十八世纪的人比起来，现代人对于孤独的忍耐大概总是要差很多的。</p><p>不谈「孤独」，直接看更为具体的「信息」吧。除去人作为生物的基本需求，我们的一切娱乐形式几乎能够在数字世界上找到替代品。图像、音频、视频，乃至感官、虚拟、增强现实或是近期火热的「Metaverse」…… 技术革新也好炒作也罢，未来的方向，人类似乎可以在虚拟世界作为全然精神体存在。如果虚拟的感官和生物性的神经反应无限接近乃至等价实现，诱惑于人工构造的虚拟世界的无穷可能性（毕竟据说国族/民族的概念也是虚构的），我们有多大的把握抵抗这魅？</p><p>我想是悲观的，小说、电影、游戏无不是刺激着我们的神经，而网络/虚拟世界所带来的快感无疑是更为多元的。近期学游泳，在水中跳动的自由已经让二十年陆地生物无比兴奋，第二人生中御剑飞行太空漫游的可能性足够让人高潮。</p><p>扯远了，总言之，一切皆为信息，我们在与世界交互的过程中吞吐着信息。作为信息的消费者，我们似乎有选取信息源的「自由」，如我们冲浪过程中漫游在这一切实的网络中；作为信息的生产者，除了有意识的信息生产，正如那句「隐私不上网，上网无隐私」我们在这一虚拟网络中时时刻刻留下自身足迹。兴奋于交互媒介所带来的可能性的同时，我们对于这现世还有何眷恋？</p><p>对于技术的想象大多是幻想，人与人国与国的冲突无时无刻不彰显着人作为一个自然生物的复杂性。扯下「技术无国界」的遮羞布，技术专利的占有、盈利为目的的产品远高于理想主义的构建；这些尚不可怕，让人恐惧的是技术作为「权力」的可能性 —— 当使用微信成为乘坐地铁的前提条件的时候，我们真的有去选择红色药丸的可能吗？</p><p>所以，我们在痛骂着苹果或微信生态的封闭与独断的同时不得不用着它们的设备与服务，带着镣铐的舞蹈（然而，固执良久之后，我终于还是承认 Apple 是一家「伟大」的公司）。</p><p>大体，恐惧有二：对于隐私的恐惧，大概是所谓「监控资本主义」；对于推送的恐惧，「信息茧房」或者是经典的「兔子洞」比喻。</p><p>所以无论是对于推荐算法的投喂，互联网巨头对于隐私的态度，还是各种 App 使用人数/时间优先的指标，乃至各种平台「数据为王」的现状，都让人产生警惕并引发讨论。这种恐惧是切实的，隐私为代价的精准推荐、切合生物本能的信息推流，自己也多在与其的抗衡中忽上忽下沉沦不定。有时，感觉自己是信息流水线上的一颗处理器，被动接收机械输出。</p><p>克服奴役之路在哪里？似乎又回到了之前的答案：用技术对抗技术。例如对抗推流，如何拿回信息的控制权？有着复兴趋势的 RSS 技术仍有热度 —— 订阅的意义在于，将信息的来源从平台/团队重归个人；此外，对于公众号等封闭生态的突破提供了点对点的可控信息流动。</p><p>似乎又有圈内人士的清高与自傲了？还是那句「技术只是手段」，fancy 的信息流绝非唯一的出路，「折腾」所带来的便利性要与日常的使用与反思所协调。互联网将我们获取信息的困难程度减小到了最低，但并不意味着我们获取信息的质量有保障，更不意味着互联网是信息的唯一途径。</p><p>—— 不要问科技给了什么，问它拿走了什么。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;我不能去憎恨别人，因为我没时间。 ——《生之欲》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;无主题漫谈第一期&lt;/p&gt;
&lt;h2 id=&quot;关于在线生活&quot;&gt;关于在线生活&lt;/h2&gt;
&lt;p&gt;题源《一天世界》ep79。那便顺着这一期播客的主题，关于 socia</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="网络" scheme="https://lightblues.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="隐私" scheme="https://lightblues.github.io/tags/%E9%9A%90%E7%A7%81/"/>
    
    <category term="漫游" scheme="https://lightblues.github.io/tags/%E6%BC%AB%E6%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>赛博空间生存指南 | 写给准大学生的碎碎谈</title>
    <link href="https://lightblues.github.io/posts/70cc675f/"/>
    <id>https://lightblues.github.io/posts/70cc675f/</id>
    <published>2021-11-20T08:00:39.000Z</published>
    <updated>2022-10-08T15:36:22.140Z</updated>
    
    <content type="html"><![CDATA[<p>引: 这样的话题对我来说过于庞大了些, 也与自己日常所思考的方向不一致; 作为一名准研究生, 确实也有些话想对过去的自己说, 算是一个小小的总结; 姑且就大言不惭了.</p><p>关于信息时代的基本素养, 关于高中到大学/成人的思维态度上的转变, 关于信息和工具的使用方法论杂谈.</p><blockquote><p>warning 某次机缘下的计划, 但分了好多次断断续续写, 也没能成体系, 暂且作笑谈.</p></blockquote><h2 id="basic-skillstopics">Basic Skills/Topics</h2><p>个人以为的一些基本素养.</p><h3 id="接入互联网">接入「互联网」</h3><ul><li>必要性: Google, Wikipedia, Google scholar, Github...;<ul><li>当然要走学术的话, 绝对是必要条件</li></ul></li><li>标准: <a href="https://www.youtube.com/channel/UCZVThl_MRppEdGUPGjXSSdg">AK</a> 曾有过一个系列还不错, 自己技术不精无脑选机场; 要掌握到什么程度因人而异, 自己的需求是Google随时能用, Terminal简单配置代理</li><li>工具论: macOS+Linux+Windows+iOS+Android 可以全系 Clash 了, iOS下还用过 ShadowRocket</li></ul><h3 id="如何提问沟通">如何提问/沟通</h3><blockquote><p>你觉得问身边有智慧阅读量丰富的人和上网查找哪个好？</p></blockquote><p>有合适的人选的话自然前者更好, 但我个人可能更习惯后者.</p><ul><li>程序员领域很有名的那篇 <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/main/README-zh_CN.md">提问的智慧</a> , 当然对于非 CS 相关人员有阅读门槛, 但逻辑完全适用于所有领域; 总而言之, 无非</li></ul><ol type="1"><li>做好功课: 提问前充分搜索, Google first;</li><li>明确问题: 实际上是第一步的前提, 而在搜索的过程中最好是能对问题有更明确的认知;</li><li>学会提问: 把遇到的问题说清楚也很重要. 提纲挈领地说出问题是什么、上下文/语境、自己做的准备、期望的回答内容……</li></ol><h3 id="学会搜索">学会搜索</h3><ul><li>入口<ul><li>网页端 Google, 注重隐私的话可以试试 DuckDuckGo（自己没咋用）</li><li>前移动时代或许这些就够了, 但现在的话还有平台的问题: 微信、微博; 知乎; 豆瓣; 京东、淘宝、闲鱼</li><li>再比如, 学术搜索的话还有另一套, 如 Google Scholar, dblp… 当然这就分学科了</li></ul></li><li>wiki (pedia)<ul><li>个人对于百度百科是否是 wiki 存疑 (仅针对词条的平均水准而言), 可靠性、倾向性、丰富性 等角度. 所以下述 wiki 均指 Wikipedia</li><li>另外还有很多领域性的开放wiki, 或者官方技术手册也属我所说的wiki范畴</li></ul></li><li>如何搜索<ul><li>这样的问题也是一搜一大把, 例如 <a href="https://www.zhihu.com/question/28013848">如何高效地使用搜索引擎？</a></li><li>搜索关键词: 似乎还有人直接扔一个问题给搜索引擎的, 现在的AI还没那么智能…… 推荐手动分割, 例如 <code>心理学 入门 书</code> 酱紫</li><li>准则: 够用就行. 不乏很多高级的用法, 要掌握多少因人而异. 以下介绍自己常用的, Google 语法, 参见 Google 官方的<a href="https://support.google.com/websearch/answer/2466433">优化网页搜索结果</a><ul><li><code>+-</code> 语法</li><li>站内搜索 <code>site:zhihu.com</code></li><li>模糊搜索, 例如 <code>巴*罗那</code></li></ul></li></ul></li></ul><h2 id="input">Input</h2><h3 id="阅读-vs-冲浪">阅读 vs 冲浪</h3><blockquote><p>关于相对系统性（但也更独裁）的书籍和相对自由开放更多可能性（也因此良莠不齐）的网页材料</p></blockquote><p>自己的高中年代, 书籍还是作为主要的内容来源（当然也与高中生的「任务」性质有关）; 进入大学后, 冲浪才成为越来越主要的信息来源. 然而, 不可否认, 书籍的系统性是很多网上材料所无法比的; 另外, 不同学科的特点也不能一概而论（例如CS相关自然更偏向电子媒介）. 以下姑且谈谈书面与网页形式的信息传递方式.</p><ul><li>书籍的优势在于, 首先是系统性. 大多数「教材」或专著性质的书籍都有这一特点, 自成一体; 相反网页信息有时会支离破碎.</li><li>媒介特点. 包括<ul><li>感官上的体验: 纸质版的手感; 视力友好</li><li><strong>非线性</strong>: 李如一老师在 <a href="https://yitianshijie.net/">一天世界</a> 播客中提到作为「瀑布流」的网页/APP 信息呈现方式; 书籍「可翻阅」的特性; 阅读过程中某一段话在书中的位置作为索引</li></ul></li><li>然而, 其也有缺点<ul><li>虽然也有参考文献等, 但其「连接能力」逊色电子材料</li><li>一言堂: 至少在一本书的体系内缺少他人的评论, 一般也没有如wiki般多人编辑的可能性（当然不去论「真理掌握在少数人手中」的情况）</li><li>实效性: 无法实时更新; 如Ai领域的更新迭代速度.</li></ul></li><li>而网页信息的优势在, 媒介形式丰富, 成本.</li><li>媒介特点<ul><li><strong>搜索</strong>: 相较前述书籍的「非线性」, 电子媒介的「可搜索」价值非常高</li><li><strong>链接</strong>. 包括 1) 内部跳转: 内容上的关联和组织; TOC 的价值. 2) 更重要的是外部链接的能力; <a href="https://en.wikipedia.org/wiki/World_Wide_Web">万维网</a> 的核心在其互连能力, 此所以诸多科技人对于公众号为典型的平台生态深恶痛绝之由</li><li>便于整理输出, 复制粘贴成本低（关联下面的笔记一节）</li></ul></li></ul><p>以上. 就个人而言, 也可能是专业原因, 更倾向于网页材料; 但这只是相对的, 具体实践上</p><ul><li>专业以外性质的书籍, 若同时有纸质和电子版, 个人优先后者, 留存性和搜索复制体验更好</li><li>教材等, 随时翻阅、便携、阅读体验 等因素, 也会考虑入纸质书</li><li>再如想了解一个领域, 甚至不知道应该搜什么关键词有什么优质的网站资源, 入手教材/经典文献以构建知识体系就很重要</li></ul><h3 id="相关推荐-暴论">相关推荐 (暴论)</h3><blockquote><p>私人向的讯息获取渠道整理. 纯属个人态度, 毫无参考价值</p></blockquote><p>讨论一下信息承载的不同媒介, 首要考虑的是电子化媒介.</p><p>从内容的形式来看, 文本还是最为重要的内容记录方式; 然而音视频正成为越来越重要的信源, 且高质量内容也越来越多.</p><ul><li>文本: 浏览、搜索、回顾、内容密度、传输代价（bytes） 等方面均有着很大的优势</li><li>图片: 形象、直观、美</li><li>视频: 信息的传达更亲切, 人声、配合可视化, 有时候传输效率要更高（不然为什么要教师呢？）</li><li>音频: 亲切感、陪伴性, 相较于前三者不需要眼睛, 所以更放松</li></ul><h4 id="传统图文">传统图文</h4><ul><li>信赖传统媒介<ul><li>例如, 传统新闻行业生产的内容平均质量肯定考虑互联网平均水准</li><li>一定程度上的「新闻专业主义」</li></ul></li><li>平台/渠道 有一定的相关性, 但追究下去可靠的还是背后的内容生产者</li><li>但平台的特质/氛围的重要性也不可忽略</li></ul><p>几个常用的内容平台</p><ul><li>公众号, 无可奈何的订阅渠道, 注意筛选</li><li>邮箱, 邮件订阅 Newsletter 逐渐成为了我获取新闻的重要途径; 邮件作为最古老的互联网服务的可靠性<ul><li>例如, <a href="https://www.getrevue.co/profile/qingmang">轻芒封面</a>, 作为消失了的「轻芒杂志」软件的延续; 轻芒团队的各种尝试都值得关注</li></ul></li><li>网页/Blog, 互联网最为本真的价值所在<ul><li>于是不可避免的提到 <a href="https://en.wikipedia.org/wiki/RSS">RSS</a>, 又是一个前移动时代的没落遗族, 一言以蔽之, 生成网络世界上任何内容的订阅</li><li>刚接触推荐 <a href="https://docs.rsshub.app/">RSSHub</a>; 软件的话 RSS 服务商我在用 <a href="https://www.inoreader.com/">Inoreader</a>, 软件是 Apple 生态的 Reeder</li></ul></li><li>知乎/豆瓣, 相对领域的搜索和浏览工具</li><li>Telegram<ul><li>是一款通讯（公开社区/个人日志/网盘/文件传输/Bot……）软件</li><li>通讯软件应该有的模样, 向所有人推荐的产品</li><li>VE老师曾专门做过 <a href="https://www.xiaoyuzhoufm.com/episode/6012e4ba34c8b9c2450d34f8?s=eyJ1IjogIjVlODFhMTg1MWJmYmJjM2RhZDg0YjA3MCJ9">一期播客</a> 介绍; 另外 Telegram 的理念、CEO Pavel Durov 的故事都值得八卦</li></ul></li><li>更为垂直领域的, 兴趣相关<ul><li>科技领域的 少数派</li><li>游戏相关的 机核</li><li>动漫相关的 Bangumi</li><li>文艺倾向的, 比如 三联中读、单读、MONO</li></ul></li></ul><h4 id="视频mooc">视频/MOOC</h4><p>视频平台的话, Bilibili+YouTube, 偶尔翻翻 <a href="https://admin.yixi.tv/">一席</a>; 最近在戒视频.</p><p>或许还有 MOOC（<a href="https://en.wikipedia.org/wiki/Massive_open_online_course">Massive open online course</a>）, 高三时候开始接触, 可惜自己没有利用好; 但确实是接触体系化知识的很好渠道</p><ul><li>中国大学MOOC <a href="https://www.icourse163.org/" class="uri">https://www.icourse163.org/</a> 高中时候先修课推荐过, 总体上内容挺全</li><li>Coursera <a href="https://www.coursera.org/" class="uri">https://www.coursera.org/</a> 声名赫赫就无需多言了, 记得还看过知乎上的这个问题 <a href="https://www.zhihu.com/question/22436320">Coursera 上有哪些课程值得推荐? - 知乎</a></li></ul><h4 id="播客">播客</h4><ul><li>2020年以来热度在不断上升, 但仍是相对小众的领域</li><li>监管的暂时性缺失; 其中的 海盗电台 特质（参见 蓬岸 Dr.Quest 的<a href="https://zhuanlan.zhihu.com/p/267865163">这篇</a> 讲稿）</li><li>也正因为其自发性、商业性的暂时性缺位, 而成为独立内容的自由空间</li><li>所以只推荐「泛用型播客」, 拒绝一切依托平台的内容;<ul><li>未免有些理想化了, 姑且算作期许; 此前用的一直是 Pocket Cast, 近期转了火热的小宇宙客户端</li></ul></li></ul><p>那就随便推荐几个</p><ul><li>李如一老师的 《<a href="https://yitianshijie.net/">一天世界</a>》 播客, 关于 艺术、生活、科技, 「精神与肉体上的强健」一语中的; 在播客中频繁被Q 的中文播客先驱, 也在某种程度上塑造了我对于这些方面的认知</li></ul><blockquote><p>用整体性的视角观察当代社会、技术文化以及商业风景, 对抗消费主义导向的论述, 强调对技术与艺术的敏锐感受力、以及精神与肉体上的强健. 我们的口号是:</p><p>What need have I for this, what need have I for that, I’m dancing at the feet of my lord, all is bliss, all is bliss.</p></blockquote><ul><li>程衍樑 的《忽左忽右》, <a href="https://justpodmedia.com/">JustPod</a> 应该是中文播客 Top1 的公司; 程老板是真正意义上的「和什么人都能聊」, 媒体人的趣味性和严肃性; 记得他说过有网页存档的习惯</li><li>方可成老师的《新闻实验》, 可以看做是那个消失了的 <a href="https://github.com/Newslab2020/Collection">新闻实验室</a> 的延续; 一直是邮件订阅的 Newsletter, 最近尝试的播客也值得期待;</li><li>哲学相关的 《翻转电台 FlipRadio》 和 《维生素E》</li><li>宝婷的《不可理论》, 私人化叙述播客的极佳写照</li></ul><h3 id="问题-信息茧房-信息过载">问题: 信息茧房 &amp; 信息过载?</h3><p>计划讨论久, 然终究无从谈起; 正身处困顿其中, 每个人自觉不自觉都发展出了一套方法论; 曾以为有所高低, 然越经历则越屈服于「存在即合理」; 求诸己则容易陷于「超我」与本能欲望的纠缠, 求诸客观性则容易跌落门外汉的新闻与传播理论.</p><p>那就问自己吧! 何为价值? 何为新闻? 自己身处何处? 欲前往何方?</p><h2 id="output">Output?</h2><p>不善网络社交/评论, 自己在这方面也毫无发言权; 以下仅针对 个人笔记和博客 性质的输出.</p><h3 id="为何输出">为何输出</h3><p>定时输出有很多切实上的好处. 例如</p><ul><li>阶段性的知识整理, 正如教别人是非常好的固化方式.</li><li>总结自己所思, 书写时更好的整理思维的方式, 明确自己的态度.</li><li>传教, 在网络上的传播.</li></ul><p>但总有些模糊, 或者, 换一个问题, 我为什么会选择维护这样一个网站? 回答其实是非常个人的, 因为在其中的体验, 收获, 所感, 所烦... 书写是一种烙印, 确证自己的生存.</p><h3 id="如何写笔记">如何写笔记</h3><p>从内容上来看各学科各异, 但总有些方法共性</p><ul><li>形式上的整洁和观看上的轻松 (就像字丑如我只好选择电子化);</li><li>「索引」或者说「整体框架」的重要, 观其概要;</li><li>对于观点的反思, 自己的倾向性;</li></ul><p>正如据说课堂上记笔记其实是非常低效的, 更好的方式或许是 课前/课后印发讲义, 在交互过程中才能更加专注于授者的思路与立场. 笔记并非目的, 更多是监督你去总结和反思的工具.</p><h3 id="笔记软件漫谈">笔记软件漫谈</h3><p>工具论警告. 只能说给出一个 guideline, 仅个人意见; 尤其是2020年以来笔记软件出现了很多新的选择.</p><p>下面零零总总提到了很多的软件/服务, 不妨简单尝试; 但不必过程追求大而全的方案, 选最顺手的那一款即可; 毕竟, 最重要的, 只是坚持记录.</p><ul><li>新手友好, 也是自己早期常用的<ul><li>Evernote 知名度非常高, 本土化的 印象笔记 也做出了很多优化, 但有着 臃肿、闭源、非纯文本 等不足, 而自己对于这些需求有着较大</li><li>Onenote 体验非常接近纸质笔记本; 但16版之后全部转为在线, 而对于换设备/多端用户, 其同步速度堪忧; 同样也存在格式原因导出困难的问题</li></ul></li><li>Markdown 软件<ul><li>Typora 仍然是各个平台预览编辑最优秀的软件之一; 文件管理和图片处理能力一般</li><li>MWeb「Pro Markdown writing, note taking and static blog generator App」<ul><li>如这句简介所言, 可以说是 Markdown 书写、管理、输出 的全链条;</li><li>优势在于 文件管理（利用数据库）、图片管理（包括图床）、输出（静态网页、外部网站）; 并且保障了一定的编辑和预览体验; 因此对于有一定输出需求的人来说很友好</li><li>缺点在于仅支持 Apple 生态</li><li>个人开发, 开发者在 TG 有问必回, 好得过分了</li></ul></li><li>Obsidian</li></ul></li><li>在线文档<ul><li>编辑体验: 此前是无法信任在线编辑的体验的, 但目前用飞书转变了态度; 在 响应速度、可靠性、快捷键支持 方面都足够优秀<ul><li>细节上的处理: 例如左侧的 TOC 对于「文档」性质的写作乃至普通文章书写都很有帮助</li></ul></li><li>另一个关联的其实是企业内部的文档系统, 很多大公司的轮子其实都大差不差; 相较于主流的toC服务如腾讯文档、石墨笔记 等, 其「文档」的属性更重些, 但作为个人知识库来用也没差</li></ul></li><li>其他<ul><li>Notion 在早期使用过, 其 block 等特性现在也被很多软件像素级抄袭; 但其在线性质和网络质量劝退</li><li>Zettelkasten 卡片盒、双链笔记 这些概念也有所了解, 但似乎并不适合自己, <strong>基于自身经验的类目+搜索</strong> 这样原始的方案目前来看也挺好用;</li><li>参见 yuchen_lea ｜ <a href="https://sspai.com/post/65273">请不要神化双链笔记</a></li></ul></li></ul><h2 id="misc">Misc</h2><h3 id="工具论">工具论</h3><p>曾经想过, 如果高中阶段看过中科大罗昭锋老师的 <a href="https://www.icourse163.org/course/USTC-9002">文献管理与信息分析</a> , 估计会少走很多弯路.</p><p>但现在想来, 更多是参考而非全盘接受; 习惯了自己的工作流 (并跌了很多跟头) 之后, 对于那些看似光鲜的方案的警惕性也越来越高; 重要的还是适合自己.</p><p>几个可考虑的维度</p><ul><li><strong>功能上的健全</strong>: 基本功能的可靠好用 (不比大而全, 90%的常用功能的优异; 特殊的需求交给更细分的工具)</li><li><strong>服务上的可靠</strong>: 云服务的不至于跑路, 需要迭代的不至于断更.</li><li><strong>格式上的通用</strong>: 尽量采用开源可迁移的方案 (对于工具本身的警惕/及时跑路)</li><li><strong>学习上的成本</strong>: 功能上的专业性和实际需求的迫切性上的权衡.</li></ul><h3 id="所谓基本技能">所谓「基本技能」</h3><ul><li>Office 全家桶<ul><li>CS相关人员或多或少应该有对其的沉重与封闭的鄙夷, 但不得不说其在大多数工作岗位上的重要性</li><li>自己不怎么用所以无法提建议, 但也经受过入学测试的考验, 基本使用还是没问题的</li><li>个人经验: 笔记工具显然有很多Word的替代方案; 相较于Excel简单情况在线文档即可替代较复杂的交给软件或数据库处理</li></ul></li><li>Adobe 全家桶<ul><li>或者说是图片和音视频处理能力, 多次尝试入门但无疾而终; 只能说需要付出较大的学习成本, 当然审美也是必须的</li><li>大学社团很多都有相关需求乃至培训, 反正掌握一手还是很有帮助的</li></ul></li></ul><h3 id="云服务杂谈-同步">云服务杂谈 &amp; 同步</h3><ul><li>「云」的诱惑是显见的, 多端同步, 不同尺寸的交互屏幕的天然适配, 相对稳定的服务体验...</li><li>一些隐患也是公认的: 不用说内容上的零隐私性, 由于审查甚至你上传也无法拥有它.</li><li>即使排除在隐私上的顾虑, 云服务本身的质量也难以让人满意. 1) 网络环境的不可靠性; 2) 使用上的卡顿 (对我来说文本编辑体验的毫秒级别卡顿也难以忍受); 3) 使用体验上的不足, 功能上的不健全...</li></ul><p>态度: 「不反感, 但谨慎选择, 非必要不使用」.</p><ul><li>既然很多东西选择了本地化, 那么对于多设备党需要考虑的就是「同步」方案. (但身边的多设备用户其实不多, 必要性值得怀疑)</li><li>需求: 可靠性; 速度; 上手难度. 当然会有「不可能三角」, 所以需求是分层级的.</li><li>可参考的方案: TailScale + Syncthing + GoogleDrive + GitHub. (Synology 弃用了)</li></ul><h2 id="总">总</h2><p>极端工具论不值得倡导, 但客观上总有一些相对比较成熟的「工作流」可供参考. 所以上面很多时候会从「工具」的角度来谈自己的看法, 但实非自己所愿 (也缺乏推介的欲望); 如果能从中反思相关的话题, 偶有所感才是我想达成的目标.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;引: 这样的话题对我来说过于庞大了些, 也与自己日常所思考的方向不一致; 作为一名准研究生, 确实也有些话想对过去的自己说, 算是一个小小的总结; 姑且就大言不惭了.&lt;/p&gt;
&lt;p&gt;关于信息时代的基本素养, 关于高中到大学/成人的思维态度上的转变, 关于信息和工具的使用方法</summary>
      
    
    
    
    <category term="Meta" scheme="https://lightblues.github.io/categories/Meta/"/>
    
    
    <category term="软件" scheme="https://lightblues.github.io/tags/%E8%BD%AF%E4%BB%B6/"/>
    
    <category term="赛博" scheme="https://lightblues.github.io/tags/%E8%B5%9B%E5%8D%9A/"/>
    
    <category term="工具" scheme="https://lightblues.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>建站记录 1.0｜Hexo+Butterfly</title>
    <link href="https://lightblues.github.io/posts/672e8040/"/>
    <id>https://lightblues.github.io/posts/672e8040/</id>
    <published>2021-11-03T00:34:21.000Z</published>
    <updated>2022-10-08T15:36:21.780Z</updated>
    
    <content type="html"><![CDATA[<h2 id="start">Start</h2><p>总体方案：采用 Hexo+Butterfly 的静态博客方案；VS Code + Typora 编辑预览，git 版本管理 + GitHub Action 部署。</p><ul><li>doc <a href="https://hexo.io/zh-cn/docs/" class="uri">https://hexo.io/zh-cn/docs/</a></li><li>群晖下运行：需要套件 <code>Git Server</code> 和 <code>Node.js</code></li></ul><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli  //安装Hexo</span><br><span class="line"></span><br><span class="line">hexo -v  //查看Hexo的安装是否正常</span><br><span class="line">hexo init hexo  //初始化Hexo</span><br><span class="line"><span class="built_in">cd</span> hexo</span><br><span class="line">npm install  //安装依赖包</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">hexo s // 启动本地服务器</span><br><span class="line">hexo s -p 8082 // 设置端口，默认的端口是 4000</span><br><span class="line">hexo clean // 清除本地缓存</span><br><span class="line">hexo generator // 初始化文件</span><br><span class="line">hexo deploy // 提交文件到服务器</span><br><span class="line"></span><br><span class="line"><span class="comment"># 本地调试</span></span><br><span class="line">hexo clean &amp;&amp; hexo server --draft --debug</span><br><span class="line"><span class="comment"># 部署</span></span><br><span class="line">hexo clean &amp;&amp; hexo generate </span><br><span class="line">hexo douban  <span class="comment"># 用了douban插件</span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="需求todo">需求/TODO</h3><ul><li>[ ] 一些基本需求<ul><li>[x] 配置发布到不同的 git，参见 <a href="https://www.voidking.com/dev-hexo-multi-git/">Hexo配置多个git仓库</a></li><li>[x] 保存目前的配置（主题配置+美化很耗时间）</li><li>[x] 自动部署 <a href="https://juejin.cn/post/6943895271751286821">如何使用 GitHub Actions 自动部署 Hexo 博客</a>；还可以 <a href="https://juejin.cn/post/6943628312933564452">使用 Travis CI 自动部署</a></li><li>[x] 备份 直接用 git 就好</li></ul></li><li>[ ] 功能项<ul><li>[x] Timeline/说说 <a href="https://github.com/ArtitalkJS/Artitalk">Artitalk.js</a> 头像不显示😭</li></ul></li><li>[ ] 优化<ul><li>[x] 网站性能测试 <code>lighthouse</code></li><li>[ ] 图片压缩<ul><li>[ ] 参见 <a href="https://blog.happyhack.io/2020/06/28/blog-day5/">博客优化：Hexo支持webp格式&amp;&amp;迁移到香港云主机</a> 202006 ⭐️</li><li>[x] 之前尝试了 <a href="https://www.npmjs.com/package/gulp-imagemin">gulp</a> 失败</li></ul></li><li>[ ] 国内访问速度优化；在dnspod上针对不同的线路配置不同的A记录</li></ul></li><li>[ ] fancy<ul><li>[x] 在线编辑体验 <a href="https://github.com/gethexon/hexon" class="uri">https://github.com/gethexon/hexon</a> 很fancy，但实际上可能没啥用😭（Code 赛高）。注意 <code>node install.js</code> 时候不要不要选择 <code>npm run prd</code> 直接pm2，因为安装的时候需要配置账号密码。之后可以 <code>yarn start</code> 启动；也可 <code>npm run prd</code> 用 pm2 启动（需要安装 <a href="https://pm2.keymetrics.io/docs/usage/quick-start/">pm2</a>；关闭 <code>pm2 stop hexon</code>）。</li><li>[ ] 有时间看看 <a href="https://www.cnblogs.com/yyhh/p/11058985.html">Hexo主题开发</a></li></ul></li></ul><h3 id="主题">主题</h3><ul><li><a href="https://github.com/theme-next/hexo-theme-next">NexT</a> 7.3k<ul><li>是基于原来的 <a href="https://github.com/iissnan/hexo-theme-next">NexT 项目</a> (15.7k)的社区维护版本；</li><li>中文教程 <a href="http://theme-next.iissnan.com/" class="uri">http://theme-next.iissnan.com/</a>；</li><li>推荐的 <a href="https://github.com/theme-next/awesome-next">插件列表</a> ⭐️</li></ul></li><li><a href="https://github.com/sanonz/hexo-theme-concise">Concise</a></li><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a> 2.9k<ul><li>Card UI Design; Two Column design;</li><li>主页 <a href="https://butterfly.js.org/">教程</a>；</li><li><a href="https://butterfly.js.org/posts/7670b080/">美化/魔改方案</a> 合集</li></ul></li><li><a href="https://github.com/volantis-x/hexo-theme-volantis/">Volantis</a><ul><li><a href="https://volantis.js.org/v5/getting-started/">文档</a> 写得超赞 ⭐️</li></ul></li><li><a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid</a><ul><li>Material Design</li><li><a href="https://hexo.fluid-dev.com/">主页</a> 和文档也不错子</li></ul></li></ul><h3 id="插件汇总">插件汇总</h3><ul><li>压缩混淆生成的 HTML、CSS、JS 文件 <a href="https://github.com/chenzhutian/hexo-all-minifier">hexo-all-minifier</a> 插件</li><li>跨平台环境变量 <a href="https://github.com/kentcdodds/cross-env">cross-env</a> 跨平台环境变量设置脚本</li></ul><p>评论</p><ul><li><a href="https://github.com/gitalk/gitalk">GiTalk</a></li></ul><p>实用</p><ul><li><a href="https://github.com/rozbo/hexo-abbrlink">hexo-abbrlink</a> 生成短链接</li><li><a href="https://github.com/willin/hexo-wordcount">hexo-wordcount</a> 字符统计</li><li><a href="https://github.com/wzpan/hexo-generator-search">hexo-generator-search</a> 本地搜索</li><li><a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> 生成 RSS</li><li><a href="https://github.com/hexojs/hexo-generator-sitemap">hexo-generator-sitemap</a> 生成 sitemap</li><li><a href="https://github.com/hexojs/hexo-generator-index">hexo-generator-index</a> 文章置顶</li></ul><p>需求</p><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a> 索引豆瓣列表</li></ul><p>Math</p><ul><li><a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 基于pandoc 的渲染？<ul><li>Latex支持比较好，参见 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/MATH.md">Next 的说明文档</a>。替换默认的 <code>hexo-renderer-marked</code></li><li>并不推荐 <a href="https://github.com/sun11/hexo-renderer-kramed">hexo-renderer-kramed</a> ，实测也出了点问题</li></ul></li></ul><p>测试中</p><ul><li><a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a> PWA？</li></ul><p>主题相关</p><ul><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a> 豆瓣索引</li><li><a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-artitalk">hexo-butterfly-artitalk</a> 基于 ArtiTalk 的说说页面，Butterfly 主题自带了</li></ul><h2 id="功能项配置-butterfly">功能项配置｜ Butterfly</h2><blockquote><p>也算尝试了好几个博客方案了；其中方案的入门难度、配置难度、定制化程度各有差别，但找到一个好用的，然后深入了解才是正道。</p><p>这次详细看了 Buttery 的配置说明，也正好明确了个人博客的各种需求：从网页排版（页面设置、代码、图片、Math）、交互形式（评论、聊天室、分享）到增值（sitemap、广告、赞助、版权信息、复制行为）、网页性能相关（图片管理压缩、PWA等）。</p></blockquote><p>以下框架主要摘录自 <a href="https://github.com/ArtitalkJS/Artitalk">Butterfly</a> 的配置说明。</p><h3 id="开始">开始</h3><ul><li><a href="https://butterfly.js.org/posts/21cfbf15/">快速开始</a><ul><li>安装</li><li>应用主题</li><li>安装插件 <code>hexo-renderer-pug hexo-renderer-stylus</code></li><li>升级建议</li></ul></li></ul><h3 id="页面">页面</h3><ul><li><a href="https://butterfly.js.org/posts/dc584b87/">主题页面</a><ul><li>Front-matter</li><li>标签页 <code>hexo new page tags</code></li><li>分类页</li><li>友情链接 <code>hexo new page link</code><ul><li>链接在 <code>source/_data</code> 中的 <code>link.yml</code> 编辑</li></ul></li><li>图库<ul><li>子页面</li></ul></li><li>404页面</li></ul></li></ul><h4 id="front-matter">Front-matter</h4><p>以下分别是 post 和 page 的 Front-matter 配置选项</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">updated:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line">  <span class="bullet">-</span> <span class="string">Software</span></span><br><span class="line"><span class="attr">keywords:</span> </span><br><span class="line">  <span class="bullet">-</span> </span><br><span class="line"><span class="attr">description:</span> </span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"><span class="attr">cover:</span>      <span class="comment"># 文档页的小图，可以和 top_img 不同</span></span><br><span class="line"><span class="attr">sticky:</span> <span class="number">2</span>   <span class="comment"># 文章置顶，数字越大优先级越高</span></span><br><span class="line"><span class="attr">mathjax:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下是可调选项，自己一般用不上</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">toc:</span></span><br><span class="line"><span class="attr">toc_number:</span></span><br><span class="line"><span class="attr">copyright:</span></span><br><span class="line"><span class="attr">copyright_author:</span></span><br><span class="line"><span class="attr">copyright_author_href:</span></span><br><span class="line"><span class="attr">copyright_url:</span></span><br><span class="line"><span class="attr">copyright_info:</span></span><br><span class="line"><span class="attr">katex:</span></span><br><span class="line"><span class="attr">aplayer:</span></span><br><span class="line"><span class="attr">highlight_shrink:</span></span><br><span class="line"><span class="attr">aside:</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> &#123;&#123; <span class="string">title</span> &#125;&#125;</span><br><span class="line"><span class="attr">date:</span> &#123;&#123; <span class="string">date</span> &#125;&#125;</span><br><span class="line"><span class="attr">updated:</span> &#123;&#123; <span class="string">data</span> &#125;&#125;</span><br><span class="line"><span class="attr">aside:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">description:</span></span><br><span class="line"><span class="attr">top_img:</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选项</span></span><br><span class="line"><span class="attr">type:</span></span><br><span class="line"><span class="attr">comments:</span></span><br><span class="line"><span class="attr">keywords:</span></span><br><span class="line"><span class="attr">mathjax:</span>        <span class="comment"># 显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">katex:</span>          <span class="comment"># 显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</span></span><br><span class="line"><span class="attr">aplayer:</span>        <span class="comment"># 在需要的页面加载aplayer的js和css,请参考文章下面的 音乐 配置</span></span><br><span class="line"><span class="attr">highlight_shrink:</span> <span class="comment"># 配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</span></span><br></pre></td></tr></table></figure><h3 id="主题配置">主题配置</h3><p>参见 <a href="https://butterfly.js.org/posts/4aa8abbe/">主题配置1</a>；<a href="https://butterfly.js.org/posts/ceeb73f/">主题配置2</a>；</p><ul><li>语言</li><li>网站资料</li><li>导航菜单<ul><li>标签、分类、友情链接</li></ul></li><li>代码<ul><li>高亮主题</li><li>复制、代码框展开/关闭、换行、高度限制</li></ul></li><li>社交图标<ul><li>支持 <a href="https://fontawesome.com/v5.15/icons?d=gallery&amp;p=2">font-awesome v5</a></li></ul></li><li>主页文章节选<ul><li>基于 <code>description</code> 字段或者自动生成</li></ul></li><li>顶部图<ul><li>分别设置 主页、默认；归档页；标签、类别的默认和各自的 顶部图。其他page的可以在 <code>top_img</code> 中设置</li><li>配置的值支持：留空、链接、颜色、透明 transparent、不显示 false</li></ul></li><li>文章置顶<ul><li>在文章中设置 <code>sticky: 1</code> 。数值越大，置顶的优先级越大。</li></ul></li><li>文章封面<ul><li><code>cover</code> 属性定义。可分别设置 index, aside, archives 中是否显示、显示的位置；默认图；放多张图片可以随机选择。自由度很高</li></ul></li><li>文章页相关配置<ul><li>文章meta显示：创建、更新日期；相对日期；分类；标签；描述文字description</li><li>文章版权</li><li>文章打赏</li><li>TOC：可用 <code>toc_number</code> 和 <code>toc</code> 在文章中单独控制</li><li>相关文章：根据文章tags的比重来推荐</li><li>文章锚点 anchor：随着页面滚动根据标题ID替换文章链接</li><li>文章过期提醒</li><li>文章编辑按钮</li><li>文章分页按钮</li></ul></li><li>头像 avatar</li><li>图片描述</li><li>复制相关配置｜字数超过一定有最后加上版权信息</li><li>Footer设置｜博客年份、自定义文本</li><li>右下角按钮<ul><li>简繁、夜间模式、阅读模式、字体大小</li></ul></li><li>侧边栏设置<ul><li>侧边排版 aside</li><li>访问人数｜<a href="http://busuanzi.ibruce.info/">busuanzi</a></li><li>运行时间</li><li>最新评论</li><li>自定义添加栏目</li></ul></li><li>Tag Plugins<ul><li>Note (Bootstrap Callout) 介绍了两种语法；第二种可自定义 icon</li><li>Gallery相册图库。这里写了一个 <code>&lt;div class="gallery-group-main"&gt;</code> 来放 <code>galleryGroup</code> ，似乎只是为了方便计算分割线位置</li><li><code>tag-hide</code> 隐藏一部分</li><li>mermaid</li><li>Tabs</li><li>Button</li><li>inlineImg</li><li>label 高亮词句 <code>&#123;% label text color %&#125;</code> ，可选 <code>default/blue/pink/red/purple/orange/green</code></li></ul></li><li>聊天区</li><li>Math<ul><li>还是MathJax方便些</li></ul></li><li>美化/特效<ul><li>自定义主题色</li><li>网站背景</li><li>footer 背景</li><li>打字效果 用了 <a href="https://github.com/disjukr/activate-power-mode">activate-power-mode</a></li><li>背景特效</li><li>鼠标点击效果</li><li>页面美化｜改变ol、ul、h1-h5的样式</li><li>自定义字体和字体大小</li><li>网站副标题（打字机效果）</li><li>主页top_img显示大小</li><li>页面加载动画preloader（加载速度）</li></ul></li><li>PWA<ul><li>需要插件 <a href="https://github.com/JLHwung/hexo-offline">hexo-offline</a></li><li>可以尝试用 Google 的 <code>Lighthouse</code> 来检查网页性能</li></ul></li><li>字数统计，需要 <code>hexo-wordcount</code> 插件</li><li>图片大图查看模式｜但张图全屏；图片组合</li><li>Snackbar 弹窗</li><li>其他配置<ul><li>CSS 前缀。有些 CSS 并不是所有浏览器都支持，需要增加对应的前缀才会生效。（增加20%体积）</li><li>Open Graph。在 <code>head</code> 里增加一些 meta 资料，例如缩略图、标题、时间等等。当你分享网页到一些平台时，平台会读取 Open Graph 的内容，展示缩略图，标题等等信息。</li><li>Instantpage。当鼠标悬停到链接上超过 65 毫秒时，Instantpage 会对该链接进行预加载，可以提升访问速度。</li><li><code>Pangu</code>。在网页中所有的中文字和半形的英文、数字、符号之间插入空白。</li></ul></li><li>Pjax｜点击链接，通过ajax更新页面需要变化的部分，然后使用HTML5的pushState修改浏览器的URL地址；不用重复加载相同的资源（css/js）， 从而提升网页的加载速度。<ul><li>对于一些第三方插件，有些并不支持 pjax 。可以把网页加入到 <code>exclude</code> 里</li></ul></li><li>Inject ｜添加额外的 js/css/meta 等等东西</li><li>CDN<ul><li>这里用的是 <a href="https://www.jsdelivr.com/">jsdelivr</a></li></ul></li></ul><h4 id="评论">评论</h4><ul><li><a href="https://disqus.com/">disqus</a></li><li><a href="https://github.com/giscus/giscus/blob/main/README.zh-CN.md">giscus</a> 一个新的基于 <a href="https://docs.github.com/en/discussions">GitHub Discussions</a> 驱动的评论系统；<a href="https://giscus.app/zh-CN">主页</a>；</li></ul><h3 id="进阶">进阶</h3><ul><li><a href="https://lilu.org.cn/2021/01/31/butterfly/">进阶教程</a><ul><li>音乐</li><li>电影，用 <a href="https://github.com/jerryc127/butterfly-plugins/tree/main/hexo-butterfly-douban">hexo-butterfly-douban</a></li><li>自定义代码配色</li><li>自定义侧边栏</li><li>jQuery 加载<ul><li>主题已于 3.4.0 去除 jQuery 的引用，但是部分功能仍需要加载 jQuery（Justified Gallery和 fancybox)。</li><li>如果你仍需要使用 jQuery，可以调用主题提供的 function，防止 jQuery 多次加载。</li></ul></li><li>Gulp压缩<ul><li><a href="https://www.gulpjs.com.cn/">Gulp</a> 是一款自动化构建的工具，拥有众多的插件。而我们只需要使用到几个插件来压缩Html/css/js。</li></ul></li><li>PWA<ul><li>渐进式网络应用程式（英语：Progressive Web Apps，简称：PWA）是一种普通网页或网站架构起来的网络应用程式，但它可以以传统应用程式或原生移动应用程式形式展示给用户。</li><li>此方法是使用 Service Worker。我们使用 Workbox 这个工具生成 sw.js 以快速实现 Service Worker ，并实现页面的预缓存和页面更新后的提醒功能。</li></ul></li></ul></li></ul><h2 id="math">Math</h2><p>Butterfly 的说明文档用的 hexo-renderer-kramed 有些小问题，还是 参见 <a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/MATH.md">Next</a>，使用 <a href="https://github.com/wzpan/hexo-renderer-pandoc">hexo-renderer-pandoc</a> 渲染。</p><ul><li>注意卸载默认的 <code>hexo-renderer-marked</code> ；而 <code>hexo-renderer-kramed</code> 不会冲突但装了也没啥用。</li><li>但主题的配置文件还是要打开的，Next 主题的参见上链接；Butterfly 则是在主题配置中设置 mathjax 下的 <code>enable: true</code>。</li></ul><h3 id="latex-补课">Latex 补课</h3><h4 id="latex-math-mode">Latex math mode</h4><p>以下是（单行）公式的语法，内部排版就是用 math mode。f rom <a href="https://www1.cmc.edu/pages/faculty/aaksoy/latex/latexthree.html#">here</a>.</p><table><colgroup><col style="width: 31%" /><col style="width: 46%" /><col style="width: 22%" /></colgroup><thead><tr class="header"><th style="text-align: left;">Method</th><th style="text-align: left;">Special Characteristics</th><th style="text-align: left;">Usage</th></tr></thead><tbody><tr class="odd"><td style="text-align: left;"><code>$....$</code></td><td style="text-align: left;">None</td><td style="text-align: left;">In-line math</td></tr><tr class="even"><td style="text-align: left;"><code>\begin&#123;equation&#125; \end&#123;equation&#125;</code></td><td style="text-align: left;">Goes to a newline and center equation with label</td><td style="text-align: left;">Equations</td></tr><tr class="odd"><td style="text-align: left;"><code>\[ ....\]</code> or <code>$$...$$</code></td><td style="text-align: left;">Goes to a newline and center equation</td><td style="text-align: left;">Equations with no label</td></tr></tbody></table><h4 id="latex-多行公式">Latex 多行公式</h4><ul><li>在 Typora 和 Code 中，<code>$$</code> 包裹的直接可用 <code>\\</code> 分行，但不符合 Latex 语法；</li></ul><p>以下 from <a href="https://zhuanlan.zhihu.com/p/24502400">知乎</a></p><ul><li>单行公式<ul><li>可以用 <code>\[ \]</code> 包裹，不编号；或者 <code>equation</code> 环境，编号。</li></ul></li><li>多行公式<ul><li>简单的多个公式的堆积，我们可以用 gather 和 align 环境。gather 环境中，所有的公式都是居中的；而 align 环境可以用 &amp; 符号指定位置对齐（比如按等号对齐）。<ul><li>两个环境都默认编号可以用 <code>\notag \nonumber</code> 指定不编号！ 【在 Typora 中不编号】</li></ul></li><li>如果我们是要把一个公式拆分成多行来书写，并给出一个单独的编号，那么上面的两个环境就不那么适用了。在这里为大家介绍 split 环境。split 环境需要嵌套在 equation 环境中使用，也支持像 align 环境中那样的对齐方式（但不能多列对齐）【而在 Typora 下不在 equation 下也可以，但本身就支持 <code>\\</code> 换行也不需要】</li><li>想把多个公式组合成一个大的公式，需要用到 cases 环境（也需要在 equation 环境中）；注意在每个 case 中，公式都会被变成行内公式。可以用 <code>\dfrac</code> 命令来强制让分式变成行间公式。（如果我们想简单地解决这个问题，就需要使用 mathtools 宏包定义的 dcases 环境，用法和 cases 完全相同，但是可以以行间公式的形式来排版每个 case。）</li></ul></li></ul><h5 id="区分-align-和-aligned">区分 <code>align*</code> 和 <code>aligned</code></h5><ul><li><code>aligned</code> 必须在 <code>$$</code> 或 <code>equation</code> 即单公式中使用，可以认为是对于单公式的拓展；</li><li>而 <code>align*</code> 则是 <code>align</code> 的不加编号的版本，多公式。</li><li>两者区别可体现在行距上。</li></ul><h3 id="codetypora-实践">Code/Typora 实践</h3><ul><li>在 Code 中预览/编辑<ul><li>使用插件 <code>Markdown Preview Enhanced</code> 可以预览 <code>gather</code> 等多公式环境；</li><li>而默认的不可预览多公式环境，但支持 <code>aligned</code>（可以理解为仅支持 Latex 中的 <code>$$</code> 环境而未引入 <code>amsmath</code> 包）；</li><li>需要注意的是，尽管在这两个环境中均支持直接 <code>\\</code> 换行，<strong>但是 <code>hexo-renderer-pandoc</code> 渲染结果是不会换行的</strong>，因此还是需要用 1. <code>split, cases, aligned, gather</code> 等环境实现单公式的换行（不需要在 <code>equation</code> 包裹，可理解为 Markdown 中的 <code>$$</code> 内部默认为 Latex 的 <code>$$</code> 语法）；2. 使用 <code>align, gather</code> 等多公式环境</li></ul></li><li>最佳实践<ul><li>在 Typora 或 Code 中使用 <code>Markdown Preview Enhanced</code> 预览编辑；需要注意的是单公式的换行；</li><li>关于公式编号， <code>Markdown Preview Enhanced</code> 和 pandoc 渲染结果是一致的，而 Typora 中则无；</li><li>还有之前一些语法问题<ul><li><code>Markdown Preview Enhanced</code> 默认用的是 <code>KaTex</code> 引擎，不支持 <code>E_\hat&#123;F&#125;</code> 等结果；之前用 <code>hexo-renderer-kramed</code> 会报错，而 pandoc 不会。不支持的包括<ul><li><code>E_\hat&#123;F&#125;</code> 等上下标复杂的情况，必须用 <code>E_&#123;\hat&#123;F&#125;&#125;</code>；</li></ul></li><li>很奇怪 pandoc 默认不支持 <code>\sqrt&#123;&#123;1\over B-1&#125;&#125;</code> 这样的语法，还是用 <code>\frac&#123;&#125;&#123;&#125;</code> 比较好</li></ul></li><li>不太清楚不同渲染引擎对于（不规范）语法的处理，总而言之，使用更为规范的 Latex 可以避免很多问题！</li></ul></li></ul><h3 id="公式引用">公式引用</h3><ul><li>Next 主题中添加了公式引用的功能，需要放在 <code>equation</code> （直接放在 <code>$$</code> 中无效！）或 <code>align</code> 等环境中<ul><li>给公式一个 <code>\label&#123;&#125;</code> 标记（tag）</li><li>采用 <code>\eqref&#123;&#125;</code> 进行引用（相较于 <code>ref</code> 引用两边有括号）。</li><li>实测在 <code>Butterfly</code> 主题中也能用！</li></ul></li><li>在 Typora 中不支持；Code 的 <code>Markdown Preview Enhanced</code> 中 <code>Math Rendering Option</code> 中也只有 <code>Katex</code> 可选，无法渲染引用；</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;start&quot;&gt;Start&lt;/h2&gt;
&lt;p&gt;总体方案：采用 Hexo+Butterfly 的静态博客方案；VS Code + Typora 编辑预览，git 版本管理 + GitHub Action 部署。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;doc &lt;a href=&quot;htt</summary>
      
    
    
    
    <category term="Interest" scheme="https://lightblues.github.io/categories/Interest/"/>
    
    
    <category term="Hexo" scheme="https://lightblues.github.io/tags/Hexo/"/>
    
    <category term="建站" scheme="https://lightblues.github.io/tags/%E5%BB%BA%E7%AB%99/"/>
    
    <category term="Latex" scheme="https://lightblues.github.io/tags/Latex/"/>
    
    <category term="butterfly" scheme="https://lightblues.github.io/tags/butterfly/"/>
    
    <category term="VS Code" scheme="https://lightblues.github.io/tags/VS-Code/"/>
    
  </entry>
  
  <entry>
    <title>记一次 brew 权限错误</title>
    <link href="https://lightblues.github.io/posts/7c4c230b/"/>
    <id>https://lightblues.github.io/posts/7c4c230b/</id>
    <published>2021-04-13T16:14:57.000Z</published>
    <updated>2021-10-30T16:14:57.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题描述">问题描述</h3><p>在执行 <code>brew cleanup</code> 的时候因为权限问题报错， <code>Error: Permission denied @ apply2files</code>，具体的文件是 <code>ghostscript/9.27/Resource/CIDFSubst/paexg.ttf</code>，查看了一下是一个软连接指向 <code>/Library/TeX/Root/texmf-dist/fonts/truetype/public/ipaex/ipaexg.ttf</code>。（另外，好像没有这个文件） 而那个软链的所有者是 wheel 用户组下的 root 用户，因此出现了权限问题？（用下文中的 <code>cat /etc/group | grep wheel</code> 命令看了下这个组中只有 root 一个用户）。</p><p>于是搜到了这个问题 <a href="https://github.com/Homebrew/homebrew-core/issues/45009" class="uri">https://github.com/Homebrew/homebrew-core/issues/45009</a></p><p>看到有人的解决方案非常粗暴：直接重装 brew 【注意：会卸载所有通过 brew 安装的软件，慎用！】</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/uninstall)</span>&quot;</span></span><br><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="解决方案修改-usrlocal-权限">解决方案：修改 <code>/usr/local</code> 权限</h3><p>另一个方案是修改整个文件夹的权限（不知道是否会带来后续隐患）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami):admin /usr/<span class="built_in">local</span>/* \</span><br><span class="line">&amp;&amp; sudo chmod -R g+rwx /usr/<span class="built_in">local</span>/*</span><br></pre></td></tr></table></figure><p>然后在执行 <code>brew cleanup</code> 就没问题了。</p><h4 id="后续zsh-警告">后续：zsh 警告</h4><p>果然，新开一个终端之后，zsh 警告</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">zsh compinit: insecure directories, run compaudit for list.</span><br><span class="line">Ignore insecure directories and continue [y] or abort compinit [n]? ncompinit: initialization aborted</span><br><span class="line">complete:13: command not found: compdef</span><br><span class="line">[oh-my-zsh] Insecure completion-dependent directories detected:</span><br><span class="line">drwxrwxr-x  3 frankshi  admin  96 Oct 25 12:03 /usr/local/share/zsh</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] For safety, we will not load completions from these directories until</span><br><span class="line">[oh-my-zsh] you fix their permissions and ownership and restart zsh.</span><br><span class="line">[oh-my-zsh] See the above list for directories with group or other writability.</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] To fix your permissions you can do so by disabling</span><br><span class="line">[oh-my-zsh] the write permission of &quot;group&quot; and &quot;others&quot; and making sure that the</span><br><span class="line">[oh-my-zsh] owner of these directories is either root or your current user.</span><br><span class="line">[oh-my-zsh] The following command may help:</span><br><span class="line">[oh-my-zsh]     compaudit | xargs chmod g-w,o-w</span><br><span class="line"></span><br><span class="line">[oh-my-zsh] If the above didn&#x27;t help or you want to skip the verification of</span><br><span class="line">[oh-my-zsh] insecure directories you can set the variable ZSH_DISABLE_COMPFIX to</span><br><span class="line">[oh-my-zsh] &quot;true&quot; before oh-my-zsh is sourced in your zshrc file.</span><br></pre></td></tr></table></figure><p>里面写的很详细了！并且提到了 <code>compaudit</code> 来查看是那个目录有安全隐患。 （下面的那几条信息好像是我输入了 n 之后出现的？）</p><p>总之，就是要改某些文件夹的所有者和权限。 利用 <code>compaudit</code> 发现目录为 <code>/usr/local/share/zsh</code>。 我是直接将该目录的权限修改为 755，即 <code>sudo chmod -R 755 zsh</code>，再启动一个终端（或者 <code>source ~/.zshrc</code> ）显示正常。</p><p>参见 <a href="https://github.com/zsh-users/zsh-completions/issues/433" class="uri">https://github.com/zsh-users/zsh-completions/issues/433</a>；对于 zsh 报的权限问题，通用思路是</p><ol type="1"><li>run <code>compaudit</code> and it will give you a list of directories it thinks are unsecure</li><li>run <code>sudo chown -R username:root target_directory</code></li><li>run <code>sudo chmod -R 755 target_directory</code></li></ol><h3 id="补充关于-wheel-用户组">补充：关于 wheel 用户组</h3><p>参见 <a href="https://www.cnblogs.com/kerrycode/p/7053118.html">Linux下Wheel用户组介绍</a></p><blockquote><p>在Linux中为了更进一步加强系统的安全性，很有必要建立了一个管理员的组，只允许这个组的用户来执行“su -”命令登录为root用户，而让其他组的用户即使执行“su -”、输入了正确的root密码，也无法登录为root用户。在UNIX和Linux下，这个组的名称通常为“wheel”。而这个是在配置文件/etc/pam.d/su里面配置的。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;问题描述&quot;&gt;问题描述&lt;/h3&gt;
&lt;p&gt;在执行 &lt;code&gt;brew cleanup&lt;/code&gt; 的时候因为权限问题报错， &lt;code&gt;Error: Permission denied @ apply2files&lt;/code&gt;，具体的文件是 &lt;code&gt;ghost</summary>
      
    
    
    
    <category term="Software" scheme="https://lightblues.github.io/categories/Software/"/>
    
    
    <category term="macOS" scheme="https://lightblues.github.io/tags/macOS/"/>
    
    <category term="brew" scheme="https://lightblues.github.io/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>记mongo高占用 &amp; launchd 与 brew 初探</title>
    <link href="https://lightblues.github.io/posts/6f882ecb/"/>
    <id>https://lightblues.github.io/posts/6f882ecb/</id>
    <published>2021-04-13T16:10:05.000Z</published>
    <updated>2021-10-30T16:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>问题描述：很长时间的问题是可以看到一个 <code>mongo</code> 进程高占用，CPU占用率 始终接近 100（即使通过 <code>brew services stop mongodb-community</code> 关闭服务后也是如此。</p><h3 id="临时解决">（临时）解决</h3><p>从 monitor 中看到该名为 <code>mongo</code> 的进程的父进程是 <code>launchd</code> ，也就是开机启动？（存疑）【因为，实际上，通过 <code>brew services run mongodb-community</code> 启动的服务是 <code>mongod</code>，并不会出现占用高的问题。】</p><p>将该进程手动结束后即可。</p><p>补充：通过 iTerm 连接 mongo 也会生成名为 <code>mongo</code> 的进程，但其父进程为 <code>zsh</code> 也不会出现高占用的问题。</p><h2 id="launchd-与启动管理">launchd 与启动管理</h2><h3 id="关于-launchd-进程">关于 launchd 进程</h3><p>参见 <a href="https://www.cnblogs.com/timelyxyz/p/3586136.html">Mac系统的launchd、守护进程daemon</a></p><p>Mac的守护进程目录有以下几处：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">~/Library/LaunchAgents  <span class="comment"># 用户的进程</span></span><br><span class="line">/Library/LaunchAgents   <span class="comment"># 管理员设置的用户进程</span></span><br><span class="line">/Library/LaunchDaemons  <span class="comment"># 管理员提供的系统守护进程</span></span><br><span class="line">/System/Library/LaunchAgents    <span class="comment"># Mac操作系统提供的用户进程</span></span><br><span class="line">/System/Library/LaunchDaemons   <span class="comment"># Mac操作系统提供的系统守护进程</span></span><br></pre></td></tr></table></figure><p>另：<code>/Library/StartupItems</code> 这个目录下也有可能存在开机启动项目的配置 以上是launchd的相关配置的存放目录，可以看到，一般我们个人编写的守护进程，都应该放到~/Library/LaunchAgents目录里面。</p><h3 id="launchctl-启动进程控制">launchctl 启动进程控制</h3><p>参见 <a href="https://www.jianshu.com/p/eee8a7de179c">控制macOS的开机启动</a></p><p>上一节几个目录下存放的是各项服务的配置文件，而如何管理启动服务？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看所有自启动项</span></span><br><span class="line">launchctl list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加自启动项</span></span><br><span class="line">//launchctl工具提供了一系列接口方便使用launchd程序</span><br><span class="line">launchctl load ~/Library/LaunchAgents/aria2.plist</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动自启动项</span></span><br><span class="line">launchctl start aria2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除自启动项</span></span><br><span class="line">launchctl unload ~/Library/LaunchAgents/aria2.plist</span><br></pre></td></tr></table></figure><h3 id="librarylaunchagents-文件夹"><code>~/Library/LaunchAgents/</code> 文件夹？</h3><p>之前看到 Github 上有通过删除 <code>~/Library/LaunchAgents/</code> 文件夹下相应文件来删除自启动项的。但按照上文的说法，似乎这里仅仅是个配置文件？</p><p>以 ElasticSearch 为例</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ cat homebrew.mxcl.elasticsearch.plist</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">plist</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="meta-string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>KeepAlive<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">false</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>Label<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>homebrew.mxcl.elasticsearch<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>ProgramArguments<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">array</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/opt/elasticsearch/bin/elasticsearch<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">array</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>EnvironmentVariables<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>RunAtLoad<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>WorkingDirectory<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardErrorPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var/log/elasticsearch.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">key</span>&gt;</span>StandardOutPath<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">string</span>&gt;</span>/usr/local/var/log/elasticsearch.log<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>正确的使用，似乎应该通过上面的 <code>launchctl load</code> 来进行注册？ 【当然，删除应该也是可以的；另外，<code>brew services start</code> 有所不一样。 我好像将该文件夹下的 <code>homebrew.mxcl.mongodb-community</code> 删除了，但通过 <code>brew services start</code> 仍然会生成自启动项 —— 应该是直接关联了模板文件，见下。】</p><h4 id="添加自启动项">添加自启动项</h4><p>看到这个问题 <a href="https://stackoverflow.com/questions/8014500/macosx-autostart-mysql-on-boot" class="uri">https://stackoverflow.com/questions/8014500/macosx-autostart-mysql-on-boot</a> 里面提到了如何配置 mysql 的自动启 —— 对于 brew 安装的应该是不用的，<strong>因此也适用于下载包来进行安装的软件</strong>？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/Library/LaunchAgents</span><br><span class="line">cp `brew --prefix mysql`/*mysql*.plist ~/Library/LaunchAgents/</span><br><span class="line">launchctl load -w ~/Library/LaunchAgents/*mysql*.plist</span><br></pre></td></tr></table></figure><p>可见，就是将 mysql 本身的自启动项配置文件复制到了 <code>~/Library/LaunchAgents</code> 下，然后使用 <code>launchctl load</code> 添加配置。</p><h4 id="brew---prefix-查看安装位置">brew --prefix 查看安装位置</h4><p>注意到，上面用到了 <code>brew --prefix</code> 查看命令 <code>brew --prefix --help</code>：「Display Homebrew's install path.」</p><p>例如 <code>brew --prefix mongodb-community</code> 的结果就是 <code>/usr/local/opt/mongodb-community</code>。</p><h3 id="查看搜索自启动项">查看/搜索自启动项</h3><p>用 <code>launchctl list</code> 命令来查看。例如，可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">launchctl list | grep mongo</span><br></pre></td></tr></table></figure><p>来搜索 mongo 启动项。</p><p>返回的一个结果 <code>33814 0 homebrew.mxcl.mongodb-community</code> 的配置文件在 <code>~/Library/LaunchAgents</code> 目录下。</p><h3 id="补充">补充</h3><p>这个关于 <a href="https://medium.com/@petehouston/install-and-config-redis-on-mac-os-x-via-homebrew-eb8df9a4f298">brew 管理 Redis</a> 的教程也列出了一些相关命令，包括 <code>launchctl</code> 的使用，redis 的配置文件 <code>/usr/local/etc/redis.conf</code> 等。</p><h2 id="brew-使用">brew 使用</h2><h3 id="brew-services">brew services</h3><p>以下是 <code>brew services -h</code> 的结果，可知</p><ul><li><code>brew services start</code> 会启动服务<strong>并且设置开机自启</strong></li><li><code>brew services run</code> 则单纯启动，而不会设置开机自启</li><li><code>brew services stop</code> 会关闭服务并且取消开机自启</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">$ brew services -h</span><br><span class="line">Usage: brew services [subcommand]</span><br><span class="line"></span><br><span class="line">Manage background services with macOS&#x27; launchctl(1) daemon manager.</span><br><span class="line"></span><br><span class="line">If sudo is passed, operate on /Library/LaunchDaemons (started at boot).</span><br><span class="line">Otherwise, operate on ~/Library/LaunchAgents (started at login).</span><br><span class="line"></span><br><span class="line">[sudo] brew services [list]:</span><br><span class="line">    List all managed services for the current user (or root).</span><br><span class="line"></span><br><span class="line">[sudo] brew services run (formula|--all):</span><br><span class="line">    Run the service formula without registering to launch at login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services start (formula|--all):</span><br><span class="line">    Start the service formula immediately and register it to launch at login</span><br><span class="line">(or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services stop (formula|--all):</span><br><span class="line">    Stop the service formula immediately and unregister it from launching at</span><br><span class="line">login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services restart (formula|--all):</span><br><span class="line">    Stop (if necessary) and start the service formula immediately and register</span><br><span class="line">it to launch at login (or boot).</span><br><span class="line"></span><br><span class="line">[sudo] brew services cleanup:</span><br><span class="line">    Remove all unused services.</span><br><span class="line"></span><br><span class="line">      --all                        Run subcommand on all services.</span><br><span class="line">  -d, --debug                      Display any debugging information.</span><br><span class="line">  -q, --quiet                      Make some output more quiet.</span><br><span class="line">  -v, --verbose                    Make some output more verbose.</span><br><span class="line">  -h, --help                       Show this message.</span><br></pre></td></tr></table></figure><h3 id="brew-info">brew info</h3><p>描述是 「Display brief statistics for your Homebrew installation.」非常有用！ 例如下面 <code>brew info mongodb-community</code> 显示了启动 mongo 服务的命令； 另外，对于如未安装的 musql 服务也可显示相关信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ brew info mongodb-community</span><br><span class="line">mongodb/brew/mongodb-community: stable 4.4.4</span><br><span class="line">High-performance, schema-free, document-oriented database</span><br><span class="line">https://www.mongodb.com/</span><br><span class="line">/usr/local/Cellar/mongodb-community/4.4.3 (11 files, 156.8MB) *</span><br><span class="line">  Built from source on 2021-03-18 at 14:34:09</span><br><span class="line">From: https://github.com/mongodb/homebrew-brew/blob/HEAD/Formula/mongodb-community.rb</span><br><span class="line">==&gt; Dependencies</span><br><span class="line">Recommended: mongodb-database-tools ✘</span><br><span class="line">==&gt; Options</span><br><span class="line">--without-mongodb-database-tools</span><br><span class="line"> Build without mongodb-database-tools support</span><br><span class="line">==&gt; Caveats</span><br><span class="line">To have launchd start mongodb/brew/mongodb-community now and restart at login:</span><br><span class="line">  brew services start mongodb/brew/mongodb-community</span><br><span class="line">Or, if you don&#x27;t want/need a background service you can just run:</span><br><span class="line">  mongod --config /usr/local/etc/mongod.conf</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ brew info mysql</span><br><span class="line">mysql: stable 8.0.23 (bottled)</span><br><span class="line">Open source relational database management system</span><br><span class="line">https://dev.mysql.com/doc/refman/8.0/en/</span><br><span class="line">Conflicts with:</span><br><span class="line">  mariadb (because mysql, mariadb, and percona install the same binaries)</span><br><span class="line">  percona-server (because mysql, mariadb, and percona install the same binaries)</span><br><span class="line">Not installed</span><br><span class="line">From: https://github.com/Homebrew/homebrew-core/blob/HEAD/Formula/mysql.rb</span><br><span class="line">License: GPL-2.0-only</span><br><span class="line">==&gt; Dependencies</span><br><span class="line">Build: cmake ✘</span><br><span class="line">Required: openssl@1.1 ✘, protobuf ✘</span><br><span class="line">==&gt; Caveats</span><br><span class="line">We&#x27;ve installed your MySQL database without a root password. To secure it run:</span><br><span class="line">    mysql_secure_installation</span><br><span class="line"></span><br><span class="line">MySQL is configured to only allow connections from localhost by default</span><br><span class="line"></span><br><span class="line">To connect run:</span><br><span class="line">    mysql -uroot</span><br><span class="line"></span><br><span class="line">To have launchd start mysql now and restart at login:</span><br><span class="line">  brew services start mysql</span><br><span class="line">Or, if you don&#x27;t want/need a background service you can just run:</span><br><span class="line">  mysql.server start</span><br></pre></td></tr></table></figure><h2 id="mongo-任务管理">mongo 任务管理</h2><p><code>db.currentOp()</code> 可查看在执行的任务？而 <code>db.killOp(290014)</code> 的参数为 <code>opid</code> 的值。 与本次问题无关。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;问题描述：很长时间的问题是可以看到一个 &lt;code&gt;mongo&lt;/code&gt; 进程高占用，CPU占用率 始终接近 100（即使通过 &lt;code&gt;brew services stop mongodb-community&lt;/code&gt; 关闭服务后也是如此。&lt;/p&gt;
&lt;h3 id</summary>
      
    
    
    
    <category term="Software" scheme="https://lightblues.github.io/categories/Software/"/>
    
    
    <category term="macOS" scheme="https://lightblues.github.io/tags/macOS/"/>
    
    <category term="brew" scheme="https://lightblues.github.io/tags/brew/"/>
    
    <category term="launchctl" scheme="https://lightblues.github.io/tags/launchctl/"/>
    
  </entry>
  
  <entry>
    <title>「隐私」议题 + Apple 原生软件新体验</title>
    <link href="https://lightblues.github.io/posts/e9637c65/"/>
    <id>https://lightblues.github.io/posts/e9637c65/</id>
    <published>2021-04-11T03:46:43.000Z</published>
    <updated>2022-10-08T15:36:21.772Z</updated>
    
    <content type="html"><![CDATA[<p>鉴于最近的一些事件（包括 跨平台商品推荐、对软件隐私条例的阅读、邮箱被盗用 等），对于「隐私」进行了一定反思和实践。 想来之前对其没有太多的关注，因此可能在各个场景下泄露了很多信息而不自知，之后会对这一议题进行更多的关注和实践。</p><span id="more"></span><h2 id="关于隐私问题">关于隐私问题</h2><p>当然，如何去定义「隐私安全」也是一个很难且模糊的问题；而对于自己一个小白来说更是如此。 对于自己来说，对于这一问题的关注出发于个体对于「被窥探」的本能厌恶和恐惧，理想的是非常朦胧的「保有个体自由」，期待：</p><ol type="1"><li>平台之间的数据独立：能够在不同的平台呈现/扮演个性中不同分量，而不被跨平台追踪；</li><li>和现实的隔离：关乎个人物理信息的方方面面，不完全罗列 —— <strong>身份证、手机号、居住地（包括定位）、照片（抵制人脸识别）、教育和工作信息</strong> 等；</li><li>建立在上述两点之上的「虚拟性」：套用一句话，「对方不知道这个账号之下是人是狗」；</li></ol><p>目前的总体实践原则：基于对 Apple 和 Google 的相对信任，减少其他平台的账号注册和信息泄露。</p><p>因此，以下所讨论的多是从一些更「便捷」的软件转为 Apple 原生，去选择某种「不方便」；当然，不涉及任何道德判断，仅做个人反思与实践记录。</p><h3 id="相关讨论引">相关讨论（引）</h3><h4 id="手机隐私实践">手机隐私实践</h4><p>少数派 <a href="https://sspai.com/post/65277">如何更好地保护手机数据隐私？这 10 款 App 你可能用得上</a> 介绍了</p><ul><li>图片<ul><li>删除照片的 EXIF 信息：EXIF Viewer &amp; Photo EXIF Editor</li><li>隐私信息打码：归空 &amp; 纯纯打码</li></ul></li><li>上网<ul><li>保护网络浏览、搜索信息：DuckDuckGo</li><li>屏蔽网页追踪：AdGuard</li></ul></li><li>信息安全<ul><li>保护真实号码：运营商小号 &amp; 阿里小号 &amp; Google Voice</li><li>加密邮箱：ProtonMail</li></ul></li></ul><h4 id="数字生活入门指南">数字生活（入门）指南</h4><p>还有这篇 <a href="https://sspai.com/post/62123">写给大学新生的数字指南</a> 谈了数字生活的几个方面</p><ul><li>手机号</li><li>邮箱</li><li>ID - 网名</li><li>域名</li><li>密码管理</li></ul><h4 id="关于密码管理的讨论">关于密码管理的讨论</h4><p><a href="https://sspai.com/post/35519">如何设置密码才更安全高效？我的密码管理方法</a> 其实讲得有点细碎不够体系，但还是有很多可呼应的地方</p><ul><li>密码管理<ul><li>尽量减少同一密码的多次使用</li><li>大平台一定要有独立的密码</li><li>尽量选择第三方登录而不是注册新账号</li></ul></li><li>密码分类<ul><li>最重要的账号：支付、社交、第三方</li><li>可以第三方登录的</li><li>需要独立注册的</li><li>注册一次就不会再回来用的</li></ul></li></ul><h2 id="apple-原生软件尝试替换">Apple 原生软件尝试/替换</h2><h3 id="地图">地图</h3><p>继上周从同学那儿发现 iOS 原生的 maps 也「堪用」之后，今天下载尝试了 maps，本地化还不错。</p><ul><li>缺点<ul><li>一个问题是 maps 无法单独切换软件语言（只能在设置中切换地图标记的语言，但是软件的界面仍然是英文的）；然而由于地图还是显示中文的，所以实际上对于使用体验的影响也不大（况且，最近常想到的一点：<strong>现今时代，有时需刻意制造一种「不方便」</strong>）</li></ul></li><li>优点<ul><li>时间预估也还可以，定位和导航也都堪用；</li><li>最满意的一点，是和原生系统的交互非常好，例如可以和 Contacts 中保存的地址交互；</li></ul></li></ul><h3 id="输入法">输入法</h3><p>iOS 输入法换成原生 inputs 之后，也尝试逃离「搜狗输入法」。初步体验之后，发现中文「简体输入法」的体验其实还不错。</p><ul><li>转换/技巧<ul><li>中英文切换，相较于搜狗好用的 Shift 键，设置中可配置为「中/英」（长按则为大写锁定，而想要暂时输入大写符号可按住 <code>Shift</code> 键的同时键入）；</li><li>对于 <code>「」</code> 可采用组合键 <code>Shift+[]</code> ；测试过在 Chrome 地址栏和 MWeb 中，单直角引号环境下重复上述组合键可输入 <code>『』</code>，但是在一些第三方环境例如 iCity 网页版中就无法成立；</li><li>比较困难的是代码符号，现有两种方案：1. 切换为英文；2. 自定义文本替换，比如定义 <code>co</code> 和 <code>code</code>。目前都在使用。<ul><li>另外，有人回复说「用 karabiner 把左 ctrl 或者右 shift 改成 ` 符号」，考虑到兼容性和 less 原则，暂不尝试</li></ul></li><li>其他一些不方便之处配合 <code>Control+Command+Space</code> <strong>唤出符号键</strong> 来解决吧～</li></ul></li><li>讨论<ul><li>关于是否要在中文中使用英文标点，配置中也可设置，但考虑到习惯问题暂时放弃。1. 事实上，仅仅是「半角/全角」的切换，因此像是英文下的 <code>\</code> 和代码符号仍然无法使用；2. 还有我经常使用的 <code>【】</code> 标点；</li><li>关于中英文之间自动加空格，V2EX 上 <a href="https://www.v2ex.com/t/476875">有过讨论</a>，其中提到不应该自动化处理，想来也有道理，「形成肌肉记忆」之后自主去添加更为合理；</li></ul></li><li>好用的地方<ul><li>输入中文的 emoji 名字后可直接选择 😁；其实只有一小部分，emoji 的中英文名字对照参见 <a href="https://www.emojiall.com/zh-hans/all-emojis" class="uri">https://www.emojiall.com/zh-hans/all-emojis</a>；（当然自己日常使用也不会用到很多）</li></ul></li><li>几个可吐槽的地方：<ul><li>词汇学习非常之糟糕，输了一遍之后第二遍仍然找不到姓名/词汇（应该是要反复很多次才可）；另外，如果不重复的非常「健忘」</li><li>还有除了「文本替换」之外，设备之间似乎不会同步（存疑，或者说同步周期很慢）</li></ul></li></ul><p>参 V2EX 上的讨论 <a href="https://www.v2ex.com/t/502453">Apple 各设备之间的输入法会同步词库吗</a> 当然，这些特性在一定程度上保护了个人隐私 —— 还是选择问题，在于你是否要是否愿意去接受这种「不方便」。</p><p>附一篇 <a href="https://sspai.com/post/31525">技巧：Mac 里的文字输入效率</a> 但「不折腾」为原则，目前不想细看……</p><h2 id="邮箱">邮箱</h2><p>【其实邮箱的实践才关乎这里的「隐私」议题。目前总体就是从「网易邮箱大师」转为原生 Mail 和网页版。 又是一个折腾了很久的问题，以下摘录自己的一些思考/实践（原文涉及隐私就不放了，主要是自己懒得重新写了）。 自己也用不来邮箱，正在摸索中……】</p><h3 id="todo-list">TODO list</h3><ul><li>[x] 清空邮箱</li><li>[x] Gmail 使用学习<ul><li>官方帮助 <a href="https://support.google.com/mail" class="uri">https://support.google.com/mail</a></li><li>Google Workspace 的教程，例如这一篇 <a href="https://support.google.com/a/users/answer/9260550?hl=zh-Hans&amp;ref_topic=9259942">管理收件箱</a> 很赞</li></ul></li><li>用哪些邮箱<ul><li>Gmail 主邮箱<ul><li>需不需要副邮箱？</li></ul></li><li>参 macOS 设置中 「Internet Accounts」中的列表：iCloud, Microsoft Exchange, Google, yahoo, 163, 126, QQ</li></ul></li><li>解决 Gmail 的使用问题<ul><li>[ ] 学点 Surge？</li><li>[ ] 常规解决：用 Proxifier？【失败】参见 <a href="https://www.xiebruce.top/1061.html">这一篇</a></li><li>[x] 替代方案：采用 Chrome 程序的方式，启用「桌面通知」（在 Gmail 的配置 - 常规 - 桌面通知 中）参见 <a href="https://support.google.com/mail/answer/1075549?hl=zh-Hans">这里</a></li></ul></li><li>邮箱软件的选择问题<ul><li>原生邮箱的隐私性是主要因素<ul><li>和系统的集成度非常高</li><li>「window - connect doctor」非常好用！可以监测网络情况（考虑到邮件的特殊性，之前折腾了很久，在 global 和 rules 之间反复横跳，失败太多次了）</li></ul></li><li>缺点：配置相对比较复杂</li></ul></li></ul><h3 id="当前实践">当前实践</h3><p>总结一下目前的配置情况：</p><ul><li>Internet Accounts<ul><li>在 macOS 的「Internet Accounts」中配置了 iCloud, Outlook(Microsoft Exchange), Google, Yahoo 和 FDU 邮箱</li><li>毕竟这些账户和 Mail, Contacts, Calendars, Notes 等的集成度较高；</li><li>但实际上点选了 「Mail」 的也只有 iCloud 和 FDU 邮箱，主要是网络问题；</li></ul></li><li>Mail<ul><li>就「Mail」应用来说，Gmail 暂不去折腾了；</li><li>另外几个国外账号的稳定性也不是很好；另外 iCloud 邮箱居然在全局模式下网络无法连接；</li><li>less 原则：iCloud 本身就不常用，但是 Apple 自家所以先挂着；FDU 邮箱是需要接收信息；FDU</li></ul></li><li>Chrome APP<ul><li>转 Chrome APP 居然也很好用，包括 Gmail, Outlook，另外 iCloud mail, FDU 也设置了权且作为冗余吧</li><li>其中 Gmail, Outlook 是支持桌面通知的，但 Gmail 配置好了居然无效，可能仍然不是通过 HTTP 接收的？</li></ul></li><li>配合手机端「Gmail」使用<ul><li>首先自然是为了解决 Gmail 的通知问题；还有点很重要的好处是 Google 账号的管理（见下）</li></ul></li></ul><h3 id="邮件管理">邮件管理</h3><p>Gmail 复杂但也好用，可翻阅其文档。</p><ul><li>[ ] to be added...</li></ul><h4 id="转邮件的层级管理">【转】邮件的层级管理</h4><p>来自知乎上关于 <a href="https://www.zhihu.com/question/21361411">如何管理多个邮箱</a></p><p>根据你的情况，我建议你可以分层级来管理自己的邮箱/账号。</p><ul><li>第一层：你有一个单独用来注册账户的邮箱，那么不重要的网站全部用其注册即可。然后你就可以完全不用管这个邮箱了，放那长草就行了。不要在客户端（尤其是移动端）里添加它，定期（比如两个星期）去网页端看一下就可以了。</li><li>第二层：银行、亚马逊等网站，用另一个邮箱注册，然后想办法退订或屏蔽广告、优惠信息等无用的邮件，或者把账单等有用的邮件自动转发到第三层。这一层的邮箱可以添加到你电脑上的客户端，但是未必需要添加到移动端，因为基本不需要处理。</li><li>第三层：也就是你的私人或工作邮箱，真正用来通讯的邮箱，不要用来注册任何账号，把它添加到你的电脑和移动客户端并设置提醒和推送。这些是真正需要及时处理的。可以根据自己的情况灵活地增减层级。</li></ul><h4 id="域名邮箱">域名邮箱？</h4><p>起因是看到知乎上一篇介绍利用微信企业邮箱来给自购的域名配置邮件服务的 <a href="https://zhuanlan.zhihu.com/p/22421809">文章</a>，但这个以「个性化」为目的的折腾也过于无趣…… 或许有精力可折腾自建个邮箱服务器</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;鉴于最近的一些事件（包括 跨平台商品推荐、对软件隐私条例的阅读、邮箱被盗用 等），对于「隐私」进行了一定反思和实践。 想来之前对其没有太多的关注，因此可能在各个场景下泄露了很多信息而不自知，之后会对这一议题进行更多的关注和实践。&lt;/p&gt;</summary>
    
    
    
    <category term="Interest" scheme="https://lightblues.github.io/categories/Interest/"/>
    
    
    <category term="Apple" scheme="https://lightblues.github.io/tags/Apple/"/>
    
    <category term="隐私" scheme="https://lightblues.github.io/tags/%E9%9A%90%E7%A7%81/"/>
    
    <category term="邮箱" scheme="https://lightblues.github.io/tags/%E9%82%AE%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>NAS + 反向代理服务设置及其他</title>
    <link href="https://lightblues.github.io/posts/e8011b29/"/>
    <id>https://lightblues.github.io/posts/e8011b29/</id>
    <published>2021-04-06T09:38:53.000Z</published>
    <updated>2022-10-08T15:36:21.760Z</updated>
    
    <content type="html"><![CDATA[<p>IOIOX 上有一系列完整的教程……</p><ul><li>IOIOX Synology 专栏 <a href="https://www.ioiox.com/synology.html" class="uri">https://www.ioiox.com/synology.html</a></li><li>IOIOX FRP 内网穿透 专栏 <a href="https://www.ioiox.com/frp.html" class="uri">https://www.ioiox.com/frp.html</a></li><li>大佬专门的 FRP 网站的教程页 <a href="https://freefrp.net/docs.html" class="uri">https://freefrp.net/docs.html</a>；<ul><li>FRP 的官网在 <a href="https://gofrp.org/" class="uri">https://gofrp.org/</a> TODO</li></ul></li></ul><h3 id="关于-ssl-证书">关于 SSL 证书</h3><p>原理有待学习。 IOIOX 上有 <a href="https://www.ioiox.com/archives/12.html">腾讯云的免费申请教程</a>；当然直接进其后台有更为简洁的方案。 问题是腾讯云只支持 单域名的证书；而泛域名（例如所有的二级有域名 <code>*.example.com</code>）都是要收费的；网站上另外的 <a href="https://www.ioiox.com/archives/13.html">免费申请Let's Encrypt泛域名SSL证书教程</a> 教程好像失效了。</p><h2 id="反向代理内网穿透-实现无端口访问">反向代理+内网穿透 实现无端口访问</h2><p>主要参考：<a href="https://www.ioiox.com/archives/85.html">群晖NAS反向代理 + 内网穿透 = 无需端口访问内网所有服务无需端口</a></p><h3 id="基本原理">基本原理</h3><p><code>http</code>协议标准端口为<code>80</code>,<code>https</code>协议标准端口为<code>443</code>. 一个网站或者 web 服务是<code>同时支持</code> http 和 https 两种协议,目前已经慢慢普及 https 的加密协议,本文不再详细介绍,请自行搜索研究.</p><h4 id="反向代理">反向代理</h4><p><strong>群晖反向代理服务器</strong> 首先占用群晖NAS的<code>80/443</code>端口,使用任何域名无端口访问(上面提到过无端口即是用 <strong>80/443</strong> 端口),都会访问到反向代理服务器,由它根据来访域名再次转发给本机或者内网其他的服务. 例如普遍的VPS服务器安装的 <strong>nginx</strong> 就是反向代理服务器,所以一个服务器是可以配置多个网站同时使用 <strong>80/443</strong> 端口的,群晖中的 <strong>Web Station</strong> 和 <strong>反向代理服务器</strong> 都是使用的 <strong>nginx</strong>.</p><h4 id="内网穿透">内网穿透</h4><p>前言已经明确家庭宽带是没有<code>80/443</code>端口的,那么上文提到反向代理服务器是使用<code>80/443</code>端口,外网是无法访问到的,那么就需要配合内网穿透服务来使外网能够访问到群晖的反向代理服务器的<code>80/443</code>端口.<br />内网穿透需要一台拥有 <code>公网IP</code> 和 <code>80/443</code> 端口的服务器,一般云服务商提供的VPS服务都可以满足需求,并部署 frps 服务器端.下文简称为<code>frp服务器</code>.所以当你想访问内网的网站,实际上是先访问到 <code>frp服务器的80/443端口</code>, 在由<code>frp 服务器</code>转发到内网的<code>群晖反向代理服务器</code> 的 <code>80/443</code> 端口, 在由<code>群晖反向代理服务器</code> 转发给 <code>5000/5001/3001/80</code>等端口.</p><p>由此可见,其实内网穿透 <code>frp 服务器</code> 本身也是一个反向代理服务器,高级用户完全可以无需使用群晖的反向代理服务器,直接在<code>frpc.ini</code> 中配置各个域名和内网端口即可实现.</p><p>但是我发现很多新手用户对 <code>frpc</code> 的使用并不熟悉,而且部分服务例如本文提到的<code>人人影视</code>以及本站推荐的<code>Bitwarden</code>密码管理服务都没有原生提供<code>https</code>支持, 虽然<code>frpc</code>是可以配置证书的, 但对于新手来说更加复杂, 所以才有了本文这种以群晖反向代理为核心的方案:</p><ul><li>内网穿透<code>frp服务器</code>提供<code>80/443</code>端口穿透.</li><li>群晖反向代理服务器提供<code>https</code>及<code>SSL 证书</code>支持,并提供反向代理到内网各设备和服务.</li></ul><h3 id="基本配置">基本配置</h3><p>准备<code>frp 服务器信息</code>,本站已提供免费服务.详情参考:<a href="https://www.ioiox.com/frp.html">FRP内网穿透专栏</a>.<br />获取<code>服务器地址</code>,<code>端口</code>,<code>Token</code>.</p><ul><li>服务器地址: free.frp.ioiox.com</li><li>端口: 7007</li><li>Token: www.ioiox.com</li></ul><p>配置例如<code>*.ioiox.com</code>的泛域名,<code>CNAME</code>指向<code>frp 服务器地址</code>.其含义是指访问任何二级域名都是访问到<code>frp 服务器</code>, 由<code>frp 服务器</code>转发到内网<strong>群晖反向代理服务器</strong>.</p><h4 id="配置内网穿透">配置内网穿透</h4><p>内网穿透客户端<code>frpc</code>的安装参考<a href="https://www.ioiox.com/frp.html">FRP内网穿透专栏</a>一文中的<strong>客户端 frpc 安装教程汇总</strong>, 推荐使用<code>docker</code>方式安装. 【下文有摘录】</p><p>配置<code>frpc.ini</code>如下:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = free.frp.ioiox.com</span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7007</span></span><br><span class="line"><span class="attr">token</span> = www.ioiox.com</span><br><span class="line"></span><br><span class="line"><span class="section">[http_xxxxxxx]</span></span><br><span class="line"><span class="attr">type</span> = http</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.4</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">80</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.ioiox.com</span><br><span class="line"></span><br><span class="line"><span class="section">[https_xxxxxxx]</span></span><br><span class="line"><span class="attr">type</span> = https</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.4</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">443</span></span><br><span class="line"><span class="attr">custom_domains</span> = *.ioiox.com</span><br></pre></td></tr></table></figure><h4 id="配置群晖反向代理">配置群晖反向代理</h4><p>控制面板 - 应用程序门户 - 反向代理服务器</p><p>你可以根据需求自行在此配置更多反向代理设置,可以代理内网的任何设备,例如群晖NAS,路由器,虚拟机,树莓派等等.同时反向代理服务器还可以为不提供 https 支持的服务提供<code>https</code>及<code>SSL 证书</code>. 【注意】可直接对于 https 的地址配置为本地的 http 地址，这一点非常方便。</p><h4 id="配置证书">配置证书</h4><p>配置完成后在 <strong>安全性 - 证书</strong> 中把新增的反向代理配置相应的证书.</p><h2 id="synology-用-docker-安装-frpc-内网穿透">Synology 用 Docker 安装 frpc 内网穿透</h2><p>参考 <a href="https://www.ioiox.com/archives/26.html">群晖NAS使用Docker安装配置frpc内网穿透教程</a></p><h3 id="配置域名解析">配置域名解析</h3><p>首先将需要使用的域名在域名解析服务商控制台设置CNAME指向 frp 服务器地址. 例如，按照下面的配置，可设置一条类型为 <code>CNAME</code> 的主机记录为 <code>nas.ioiox.com</code> 记录为 <code>frp.freefrp.net</code> 的解析条目。</p><h3 id="配置-docker">配置 Docker</h3><p>在 Docker 中搜索下载 <code>stilleshan/frpc</code></p><p>配置 <code>frpc.ini</code> 。上面一节中，是将整个泛域名都交给群晖自带的反向代理服务去执行了；下例中直接在这个文件中进行配置，例如这里是 DSM。</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = frp.freefrp.net     <span class="comment"># 服务器IP或者地址</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span>                <span class="comment"># 服务器提供的端口号</span></span><br><span class="line"><span class="attr">token</span> = freefrp.net               <span class="comment"># 服务器提供的token</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web1_xxxxxx]</span>                     <span class="comment"># 为避免错误,一定需更改为比较特殊的名称,不能和服务器端其他配置重名.</span></span><br><span class="line"><span class="attr">type</span> = http                       <span class="comment"># http协议</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.5</span>            <span class="comment"># 填写群晖内网IP.</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5000</span>                 <span class="comment"># 群晖内网HTTP端口,默认为5000.</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.ioiox.com    <span class="comment"># 填写你的域名</span></span><br><span class="line"></span><br><span class="line"><span class="section">[web2_xxxxxx]</span>                     <span class="comment"># 为避免错误,一定需更改为比较特殊的名称,不能和服务器端其他配置重名.</span></span><br><span class="line"><span class="attr">type</span> = https                      <span class="comment"># https协议</span></span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">192.168</span>.<span class="number">1.5</span>            <span class="comment"># 填写群晖内网IP.</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">5001</span>                 <span class="comment"># 群晖内网HTTPS端口,默认为5001.</span></span><br><span class="line"><span class="attr">custom_domains</span> = nas.ioiox.com    <span class="comment"># 填写你的域名</span></span><br></pre></td></tr></table></figure><p>「勾选使用高权限执行容器」 在高级设置中： 【文件映射】装载路径为 <code>/frp/frpc.ini</code> 【网络】「勾选使用与Docker Host相同的网络」</p><h2 id="群晖nas内网穿透各套件独立门户">群晖NAS内网穿透各套件独立门户</h2><p>参见 <a href="https://www.ioiox.com/archives/55.html">群晖NAS内网穿透各套件独立门户</a>。</p><p>有了上面两节的基础之后，就很简单了。 事实上，仅需要在 「控制面板-应用程序门户-File Station」 中进行简单配置即可。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;IOIOX 上有一系列完整的教程……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IOIOX Synology 专栏 &lt;a href=&quot;https://www.ioiox.com/synology.html&quot; class=&quot;uri&quot;&gt;https://www.ioiox.com/synolog</summary>
      
    
    
    
    <category term="Interest" scheme="https://lightblues.github.io/categories/Interest/"/>
    
    <category term="NAS" scheme="https://lightblues.github.io/categories/Interest/NAS/"/>
    
    
    <category term="NAS" scheme="https://lightblues.github.io/tags/NAS/"/>
    
    <category term="反向代理" scheme="https://lightblues.github.io/tags/%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/"/>
    
    <category term="网络" scheme="https://lightblues.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
